{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport './tree.css';\nimport * as TreeDefaults from './treeDefaults.js';\nimport * as Model from './treeModel.js';\nimport * as View from './treeView.js';\nimport { Emitter, Relay } from '../../../common/event.js';\nimport { Color } from '../../../common/color.js';\nimport { mixin } from '../../../common/objects.js';\n\nvar TreeContext =\n/** @class */\nfunction () {\n  function TreeContext(tree, configuration, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.tree = tree;\n    this.configuration = configuration;\n    this.options = options;\n\n    if (!configuration.dataSource) {\n      throw new Error('You must provide a Data Source to the tree.');\n    }\n\n    this.dataSource = configuration.dataSource;\n    this.renderer = configuration.renderer;\n    this.controller = configuration.controller || new TreeDefaults.DefaultController({\n      clickBehavior: 1\n      /* ON_MOUSE_UP */\n      ,\n      keyboardSupport: typeof options.keyboardSupport !== 'boolean' || options.keyboardSupport\n    });\n    this.dnd = configuration.dnd || new TreeDefaults.DefaultDragAndDrop();\n    this.filter = configuration.filter || new TreeDefaults.DefaultFilter();\n    this.sorter = configuration.sorter;\n    this.accessibilityProvider = configuration.accessibilityProvider || new TreeDefaults.DefaultAccessibilityProvider();\n    this.styler = configuration.styler;\n  }\n\n  return TreeContext;\n}();\n\nexport { TreeContext };\nvar defaultStyles = {\n  listFocusBackground: Color.fromHex('#073655'),\n  listActiveSelectionBackground: Color.fromHex('#0E639C'),\n  listActiveSelectionForeground: Color.fromHex('#FFFFFF'),\n  listFocusAndSelectionBackground: Color.fromHex('#094771'),\n  listFocusAndSelectionForeground: Color.fromHex('#FFFFFF'),\n  listInactiveSelectionBackground: Color.fromHex('#3F3F46'),\n  listHoverBackground: Color.fromHex('#2A2D2E'),\n  listDropBackground: Color.fromHex('#383B3D')\n};\n\nvar Tree =\n/** @class */\nfunction () {\n  function Tree(container, configuration, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this._onDidChangeFocus = new Relay();\n    this.onDidChangeFocus = this._onDidChangeFocus.event;\n    this._onDidChangeSelection = new Relay();\n    this.onDidChangeSelection = this._onDidChangeSelection.event;\n    this._onHighlightChange = new Relay();\n    this._onDidExpandItem = new Relay();\n    this._onDidCollapseItem = new Relay();\n    this._onDispose = new Emitter();\n    this.onDidDispose = this._onDispose.event;\n    this.container = container;\n    mixin(options, defaultStyles, false);\n    options.twistiePixels = typeof options.twistiePixels === 'number' ? options.twistiePixels : 32;\n    options.showTwistie = options.showTwistie === false ? false : true;\n    options.indentPixels = typeof options.indentPixels === 'number' ? options.indentPixels : 12;\n    options.alwaysFocused = options.alwaysFocused === true ? true : false;\n    options.useShadows = options.useShadows === false ? false : true;\n    options.paddingOnRow = options.paddingOnRow === false ? false : true;\n    options.showLoading = options.showLoading === false ? false : true;\n    this.context = new TreeContext(this, configuration, options);\n    this.model = new Model.TreeModel(this.context);\n    this.view = new View.TreeView(this.context, this.container);\n    this.view.setModel(this.model);\n    this._onDidChangeFocus.input = this.model.onDidFocus;\n    this._onDidChangeSelection.input = this.model.onDidSelect;\n    this._onHighlightChange.input = this.model.onDidHighlight;\n    this._onDidExpandItem.input = this.model.onDidExpandItem;\n    this._onDidCollapseItem.input = this.model.onDidCollapseItem;\n  }\n\n  Tree.prototype.style = function (styles) {\n    this.view.applyStyles(styles);\n  };\n\n  Object.defineProperty(Tree.prototype, \"onDidFocus\", {\n    get: function () {\n      return this.view.onDOMFocus;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Tree.prototype.getHTMLElement = function () {\n    return this.view.getHTMLElement();\n  };\n\n  Tree.prototype.layout = function (height, width) {\n    this.view.layout(height, width);\n  };\n\n  Tree.prototype.domFocus = function () {\n    this.view.focus();\n  };\n\n  Tree.prototype.isDOMFocused = function () {\n    return this.view.isFocused();\n  };\n\n  Tree.prototype.domBlur = function () {\n    this.view.blur();\n  };\n\n  Tree.prototype.setInput = function (element) {\n    return this.model.setInput(element);\n  };\n\n  Tree.prototype.getInput = function () {\n    return this.model.getInput();\n  };\n\n  Tree.prototype.expand = function (element) {\n    return this.model.expand(element);\n  };\n\n  Tree.prototype.collapse = function (element, recursive) {\n    if (recursive === void 0) {\n      recursive = false;\n    }\n\n    return this.model.collapse(element, recursive);\n  };\n\n  Tree.prototype.toggleExpansion = function (element, recursive) {\n    if (recursive === void 0) {\n      recursive = false;\n    }\n\n    return this.model.toggleExpansion(element, recursive);\n  };\n\n  Tree.prototype.isExpanded = function (element) {\n    return this.model.isExpanded(element);\n  };\n\n  Tree.prototype.reveal = function (element, relativeTop) {\n    if (relativeTop === void 0) {\n      relativeTop = null;\n    }\n\n    return this.model.reveal(element, relativeTop);\n  };\n\n  Tree.prototype.getHighlight = function () {\n    return this.model.getHighlight();\n  };\n\n  Tree.prototype.clearHighlight = function (eventPayload) {\n    this.model.setHighlight(null, eventPayload);\n  };\n\n  Tree.prototype.setSelection = function (elements, eventPayload) {\n    this.model.setSelection(elements, eventPayload);\n  };\n\n  Tree.prototype.getSelection = function () {\n    return this.model.getSelection();\n  };\n\n  Tree.prototype.clearSelection = function (eventPayload) {\n    this.model.setSelection([], eventPayload);\n  };\n\n  Tree.prototype.setFocus = function (element, eventPayload) {\n    this.model.setFocus(element, eventPayload);\n  };\n\n  Tree.prototype.getFocus = function () {\n    return this.model.getFocus();\n  };\n\n  Tree.prototype.focusNext = function (count, eventPayload) {\n    this.model.focusNext(count, eventPayload);\n  };\n\n  Tree.prototype.focusPrevious = function (count, eventPayload) {\n    this.model.focusPrevious(count, eventPayload);\n  };\n\n  Tree.prototype.focusParent = function (eventPayload) {\n    this.model.focusParent(eventPayload);\n  };\n\n  Tree.prototype.focusFirstChild = function (eventPayload) {\n    this.model.focusFirstChild(eventPayload);\n  };\n\n  Tree.prototype.focusFirst = function (eventPayload, from) {\n    this.model.focusFirst(eventPayload, from);\n  };\n\n  Tree.prototype.focusNth = function (index, eventPayload) {\n    this.model.focusNth(index, eventPayload);\n  };\n\n  Tree.prototype.focusLast = function (eventPayload, from) {\n    this.model.focusLast(eventPayload, from);\n  };\n\n  Tree.prototype.focusNextPage = function (eventPayload) {\n    this.view.focusNextPage(eventPayload);\n  };\n\n  Tree.prototype.focusPreviousPage = function (eventPayload) {\n    this.view.focusPreviousPage(eventPayload);\n  };\n\n  Tree.prototype.clearFocus = function (eventPayload) {\n    this.model.setFocus(null, eventPayload);\n  };\n\n  Tree.prototype.dispose = function () {\n    this._onDispose.fire();\n\n    this.model.dispose();\n    this.view.dispose();\n\n    this._onDidChangeFocus.dispose();\n\n    this._onDidChangeSelection.dispose();\n\n    this._onHighlightChange.dispose();\n\n    this._onDidExpandItem.dispose();\n\n    this._onDidCollapseItem.dispose();\n\n    this._onDispose.dispose();\n  };\n\n  return Tree;\n}();\n\nexport { Tree };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/base/parts/tree/browser/treeImpl.js"],"names":["TreeDefaults","Model","View","Emitter","Relay","Color","mixin","TreeContext","tree","configuration","options","dataSource","Error","renderer","controller","DefaultController","clickBehavior","keyboardSupport","dnd","DefaultDragAndDrop","filter","DefaultFilter","sorter","accessibilityProvider","DefaultAccessibilityProvider","styler","defaultStyles","listFocusBackground","fromHex","listActiveSelectionBackground","listActiveSelectionForeground","listFocusAndSelectionBackground","listFocusAndSelectionForeground","listInactiveSelectionBackground","listHoverBackground","listDropBackground","Tree","container","_onDidChangeFocus","onDidChangeFocus","event","_onDidChangeSelection","onDidChangeSelection","_onHighlightChange","_onDidExpandItem","_onDidCollapseItem","_onDispose","onDidDispose","twistiePixels","showTwistie","indentPixels","alwaysFocused","useShadows","paddingOnRow","showLoading","context","model","TreeModel","view","TreeView","setModel","input","onDidFocus","onDidSelect","onDidHighlight","onDidExpandItem","onDidCollapseItem","prototype","style","styles","applyStyles","Object","defineProperty","get","onDOMFocus","enumerable","configurable","getHTMLElement","layout","height","width","domFocus","focus","isDOMFocused","isFocused","domBlur","blur","setInput","element","getInput","expand","collapse","recursive","toggleExpansion","isExpanded","reveal","relativeTop","getHighlight","clearHighlight","eventPayload","setHighlight","setSelection","elements","getSelection","clearSelection","setFocus","getFocus","focusNext","count","focusPrevious","focusParent","focusFirstChild","focusFirst","from","focusNth","index","focusLast","focusNextPage","focusPreviousPage","clearFocus","dispose","fire"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './tree.css';\r\nimport * as TreeDefaults from './treeDefaults.js';\r\nimport * as Model from './treeModel.js';\r\nimport * as View from './treeView.js';\r\nimport { Emitter, Relay } from '../../../common/event.js';\r\nimport { Color } from '../../../common/color.js';\r\nimport { mixin } from '../../../common/objects.js';\r\nvar TreeContext = /** @class */ (function () {\r\n    function TreeContext(tree, configuration, options) {\r\n        if (options === void 0) { options = {}; }\r\n        this.tree = tree;\r\n        this.configuration = configuration;\r\n        this.options = options;\r\n        if (!configuration.dataSource) {\r\n            throw new Error('You must provide a Data Source to the tree.');\r\n        }\r\n        this.dataSource = configuration.dataSource;\r\n        this.renderer = configuration.renderer;\r\n        this.controller = configuration.controller || new TreeDefaults.DefaultController({ clickBehavior: 1 /* ON_MOUSE_UP */, keyboardSupport: typeof options.keyboardSupport !== 'boolean' || options.keyboardSupport });\r\n        this.dnd = configuration.dnd || new TreeDefaults.DefaultDragAndDrop();\r\n        this.filter = configuration.filter || new TreeDefaults.DefaultFilter();\r\n        this.sorter = configuration.sorter;\r\n        this.accessibilityProvider = configuration.accessibilityProvider || new TreeDefaults.DefaultAccessibilityProvider();\r\n        this.styler = configuration.styler;\r\n    }\r\n    return TreeContext;\r\n}());\r\nexport { TreeContext };\r\nvar defaultStyles = {\r\n    listFocusBackground: Color.fromHex('#073655'),\r\n    listActiveSelectionBackground: Color.fromHex('#0E639C'),\r\n    listActiveSelectionForeground: Color.fromHex('#FFFFFF'),\r\n    listFocusAndSelectionBackground: Color.fromHex('#094771'),\r\n    listFocusAndSelectionForeground: Color.fromHex('#FFFFFF'),\r\n    listInactiveSelectionBackground: Color.fromHex('#3F3F46'),\r\n    listHoverBackground: Color.fromHex('#2A2D2E'),\r\n    listDropBackground: Color.fromHex('#383B3D')\r\n};\r\nvar Tree = /** @class */ (function () {\r\n    function Tree(container, configuration, options) {\r\n        if (options === void 0) { options = {}; }\r\n        this._onDidChangeFocus = new Relay();\r\n        this.onDidChangeFocus = this._onDidChangeFocus.event;\r\n        this._onDidChangeSelection = new Relay();\r\n        this.onDidChangeSelection = this._onDidChangeSelection.event;\r\n        this._onHighlightChange = new Relay();\r\n        this._onDidExpandItem = new Relay();\r\n        this._onDidCollapseItem = new Relay();\r\n        this._onDispose = new Emitter();\r\n        this.onDidDispose = this._onDispose.event;\r\n        this.container = container;\r\n        mixin(options, defaultStyles, false);\r\n        options.twistiePixels = typeof options.twistiePixels === 'number' ? options.twistiePixels : 32;\r\n        options.showTwistie = options.showTwistie === false ? false : true;\r\n        options.indentPixels = typeof options.indentPixels === 'number' ? options.indentPixels : 12;\r\n        options.alwaysFocused = options.alwaysFocused === true ? true : false;\r\n        options.useShadows = options.useShadows === false ? false : true;\r\n        options.paddingOnRow = options.paddingOnRow === false ? false : true;\r\n        options.showLoading = options.showLoading === false ? false : true;\r\n        this.context = new TreeContext(this, configuration, options);\r\n        this.model = new Model.TreeModel(this.context);\r\n        this.view = new View.TreeView(this.context, this.container);\r\n        this.view.setModel(this.model);\r\n        this._onDidChangeFocus.input = this.model.onDidFocus;\r\n        this._onDidChangeSelection.input = this.model.onDidSelect;\r\n        this._onHighlightChange.input = this.model.onDidHighlight;\r\n        this._onDidExpandItem.input = this.model.onDidExpandItem;\r\n        this._onDidCollapseItem.input = this.model.onDidCollapseItem;\r\n    }\r\n    Tree.prototype.style = function (styles) {\r\n        this.view.applyStyles(styles);\r\n    };\r\n    Object.defineProperty(Tree.prototype, \"onDidFocus\", {\r\n        get: function () {\r\n            return this.view.onDOMFocus;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Tree.prototype.getHTMLElement = function () {\r\n        return this.view.getHTMLElement();\r\n    };\r\n    Tree.prototype.layout = function (height, width) {\r\n        this.view.layout(height, width);\r\n    };\r\n    Tree.prototype.domFocus = function () {\r\n        this.view.focus();\r\n    };\r\n    Tree.prototype.isDOMFocused = function () {\r\n        return this.view.isFocused();\r\n    };\r\n    Tree.prototype.domBlur = function () {\r\n        this.view.blur();\r\n    };\r\n    Tree.prototype.setInput = function (element) {\r\n        return this.model.setInput(element);\r\n    };\r\n    Tree.prototype.getInput = function () {\r\n        return this.model.getInput();\r\n    };\r\n    Tree.prototype.expand = function (element) {\r\n        return this.model.expand(element);\r\n    };\r\n    Tree.prototype.collapse = function (element, recursive) {\r\n        if (recursive === void 0) { recursive = false; }\r\n        return this.model.collapse(element, recursive);\r\n    };\r\n    Tree.prototype.toggleExpansion = function (element, recursive) {\r\n        if (recursive === void 0) { recursive = false; }\r\n        return this.model.toggleExpansion(element, recursive);\r\n    };\r\n    Tree.prototype.isExpanded = function (element) {\r\n        return this.model.isExpanded(element);\r\n    };\r\n    Tree.prototype.reveal = function (element, relativeTop) {\r\n        if (relativeTop === void 0) { relativeTop = null; }\r\n        return this.model.reveal(element, relativeTop);\r\n    };\r\n    Tree.prototype.getHighlight = function () {\r\n        return this.model.getHighlight();\r\n    };\r\n    Tree.prototype.clearHighlight = function (eventPayload) {\r\n        this.model.setHighlight(null, eventPayload);\r\n    };\r\n    Tree.prototype.setSelection = function (elements, eventPayload) {\r\n        this.model.setSelection(elements, eventPayload);\r\n    };\r\n    Tree.prototype.getSelection = function () {\r\n        return this.model.getSelection();\r\n    };\r\n    Tree.prototype.clearSelection = function (eventPayload) {\r\n        this.model.setSelection([], eventPayload);\r\n    };\r\n    Tree.prototype.setFocus = function (element, eventPayload) {\r\n        this.model.setFocus(element, eventPayload);\r\n    };\r\n    Tree.prototype.getFocus = function () {\r\n        return this.model.getFocus();\r\n    };\r\n    Tree.prototype.focusNext = function (count, eventPayload) {\r\n        this.model.focusNext(count, eventPayload);\r\n    };\r\n    Tree.prototype.focusPrevious = function (count, eventPayload) {\r\n        this.model.focusPrevious(count, eventPayload);\r\n    };\r\n    Tree.prototype.focusParent = function (eventPayload) {\r\n        this.model.focusParent(eventPayload);\r\n    };\r\n    Tree.prototype.focusFirstChild = function (eventPayload) {\r\n        this.model.focusFirstChild(eventPayload);\r\n    };\r\n    Tree.prototype.focusFirst = function (eventPayload, from) {\r\n        this.model.focusFirst(eventPayload, from);\r\n    };\r\n    Tree.prototype.focusNth = function (index, eventPayload) {\r\n        this.model.focusNth(index, eventPayload);\r\n    };\r\n    Tree.prototype.focusLast = function (eventPayload, from) {\r\n        this.model.focusLast(eventPayload, from);\r\n    };\r\n    Tree.prototype.focusNextPage = function (eventPayload) {\r\n        this.view.focusNextPage(eventPayload);\r\n    };\r\n    Tree.prototype.focusPreviousPage = function (eventPayload) {\r\n        this.view.focusPreviousPage(eventPayload);\r\n    };\r\n    Tree.prototype.clearFocus = function (eventPayload) {\r\n        this.model.setFocus(null, eventPayload);\r\n    };\r\n    Tree.prototype.dispose = function () {\r\n        this._onDispose.fire();\r\n        this.model.dispose();\r\n        this.view.dispose();\r\n        this._onDidChangeFocus.dispose();\r\n        this._onDidChangeSelection.dispose();\r\n        this._onHighlightChange.dispose();\r\n        this._onDidExpandItem.dispose();\r\n        this._onDidCollapseItem.dispose();\r\n        this._onDispose.dispose();\r\n    };\r\n    return Tree;\r\n}());\r\nexport { Tree };\r\n"]},"metadata":{},"sourceType":"module"}