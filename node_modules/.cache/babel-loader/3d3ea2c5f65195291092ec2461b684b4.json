{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport './minimap.css';\nimport * as dom from '../../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { GlobalMouseMoveMonitor, standardMouseMoveMerger } from '../../../../base/browser/globalMouseMoveMonitor.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { RenderedLinesCollection } from '../../view/viewLayer.js';\nimport { PartFingerprints, ViewPart } from '../../view/viewPart.js';\nimport { MINIMAP_GUTTER_WIDTH } from '../../../common/config/editorOptions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { MinimapTokensColorTracker } from '../../../common/viewModel/minimapTokensColorTracker.js';\nimport * as viewEvents from '../../../common/view/viewEvents.js';\nimport { scrollbarShadow, scrollbarSliderActiveBackground, scrollbarSliderBackground, scrollbarSliderHoverBackground, minimapSelection } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { EventType, Gesture } from '../../../../base/browser/touch.js';\nimport { MinimapCharRendererFactory } from './minimapCharRendererFactory.js';\nimport { MinimapPosition } from '../../../common/model.js';\nimport { once } from '../../../../base/common/functional.js';\n\nfunction getMinimapLineHeight(renderMinimap, scale) {\n  if (renderMinimap === 1\n  /* Text */\n  ) {\n      return 2\n      /* BASE_CHAR_HEIGHT */\n      * scale;\n    } // RenderMinimap.Blocks\n\n\n  return (2\n  /* BASE_CHAR_HEIGHT */\n  + 1) * scale;\n}\n\nfunction getMinimapCharWidth(renderMinimap, scale) {\n  if (renderMinimap === 1\n  /* Text */\n  ) {\n      return 1\n      /* BASE_CHAR_WIDTH */\n      * scale;\n    } // RenderMinimap.Blocks\n\n\n  return 1\n  /* BASE_CHAR_WIDTH */\n  * scale;\n}\n/**\r\n * The orthogonal distance to the slider at which dragging \"resets\". This implements \"snapping\"\r\n */\n\n\nvar MOUSE_DRAG_RESET_DISTANCE = 140;\nvar GUTTER_DECORATION_WIDTH = 2;\n\nvar MinimapOptions =\n/** @class */\nfunction () {\n  function MinimapOptions(configuration) {\n    var _this = this;\n\n    var options = configuration.options;\n    var pixelRatio = options.get(105\n    /* pixelRatio */\n    );\n    var layoutInfo = options.get(107\n    /* layoutInfo */\n    );\n    var fontInfo = options.get(34\n    /* fontInfo */\n    );\n    this.renderMinimap = layoutInfo.renderMinimap | 0;\n    this.scrollBeyondLastLine = options.get(80\n    /* scrollBeyondLastLine */\n    );\n    var minimapOpts = options.get(54\n    /* minimap */\n    );\n    this.showSlider = minimapOpts.showSlider;\n    this.fontScale = Math.round(minimapOpts.scale * pixelRatio);\n    this.charRenderer = once(function () {\n      return MinimapCharRendererFactory.create(_this.fontScale, fontInfo.fontFamily);\n    });\n    this.pixelRatio = pixelRatio;\n    this.typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n    this.lineHeight = options.get(49\n    /* lineHeight */\n    );\n    this.minimapLeft = layoutInfo.minimapLeft;\n    this.minimapWidth = layoutInfo.minimapWidth;\n    this.minimapHeight = layoutInfo.height;\n    this.canvasInnerWidth = Math.floor(pixelRatio * this.minimapWidth);\n    this.canvasInnerHeight = Math.floor(pixelRatio * this.minimapHeight);\n    this.canvasOuterWidth = this.canvasInnerWidth / pixelRatio;\n    this.canvasOuterHeight = this.canvasInnerHeight / pixelRatio;\n  }\n\n  MinimapOptions.prototype.equals = function (other) {\n    return this.renderMinimap === other.renderMinimap && this.scrollBeyondLastLine === other.scrollBeyondLastLine && this.showSlider === other.showSlider && this.pixelRatio === other.pixelRatio && this.typicalHalfwidthCharacterWidth === other.typicalHalfwidthCharacterWidth && this.lineHeight === other.lineHeight && this.fontScale === other.fontScale && this.minimapLeft === other.minimapLeft && this.minimapWidth === other.minimapWidth && this.minimapHeight === other.minimapHeight && this.canvasInnerWidth === other.canvasInnerWidth && this.canvasInnerHeight === other.canvasInnerHeight && this.canvasOuterWidth === other.canvasOuterWidth && this.canvasOuterHeight === other.canvasOuterHeight;\n  };\n\n  return MinimapOptions;\n}();\n\nvar MinimapLayout =\n/** @class */\nfunction () {\n  function MinimapLayout(scrollTop, scrollHeight, computedSliderRatio, sliderTop, sliderHeight, startLineNumber, endLineNumber) {\n    this.scrollTop = scrollTop;\n    this.scrollHeight = scrollHeight;\n    this._computedSliderRatio = computedSliderRatio;\n    this.sliderTop = sliderTop;\n    this.sliderHeight = sliderHeight;\n    this.startLineNumber = startLineNumber;\n    this.endLineNumber = endLineNumber;\n  }\n  /**\r\n   * Compute a desired `scrollPosition` such that the slider moves by `delta`.\r\n   */\n\n\n  MinimapLayout.prototype.getDesiredScrollTopFromDelta = function (delta) {\n    var desiredSliderPosition = this.sliderTop + delta;\n    return Math.round(desiredSliderPosition / this._computedSliderRatio);\n  };\n\n  MinimapLayout.prototype.getDesiredScrollTopFromTouchLocation = function (pageY) {\n    return Math.round((pageY - this.sliderHeight / 2) / this._computedSliderRatio);\n  };\n\n  MinimapLayout.create = function (options, viewportStartLineNumber, viewportEndLineNumber, viewportHeight, viewportContainsWhitespaceGaps, lineCount, scrollTop, scrollHeight, previousLayout) {\n    var pixelRatio = options.pixelRatio;\n    var minimapLineHeight = getMinimapLineHeight(options.renderMinimap, options.fontScale);\n    var minimapLinesFitting = Math.floor(options.canvasInnerHeight / minimapLineHeight);\n    var lineHeight = options.lineHeight; // The visible line count in a viewport can change due to a number of reasons:\n    //  a) with the same viewport width, different scroll positions can result in partial lines being visible:\n    //    e.g. for a line height of 20, and a viewport height of 600\n    //          * scrollTop = 0  => visible lines are [1, 30]\n    //          * scrollTop = 10 => visible lines are [1, 31] (with lines 1 and 31 partially visible)\n    //          * scrollTop = 20 => visible lines are [2, 31]\n    //  b) whitespace gaps might make their way in the viewport (which results in a decrease in the visible line count)\n    //  c) we could be in the scroll beyond last line case (which also results in a decrease in the visible line count, down to possibly only one line being visible)\n    // We must first establish a desirable slider height.\n\n    var sliderHeight;\n\n    if (viewportContainsWhitespaceGaps && viewportEndLineNumber !== lineCount) {\n      // case b) from above: there are whitespace gaps in the viewport.\n      // In this case, the height of the slider directly reflects the visible line count.\n      var viewportLineCount = viewportEndLineNumber - viewportStartLineNumber + 1;\n      sliderHeight = Math.floor(viewportLineCount * minimapLineHeight / pixelRatio);\n    } else {\n      // The slider has a stable height\n      var expectedViewportLineCount = viewportHeight / lineHeight;\n      sliderHeight = Math.floor(expectedViewportLineCount * minimapLineHeight / pixelRatio);\n    }\n\n    var maxMinimapSliderTop;\n\n    if (options.scrollBeyondLastLine) {\n      // The minimap slider, when dragged all the way down, will contain the last line at its top\n      maxMinimapSliderTop = (lineCount - 1) * minimapLineHeight / pixelRatio;\n    } else {\n      // The minimap slider, when dragged all the way down, will contain the last line at its bottom\n      maxMinimapSliderTop = Math.max(0, lineCount * minimapLineHeight / pixelRatio - sliderHeight);\n    }\n\n    maxMinimapSliderTop = Math.min(options.minimapHeight - sliderHeight, maxMinimapSliderTop); // The slider can move from 0 to `maxMinimapSliderTop`\n    // in the same way `scrollTop` can move from 0 to `scrollHeight` - `viewportHeight`.\n\n    var computedSliderRatio = maxMinimapSliderTop / (scrollHeight - viewportHeight);\n    var sliderTop = scrollTop * computedSliderRatio;\n    var extraLinesAtTheBottom = 0;\n\n    if (options.scrollBeyondLastLine) {\n      var expectedViewportLineCount = viewportHeight / lineHeight;\n      extraLinesAtTheBottom = expectedViewportLineCount;\n    }\n\n    if (minimapLinesFitting >= lineCount + extraLinesAtTheBottom) {\n      // All lines fit in the minimap\n      var startLineNumber = 1;\n      var endLineNumber = lineCount;\n      return new MinimapLayout(scrollTop, scrollHeight, computedSliderRatio, sliderTop, sliderHeight, startLineNumber, endLineNumber);\n    } else {\n      var startLineNumber = Math.max(1, Math.floor(viewportStartLineNumber - sliderTop * pixelRatio / minimapLineHeight)); // Avoid flickering caused by a partial viewport start line\n      // by being consistent w.r.t. the previous layout decision\n\n      if (previousLayout && previousLayout.scrollHeight === scrollHeight) {\n        if (previousLayout.scrollTop > scrollTop) {\n          // Scrolling up => never increase `startLineNumber`\n          startLineNumber = Math.min(startLineNumber, previousLayout.startLineNumber);\n        }\n\n        if (previousLayout.scrollTop < scrollTop) {\n          // Scrolling down => never decrease `startLineNumber`\n          startLineNumber = Math.max(startLineNumber, previousLayout.startLineNumber);\n        }\n      }\n\n      var endLineNumber = Math.min(lineCount, startLineNumber + minimapLinesFitting - 1);\n      return new MinimapLayout(scrollTop, scrollHeight, computedSliderRatio, sliderTop, sliderHeight, startLineNumber, endLineNumber);\n    }\n  };\n\n  return MinimapLayout;\n}();\n\nvar MinimapLine =\n/** @class */\nfunction () {\n  function MinimapLine(dy) {\n    this.dy = dy;\n  }\n\n  MinimapLine.prototype.onContentChanged = function () {\n    this.dy = -1;\n  };\n\n  MinimapLine.prototype.onTokensChanged = function () {\n    this.dy = -1;\n  };\n\n  MinimapLine.INVALID = new MinimapLine(-1);\n  return MinimapLine;\n}();\n\nvar RenderData =\n/** @class */\nfunction () {\n  function RenderData(renderedLayout, imageData, lines) {\n    this.renderedLayout = renderedLayout;\n    this._imageData = imageData;\n    this._renderedLines = new RenderedLinesCollection(function () {\n      return MinimapLine.INVALID;\n    });\n\n    this._renderedLines._set(renderedLayout.startLineNumber, lines);\n  }\n  /**\r\n   * Check if the current RenderData matches accurately the new desired layout and no painting is needed.\r\n   */\n\n\n  RenderData.prototype.linesEquals = function (layout) {\n    if (!this.scrollEquals(layout)) {\n      return false;\n    }\n\n    var tmp = this._renderedLines._get();\n\n    var lines = tmp.lines;\n\n    for (var i = 0, len = lines.length; i < len; i++) {\n      if (lines[i].dy === -1) {\n        // This line is invalid\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /**\r\n   * Check if the current RenderData matches the new layout's scroll position\r\n   */\n\n\n  RenderData.prototype.scrollEquals = function (layout) {\n    return this.renderedLayout.startLineNumber === layout.startLineNumber && this.renderedLayout.endLineNumber === layout.endLineNumber;\n  };\n\n  RenderData.prototype._get = function () {\n    var tmp = this._renderedLines._get();\n\n    return {\n      imageData: this._imageData,\n      rendLineNumberStart: tmp.rendLineNumberStart,\n      lines: tmp.lines\n    };\n  };\n\n  RenderData.prototype.onLinesChanged = function (e) {\n    return this._renderedLines.onLinesChanged(e.fromLineNumber, e.toLineNumber);\n  };\n\n  RenderData.prototype.onLinesDeleted = function (e) {\n    this._renderedLines.onLinesDeleted(e.fromLineNumber, e.toLineNumber);\n  };\n\n  RenderData.prototype.onLinesInserted = function (e) {\n    this._renderedLines.onLinesInserted(e.fromLineNumber, e.toLineNumber);\n  };\n\n  RenderData.prototype.onTokensChanged = function (e) {\n    return this._renderedLines.onTokensChanged(e.ranges);\n  };\n\n  return RenderData;\n}();\n/**\r\n * Some sort of double buffering.\r\n *\r\n * Keeps two buffers around that will be rotated for painting.\r\n * Always gives a buffer that is filled with the background color.\r\n */\n\n\nvar MinimapBuffers =\n/** @class */\nfunction () {\n  function MinimapBuffers(ctx, WIDTH, HEIGHT, background) {\n    this._backgroundFillData = MinimapBuffers._createBackgroundFillData(WIDTH, HEIGHT, background);\n    this._buffers = [ctx.createImageData(WIDTH, HEIGHT), ctx.createImageData(WIDTH, HEIGHT)];\n    this._lastUsedBuffer = 0;\n  }\n\n  MinimapBuffers.prototype.getBuffer = function () {\n    // rotate buffers\n    this._lastUsedBuffer = 1 - this._lastUsedBuffer;\n    var result = this._buffers[this._lastUsedBuffer]; // fill with background color\n\n    result.data.set(this._backgroundFillData);\n    return result;\n  };\n\n  MinimapBuffers._createBackgroundFillData = function (WIDTH, HEIGHT, background) {\n    var backgroundR = background.r;\n    var backgroundG = background.g;\n    var backgroundB = background.b;\n    var result = new Uint8ClampedArray(WIDTH * HEIGHT * 4);\n    var offset = 0;\n\n    for (var i = 0; i < HEIGHT; i++) {\n      for (var j = 0; j < WIDTH; j++) {\n        result[offset] = backgroundR;\n        result[offset + 1] = backgroundG;\n        result[offset + 2] = backgroundB;\n        result[offset + 3] = 255;\n        offset += 4;\n      }\n    }\n\n    return result;\n  };\n\n  return MinimapBuffers;\n}();\n\nvar Minimap =\n/** @class */\nfunction (_super) {\n  __extends(Minimap, _super);\n\n  function Minimap(context) {\n    var _this = _super.call(this, context) || this;\n\n    _this._selections = [];\n    _this._renderDecorations = false;\n    _this._gestureInProgress = false;\n    _this._options = new MinimapOptions(_this._context.configuration);\n    _this._lastRenderData = null;\n    _this._buffers = null;\n    _this._selectionColor = _this._context.theme.getColor(minimapSelection);\n    _this._domNode = createFastDomNode(document.createElement('div'));\n    PartFingerprints.write(_this._domNode, 8\n    /* Minimap */\n    );\n\n    _this._domNode.setClassName(_this._getMinimapDomNodeClassName());\n\n    _this._domNode.setPosition('absolute');\n\n    _this._domNode.setAttribute('role', 'presentation');\n\n    _this._domNode.setAttribute('aria-hidden', 'true');\n\n    _this._shadow = createFastDomNode(document.createElement('div'));\n\n    _this._shadow.setClassName('minimap-shadow-hidden');\n\n    _this._domNode.appendChild(_this._shadow);\n\n    _this._canvas = createFastDomNode(document.createElement('canvas'));\n\n    _this._canvas.setPosition('absolute');\n\n    _this._canvas.setLeft(0);\n\n    _this._domNode.appendChild(_this._canvas);\n\n    _this._decorationsCanvas = createFastDomNode(document.createElement('canvas'));\n\n    _this._decorationsCanvas.setPosition('absolute');\n\n    _this._decorationsCanvas.setClassName('minimap-decorations-layer');\n\n    _this._decorationsCanvas.setLeft(0);\n\n    _this._domNode.appendChild(_this._decorationsCanvas);\n\n    _this._slider = createFastDomNode(document.createElement('div'));\n\n    _this._slider.setPosition('absolute');\n\n    _this._slider.setClassName('minimap-slider');\n\n    _this._slider.setLayerHinting(true);\n\n    _this._slider.setContain('strict');\n\n    _this._domNode.appendChild(_this._slider);\n\n    _this._sliderHorizontal = createFastDomNode(document.createElement('div'));\n\n    _this._sliderHorizontal.setPosition('absolute');\n\n    _this._sliderHorizontal.setClassName('minimap-slider-horizontal');\n\n    _this._slider.appendChild(_this._sliderHorizontal);\n\n    _this._tokensColorTracker = MinimapTokensColorTracker.getInstance();\n\n    _this._applyLayout();\n\n    _this._mouseDownListener = dom.addStandardDisposableListener(_this._domNode.domNode, 'mousedown', function (e) {\n      e.preventDefault();\n      var renderMinimap = _this._options.renderMinimap;\n\n      if (renderMinimap === 0\n      /* None */\n      ) {\n          return;\n        }\n\n      if (!_this._lastRenderData) {\n        return;\n      }\n\n      var minimapLineHeight = getMinimapLineHeight(renderMinimap, _this._options.fontScale);\n      var internalOffsetY = _this._options.pixelRatio * e.browserEvent.offsetY;\n      var lineIndex = Math.floor(internalOffsetY / minimapLineHeight);\n      var lineNumber = lineIndex + _this._lastRenderData.renderedLayout.startLineNumber;\n      lineNumber = Math.min(lineNumber, _this._context.model.getLineCount());\n\n      _this._context.privateViewEventBus.emit(new viewEvents.ViewRevealRangeRequestEvent('mouse', new Range(lineNumber, 1, lineNumber, 1), 1\n      /* Center */\n      , false, 0\n      /* Smooth */\n      ));\n    });\n    _this._sliderMouseMoveMonitor = new GlobalMouseMoveMonitor();\n    _this._sliderMouseDownListener = dom.addStandardDisposableListener(_this._slider.domNode, 'mousedown', function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      if (e.leftButton && _this._lastRenderData) {\n        var initialMousePosition_1 = e.posy;\n        var initialMouseOrthogonalPosition_1 = e.posx;\n        var initialSliderState_1 = _this._lastRenderData.renderedLayout;\n\n        _this._slider.toggleClassName('active', true);\n\n        _this._sliderMouseMoveMonitor.startMonitoring(e.target, e.buttons, standardMouseMoveMerger, function (mouseMoveData) {\n          var mouseOrthogonalDelta = Math.abs(mouseMoveData.posx - initialMouseOrthogonalPosition_1);\n\n          if (platform.isWindows && mouseOrthogonalDelta > MOUSE_DRAG_RESET_DISTANCE) {\n            // The mouse has wondered away from the scrollbar => reset dragging\n            _this._context.viewLayout.setScrollPositionNow({\n              scrollTop: initialSliderState_1.scrollTop\n            });\n\n            return;\n          }\n\n          var mouseDelta = mouseMoveData.posy - initialMousePosition_1;\n\n          _this._context.viewLayout.setScrollPositionNow({\n            scrollTop: initialSliderState_1.getDesiredScrollTopFromDelta(mouseDelta)\n          });\n        }, function () {\n          _this._slider.toggleClassName('active', false);\n        });\n      }\n    });\n    _this._gestureDisposable = Gesture.addTarget(_this._domNode.domNode);\n    _this._sliderTouchStartListener = dom.addDisposableListener(_this._domNode.domNode, EventType.Start, function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      if (_this._lastRenderData) {\n        _this._slider.toggleClassName('active', true);\n\n        _this._gestureInProgress = true;\n\n        _this.scrollDueToTouchEvent(e);\n      }\n    });\n    _this._sliderTouchMoveListener = dom.addStandardDisposableListener(_this._domNode.domNode, EventType.Change, function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      if (_this._lastRenderData && _this._gestureInProgress) {\n        _this.scrollDueToTouchEvent(e);\n      }\n    });\n    _this._sliderTouchEndListener = dom.addStandardDisposableListener(_this._domNode.domNode, EventType.End, function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n      _this._gestureInProgress = false;\n\n      _this._slider.toggleClassName('active', false);\n    });\n    return _this;\n  }\n\n  Minimap.prototype.scrollDueToTouchEvent = function (touch) {\n    var startY = this._domNode.domNode.getBoundingClientRect().top;\n\n    var scrollTop = this._lastRenderData.renderedLayout.getDesiredScrollTopFromTouchLocation(touch.pageY - startY);\n\n    this._context.viewLayout.setScrollPositionNow({\n      scrollTop: scrollTop\n    });\n  };\n\n  Minimap.prototype.dispose = function () {\n    this._mouseDownListener.dispose();\n\n    this._sliderMouseMoveMonitor.dispose();\n\n    this._sliderMouseDownListener.dispose();\n\n    this._gestureDisposable.dispose();\n\n    this._sliderTouchStartListener.dispose();\n\n    this._sliderTouchMoveListener.dispose();\n\n    this._sliderTouchEndListener.dispose();\n\n    _super.prototype.dispose.call(this);\n  };\n\n  Minimap.prototype._getMinimapDomNodeClassName = function () {\n    if (this._options.showSlider === 'always') {\n      return 'minimap slider-always';\n    }\n\n    return 'minimap slider-mouseover';\n  };\n\n  Minimap.prototype.getDomNode = function () {\n    return this._domNode;\n  };\n\n  Minimap.prototype._applyLayout = function () {\n    this._domNode.setLeft(this._options.minimapLeft);\n\n    this._domNode.setWidth(this._options.minimapWidth);\n\n    this._domNode.setHeight(this._options.minimapHeight);\n\n    this._shadow.setHeight(this._options.minimapHeight);\n\n    this._canvas.setWidth(this._options.canvasOuterWidth);\n\n    this._canvas.setHeight(this._options.canvasOuterHeight);\n\n    this._canvas.domNode.width = this._options.canvasInnerWidth;\n    this._canvas.domNode.height = this._options.canvasInnerHeight;\n\n    this._decorationsCanvas.setWidth(this._options.canvasOuterWidth);\n\n    this._decorationsCanvas.setHeight(this._options.canvasOuterHeight);\n\n    this._decorationsCanvas.domNode.width = this._options.canvasInnerWidth;\n    this._decorationsCanvas.domNode.height = this._options.canvasInnerHeight;\n\n    this._slider.setWidth(this._options.minimapWidth);\n  };\n\n  Minimap.prototype._getBuffer = function () {\n    if (!this._buffers) {\n      if (this._options.canvasInnerWidth > 0 && this._options.canvasInnerHeight > 0) {\n        this._buffers = new MinimapBuffers(this._canvas.domNode.getContext('2d'), this._options.canvasInnerWidth, this._options.canvasInnerHeight, this._tokensColorTracker.getColor(2\n        /* DefaultBackground */\n        ));\n      }\n    }\n\n    return this._buffers ? this._buffers.getBuffer() : null;\n  };\n\n  Minimap.prototype._onOptionsMaybeChanged = function () {\n    var opts = new MinimapOptions(this._context.configuration);\n\n    if (this._options.equals(opts)) {\n      return false;\n    }\n\n    this._options = opts;\n    this._lastRenderData = null;\n    this._buffers = null;\n\n    this._applyLayout();\n\n    this._domNode.setClassName(this._getMinimapDomNodeClassName());\n\n    return true;\n  }; // ---- begin view event handlers\n\n\n  Minimap.prototype.onConfigurationChanged = function (e) {\n    return this._onOptionsMaybeChanged();\n  };\n\n  Minimap.prototype.onCursorStateChanged = function (e) {\n    this._selections = e.selections;\n    this._renderDecorations = true;\n    return true;\n  };\n\n  Minimap.prototype.onFlushed = function (e) {\n    this._lastRenderData = null;\n    return true;\n  };\n\n  Minimap.prototype.onLinesChanged = function (e) {\n    if (this._lastRenderData) {\n      return this._lastRenderData.onLinesChanged(e);\n    }\n\n    return false;\n  };\n\n  Minimap.prototype.onLinesDeleted = function (e) {\n    if (this._lastRenderData) {\n      this._lastRenderData.onLinesDeleted(e);\n    }\n\n    return true;\n  };\n\n  Minimap.prototype.onLinesInserted = function (e) {\n    if (this._lastRenderData) {\n      this._lastRenderData.onLinesInserted(e);\n    }\n\n    return true;\n  };\n\n  Minimap.prototype.onScrollChanged = function (e) {\n    this._renderDecorations = true;\n    return true;\n  };\n\n  Minimap.prototype.onTokensChanged = function (e) {\n    if (this._lastRenderData) {\n      return this._lastRenderData.onTokensChanged(e);\n    }\n\n    return false;\n  };\n\n  Minimap.prototype.onTokensColorsChanged = function (e) {\n    this._lastRenderData = null;\n    this._buffers = null;\n    return true;\n  };\n\n  Minimap.prototype.onZonesChanged = function (e) {\n    this._lastRenderData = null;\n    return true;\n  };\n\n  Minimap.prototype.onDecorationsChanged = function (e) {\n    this._renderDecorations = true;\n    return true;\n  };\n\n  Minimap.prototype.onThemeChanged = function (e) {\n    this._context.model.invalidateMinimapColorCache();\n\n    this._selectionColor = this._context.theme.getColor(minimapSelection);\n    this._renderDecorations = true;\n    return true;\n  }; // --- end event handlers\n\n\n  Minimap.prototype.prepareRender = function (ctx) {// Nothing to read\n  };\n\n  Minimap.prototype.render = function (renderingCtx) {\n    var renderMinimap = this._options.renderMinimap;\n\n    if (renderMinimap === 0\n    /* None */\n    ) {\n        this._shadow.setClassName('minimap-shadow-hidden');\n\n        this._sliderHorizontal.setWidth(0);\n\n        this._sliderHorizontal.setHeight(0);\n\n        return;\n      }\n\n    if (renderingCtx.scrollLeft + renderingCtx.viewportWidth >= renderingCtx.scrollWidth) {\n      this._shadow.setClassName('minimap-shadow-hidden');\n    } else {\n      this._shadow.setClassName('minimap-shadow-visible');\n    }\n\n    var layout = MinimapLayout.create(this._options, renderingCtx.visibleRange.startLineNumber, renderingCtx.visibleRange.endLineNumber, renderingCtx.viewportHeight, renderingCtx.viewportData.whitespaceViewportData.length > 0, this._context.model.getLineCount(), renderingCtx.scrollTop, renderingCtx.scrollHeight, this._lastRenderData ? this._lastRenderData.renderedLayout : null);\n\n    this._slider.setTop(layout.sliderTop);\n\n    this._slider.setHeight(layout.sliderHeight); // Compute horizontal slider coordinates\n\n\n    var scrollLeftChars = renderingCtx.scrollLeft / this._options.typicalHalfwidthCharacterWidth;\n    var horizontalSliderLeft = Math.min(this._options.minimapWidth, Math.round(scrollLeftChars * getMinimapCharWidth(this._options.renderMinimap, this._options.fontScale) / this._options.pixelRatio));\n\n    this._sliderHorizontal.setLeft(horizontalSliderLeft);\n\n    this._sliderHorizontal.setWidth(this._options.minimapWidth - horizontalSliderLeft);\n\n    this._sliderHorizontal.setTop(0);\n\n    this._sliderHorizontal.setHeight(layout.sliderHeight);\n\n    this.renderDecorations(layout);\n    this._lastRenderData = this.renderLines(layout);\n  };\n\n  Minimap.prototype.renderDecorations = function (layout) {\n    if (this._renderDecorations) {\n      this._renderDecorations = false;\n\n      var decorations = this._context.model.getDecorationsInViewport(new Range(layout.startLineNumber, 1, layout.endLineNumber, this._context.model.getLineMaxColumn(layout.endLineNumber)));\n\n      var _a = this._options,\n          renderMinimap = _a.renderMinimap,\n          canvasInnerWidth = _a.canvasInnerWidth,\n          canvasInnerHeight = _a.canvasInnerHeight;\n      var lineHeight = getMinimapLineHeight(renderMinimap, this._options.fontScale);\n      var characterWidth = getMinimapCharWidth(renderMinimap, this._options.fontScale);\n\n      var tabSize = this._context.model.getOptions().tabSize;\n\n      var canvasContext = this._decorationsCanvas.domNode.getContext('2d');\n\n      canvasContext.clearRect(0, 0, canvasInnerWidth, canvasInnerHeight);\n      var lineOffsetMap = new Map();\n\n      for (var i = 0; i < this._selections.length; i++) {\n        var selection = this._selections[i];\n\n        for (var line = selection.startLineNumber; line <= selection.endLineNumber; line++) {\n          this.renderDecorationOnLine(canvasContext, lineOffsetMap, selection, this._selectionColor, layout, line, lineHeight, lineHeight, tabSize, characterWidth);\n        }\n      } // Loop over decorations, ignoring those that don't have the minimap property set and rendering rectangles for each line the decoration spans\n\n\n      for (var i = 0; i < decorations.length; i++) {\n        var decoration = decorations[i];\n\n        if (!decoration.options.minimap) {\n          continue;\n        }\n\n        var decorationColor = decoration.options.minimap.getColor(this._context.theme);\n\n        for (var line = decoration.range.startLineNumber; line <= decoration.range.endLineNumber; line++) {\n          switch (decoration.options.minimap.position) {\n            case MinimapPosition.Inline:\n              this.renderDecorationOnLine(canvasContext, lineOffsetMap, decoration.range, decorationColor, layout, line, lineHeight, lineHeight, tabSize, characterWidth);\n              continue;\n\n            case MinimapPosition.Gutter:\n              var y = (line - layout.startLineNumber) * lineHeight;\n              var x = 2;\n              this.renderDecoration(canvasContext, decorationColor, x, y, GUTTER_DECORATION_WIDTH, lineHeight);\n              continue;\n          }\n        }\n      }\n    }\n  };\n\n  Minimap.prototype.renderDecorationOnLine = function (canvasContext, lineOffsetMap, decorationRange, decorationColor, layout, lineNumber, height, lineHeight, tabSize, charWidth) {\n    var y = (lineNumber - layout.startLineNumber) * lineHeight; // Skip rendering the line if it's vertically outside our viewport\n\n    if (y + height < 0 || y > this._options.canvasInnerHeight) {\n      return;\n    } // Cache line offset data so that it is only read once per line\n\n\n    var lineIndexToXOffset = lineOffsetMap.get(lineNumber);\n    var isFirstDecorationForLine = !lineIndexToXOffset;\n\n    if (!lineIndexToXOffset) {\n      var lineData = this._context.model.getLineContent(lineNumber);\n\n      lineIndexToXOffset = [MINIMAP_GUTTER_WIDTH];\n\n      for (var i = 1; i < lineData.length + 1; i++) {\n        var charCode = lineData.charCodeAt(i - 1);\n        var dx = charCode === 9\n        /* Tab */\n        ? tabSize * charWidth : strings.isFullWidthCharacter(charCode) ? 2 * charWidth : charWidth;\n        lineIndexToXOffset[i] = lineIndexToXOffset[i - 1] + dx;\n      }\n\n      lineOffsetMap.set(lineNumber, lineIndexToXOffset);\n    }\n\n    var startColumn = decorationRange.startColumn,\n        endColumn = decorationRange.endColumn,\n        startLineNumber = decorationRange.startLineNumber,\n        endLineNumber = decorationRange.endLineNumber;\n    var x = startLineNumber === lineNumber ? lineIndexToXOffset[startColumn - 1] : MINIMAP_GUTTER_WIDTH;\n    var endColumnForLine = endLineNumber > lineNumber ? lineIndexToXOffset.length - 1 : endColumn - 1;\n\n    if (endColumnForLine > 0) {\n      // If the decoration starts at the last character of the column and spans over it, ensure it has a width\n      var width = lineIndexToXOffset[endColumnForLine] - x || 2;\n      this.renderDecoration(canvasContext, decorationColor, x, y, width, height);\n    }\n\n    if (isFirstDecorationForLine) {\n      this.renderLineHighlight(canvasContext, decorationColor, y, height);\n    }\n  };\n\n  Minimap.prototype.renderLineHighlight = function (canvasContext, decorationColor, y, height) {\n    canvasContext.fillStyle = decorationColor && decorationColor.transparent(0.5).toString() || '';\n    canvasContext.fillRect(MINIMAP_GUTTER_WIDTH, y, canvasContext.canvas.width, height);\n  };\n\n  Minimap.prototype.renderDecoration = function (canvasContext, decorationColor, x, y, width, height) {\n    canvasContext.fillStyle = decorationColor && decorationColor.toString() || '';\n    canvasContext.fillRect(x, y, width, height);\n  };\n\n  Minimap.prototype.renderLines = function (layout) {\n    var renderMinimap = this._options.renderMinimap;\n\n    var charRenderer = this._options.charRenderer();\n\n    var startLineNumber = layout.startLineNumber;\n    var endLineNumber = layout.endLineNumber;\n    var minimapLineHeight = getMinimapLineHeight(renderMinimap, this._options.fontScale); // Check if nothing changed w.r.t. lines from last frame\n\n    if (this._lastRenderData && this._lastRenderData.linesEquals(layout)) {\n      var _lastData = this._lastRenderData._get(); // Nice!! Nothing changed from last frame\n\n\n      return new RenderData(layout, _lastData.imageData, _lastData.lines);\n    } // Oh well!! We need to repaint some lines...\n\n\n    var imageData = this._getBuffer();\n\n    if (!imageData) {\n      // 0 width or 0 height canvas, nothing to do\n      return null;\n    } // Render untouched lines by using last rendered data.\n\n\n    var _a = Minimap._renderUntouchedLines(imageData, startLineNumber, endLineNumber, minimapLineHeight, this._lastRenderData),\n        _dirtyY1 = _a[0],\n        _dirtyY2 = _a[1],\n        needed = _a[2]; // Fetch rendering info from view model for rest of lines that need rendering.\n\n\n    var lineInfo = this._context.model.getMinimapLinesRenderingData(startLineNumber, endLineNumber, needed);\n\n    var tabSize = lineInfo.tabSize;\n\n    var background = this._tokensColorTracker.getColor(2\n    /* DefaultBackground */\n    );\n\n    var useLighterFont = this._tokensColorTracker.backgroundIsLight(); // Render the rest of lines\n\n\n    var dy = 0;\n    var renderedLines = [];\n\n    for (var lineIndex = 0, lineCount = endLineNumber - startLineNumber + 1; lineIndex < lineCount; lineIndex++) {\n      if (needed[lineIndex]) {\n        Minimap._renderLine(imageData, background, useLighterFont, renderMinimap, this._tokensColorTracker, charRenderer, dy, tabSize, lineInfo.data[lineIndex], this._options.fontScale);\n      }\n\n      renderedLines[lineIndex] = new MinimapLine(dy);\n      dy += minimapLineHeight;\n    }\n\n    var dirtyY1 = _dirtyY1 === -1 ? 0 : _dirtyY1;\n    var dirtyY2 = _dirtyY2 === -1 ? imageData.height : _dirtyY2;\n    var dirtyHeight = dirtyY2 - dirtyY1; // Finally, paint to the canvas\n\n    var ctx = this._canvas.domNode.getContext('2d');\n\n    ctx.putImageData(imageData, 0, 0, 0, dirtyY1, imageData.width, dirtyHeight); // Save rendered data for reuse on next frame if possible\n\n    return new RenderData(layout, imageData, renderedLines);\n  };\n\n  Minimap._renderUntouchedLines = function (target, startLineNumber, endLineNumber, minimapLineHeight, lastRenderData) {\n    var needed = [];\n\n    if (!lastRenderData) {\n      for (var i = 0, len = endLineNumber - startLineNumber + 1; i < len; i++) {\n        needed[i] = true;\n      }\n\n      return [-1, -1, needed];\n    }\n\n    var _lastData = lastRenderData._get();\n\n    var lastTargetData = _lastData.imageData.data;\n    var lastStartLineNumber = _lastData.rendLineNumberStart;\n    var lastLines = _lastData.lines;\n    var lastLinesLength = lastLines.length;\n    var WIDTH = target.width;\n    var targetData = target.data;\n    var maxDestPixel = (endLineNumber - startLineNumber + 1) * minimapLineHeight * WIDTH * 4;\n    var dirtyPixel1 = -1; // the pixel offset up to which all the data is equal to the prev frame\n\n    var dirtyPixel2 = -1; // the pixel offset after which all the data is equal to the prev frame\n\n    var copySourceStart = -1;\n    var copySourceEnd = -1;\n    var copyDestStart = -1;\n    var copyDestEnd = -1;\n    var dest_dy = 0;\n\n    for (var lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n      var lineIndex = lineNumber - startLineNumber;\n      var lastLineIndex = lineNumber - lastStartLineNumber;\n      var source_dy = lastLineIndex >= 0 && lastLineIndex < lastLinesLength ? lastLines[lastLineIndex].dy : -1;\n\n      if (source_dy === -1) {\n        needed[lineIndex] = true;\n        dest_dy += minimapLineHeight;\n        continue;\n      }\n\n      var sourceStart = source_dy * WIDTH * 4;\n      var sourceEnd = (source_dy + minimapLineHeight) * WIDTH * 4;\n      var destStart = dest_dy * WIDTH * 4;\n      var destEnd = (dest_dy + minimapLineHeight) * WIDTH * 4;\n\n      if (copySourceEnd === sourceStart && copyDestEnd === destStart) {\n        // contiguous zone => extend copy request\n        copySourceEnd = sourceEnd;\n        copyDestEnd = destEnd;\n      } else {\n        if (copySourceStart !== -1) {\n          // flush existing copy request\n          targetData.set(lastTargetData.subarray(copySourceStart, copySourceEnd), copyDestStart);\n\n          if (dirtyPixel1 === -1 && copySourceStart === 0 && copySourceStart === copyDestStart) {\n            dirtyPixel1 = copySourceEnd;\n          }\n\n          if (dirtyPixel2 === -1 && copySourceEnd === maxDestPixel && copySourceStart === copyDestStart) {\n            dirtyPixel2 = copySourceStart;\n          }\n        }\n\n        copySourceStart = sourceStart;\n        copySourceEnd = sourceEnd;\n        copyDestStart = destStart;\n        copyDestEnd = destEnd;\n      }\n\n      needed[lineIndex] = false;\n      dest_dy += minimapLineHeight;\n    }\n\n    if (copySourceStart !== -1) {\n      // flush existing copy request\n      targetData.set(lastTargetData.subarray(copySourceStart, copySourceEnd), copyDestStart);\n\n      if (dirtyPixel1 === -1 && copySourceStart === 0 && copySourceStart === copyDestStart) {\n        dirtyPixel1 = copySourceEnd;\n      }\n\n      if (dirtyPixel2 === -1 && copySourceEnd === maxDestPixel && copySourceStart === copyDestStart) {\n        dirtyPixel2 = copySourceStart;\n      }\n    }\n\n    var dirtyY1 = dirtyPixel1 === -1 ? -1 : dirtyPixel1 / (WIDTH * 4);\n    var dirtyY2 = dirtyPixel2 === -1 ? -1 : dirtyPixel2 / (WIDTH * 4);\n    return [dirtyY1, dirtyY2, needed];\n  };\n\n  Minimap._renderLine = function (target, backgroundColor, useLighterFont, renderMinimap, colorTracker, minimapCharRenderer, dy, tabSize, lineData, fontScale) {\n    var content = lineData.content;\n    var tokens = lineData.tokens;\n    var charWidth = getMinimapCharWidth(renderMinimap, fontScale);\n    var maxDx = target.width - charWidth;\n    var dx = MINIMAP_GUTTER_WIDTH;\n    var charIndex = 0;\n    var tabsCharDelta = 0;\n\n    for (var tokenIndex = 0, tokensLen = tokens.getCount(); tokenIndex < tokensLen; tokenIndex++) {\n      var tokenEndIndex = tokens.getEndOffset(tokenIndex);\n      var tokenColorId = tokens.getForeground(tokenIndex);\n      var tokenColor = colorTracker.getColor(tokenColorId);\n\n      for (; charIndex < tokenEndIndex; charIndex++) {\n        if (dx > maxDx) {\n          // hit edge of minimap\n          return;\n        }\n\n        var charCode = content.charCodeAt(charIndex);\n\n        if (charCode === 9\n        /* Tab */\n        ) {\n            var insertSpacesCount = tabSize - (charIndex + tabsCharDelta) % tabSize;\n            tabsCharDelta += insertSpacesCount - 1; // No need to render anything since tab is invisible\n\n            dx += insertSpacesCount * charWidth;\n          } else if (charCode === 32\n        /* Space */\n        ) {\n            // No need to render anything since space is invisible\n            dx += charWidth;\n          } else {\n          // Render twice for a full width character\n          var count = strings.isFullWidthCharacter(charCode) ? 2 : 1;\n\n          for (var i = 0; i < count; i++) {\n            if (renderMinimap === 2\n            /* Blocks */\n            ) {\n                minimapCharRenderer.blockRenderChar(target, dx, dy, tokenColor, backgroundColor, useLighterFont);\n              } else {\n              // RenderMinimap.Text\n              minimapCharRenderer.renderChar(target, dx, dy, charCode, tokenColor, backgroundColor, fontScale, useLighterFont);\n            }\n\n            dx += charWidth;\n\n            if (dx > maxDx) {\n              // hit edge of minimap\n              return;\n            }\n          }\n        }\n      }\n    }\n  };\n\n  return Minimap;\n}(ViewPart);\n\nexport { Minimap };\nregisterThemingParticipant(function (theme, collector) {\n  var sliderBackground = theme.getColor(scrollbarSliderBackground);\n\n  if (sliderBackground) {\n    var halfSliderBackground = sliderBackground.transparent(0.5);\n    collector.addRule(\".monaco-editor .minimap-slider, .monaco-editor .minimap-slider .minimap-slider-horizontal { background: \" + halfSliderBackground + \"; }\");\n  }\n\n  var sliderHoverBackground = theme.getColor(scrollbarSliderHoverBackground);\n\n  if (sliderHoverBackground) {\n    var halfSliderHoverBackground = sliderHoverBackground.transparent(0.5);\n    collector.addRule(\".monaco-editor .minimap-slider:hover, .monaco-editor .minimap-slider:hover .minimap-slider-horizontal { background: \" + halfSliderHoverBackground + \"; }\");\n  }\n\n  var sliderActiveBackground = theme.getColor(scrollbarSliderActiveBackground);\n\n  if (sliderActiveBackground) {\n    var halfSliderActiveBackground = sliderActiveBackground.transparent(0.5);\n    collector.addRule(\".monaco-editor .minimap-slider.active, .monaco-editor .minimap-slider.active .minimap-slider-horizontal { background: \" + halfSliderActiveBackground + \"; }\");\n  }\n\n  var shadow = theme.getColor(scrollbarShadow);\n\n  if (shadow) {\n    collector.addRule(\".monaco-editor .minimap-shadow-visible { box-shadow: \" + shadow + \" -6px 0 6px -6px inset; }\");\n  }\n});","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimap.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","dom","createFastDomNode","GlobalMouseMoveMonitor","standardMouseMoveMerger","platform","strings","RenderedLinesCollection","PartFingerprints","ViewPart","MINIMAP_GUTTER_WIDTH","Range","MinimapTokensColorTracker","viewEvents","scrollbarShadow","scrollbarSliderActiveBackground","scrollbarSliderBackground","scrollbarSliderHoverBackground","minimapSelection","registerThemingParticipant","EventType","Gesture","MinimapCharRendererFactory","MinimapPosition","once","getMinimapLineHeight","renderMinimap","scale","getMinimapCharWidth","MOUSE_DRAG_RESET_DISTANCE","GUTTER_DECORATION_WIDTH","MinimapOptions","configuration","_this","options","pixelRatio","get","layoutInfo","fontInfo","scrollBeyondLastLine","minimapOpts","showSlider","fontScale","Math","round","charRenderer","fontFamily","typicalHalfwidthCharacterWidth","lineHeight","minimapLeft","minimapWidth","minimapHeight","height","canvasInnerWidth","floor","canvasInnerHeight","canvasOuterWidth","canvasOuterHeight","equals","other","MinimapLayout","scrollTop","scrollHeight","computedSliderRatio","sliderTop","sliderHeight","startLineNumber","endLineNumber","_computedSliderRatio","getDesiredScrollTopFromDelta","delta","desiredSliderPosition","getDesiredScrollTopFromTouchLocation","pageY","viewportStartLineNumber","viewportEndLineNumber","viewportHeight","viewportContainsWhitespaceGaps","lineCount","previousLayout","minimapLineHeight","minimapLinesFitting","viewportLineCount","expectedViewportLineCount","maxMinimapSliderTop","max","min","extraLinesAtTheBottom","MinimapLine","dy","onContentChanged","onTokensChanged","INVALID","RenderData","renderedLayout","imageData","lines","_imageData","_renderedLines","_set","linesEquals","layout","scrollEquals","tmp","_get","i","len","length","rendLineNumberStart","onLinesChanged","e","fromLineNumber","toLineNumber","onLinesDeleted","onLinesInserted","ranges","MinimapBuffers","ctx","WIDTH","HEIGHT","background","_backgroundFillData","_createBackgroundFillData","_buffers","createImageData","_lastUsedBuffer","getBuffer","result","data","set","backgroundR","r","backgroundG","g","backgroundB","Uint8ClampedArray","offset","j","Minimap","_super","context","call","_selections","_renderDecorations","_gestureInProgress","_options","_context","_lastRenderData","_selectionColor","theme","getColor","_domNode","document","createElement","write","setClassName","_getMinimapDomNodeClassName","setPosition","setAttribute","_shadow","appendChild","_canvas","setLeft","_decorationsCanvas","_slider","setLayerHinting","setContain","_sliderHorizontal","_tokensColorTracker","getInstance","_applyLayout","_mouseDownListener","addStandardDisposableListener","domNode","preventDefault","internalOffsetY","browserEvent","offsetY","lineIndex","lineNumber","model","getLineCount","privateViewEventBus","emit","ViewRevealRangeRequestEvent","_sliderMouseMoveMonitor","_sliderMouseDownListener","stopPropagation","leftButton","initialMousePosition_1","posy","initialMouseOrthogonalPosition_1","posx","initialSliderState_1","toggleClassName","startMonitoring","target","buttons","mouseMoveData","mouseOrthogonalDelta","abs","isWindows","viewLayout","setScrollPositionNow","mouseDelta","_gestureDisposable","addTarget","_sliderTouchStartListener","addDisposableListener","Start","scrollDueToTouchEvent","_sliderTouchMoveListener","Change","_sliderTouchEndListener","End","touch","startY","getBoundingClientRect","top","dispose","getDomNode","setWidth","setHeight","width","_getBuffer","getContext","_onOptionsMaybeChanged","opts","onConfigurationChanged","onCursorStateChanged","selections","onFlushed","onScrollChanged","onTokensColorsChanged","onZonesChanged","onDecorationsChanged","onThemeChanged","invalidateMinimapColorCache","prepareRender","render","renderingCtx","scrollLeft","viewportWidth","scrollWidth","visibleRange","viewportData","whitespaceViewportData","setTop","scrollLeftChars","horizontalSliderLeft","renderDecorations","renderLines","decorations","getDecorationsInViewport","getLineMaxColumn","_a","characterWidth","tabSize","getOptions","canvasContext","clearRect","lineOffsetMap","Map","selection","line","renderDecorationOnLine","decoration","minimap","decorationColor","range","position","Inline","Gutter","y","x","renderDecoration","decorationRange","charWidth","lineIndexToXOffset","isFirstDecorationForLine","lineData","getLineContent","charCode","charCodeAt","dx","isFullWidthCharacter","startColumn","endColumn","endColumnForLine","renderLineHighlight","fillStyle","transparent","toString","fillRect","canvas","_lastData","_renderUntouchedLines","_dirtyY1","_dirtyY2","needed","lineInfo","getMinimapLinesRenderingData","useLighterFont","backgroundIsLight","renderedLines","_renderLine","dirtyY1","dirtyY2","dirtyHeight","putImageData","lastRenderData","lastTargetData","lastStartLineNumber","lastLines","lastLinesLength","targetData","maxDestPixel","dirtyPixel1","dirtyPixel2","copySourceStart","copySourceEnd","copyDestStart","copyDestEnd","dest_dy","lastLineIndex","source_dy","sourceStart","sourceEnd","destStart","destEnd","subarray","backgroundColor","colorTracker","minimapCharRenderer","content","tokens","maxDx","charIndex","tabsCharDelta","tokenIndex","tokensLen","getCount","tokenEndIndex","getEndOffset","tokenColorId","getForeground","tokenColor","insertSpacesCount","count","blockRenderChar","renderChar","collector","sliderBackground","halfSliderBackground","addRule","sliderHoverBackground","halfSliderHoverBackground","sliderActiveBackground","halfSliderActiveBackground","shadow"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport './minimap.css';\r\nimport * as dom from '../../../../base/browser/dom.js';\r\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\r\nimport { GlobalMouseMoveMonitor, standardMouseMoveMerger } from '../../../../base/browser/globalMouseMoveMonitor.js';\r\nimport * as platform from '../../../../base/common/platform.js';\r\nimport * as strings from '../../../../base/common/strings.js';\r\nimport { RenderedLinesCollection } from '../../view/viewLayer.js';\r\nimport { PartFingerprints, ViewPart } from '../../view/viewPart.js';\r\nimport { MINIMAP_GUTTER_WIDTH } from '../../../common/config/editorOptions.js';\r\nimport { Range } from '../../../common/core/range.js';\r\nimport { MinimapTokensColorTracker } from '../../../common/viewModel/minimapTokensColorTracker.js';\r\nimport * as viewEvents from '../../../common/view/viewEvents.js';\r\nimport { scrollbarShadow, scrollbarSliderActiveBackground, scrollbarSliderBackground, scrollbarSliderHoverBackground, minimapSelection } from '../../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\r\nimport { EventType, Gesture } from '../../../../base/browser/touch.js';\r\nimport { MinimapCharRendererFactory } from './minimapCharRendererFactory.js';\r\nimport { MinimapPosition } from '../../../common/model.js';\r\nimport { once } from '../../../../base/common/functional.js';\r\nfunction getMinimapLineHeight(renderMinimap, scale) {\r\n    if (renderMinimap === 1 /* Text */) {\r\n        return 2 /* BASE_CHAR_HEIGHT */ * scale;\r\n    }\r\n    // RenderMinimap.Blocks\r\n    return (2 /* BASE_CHAR_HEIGHT */ + 1) * scale;\r\n}\r\nfunction getMinimapCharWidth(renderMinimap, scale) {\r\n    if (renderMinimap === 1 /* Text */) {\r\n        return 1 /* BASE_CHAR_WIDTH */ * scale;\r\n    }\r\n    // RenderMinimap.Blocks\r\n    return 1 /* BASE_CHAR_WIDTH */ * scale;\r\n}\r\n/**\r\n * The orthogonal distance to the slider at which dragging \"resets\". This implements \"snapping\"\r\n */\r\nvar MOUSE_DRAG_RESET_DISTANCE = 140;\r\nvar GUTTER_DECORATION_WIDTH = 2;\r\nvar MinimapOptions = /** @class */ (function () {\r\n    function MinimapOptions(configuration) {\r\n        var _this = this;\r\n        var options = configuration.options;\r\n        var pixelRatio = options.get(105 /* pixelRatio */);\r\n        var layoutInfo = options.get(107 /* layoutInfo */);\r\n        var fontInfo = options.get(34 /* fontInfo */);\r\n        this.renderMinimap = layoutInfo.renderMinimap | 0;\r\n        this.scrollBeyondLastLine = options.get(80 /* scrollBeyondLastLine */);\r\n        var minimapOpts = options.get(54 /* minimap */);\r\n        this.showSlider = minimapOpts.showSlider;\r\n        this.fontScale = Math.round(minimapOpts.scale * pixelRatio);\r\n        this.charRenderer = once(function () { return MinimapCharRendererFactory.create(_this.fontScale, fontInfo.fontFamily); });\r\n        this.pixelRatio = pixelRatio;\r\n        this.typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\r\n        this.lineHeight = options.get(49 /* lineHeight */);\r\n        this.minimapLeft = layoutInfo.minimapLeft;\r\n        this.minimapWidth = layoutInfo.minimapWidth;\r\n        this.minimapHeight = layoutInfo.height;\r\n        this.canvasInnerWidth = Math.floor(pixelRatio * this.minimapWidth);\r\n        this.canvasInnerHeight = Math.floor(pixelRatio * this.minimapHeight);\r\n        this.canvasOuterWidth = this.canvasInnerWidth / pixelRatio;\r\n        this.canvasOuterHeight = this.canvasInnerHeight / pixelRatio;\r\n    }\r\n    MinimapOptions.prototype.equals = function (other) {\r\n        return (this.renderMinimap === other.renderMinimap\r\n            && this.scrollBeyondLastLine === other.scrollBeyondLastLine\r\n            && this.showSlider === other.showSlider\r\n            && this.pixelRatio === other.pixelRatio\r\n            && this.typicalHalfwidthCharacterWidth === other.typicalHalfwidthCharacterWidth\r\n            && this.lineHeight === other.lineHeight\r\n            && this.fontScale === other.fontScale\r\n            && this.minimapLeft === other.minimapLeft\r\n            && this.minimapWidth === other.minimapWidth\r\n            && this.minimapHeight === other.minimapHeight\r\n            && this.canvasInnerWidth === other.canvasInnerWidth\r\n            && this.canvasInnerHeight === other.canvasInnerHeight\r\n            && this.canvasOuterWidth === other.canvasOuterWidth\r\n            && this.canvasOuterHeight === other.canvasOuterHeight);\r\n    };\r\n    return MinimapOptions;\r\n}());\r\nvar MinimapLayout = /** @class */ (function () {\r\n    function MinimapLayout(scrollTop, scrollHeight, computedSliderRatio, sliderTop, sliderHeight, startLineNumber, endLineNumber) {\r\n        this.scrollTop = scrollTop;\r\n        this.scrollHeight = scrollHeight;\r\n        this._computedSliderRatio = computedSliderRatio;\r\n        this.sliderTop = sliderTop;\r\n        this.sliderHeight = sliderHeight;\r\n        this.startLineNumber = startLineNumber;\r\n        this.endLineNumber = endLineNumber;\r\n    }\r\n    /**\r\n     * Compute a desired `scrollPosition` such that the slider moves by `delta`.\r\n     */\r\n    MinimapLayout.prototype.getDesiredScrollTopFromDelta = function (delta) {\r\n        var desiredSliderPosition = this.sliderTop + delta;\r\n        return Math.round(desiredSliderPosition / this._computedSliderRatio);\r\n    };\r\n    MinimapLayout.prototype.getDesiredScrollTopFromTouchLocation = function (pageY) {\r\n        return Math.round((pageY - this.sliderHeight / 2) / this._computedSliderRatio);\r\n    };\r\n    MinimapLayout.create = function (options, viewportStartLineNumber, viewportEndLineNumber, viewportHeight, viewportContainsWhitespaceGaps, lineCount, scrollTop, scrollHeight, previousLayout) {\r\n        var pixelRatio = options.pixelRatio;\r\n        var minimapLineHeight = getMinimapLineHeight(options.renderMinimap, options.fontScale);\r\n        var minimapLinesFitting = Math.floor(options.canvasInnerHeight / minimapLineHeight);\r\n        var lineHeight = options.lineHeight;\r\n        // The visible line count in a viewport can change due to a number of reasons:\r\n        //  a) with the same viewport width, different scroll positions can result in partial lines being visible:\r\n        //    e.g. for a line height of 20, and a viewport height of 600\r\n        //          * scrollTop = 0  => visible lines are [1, 30]\r\n        //          * scrollTop = 10 => visible lines are [1, 31] (with lines 1 and 31 partially visible)\r\n        //          * scrollTop = 20 => visible lines are [2, 31]\r\n        //  b) whitespace gaps might make their way in the viewport (which results in a decrease in the visible line count)\r\n        //  c) we could be in the scroll beyond last line case (which also results in a decrease in the visible line count, down to possibly only one line being visible)\r\n        // We must first establish a desirable slider height.\r\n        var sliderHeight;\r\n        if (viewportContainsWhitespaceGaps && viewportEndLineNumber !== lineCount) {\r\n            // case b) from above: there are whitespace gaps in the viewport.\r\n            // In this case, the height of the slider directly reflects the visible line count.\r\n            var viewportLineCount = viewportEndLineNumber - viewportStartLineNumber + 1;\r\n            sliderHeight = Math.floor(viewportLineCount * minimapLineHeight / pixelRatio);\r\n        }\r\n        else {\r\n            // The slider has a stable height\r\n            var expectedViewportLineCount = viewportHeight / lineHeight;\r\n            sliderHeight = Math.floor(expectedViewportLineCount * minimapLineHeight / pixelRatio);\r\n        }\r\n        var maxMinimapSliderTop;\r\n        if (options.scrollBeyondLastLine) {\r\n            // The minimap slider, when dragged all the way down, will contain the last line at its top\r\n            maxMinimapSliderTop = (lineCount - 1) * minimapLineHeight / pixelRatio;\r\n        }\r\n        else {\r\n            // The minimap slider, when dragged all the way down, will contain the last line at its bottom\r\n            maxMinimapSliderTop = Math.max(0, lineCount * minimapLineHeight / pixelRatio - sliderHeight);\r\n        }\r\n        maxMinimapSliderTop = Math.min(options.minimapHeight - sliderHeight, maxMinimapSliderTop);\r\n        // The slider can move from 0 to `maxMinimapSliderTop`\r\n        // in the same way `scrollTop` can move from 0 to `scrollHeight` - `viewportHeight`.\r\n        var computedSliderRatio = (maxMinimapSliderTop) / (scrollHeight - viewportHeight);\r\n        var sliderTop = (scrollTop * computedSliderRatio);\r\n        var extraLinesAtTheBottom = 0;\r\n        if (options.scrollBeyondLastLine) {\r\n            var expectedViewportLineCount = viewportHeight / lineHeight;\r\n            extraLinesAtTheBottom = expectedViewportLineCount;\r\n        }\r\n        if (minimapLinesFitting >= lineCount + extraLinesAtTheBottom) {\r\n            // All lines fit in the minimap\r\n            var startLineNumber = 1;\r\n            var endLineNumber = lineCount;\r\n            return new MinimapLayout(scrollTop, scrollHeight, computedSliderRatio, sliderTop, sliderHeight, startLineNumber, endLineNumber);\r\n        }\r\n        else {\r\n            var startLineNumber = Math.max(1, Math.floor(viewportStartLineNumber - sliderTop * pixelRatio / minimapLineHeight));\r\n            // Avoid flickering caused by a partial viewport start line\r\n            // by being consistent w.r.t. the previous layout decision\r\n            if (previousLayout && previousLayout.scrollHeight === scrollHeight) {\r\n                if (previousLayout.scrollTop > scrollTop) {\r\n                    // Scrolling up => never increase `startLineNumber`\r\n                    startLineNumber = Math.min(startLineNumber, previousLayout.startLineNumber);\r\n                }\r\n                if (previousLayout.scrollTop < scrollTop) {\r\n                    // Scrolling down => never decrease `startLineNumber`\r\n                    startLineNumber = Math.max(startLineNumber, previousLayout.startLineNumber);\r\n                }\r\n            }\r\n            var endLineNumber = Math.min(lineCount, startLineNumber + minimapLinesFitting - 1);\r\n            return new MinimapLayout(scrollTop, scrollHeight, computedSliderRatio, sliderTop, sliderHeight, startLineNumber, endLineNumber);\r\n        }\r\n    };\r\n    return MinimapLayout;\r\n}());\r\nvar MinimapLine = /** @class */ (function () {\r\n    function MinimapLine(dy) {\r\n        this.dy = dy;\r\n    }\r\n    MinimapLine.prototype.onContentChanged = function () {\r\n        this.dy = -1;\r\n    };\r\n    MinimapLine.prototype.onTokensChanged = function () {\r\n        this.dy = -1;\r\n    };\r\n    MinimapLine.INVALID = new MinimapLine(-1);\r\n    return MinimapLine;\r\n}());\r\nvar RenderData = /** @class */ (function () {\r\n    function RenderData(renderedLayout, imageData, lines) {\r\n        this.renderedLayout = renderedLayout;\r\n        this._imageData = imageData;\r\n        this._renderedLines = new RenderedLinesCollection(function () { return MinimapLine.INVALID; });\r\n        this._renderedLines._set(renderedLayout.startLineNumber, lines);\r\n    }\r\n    /**\r\n     * Check if the current RenderData matches accurately the new desired layout and no painting is needed.\r\n     */\r\n    RenderData.prototype.linesEquals = function (layout) {\r\n        if (!this.scrollEquals(layout)) {\r\n            return false;\r\n        }\r\n        var tmp = this._renderedLines._get();\r\n        var lines = tmp.lines;\r\n        for (var i = 0, len = lines.length; i < len; i++) {\r\n            if (lines[i].dy === -1) {\r\n                // This line is invalid\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Check if the current RenderData matches the new layout's scroll position\r\n     */\r\n    RenderData.prototype.scrollEquals = function (layout) {\r\n        return this.renderedLayout.startLineNumber === layout.startLineNumber\r\n            && this.renderedLayout.endLineNumber === layout.endLineNumber;\r\n    };\r\n    RenderData.prototype._get = function () {\r\n        var tmp = this._renderedLines._get();\r\n        return {\r\n            imageData: this._imageData,\r\n            rendLineNumberStart: tmp.rendLineNumberStart,\r\n            lines: tmp.lines\r\n        };\r\n    };\r\n    RenderData.prototype.onLinesChanged = function (e) {\r\n        return this._renderedLines.onLinesChanged(e.fromLineNumber, e.toLineNumber);\r\n    };\r\n    RenderData.prototype.onLinesDeleted = function (e) {\r\n        this._renderedLines.onLinesDeleted(e.fromLineNumber, e.toLineNumber);\r\n    };\r\n    RenderData.prototype.onLinesInserted = function (e) {\r\n        this._renderedLines.onLinesInserted(e.fromLineNumber, e.toLineNumber);\r\n    };\r\n    RenderData.prototype.onTokensChanged = function (e) {\r\n        return this._renderedLines.onTokensChanged(e.ranges);\r\n    };\r\n    return RenderData;\r\n}());\r\n/**\r\n * Some sort of double buffering.\r\n *\r\n * Keeps two buffers around that will be rotated for painting.\r\n * Always gives a buffer that is filled with the background color.\r\n */\r\nvar MinimapBuffers = /** @class */ (function () {\r\n    function MinimapBuffers(ctx, WIDTH, HEIGHT, background) {\r\n        this._backgroundFillData = MinimapBuffers._createBackgroundFillData(WIDTH, HEIGHT, background);\r\n        this._buffers = [\r\n            ctx.createImageData(WIDTH, HEIGHT),\r\n            ctx.createImageData(WIDTH, HEIGHT)\r\n        ];\r\n        this._lastUsedBuffer = 0;\r\n    }\r\n    MinimapBuffers.prototype.getBuffer = function () {\r\n        // rotate buffers\r\n        this._lastUsedBuffer = 1 - this._lastUsedBuffer;\r\n        var result = this._buffers[this._lastUsedBuffer];\r\n        // fill with background color\r\n        result.data.set(this._backgroundFillData);\r\n        return result;\r\n    };\r\n    MinimapBuffers._createBackgroundFillData = function (WIDTH, HEIGHT, background) {\r\n        var backgroundR = background.r;\r\n        var backgroundG = background.g;\r\n        var backgroundB = background.b;\r\n        var result = new Uint8ClampedArray(WIDTH * HEIGHT * 4);\r\n        var offset = 0;\r\n        for (var i = 0; i < HEIGHT; i++) {\r\n            for (var j = 0; j < WIDTH; j++) {\r\n                result[offset] = backgroundR;\r\n                result[offset + 1] = backgroundG;\r\n                result[offset + 2] = backgroundB;\r\n                result[offset + 3] = 255;\r\n                offset += 4;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    return MinimapBuffers;\r\n}());\r\nvar Minimap = /** @class */ (function (_super) {\r\n    __extends(Minimap, _super);\r\n    function Minimap(context) {\r\n        var _this = _super.call(this, context) || this;\r\n        _this._selections = [];\r\n        _this._renderDecorations = false;\r\n        _this._gestureInProgress = false;\r\n        _this._options = new MinimapOptions(_this._context.configuration);\r\n        _this._lastRenderData = null;\r\n        _this._buffers = null;\r\n        _this._selectionColor = _this._context.theme.getColor(minimapSelection);\r\n        _this._domNode = createFastDomNode(document.createElement('div'));\r\n        PartFingerprints.write(_this._domNode, 8 /* Minimap */);\r\n        _this._domNode.setClassName(_this._getMinimapDomNodeClassName());\r\n        _this._domNode.setPosition('absolute');\r\n        _this._domNode.setAttribute('role', 'presentation');\r\n        _this._domNode.setAttribute('aria-hidden', 'true');\r\n        _this._shadow = createFastDomNode(document.createElement('div'));\r\n        _this._shadow.setClassName('minimap-shadow-hidden');\r\n        _this._domNode.appendChild(_this._shadow);\r\n        _this._canvas = createFastDomNode(document.createElement('canvas'));\r\n        _this._canvas.setPosition('absolute');\r\n        _this._canvas.setLeft(0);\r\n        _this._domNode.appendChild(_this._canvas);\r\n        _this._decorationsCanvas = createFastDomNode(document.createElement('canvas'));\r\n        _this._decorationsCanvas.setPosition('absolute');\r\n        _this._decorationsCanvas.setClassName('minimap-decorations-layer');\r\n        _this._decorationsCanvas.setLeft(0);\r\n        _this._domNode.appendChild(_this._decorationsCanvas);\r\n        _this._slider = createFastDomNode(document.createElement('div'));\r\n        _this._slider.setPosition('absolute');\r\n        _this._slider.setClassName('minimap-slider');\r\n        _this._slider.setLayerHinting(true);\r\n        _this._slider.setContain('strict');\r\n        _this._domNode.appendChild(_this._slider);\r\n        _this._sliderHorizontal = createFastDomNode(document.createElement('div'));\r\n        _this._sliderHorizontal.setPosition('absolute');\r\n        _this._sliderHorizontal.setClassName('minimap-slider-horizontal');\r\n        _this._slider.appendChild(_this._sliderHorizontal);\r\n        _this._tokensColorTracker = MinimapTokensColorTracker.getInstance();\r\n        _this._applyLayout();\r\n        _this._mouseDownListener = dom.addStandardDisposableListener(_this._domNode.domNode, 'mousedown', function (e) {\r\n            e.preventDefault();\r\n            var renderMinimap = _this._options.renderMinimap;\r\n            if (renderMinimap === 0 /* None */) {\r\n                return;\r\n            }\r\n            if (!_this._lastRenderData) {\r\n                return;\r\n            }\r\n            var minimapLineHeight = getMinimapLineHeight(renderMinimap, _this._options.fontScale);\r\n            var internalOffsetY = _this._options.pixelRatio * e.browserEvent.offsetY;\r\n            var lineIndex = Math.floor(internalOffsetY / minimapLineHeight);\r\n            var lineNumber = lineIndex + _this._lastRenderData.renderedLayout.startLineNumber;\r\n            lineNumber = Math.min(lineNumber, _this._context.model.getLineCount());\r\n            _this._context.privateViewEventBus.emit(new viewEvents.ViewRevealRangeRequestEvent('mouse', new Range(lineNumber, 1, lineNumber, 1), 1 /* Center */, false, 0 /* Smooth */));\r\n        });\r\n        _this._sliderMouseMoveMonitor = new GlobalMouseMoveMonitor();\r\n        _this._sliderMouseDownListener = dom.addStandardDisposableListener(_this._slider.domNode, 'mousedown', function (e) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            if (e.leftButton && _this._lastRenderData) {\r\n                var initialMousePosition_1 = e.posy;\r\n                var initialMouseOrthogonalPosition_1 = e.posx;\r\n                var initialSliderState_1 = _this._lastRenderData.renderedLayout;\r\n                _this._slider.toggleClassName('active', true);\r\n                _this._sliderMouseMoveMonitor.startMonitoring(e.target, e.buttons, standardMouseMoveMerger, function (mouseMoveData) {\r\n                    var mouseOrthogonalDelta = Math.abs(mouseMoveData.posx - initialMouseOrthogonalPosition_1);\r\n                    if (platform.isWindows && mouseOrthogonalDelta > MOUSE_DRAG_RESET_DISTANCE) {\r\n                        // The mouse has wondered away from the scrollbar => reset dragging\r\n                        _this._context.viewLayout.setScrollPositionNow({\r\n                            scrollTop: initialSliderState_1.scrollTop\r\n                        });\r\n                        return;\r\n                    }\r\n                    var mouseDelta = mouseMoveData.posy - initialMousePosition_1;\r\n                    _this._context.viewLayout.setScrollPositionNow({\r\n                        scrollTop: initialSliderState_1.getDesiredScrollTopFromDelta(mouseDelta)\r\n                    });\r\n                }, function () {\r\n                    _this._slider.toggleClassName('active', false);\r\n                });\r\n            }\r\n        });\r\n        _this._gestureDisposable = Gesture.addTarget(_this._domNode.domNode);\r\n        _this._sliderTouchStartListener = dom.addDisposableListener(_this._domNode.domNode, EventType.Start, function (e) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            if (_this._lastRenderData) {\r\n                _this._slider.toggleClassName('active', true);\r\n                _this._gestureInProgress = true;\r\n                _this.scrollDueToTouchEvent(e);\r\n            }\r\n        });\r\n        _this._sliderTouchMoveListener = dom.addStandardDisposableListener(_this._domNode.domNode, EventType.Change, function (e) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            if (_this._lastRenderData && _this._gestureInProgress) {\r\n                _this.scrollDueToTouchEvent(e);\r\n            }\r\n        });\r\n        _this._sliderTouchEndListener = dom.addStandardDisposableListener(_this._domNode.domNode, EventType.End, function (e) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            _this._gestureInProgress = false;\r\n            _this._slider.toggleClassName('active', false);\r\n        });\r\n        return _this;\r\n    }\r\n    Minimap.prototype.scrollDueToTouchEvent = function (touch) {\r\n        var startY = this._domNode.domNode.getBoundingClientRect().top;\r\n        var scrollTop = this._lastRenderData.renderedLayout.getDesiredScrollTopFromTouchLocation(touch.pageY - startY);\r\n        this._context.viewLayout.setScrollPositionNow({\r\n            scrollTop: scrollTop\r\n        });\r\n    };\r\n    Minimap.prototype.dispose = function () {\r\n        this._mouseDownListener.dispose();\r\n        this._sliderMouseMoveMonitor.dispose();\r\n        this._sliderMouseDownListener.dispose();\r\n        this._gestureDisposable.dispose();\r\n        this._sliderTouchStartListener.dispose();\r\n        this._sliderTouchMoveListener.dispose();\r\n        this._sliderTouchEndListener.dispose();\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    Minimap.prototype._getMinimapDomNodeClassName = function () {\r\n        if (this._options.showSlider === 'always') {\r\n            return 'minimap slider-always';\r\n        }\r\n        return 'minimap slider-mouseover';\r\n    };\r\n    Minimap.prototype.getDomNode = function () {\r\n        return this._domNode;\r\n    };\r\n    Minimap.prototype._applyLayout = function () {\r\n        this._domNode.setLeft(this._options.minimapLeft);\r\n        this._domNode.setWidth(this._options.minimapWidth);\r\n        this._domNode.setHeight(this._options.minimapHeight);\r\n        this._shadow.setHeight(this._options.minimapHeight);\r\n        this._canvas.setWidth(this._options.canvasOuterWidth);\r\n        this._canvas.setHeight(this._options.canvasOuterHeight);\r\n        this._canvas.domNode.width = this._options.canvasInnerWidth;\r\n        this._canvas.domNode.height = this._options.canvasInnerHeight;\r\n        this._decorationsCanvas.setWidth(this._options.canvasOuterWidth);\r\n        this._decorationsCanvas.setHeight(this._options.canvasOuterHeight);\r\n        this._decorationsCanvas.domNode.width = this._options.canvasInnerWidth;\r\n        this._decorationsCanvas.domNode.height = this._options.canvasInnerHeight;\r\n        this._slider.setWidth(this._options.minimapWidth);\r\n    };\r\n    Minimap.prototype._getBuffer = function () {\r\n        if (!this._buffers) {\r\n            if (this._options.canvasInnerWidth > 0 && this._options.canvasInnerHeight > 0) {\r\n                this._buffers = new MinimapBuffers(this._canvas.domNode.getContext('2d'), this._options.canvasInnerWidth, this._options.canvasInnerHeight, this._tokensColorTracker.getColor(2 /* DefaultBackground */));\r\n            }\r\n        }\r\n        return this._buffers ? this._buffers.getBuffer() : null;\r\n    };\r\n    Minimap.prototype._onOptionsMaybeChanged = function () {\r\n        var opts = new MinimapOptions(this._context.configuration);\r\n        if (this._options.equals(opts)) {\r\n            return false;\r\n        }\r\n        this._options = opts;\r\n        this._lastRenderData = null;\r\n        this._buffers = null;\r\n        this._applyLayout();\r\n        this._domNode.setClassName(this._getMinimapDomNodeClassName());\r\n        return true;\r\n    };\r\n    // ---- begin view event handlers\r\n    Minimap.prototype.onConfigurationChanged = function (e) {\r\n        return this._onOptionsMaybeChanged();\r\n    };\r\n    Minimap.prototype.onCursorStateChanged = function (e) {\r\n        this._selections = e.selections;\r\n        this._renderDecorations = true;\r\n        return true;\r\n    };\r\n    Minimap.prototype.onFlushed = function (e) {\r\n        this._lastRenderData = null;\r\n        return true;\r\n    };\r\n    Minimap.prototype.onLinesChanged = function (e) {\r\n        if (this._lastRenderData) {\r\n            return this._lastRenderData.onLinesChanged(e);\r\n        }\r\n        return false;\r\n    };\r\n    Minimap.prototype.onLinesDeleted = function (e) {\r\n        if (this._lastRenderData) {\r\n            this._lastRenderData.onLinesDeleted(e);\r\n        }\r\n        return true;\r\n    };\r\n    Minimap.prototype.onLinesInserted = function (e) {\r\n        if (this._lastRenderData) {\r\n            this._lastRenderData.onLinesInserted(e);\r\n        }\r\n        return true;\r\n    };\r\n    Minimap.prototype.onScrollChanged = function (e) {\r\n        this._renderDecorations = true;\r\n        return true;\r\n    };\r\n    Minimap.prototype.onTokensChanged = function (e) {\r\n        if (this._lastRenderData) {\r\n            return this._lastRenderData.onTokensChanged(e);\r\n        }\r\n        return false;\r\n    };\r\n    Minimap.prototype.onTokensColorsChanged = function (e) {\r\n        this._lastRenderData = null;\r\n        this._buffers = null;\r\n        return true;\r\n    };\r\n    Minimap.prototype.onZonesChanged = function (e) {\r\n        this._lastRenderData = null;\r\n        return true;\r\n    };\r\n    Minimap.prototype.onDecorationsChanged = function (e) {\r\n        this._renderDecorations = true;\r\n        return true;\r\n    };\r\n    Minimap.prototype.onThemeChanged = function (e) {\r\n        this._context.model.invalidateMinimapColorCache();\r\n        this._selectionColor = this._context.theme.getColor(minimapSelection);\r\n        this._renderDecorations = true;\r\n        return true;\r\n    };\r\n    // --- end event handlers\r\n    Minimap.prototype.prepareRender = function (ctx) {\r\n        // Nothing to read\r\n    };\r\n    Minimap.prototype.render = function (renderingCtx) {\r\n        var renderMinimap = this._options.renderMinimap;\r\n        if (renderMinimap === 0 /* None */) {\r\n            this._shadow.setClassName('minimap-shadow-hidden');\r\n            this._sliderHorizontal.setWidth(0);\r\n            this._sliderHorizontal.setHeight(0);\r\n            return;\r\n        }\r\n        if (renderingCtx.scrollLeft + renderingCtx.viewportWidth >= renderingCtx.scrollWidth) {\r\n            this._shadow.setClassName('minimap-shadow-hidden');\r\n        }\r\n        else {\r\n            this._shadow.setClassName('minimap-shadow-visible');\r\n        }\r\n        var layout = MinimapLayout.create(this._options, renderingCtx.visibleRange.startLineNumber, renderingCtx.visibleRange.endLineNumber, renderingCtx.viewportHeight, (renderingCtx.viewportData.whitespaceViewportData.length > 0), this._context.model.getLineCount(), renderingCtx.scrollTop, renderingCtx.scrollHeight, this._lastRenderData ? this._lastRenderData.renderedLayout : null);\r\n        this._slider.setTop(layout.sliderTop);\r\n        this._slider.setHeight(layout.sliderHeight);\r\n        // Compute horizontal slider coordinates\r\n        var scrollLeftChars = renderingCtx.scrollLeft / this._options.typicalHalfwidthCharacterWidth;\r\n        var horizontalSliderLeft = Math.min(this._options.minimapWidth, Math.round(scrollLeftChars * getMinimapCharWidth(this._options.renderMinimap, this._options.fontScale) / this._options.pixelRatio));\r\n        this._sliderHorizontal.setLeft(horizontalSliderLeft);\r\n        this._sliderHorizontal.setWidth(this._options.minimapWidth - horizontalSliderLeft);\r\n        this._sliderHorizontal.setTop(0);\r\n        this._sliderHorizontal.setHeight(layout.sliderHeight);\r\n        this.renderDecorations(layout);\r\n        this._lastRenderData = this.renderLines(layout);\r\n    };\r\n    Minimap.prototype.renderDecorations = function (layout) {\r\n        if (this._renderDecorations) {\r\n            this._renderDecorations = false;\r\n            var decorations = this._context.model.getDecorationsInViewport(new Range(layout.startLineNumber, 1, layout.endLineNumber, this._context.model.getLineMaxColumn(layout.endLineNumber)));\r\n            var _a = this._options, renderMinimap = _a.renderMinimap, canvasInnerWidth = _a.canvasInnerWidth, canvasInnerHeight = _a.canvasInnerHeight;\r\n            var lineHeight = getMinimapLineHeight(renderMinimap, this._options.fontScale);\r\n            var characterWidth = getMinimapCharWidth(renderMinimap, this._options.fontScale);\r\n            var tabSize = this._context.model.getOptions().tabSize;\r\n            var canvasContext = this._decorationsCanvas.domNode.getContext('2d');\r\n            canvasContext.clearRect(0, 0, canvasInnerWidth, canvasInnerHeight);\r\n            var lineOffsetMap = new Map();\r\n            for (var i = 0; i < this._selections.length; i++) {\r\n                var selection = this._selections[i];\r\n                for (var line = selection.startLineNumber; line <= selection.endLineNumber; line++) {\r\n                    this.renderDecorationOnLine(canvasContext, lineOffsetMap, selection, this._selectionColor, layout, line, lineHeight, lineHeight, tabSize, characterWidth);\r\n                }\r\n            }\r\n            // Loop over decorations, ignoring those that don't have the minimap property set and rendering rectangles for each line the decoration spans\r\n            for (var i = 0; i < decorations.length; i++) {\r\n                var decoration = decorations[i];\r\n                if (!decoration.options.minimap) {\r\n                    continue;\r\n                }\r\n                var decorationColor = decoration.options.minimap.getColor(this._context.theme);\r\n                for (var line = decoration.range.startLineNumber; line <= decoration.range.endLineNumber; line++) {\r\n                    switch (decoration.options.minimap.position) {\r\n                        case MinimapPosition.Inline:\r\n                            this.renderDecorationOnLine(canvasContext, lineOffsetMap, decoration.range, decorationColor, layout, line, lineHeight, lineHeight, tabSize, characterWidth);\r\n                            continue;\r\n                        case MinimapPosition.Gutter:\r\n                            var y = (line - layout.startLineNumber) * lineHeight;\r\n                            var x = 2;\r\n                            this.renderDecoration(canvasContext, decorationColor, x, y, GUTTER_DECORATION_WIDTH, lineHeight);\r\n                            continue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Minimap.prototype.renderDecorationOnLine = function (canvasContext, lineOffsetMap, decorationRange, decorationColor, layout, lineNumber, height, lineHeight, tabSize, charWidth) {\r\n        var y = (lineNumber - layout.startLineNumber) * lineHeight;\r\n        // Skip rendering the line if it's vertically outside our viewport\r\n        if (y + height < 0 || y > this._options.canvasInnerHeight) {\r\n            return;\r\n        }\r\n        // Cache line offset data so that it is only read once per line\r\n        var lineIndexToXOffset = lineOffsetMap.get(lineNumber);\r\n        var isFirstDecorationForLine = !lineIndexToXOffset;\r\n        if (!lineIndexToXOffset) {\r\n            var lineData = this._context.model.getLineContent(lineNumber);\r\n            lineIndexToXOffset = [MINIMAP_GUTTER_WIDTH];\r\n            for (var i = 1; i < lineData.length + 1; i++) {\r\n                var charCode = lineData.charCodeAt(i - 1);\r\n                var dx = charCode === 9 /* Tab */\r\n                    ? tabSize * charWidth\r\n                    : strings.isFullWidthCharacter(charCode)\r\n                        ? 2 * charWidth\r\n                        : charWidth;\r\n                lineIndexToXOffset[i] = lineIndexToXOffset[i - 1] + dx;\r\n            }\r\n            lineOffsetMap.set(lineNumber, lineIndexToXOffset);\r\n        }\r\n        var startColumn = decorationRange.startColumn, endColumn = decorationRange.endColumn, startLineNumber = decorationRange.startLineNumber, endLineNumber = decorationRange.endLineNumber;\r\n        var x = startLineNumber === lineNumber ? lineIndexToXOffset[startColumn - 1] : MINIMAP_GUTTER_WIDTH;\r\n        var endColumnForLine = endLineNumber > lineNumber ? lineIndexToXOffset.length - 1 : endColumn - 1;\r\n        if (endColumnForLine > 0) {\r\n            // If the decoration starts at the last character of the column and spans over it, ensure it has a width\r\n            var width = lineIndexToXOffset[endColumnForLine] - x || 2;\r\n            this.renderDecoration(canvasContext, decorationColor, x, y, width, height);\r\n        }\r\n        if (isFirstDecorationForLine) {\r\n            this.renderLineHighlight(canvasContext, decorationColor, y, height);\r\n        }\r\n    };\r\n    Minimap.prototype.renderLineHighlight = function (canvasContext, decorationColor, y, height) {\r\n        canvasContext.fillStyle = decorationColor && decorationColor.transparent(0.5).toString() || '';\r\n        canvasContext.fillRect(MINIMAP_GUTTER_WIDTH, y, canvasContext.canvas.width, height);\r\n    };\r\n    Minimap.prototype.renderDecoration = function (canvasContext, decorationColor, x, y, width, height) {\r\n        canvasContext.fillStyle = decorationColor && decorationColor.toString() || '';\r\n        canvasContext.fillRect(x, y, width, height);\r\n    };\r\n    Minimap.prototype.renderLines = function (layout) {\r\n        var renderMinimap = this._options.renderMinimap;\r\n        var charRenderer = this._options.charRenderer();\r\n        var startLineNumber = layout.startLineNumber;\r\n        var endLineNumber = layout.endLineNumber;\r\n        var minimapLineHeight = getMinimapLineHeight(renderMinimap, this._options.fontScale);\r\n        // Check if nothing changed w.r.t. lines from last frame\r\n        if (this._lastRenderData && this._lastRenderData.linesEquals(layout)) {\r\n            var _lastData = this._lastRenderData._get();\r\n            // Nice!! Nothing changed from last frame\r\n            return new RenderData(layout, _lastData.imageData, _lastData.lines);\r\n        }\r\n        // Oh well!! We need to repaint some lines...\r\n        var imageData = this._getBuffer();\r\n        if (!imageData) {\r\n            // 0 width or 0 height canvas, nothing to do\r\n            return null;\r\n        }\r\n        // Render untouched lines by using last rendered data.\r\n        var _a = Minimap._renderUntouchedLines(imageData, startLineNumber, endLineNumber, minimapLineHeight, this._lastRenderData), _dirtyY1 = _a[0], _dirtyY2 = _a[1], needed = _a[2];\r\n        // Fetch rendering info from view model for rest of lines that need rendering.\r\n        var lineInfo = this._context.model.getMinimapLinesRenderingData(startLineNumber, endLineNumber, needed);\r\n        var tabSize = lineInfo.tabSize;\r\n        var background = this._tokensColorTracker.getColor(2 /* DefaultBackground */);\r\n        var useLighterFont = this._tokensColorTracker.backgroundIsLight();\r\n        // Render the rest of lines\r\n        var dy = 0;\r\n        var renderedLines = [];\r\n        for (var lineIndex = 0, lineCount = endLineNumber - startLineNumber + 1; lineIndex < lineCount; lineIndex++) {\r\n            if (needed[lineIndex]) {\r\n                Minimap._renderLine(imageData, background, useLighterFont, renderMinimap, this._tokensColorTracker, charRenderer, dy, tabSize, lineInfo.data[lineIndex], this._options.fontScale);\r\n            }\r\n            renderedLines[lineIndex] = new MinimapLine(dy);\r\n            dy += minimapLineHeight;\r\n        }\r\n        var dirtyY1 = (_dirtyY1 === -1 ? 0 : _dirtyY1);\r\n        var dirtyY2 = (_dirtyY2 === -1 ? imageData.height : _dirtyY2);\r\n        var dirtyHeight = dirtyY2 - dirtyY1;\r\n        // Finally, paint to the canvas\r\n        var ctx = this._canvas.domNode.getContext('2d');\r\n        ctx.putImageData(imageData, 0, 0, 0, dirtyY1, imageData.width, dirtyHeight);\r\n        // Save rendered data for reuse on next frame if possible\r\n        return new RenderData(layout, imageData, renderedLines);\r\n    };\r\n    Minimap._renderUntouchedLines = function (target, startLineNumber, endLineNumber, minimapLineHeight, lastRenderData) {\r\n        var needed = [];\r\n        if (!lastRenderData) {\r\n            for (var i = 0, len = endLineNumber - startLineNumber + 1; i < len; i++) {\r\n                needed[i] = true;\r\n            }\r\n            return [-1, -1, needed];\r\n        }\r\n        var _lastData = lastRenderData._get();\r\n        var lastTargetData = _lastData.imageData.data;\r\n        var lastStartLineNumber = _lastData.rendLineNumberStart;\r\n        var lastLines = _lastData.lines;\r\n        var lastLinesLength = lastLines.length;\r\n        var WIDTH = target.width;\r\n        var targetData = target.data;\r\n        var maxDestPixel = (endLineNumber - startLineNumber + 1) * minimapLineHeight * WIDTH * 4;\r\n        var dirtyPixel1 = -1; // the pixel offset up to which all the data is equal to the prev frame\r\n        var dirtyPixel2 = -1; // the pixel offset after which all the data is equal to the prev frame\r\n        var copySourceStart = -1;\r\n        var copySourceEnd = -1;\r\n        var copyDestStart = -1;\r\n        var copyDestEnd = -1;\r\n        var dest_dy = 0;\r\n        for (var lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\r\n            var lineIndex = lineNumber - startLineNumber;\r\n            var lastLineIndex = lineNumber - lastStartLineNumber;\r\n            var source_dy = (lastLineIndex >= 0 && lastLineIndex < lastLinesLength ? lastLines[lastLineIndex].dy : -1);\r\n            if (source_dy === -1) {\r\n                needed[lineIndex] = true;\r\n                dest_dy += minimapLineHeight;\r\n                continue;\r\n            }\r\n            var sourceStart = source_dy * WIDTH * 4;\r\n            var sourceEnd = (source_dy + minimapLineHeight) * WIDTH * 4;\r\n            var destStart = dest_dy * WIDTH * 4;\r\n            var destEnd = (dest_dy + minimapLineHeight) * WIDTH * 4;\r\n            if (copySourceEnd === sourceStart && copyDestEnd === destStart) {\r\n                // contiguous zone => extend copy request\r\n                copySourceEnd = sourceEnd;\r\n                copyDestEnd = destEnd;\r\n            }\r\n            else {\r\n                if (copySourceStart !== -1) {\r\n                    // flush existing copy request\r\n                    targetData.set(lastTargetData.subarray(copySourceStart, copySourceEnd), copyDestStart);\r\n                    if (dirtyPixel1 === -1 && copySourceStart === 0 && copySourceStart === copyDestStart) {\r\n                        dirtyPixel1 = copySourceEnd;\r\n                    }\r\n                    if (dirtyPixel2 === -1 && copySourceEnd === maxDestPixel && copySourceStart === copyDestStart) {\r\n                        dirtyPixel2 = copySourceStart;\r\n                    }\r\n                }\r\n                copySourceStart = sourceStart;\r\n                copySourceEnd = sourceEnd;\r\n                copyDestStart = destStart;\r\n                copyDestEnd = destEnd;\r\n            }\r\n            needed[lineIndex] = false;\r\n            dest_dy += minimapLineHeight;\r\n        }\r\n        if (copySourceStart !== -1) {\r\n            // flush existing copy request\r\n            targetData.set(lastTargetData.subarray(copySourceStart, copySourceEnd), copyDestStart);\r\n            if (dirtyPixel1 === -1 && copySourceStart === 0 && copySourceStart === copyDestStart) {\r\n                dirtyPixel1 = copySourceEnd;\r\n            }\r\n            if (dirtyPixel2 === -1 && copySourceEnd === maxDestPixel && copySourceStart === copyDestStart) {\r\n                dirtyPixel2 = copySourceStart;\r\n            }\r\n        }\r\n        var dirtyY1 = (dirtyPixel1 === -1 ? -1 : dirtyPixel1 / (WIDTH * 4));\r\n        var dirtyY2 = (dirtyPixel2 === -1 ? -1 : dirtyPixel2 / (WIDTH * 4));\r\n        return [dirtyY1, dirtyY2, needed];\r\n    };\r\n    Minimap._renderLine = function (target, backgroundColor, useLighterFont, renderMinimap, colorTracker, minimapCharRenderer, dy, tabSize, lineData, fontScale) {\r\n        var content = lineData.content;\r\n        var tokens = lineData.tokens;\r\n        var charWidth = getMinimapCharWidth(renderMinimap, fontScale);\r\n        var maxDx = target.width - charWidth;\r\n        var dx = MINIMAP_GUTTER_WIDTH;\r\n        var charIndex = 0;\r\n        var tabsCharDelta = 0;\r\n        for (var tokenIndex = 0, tokensLen = tokens.getCount(); tokenIndex < tokensLen; tokenIndex++) {\r\n            var tokenEndIndex = tokens.getEndOffset(tokenIndex);\r\n            var tokenColorId = tokens.getForeground(tokenIndex);\r\n            var tokenColor = colorTracker.getColor(tokenColorId);\r\n            for (; charIndex < tokenEndIndex; charIndex++) {\r\n                if (dx > maxDx) {\r\n                    // hit edge of minimap\r\n                    return;\r\n                }\r\n                var charCode = content.charCodeAt(charIndex);\r\n                if (charCode === 9 /* Tab */) {\r\n                    var insertSpacesCount = tabSize - (charIndex + tabsCharDelta) % tabSize;\r\n                    tabsCharDelta += insertSpacesCount - 1;\r\n                    // No need to render anything since tab is invisible\r\n                    dx += insertSpacesCount * charWidth;\r\n                }\r\n                else if (charCode === 32 /* Space */) {\r\n                    // No need to render anything since space is invisible\r\n                    dx += charWidth;\r\n                }\r\n                else {\r\n                    // Render twice for a full width character\r\n                    var count = strings.isFullWidthCharacter(charCode) ? 2 : 1;\r\n                    for (var i = 0; i < count; i++) {\r\n                        if (renderMinimap === 2 /* Blocks */) {\r\n                            minimapCharRenderer.blockRenderChar(target, dx, dy, tokenColor, backgroundColor, useLighterFont);\r\n                        }\r\n                        else { // RenderMinimap.Text\r\n                            minimapCharRenderer.renderChar(target, dx, dy, charCode, tokenColor, backgroundColor, fontScale, useLighterFont);\r\n                        }\r\n                        dx += charWidth;\r\n                        if (dx > maxDx) {\r\n                            // hit edge of minimap\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return Minimap;\r\n}(ViewPart));\r\nexport { Minimap };\r\nregisterThemingParticipant(function (theme, collector) {\r\n    var sliderBackground = theme.getColor(scrollbarSliderBackground);\r\n    if (sliderBackground) {\r\n        var halfSliderBackground = sliderBackground.transparent(0.5);\r\n        collector.addRule(\".monaco-editor .minimap-slider, .monaco-editor .minimap-slider .minimap-slider-horizontal { background: \" + halfSliderBackground + \"; }\");\r\n    }\r\n    var sliderHoverBackground = theme.getColor(scrollbarSliderHoverBackground);\r\n    if (sliderHoverBackground) {\r\n        var halfSliderHoverBackground = sliderHoverBackground.transparent(0.5);\r\n        collector.addRule(\".monaco-editor .minimap-slider:hover, .monaco-editor .minimap-slider:hover .minimap-slider-horizontal { background: \" + halfSliderHoverBackground + \"; }\");\r\n    }\r\n    var sliderActiveBackground = theme.getColor(scrollbarSliderActiveBackground);\r\n    if (sliderActiveBackground) {\r\n        var halfSliderActiveBackground = sliderActiveBackground.transparent(0.5);\r\n        collector.addRule(\".monaco-editor .minimap-slider.active, .monaco-editor .minimap-slider.active .minimap-slider-horizontal { background: \" + halfSliderActiveBackground + \"; }\");\r\n    }\r\n    var shadow = theme.getColor(scrollbarShadow);\r\n    if (shadow) {\r\n        collector.addRule(\".monaco-editor .minimap-shadow-visible { box-shadow: \" + shadow + \" -6px 0 6px -6px inset; }\");\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}