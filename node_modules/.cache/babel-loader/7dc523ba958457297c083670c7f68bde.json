{"ast":null,"code":"var _jsxFileName = \"/Users/ifudata/eclipse-workspace/screen-web/src/pages/ScreenEditor/index.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport '../../static/style/editor.styl';\nimport Header from '../../components/Editor/Header';\nimport SettingPanel from '../../components/Editor/SettingPanel';\nimport LayerPanel from '../../components/Editor/LayerPanel';\nimport ModulesPanel from '../../components/Editor/ModulesPanel';\nimport CanvasPanel from '../../components/Editor/CanvasPanel';\nimport { testScreenData } from '../../data/data';\nimport { getScreenData } from '../../store/actions/screen-actions';\n\nclass ScreenEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.history.location.query\n    };\n\n    this.getStatusByProps = () => {\n      //判断图层状态\n      if (this.props.layerPanelShow) {\n        this.layoutStatus.layerPanel = \"status01\";\n      } else {\n        this.layoutStatus.layerPanel = \"status02\";\n      } // 判断组件面板状态\n\n\n      if (this.props.modulesPanelShow && this.props.layerPanelShow) {\n        this.layoutStatus.modulesPanel = \"status02\";\n      } else if (this.props.modulesPanelShow && !this.props.layerPanelShow) {\n        this.layoutStatus.modulesPanel = \"status01\";\n      } else {\n        this.layoutStatus.modulesPanel = \"status03\";\n      } // 判断画布面板的状态\n\n\n      if (!this.props.layerPanelShow && !this.props.modulesPanelShow && !this.props.settingPanelShow) {\n        this.layoutStatus.canvasPanel = \"status01\";\n      } else if (!this.props.layerPanelShow && !this.props.modulesPanelShow && this.props.settingPanelShow) {\n        this.layoutStatus.canvasPanel = \"status02\";\n      } else if (this.props.layerPanelShow && !this.props.modulesPanelShow && !this.props.settingPanelShow) {\n        this.layoutStatus.canvasPanel = \"status03\";\n      } else if (this.props.layerPanelShow && !this.props.modulesPanelShow && this.props.settingPanelShow) {\n        this.layoutStatus.canvasPanel = \"status04\";\n      } else if (!this.props.layerPanelShow && this.props.modulesPanelShow && !this.props.settingPanelShow) {\n        this.layoutStatus.canvasPanel = \"status03\";\n      } else if (!this.props.layerPanelShow && this.props.modulesPanelShow && this.props.settingPanelShow) {\n        this.layoutStatus.canvasPanel = \"status04\";\n      } else if (this.props.layerPanelShow && this.props.modulesPanelShow && !this.props.settingPanelShow) {\n        this.layoutStatus.canvasPanel = \"status05\";\n      } else {\n        this.layoutStatus.canvasPanel = \"status06\";\n      } //判断设置面板状态\n\n\n      if (this.props.settingPanelShow) {\n        this.layoutStatus.settingPanel = \"status01\";\n      } else {\n        this.layoutStatus.settingPanel = \"status02\";\n      }\n    };\n\n    this.layoutStatus = {\n      layerPanel: \"status01\",\n      modulesPanel: \"status02\",\n      canvasPanel: \"status05\",\n      settingPanel: \"status01\",\n      visualistPanel: \"status02\"\n    };\n  }\n\n  componentWillMount() {\n    console.log(this.state.id);\n\n    if (this.state.id) {\n      setTimeout(() => {\n        this.props.getScreenData(testScreenData);\n      }, 500);\n    } else {} // if(this.props.history.location.query){\n    //     console.log(this.props.history.location.query.id)\n    // }\n    // console.log(testScreenData)\n    // this.props.getScreenData(testScreenData)\n    // setTimeout(()=>{\n    //     this.props.getScreenData(testScreenData)\n    // },500)\n\n  } // 判断各个面板的显示状态\n\n\n  render() {\n    this.getStatusByProps();\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"screen-editor-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(SettingPanel, {\n      status: this.layoutStatus.settingPanel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(LayerPanel, {\n      status: this.layoutStatus.layerPanel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(ModulesPanel, {\n      status: this.layoutStatus.modulesPanel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(CanvasPanel, {\n      status: this.layoutStatus.canvasPanel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const {\n    headerState\n  } = state;\n  return {\n    layerPanelShow: headerState.get(\"layerPanelShow\"),\n    modulesPanelShow: headerState.get(\"modulesPanelShow\"),\n    visualistPanelShow: headerState.get(\"visualistPanelShow\"),\n    settingPanelShow: headerState.get(\"settingPanelShow\")\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getScreenData(data) {\n      const action = getScreenData(data);\n      dispatch(action);\n    }\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ScreenEditor);","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/src/pages/ScreenEditor/index.js"],"names":["React","Component","Fragment","connect","Header","SettingPanel","LayerPanel","ModulesPanel","CanvasPanel","testScreenData","getScreenData","ScreenEditor","constructor","props","state","id","history","location","query","getStatusByProps","layerPanelShow","layoutStatus","layerPanel","modulesPanelShow","modulesPanel","settingPanelShow","canvasPanel","settingPanel","visualistPanel","componentWillMount","console","log","setTimeout","render","mapStateToProps","ownProps","headerState","get","visualistPanelShow","mapDispatchToProps","dispatch","data","action"],"mappings":"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","sourcesContent":["import React,{Component,Fragment} from 'react'\nimport { connect } from 'react-redux'\nimport '../../static/style/editor.styl';\nimport Header from '../../components/Editor/Header'\nimport SettingPanel from '../../components/Editor/SettingPanel'\nimport LayerPanel from '../../components/Editor/LayerPanel'\nimport ModulesPanel from '../../components/Editor/ModulesPanel'\nimport CanvasPanel from '../../components/Editor/CanvasPanel'\nimport { testScreenData } from '../../data/data'\nimport { getScreenData } from '../../store/actions/screen-actions'\nclass ScreenEditor extends Component{\n    constructor(props){\n        super(props)\n        this.layoutStatus = {\n            layerPanel:\"status01\",\n            modulesPanel:\"status02\",\n            canvasPanel:\"status05\",\n            settingPanel:\"status01\",\n            visualistPanel:\"status02\"\n        }\n    }\n    state = {\n        id:this.props.history.location.query\n    }\n    componentWillMount(){\n        console.log(this.state.id)\n        if(this.state.id){\n            setTimeout(()=>{\n                this.props.getScreenData(testScreenData)\n            },500)\n        }else{\n\n        }\n        // if(this.props.history.location.query){\n        //     console.log(this.props.history.location.query.id)\n        // }\n        // console.log(testScreenData)\n        // this.props.getScreenData(testScreenData)\n        // setTimeout(()=>{\n        //     this.props.getScreenData(testScreenData)\n        // },500)\n        \n    }\n    // 判断各个面板的显示状态\n    getStatusByProps = ()=>{\n        //判断图层状态\n        if(this.props.layerPanelShow){\n            this.layoutStatus.layerPanel=\"status01\"\n        }else{\n            this.layoutStatus.layerPanel=\"status02\"\n        }\n\n        // 判断组件面板状态\n        if(this.props.modulesPanelShow&&this.props.layerPanelShow){\n            this.layoutStatus.modulesPanel=\"status02\"\n        }else if(this.props.modulesPanelShow&&!this.props.layerPanelShow){\n            this.layoutStatus.modulesPanel=\"status01\"\n        }else{\n            this.layoutStatus.modulesPanel=\"status03\"\n        }\n\n        // 判断画布面板的状态\n        if(!this.props.layerPanelShow&&!this.props.modulesPanelShow&&!this.props.settingPanelShow){\n            this.layoutStatus.canvasPanel=\"status01\"\n        }else if(!this.props.layerPanelShow&&!this.props.modulesPanelShow&&this.props.settingPanelShow){\n            this.layoutStatus.canvasPanel=\"status02\"\n        }else if(this.props.layerPanelShow&&!this.props.modulesPanelShow&&!this.props.settingPanelShow){\n            this.layoutStatus.canvasPanel=\"status03\"\n        }else if(this.props.layerPanelShow&&!this.props.modulesPanelShow&&this.props.settingPanelShow){\n            this.layoutStatus.canvasPanel=\"status04\"\n        }else if(!this.props.layerPanelShow&&this.props.modulesPanelShow&&!this.props.settingPanelShow){\n            this.layoutStatus.canvasPanel=\"status03\"\n        }else if(!this.props.layerPanelShow&&this.props.modulesPanelShow&&this.props.settingPanelShow){\n            this.layoutStatus.canvasPanel=\"status04\"\n        }else if(this.props.layerPanelShow&&this.props.modulesPanelShow&&!this.props.settingPanelShow){\n            this.layoutStatus.canvasPanel=\"status05\"\n        }else{\n            this.layoutStatus.canvasPanel=\"status06\"\n        }\n\n        //判断设置面板状态\n        if(this.props.settingPanelShow){\n            this.layoutStatus.settingPanel=\"status01\"\n        }else{\n            this.layoutStatus.settingPanel=\"status02\"\n        }\n    }\n    \n    render(){\n        this.getStatusByProps()\n        return(\n            <Fragment>\n                <div className=\"screen-editor-page\">\n                    <Header />\n                    <SettingPanel status={this.layoutStatus.settingPanel} />\n                    <LayerPanel status={this.layoutStatus.layerPanel} />\n                    <ModulesPanel status={this.layoutStatus.modulesPanel} />\n                    <CanvasPanel status={this.layoutStatus.canvasPanel} />\n                </div>\n            </Fragment>\n        )\n    }\n}\nconst mapStateToProps = (state,ownProps)=>{\n    const { headerState } = state\n    return {\n        layerPanelShow:headerState.get(\"layerPanelShow\"),\n        modulesPanelShow:headerState.get(\"modulesPanelShow\"),\n        visualistPanelShow:headerState.get(\"visualistPanelShow\"),\n        settingPanelShow:headerState.get(\"settingPanelShow\")\n    }\n}\n\nconst mapDispatchToProps = dispatch=>{\n    return {\n        getScreenData(data){\n            const action = getScreenData(data)\n            dispatch(action)\n        }\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(ScreenEditor);"]},"metadata":{},"sourceType":"module"}