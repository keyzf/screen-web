{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as browser from '../../../base/browser/browser.js';\nimport { PageCoordinates } from '../editorDom.js';\nimport { PartFingerprints } from '../view/viewPart.js';\nimport { ViewLine } from '../viewParts/lines/viewLine.js';\nimport { Position } from '../../common/core/position.js';\nimport { Range as EditorRange } from '../../common/core/range.js';\nimport { CursorColumns } from '../../common/controller/cursorCommon.js';\nimport * as dom from '../../../base/browser/dom.js';\n\nvar PointerHandlerLastRenderData =\n/** @class */\nfunction () {\n  function PointerHandlerLastRenderData(lastViewCursorsRenderData, lastTextareaPosition) {\n    this.lastViewCursorsRenderData = lastViewCursorsRenderData;\n    this.lastTextareaPosition = lastTextareaPosition;\n  }\n\n  return PointerHandlerLastRenderData;\n}();\n\nexport { PointerHandlerLastRenderData };\n\nvar MouseTarget =\n/** @class */\nfunction () {\n  function MouseTarget(element, type, mouseColumn, position, range, detail) {\n    if (mouseColumn === void 0) {\n      mouseColumn = 0;\n    }\n\n    if (position === void 0) {\n      position = null;\n    }\n\n    if (range === void 0) {\n      range = null;\n    }\n\n    if (detail === void 0) {\n      detail = null;\n    }\n\n    this.element = element;\n    this.type = type;\n    this.mouseColumn = mouseColumn;\n    this.position = position;\n\n    if (!range && position) {\n      range = new EditorRange(position.lineNumber, position.column, position.lineNumber, position.column);\n    }\n\n    this.range = range;\n    this.detail = detail;\n  }\n\n  MouseTarget._typeToString = function (type) {\n    if (type === 1\n    /* TEXTAREA */\n    ) {\n        return 'TEXTAREA';\n      }\n\n    if (type === 2\n    /* GUTTER_GLYPH_MARGIN */\n    ) {\n        return 'GUTTER_GLYPH_MARGIN';\n      }\n\n    if (type === 3\n    /* GUTTER_LINE_NUMBERS */\n    ) {\n        return 'GUTTER_LINE_NUMBERS';\n      }\n\n    if (type === 4\n    /* GUTTER_LINE_DECORATIONS */\n    ) {\n        return 'GUTTER_LINE_DECORATIONS';\n      }\n\n    if (type === 5\n    /* GUTTER_VIEW_ZONE */\n    ) {\n        return 'GUTTER_VIEW_ZONE';\n      }\n\n    if (type === 6\n    /* CONTENT_TEXT */\n    ) {\n        return 'CONTENT_TEXT';\n      }\n\n    if (type === 7\n    /* CONTENT_EMPTY */\n    ) {\n        return 'CONTENT_EMPTY';\n      }\n\n    if (type === 8\n    /* CONTENT_VIEW_ZONE */\n    ) {\n        return 'CONTENT_VIEW_ZONE';\n      }\n\n    if (type === 9\n    /* CONTENT_WIDGET */\n    ) {\n        return 'CONTENT_WIDGET';\n      }\n\n    if (type === 10\n    /* OVERVIEW_RULER */\n    ) {\n        return 'OVERVIEW_RULER';\n      }\n\n    if (type === 11\n    /* SCROLLBAR */\n    ) {\n        return 'SCROLLBAR';\n      }\n\n    if (type === 12\n    /* OVERLAY_WIDGET */\n    ) {\n        return 'OVERLAY_WIDGET';\n      }\n\n    return 'UNKNOWN';\n  };\n\n  MouseTarget.toString = function (target) {\n    return this._typeToString(target.type) + ': ' + target.position + ' - ' + target.range + ' - ' + target.detail;\n  };\n\n  MouseTarget.prototype.toString = function () {\n    return MouseTarget.toString(this);\n  };\n\n  return MouseTarget;\n}();\n\nexport { MouseTarget };\n\nvar ElementPath =\n/** @class */\nfunction () {\n  function ElementPath() {}\n\n  ElementPath.isTextArea = function (path) {\n    return path.length === 2 && path[0] === 3\n    /* OverflowGuard */\n    && path[1] === 6\n    /* TextArea */\n    ;\n  };\n\n  ElementPath.isChildOfViewLines = function (path) {\n    return path.length >= 4 && path[0] === 3\n    /* OverflowGuard */\n    && path[3] === 7\n    /* ViewLines */\n    ;\n  };\n\n  ElementPath.isStrictChildOfViewLines = function (path) {\n    return path.length > 4 && path[0] === 3\n    /* OverflowGuard */\n    && path[3] === 7\n    /* ViewLines */\n    ;\n  };\n\n  ElementPath.isChildOfScrollableElement = function (path) {\n    return path.length >= 2 && path[0] === 3\n    /* OverflowGuard */\n    && path[1] === 5\n    /* ScrollableElement */\n    ;\n  };\n\n  ElementPath.isChildOfMinimap = function (path) {\n    return path.length >= 2 && path[0] === 3\n    /* OverflowGuard */\n    && path[1] === 8\n    /* Minimap */\n    ;\n  };\n\n  ElementPath.isChildOfContentWidgets = function (path) {\n    return path.length >= 4 && path[0] === 3\n    /* OverflowGuard */\n    && path[3] === 1\n    /* ContentWidgets */\n    ;\n  };\n\n  ElementPath.isChildOfOverflowingContentWidgets = function (path) {\n    return path.length >= 1 && path[0] === 2\n    /* OverflowingContentWidgets */\n    ;\n  };\n\n  ElementPath.isChildOfOverlayWidgets = function (path) {\n    return path.length >= 2 && path[0] === 3\n    /* OverflowGuard */\n    && path[1] === 4\n    /* OverlayWidgets */\n    ;\n  };\n\n  return ElementPath;\n}();\n\nvar HitTestContext =\n/** @class */\nfunction () {\n  function HitTestContext(context, viewHelper, lastRenderData) {\n    this.model = context.model;\n    var options = context.configuration.options;\n    this.layoutInfo = options.get(107\n    /* layoutInfo */\n    );\n    this.viewDomNode = viewHelper.viewDomNode;\n    this.lineHeight = options.get(49\n    /* lineHeight */\n    );\n    this.typicalHalfwidthCharacterWidth = options.get(34\n    /* fontInfo */\n    ).typicalHalfwidthCharacterWidth;\n    this.lastRenderData = lastRenderData;\n    this._context = context;\n    this._viewHelper = viewHelper;\n  }\n\n  HitTestContext.prototype.getZoneAtCoord = function (mouseVerticalOffset) {\n    return HitTestContext.getZoneAtCoord(this._context, mouseVerticalOffset);\n  };\n\n  HitTestContext.getZoneAtCoord = function (context, mouseVerticalOffset) {\n    // The target is either a view zone or the empty space after the last view-line\n    var viewZoneWhitespace = context.viewLayout.getWhitespaceAtVerticalOffset(mouseVerticalOffset);\n\n    if (viewZoneWhitespace) {\n      var viewZoneMiddle = viewZoneWhitespace.verticalOffset + viewZoneWhitespace.height / 2,\n          lineCount = context.model.getLineCount(),\n          positionBefore = null,\n          position = void 0,\n          positionAfter = null;\n\n      if (viewZoneWhitespace.afterLineNumber !== lineCount) {\n        // There are more lines after this view zone\n        positionAfter = new Position(viewZoneWhitespace.afterLineNumber + 1, 1);\n      }\n\n      if (viewZoneWhitespace.afterLineNumber > 0) {\n        // There are more lines above this view zone\n        positionBefore = new Position(viewZoneWhitespace.afterLineNumber, context.model.getLineMaxColumn(viewZoneWhitespace.afterLineNumber));\n      }\n\n      if (positionAfter === null) {\n        position = positionBefore;\n      } else if (positionBefore === null) {\n        position = positionAfter;\n      } else if (mouseVerticalOffset < viewZoneMiddle) {\n        position = positionBefore;\n      } else {\n        position = positionAfter;\n      }\n\n      return {\n        viewZoneId: viewZoneWhitespace.id,\n        afterLineNumber: viewZoneWhitespace.afterLineNumber,\n        positionBefore: positionBefore,\n        positionAfter: positionAfter,\n        position: position\n      };\n    }\n\n    return null;\n  };\n\n  HitTestContext.prototype.getFullLineRangeAtCoord = function (mouseVerticalOffset) {\n    if (this._context.viewLayout.isAfterLines(mouseVerticalOffset)) {\n      // Below the last line\n      var lineNumber_1 = this._context.model.getLineCount();\n\n      var maxLineColumn_1 = this._context.model.getLineMaxColumn(lineNumber_1);\n\n      return {\n        range: new EditorRange(lineNumber_1, maxLineColumn_1, lineNumber_1, maxLineColumn_1),\n        isAfterLines: true\n      };\n    }\n\n    var lineNumber = this._context.viewLayout.getLineNumberAtVerticalOffset(mouseVerticalOffset);\n\n    var maxLineColumn = this._context.model.getLineMaxColumn(lineNumber);\n\n    return {\n      range: new EditorRange(lineNumber, 1, lineNumber, maxLineColumn),\n      isAfterLines: false\n    };\n  };\n\n  HitTestContext.prototype.getLineNumberAtVerticalOffset = function (mouseVerticalOffset) {\n    return this._context.viewLayout.getLineNumberAtVerticalOffset(mouseVerticalOffset);\n  };\n\n  HitTestContext.prototype.isAfterLines = function (mouseVerticalOffset) {\n    return this._context.viewLayout.isAfterLines(mouseVerticalOffset);\n  };\n\n  HitTestContext.prototype.getVerticalOffsetForLineNumber = function (lineNumber) {\n    return this._context.viewLayout.getVerticalOffsetForLineNumber(lineNumber);\n  };\n\n  HitTestContext.prototype.findAttribute = function (element, attr) {\n    return HitTestContext._findAttribute(element, attr, this._viewHelper.viewDomNode);\n  };\n\n  HitTestContext._findAttribute = function (element, attr, stopAt) {\n    while (element && element !== document.body) {\n      if (element.hasAttribute && element.hasAttribute(attr)) {\n        return element.getAttribute(attr);\n      }\n\n      if (element === stopAt) {\n        return null;\n      }\n\n      element = element.parentNode;\n    }\n\n    return null;\n  };\n\n  HitTestContext.prototype.getLineWidth = function (lineNumber) {\n    return this._viewHelper.getLineWidth(lineNumber);\n  };\n\n  HitTestContext.prototype.visibleRangeForPosition = function (lineNumber, column) {\n    return this._viewHelper.visibleRangeForPosition(lineNumber, column);\n  };\n\n  HitTestContext.prototype.getPositionFromDOMInfo = function (spanNode, offset) {\n    return this._viewHelper.getPositionFromDOMInfo(spanNode, offset);\n  };\n\n  HitTestContext.prototype.getCurrentScrollTop = function () {\n    return this._context.viewLayout.getCurrentScrollTop();\n  };\n\n  HitTestContext.prototype.getCurrentScrollLeft = function () {\n    return this._context.viewLayout.getCurrentScrollLeft();\n  };\n\n  return HitTestContext;\n}();\n\nexport { HitTestContext };\n\nvar BareHitTestRequest =\n/** @class */\nfunction () {\n  function BareHitTestRequest(ctx, editorPos, pos) {\n    this.editorPos = editorPos;\n    this.pos = pos;\n    this.mouseVerticalOffset = Math.max(0, ctx.getCurrentScrollTop() + pos.y - editorPos.y);\n    this.mouseContentHorizontalOffset = ctx.getCurrentScrollLeft() + pos.x - editorPos.x - ctx.layoutInfo.contentLeft;\n    this.isInMarginArea = pos.x - editorPos.x < ctx.layoutInfo.contentLeft && pos.x - editorPos.x >= ctx.layoutInfo.glyphMarginLeft;\n    this.isInContentArea = !this.isInMarginArea;\n    this.mouseColumn = Math.max(0, MouseTargetFactory._getMouseColumn(this.mouseContentHorizontalOffset, ctx.typicalHalfwidthCharacterWidth));\n  }\n\n  return BareHitTestRequest;\n}();\n\nvar HitTestRequest =\n/** @class */\nfunction (_super) {\n  __extends(HitTestRequest, _super);\n\n  function HitTestRequest(ctx, editorPos, pos, target) {\n    var _this = _super.call(this, ctx, editorPos, pos) || this;\n\n    _this._ctx = ctx;\n\n    if (target) {\n      _this.target = target;\n      _this.targetPath = PartFingerprints.collect(target, ctx.viewDomNode);\n    } else {\n      _this.target = null;\n      _this.targetPath = new Uint8Array(0);\n    }\n\n    return _this;\n  }\n\n  HitTestRequest.prototype.toString = function () {\n    return \"pos(\" + this.pos.x + \",\" + this.pos.y + \"), editorPos(\" + this.editorPos.x + \",\" + this.editorPos.y + \"), mouseVerticalOffset: \" + this.mouseVerticalOffset + \", mouseContentHorizontalOffset: \" + this.mouseContentHorizontalOffset + \"\\n\\ttarget: \" + (this.target ? this.target.outerHTML : null);\n  };\n\n  HitTestRequest.prototype.fulfill = function (type, position, range, detail) {\n    if (position === void 0) {\n      position = null;\n    }\n\n    if (range === void 0) {\n      range = null;\n    }\n\n    if (detail === void 0) {\n      detail = null;\n    }\n\n    var mouseColumn = this.mouseColumn;\n\n    if (position && position.column < this._ctx.model.getLineMaxColumn(position.lineNumber)) {\n      // Most likely, the line contains foreign decorations...\n      mouseColumn = CursorColumns.visibleColumnFromColumn(this._ctx.model.getLineContent(position.lineNumber), position.column, this._ctx.model.getOptions().tabSize) + 1;\n    }\n\n    return new MouseTarget(this.target, type, mouseColumn, position, range, detail);\n  };\n\n  HitTestRequest.prototype.withTarget = function (target) {\n    return new HitTestRequest(this._ctx, this.editorPos, this.pos, target);\n  };\n\n  return HitTestRequest;\n}(BareHitTestRequest);\n\nvar EMPTY_CONTENT_AFTER_LINES = {\n  isAfterLines: true\n};\n\nfunction createEmptyContentDataInLines(horizontalDistanceToText) {\n  return {\n    isAfterLines: false,\n    horizontalDistanceToText: horizontalDistanceToText\n  };\n}\n\nvar MouseTargetFactory =\n/** @class */\nfunction () {\n  function MouseTargetFactory(context, viewHelper) {\n    this._context = context;\n    this._viewHelper = viewHelper;\n  }\n\n  MouseTargetFactory.prototype.mouseTargetIsWidget = function (e) {\n    var t = e.target;\n    var path = PartFingerprints.collect(t, this._viewHelper.viewDomNode); // Is it a content widget?\n\n    if (ElementPath.isChildOfContentWidgets(path) || ElementPath.isChildOfOverflowingContentWidgets(path)) {\n      return true;\n    } // Is it an overlay widget?\n\n\n    if (ElementPath.isChildOfOverlayWidgets(path)) {\n      return true;\n    }\n\n    return false;\n  };\n\n  MouseTargetFactory.prototype.createMouseTarget = function (lastRenderData, editorPos, pos, target) {\n    var ctx = new HitTestContext(this._context, this._viewHelper, lastRenderData);\n    var request = new HitTestRequest(ctx, editorPos, pos, target);\n\n    try {\n      var r = MouseTargetFactory._createMouseTarget(ctx, request, false); // console.log(r.toString());\n\n\n      return r;\n    } catch (err) {\n      // console.log(err);\n      return request.fulfill(0\n      /* UNKNOWN */\n      );\n    }\n  };\n\n  MouseTargetFactory._createMouseTarget = function (ctx, request, domHitTestExecuted) {\n    // console.log(`${domHitTestExecuted ? '=>' : ''}CAME IN REQUEST: ${request}`);\n    // First ensure the request has a target\n    if (request.target === null) {\n      if (domHitTestExecuted) {\n        // Still no target... and we have already executed hit test...\n        return request.fulfill(0\n        /* UNKNOWN */\n        );\n      }\n\n      var hitTestResult = MouseTargetFactory._doHitTest(ctx, request);\n\n      if (hitTestResult.position) {\n        return MouseTargetFactory.createMouseTargetFromHitTestPosition(ctx, request, hitTestResult.position.lineNumber, hitTestResult.position.column);\n      }\n\n      return this._createMouseTarget(ctx, request.withTarget(hitTestResult.hitTarget), true);\n    } // we know for a fact that request.target is not null\n\n\n    var resolvedRequest = request;\n    var result = null;\n    result = result || MouseTargetFactory._hitTestContentWidget(ctx, resolvedRequest);\n    result = result || MouseTargetFactory._hitTestOverlayWidget(ctx, resolvedRequest);\n    result = result || MouseTargetFactory._hitTestMinimap(ctx, resolvedRequest);\n    result = result || MouseTargetFactory._hitTestScrollbarSlider(ctx, resolvedRequest);\n    result = result || MouseTargetFactory._hitTestViewZone(ctx, resolvedRequest);\n    result = result || MouseTargetFactory._hitTestMargin(ctx, resolvedRequest);\n    result = result || MouseTargetFactory._hitTestViewCursor(ctx, resolvedRequest);\n    result = result || MouseTargetFactory._hitTestTextArea(ctx, resolvedRequest);\n    result = result || MouseTargetFactory._hitTestViewLines(ctx, resolvedRequest, domHitTestExecuted);\n    result = result || MouseTargetFactory._hitTestScrollbar(ctx, resolvedRequest);\n    return result || request.fulfill(0\n    /* UNKNOWN */\n    );\n  };\n\n  MouseTargetFactory._hitTestContentWidget = function (ctx, request) {\n    // Is it a content widget?\n    if (ElementPath.isChildOfContentWidgets(request.targetPath) || ElementPath.isChildOfOverflowingContentWidgets(request.targetPath)) {\n      var widgetId = ctx.findAttribute(request.target, 'widgetId');\n\n      if (widgetId) {\n        return request.fulfill(9\n        /* CONTENT_WIDGET */\n        , null, null, widgetId);\n      } else {\n        return request.fulfill(0\n        /* UNKNOWN */\n        );\n      }\n    }\n\n    return null;\n  };\n\n  MouseTargetFactory._hitTestOverlayWidget = function (ctx, request) {\n    // Is it an overlay widget?\n    if (ElementPath.isChildOfOverlayWidgets(request.targetPath)) {\n      var widgetId = ctx.findAttribute(request.target, 'widgetId');\n\n      if (widgetId) {\n        return request.fulfill(12\n        /* OVERLAY_WIDGET */\n        , null, null, widgetId);\n      } else {\n        return request.fulfill(0\n        /* UNKNOWN */\n        );\n      }\n    }\n\n    return null;\n  };\n\n  MouseTargetFactory._hitTestViewCursor = function (ctx, request) {\n    if (request.target) {\n      // Check if we've hit a painted cursor\n      var lastViewCursorsRenderData = ctx.lastRenderData.lastViewCursorsRenderData;\n\n      for (var _i = 0, lastViewCursorsRenderData_1 = lastViewCursorsRenderData; _i < lastViewCursorsRenderData_1.length; _i++) {\n        var d = lastViewCursorsRenderData_1[_i];\n\n        if (request.target === d.domNode) {\n          return request.fulfill(6\n          /* CONTENT_TEXT */\n          , d.position);\n        }\n      }\n    }\n\n    if (request.isInContentArea) {\n      // Edge has a bug when hit-testing the exact position of a cursor,\n      // instead of returning the correct dom node, it returns the\n      // first or last rendered view line dom node, therefore help it out\n      // and first check if we are on top of a cursor\n      var lastViewCursorsRenderData = ctx.lastRenderData.lastViewCursorsRenderData;\n      var mouseContentHorizontalOffset = request.mouseContentHorizontalOffset;\n      var mouseVerticalOffset = request.mouseVerticalOffset;\n\n      for (var _a = 0, lastViewCursorsRenderData_2 = lastViewCursorsRenderData; _a < lastViewCursorsRenderData_2.length; _a++) {\n        var d = lastViewCursorsRenderData_2[_a];\n\n        if (mouseContentHorizontalOffset < d.contentLeft) {\n          // mouse position is to the left of the cursor\n          continue;\n        }\n\n        if (mouseContentHorizontalOffset > d.contentLeft + d.width) {\n          // mouse position is to the right of the cursor\n          continue;\n        }\n\n        var cursorVerticalOffset = ctx.getVerticalOffsetForLineNumber(d.position.lineNumber);\n\n        if (cursorVerticalOffset <= mouseVerticalOffset && mouseVerticalOffset <= cursorVerticalOffset + d.height) {\n          return request.fulfill(6\n          /* CONTENT_TEXT */\n          , d.position);\n        }\n      }\n    }\n\n    return null;\n  };\n\n  MouseTargetFactory._hitTestViewZone = function (ctx, request) {\n    var viewZoneData = ctx.getZoneAtCoord(request.mouseVerticalOffset);\n\n    if (viewZoneData) {\n      var mouseTargetType = request.isInContentArea ? 8\n      /* CONTENT_VIEW_ZONE */\n      : 5\n      /* GUTTER_VIEW_ZONE */\n      ;\n      return request.fulfill(mouseTargetType, viewZoneData.position, null, viewZoneData);\n    }\n\n    return null;\n  };\n\n  MouseTargetFactory._hitTestTextArea = function (ctx, request) {\n    // Is it the textarea?\n    if (ElementPath.isTextArea(request.targetPath)) {\n      if (ctx.lastRenderData.lastTextareaPosition) {\n        return request.fulfill(6\n        /* CONTENT_TEXT */\n        , ctx.lastRenderData.lastTextareaPosition);\n      }\n\n      return request.fulfill(1\n      /* TEXTAREA */\n      , ctx.lastRenderData.lastTextareaPosition);\n    }\n\n    return null;\n  };\n\n  MouseTargetFactory._hitTestMargin = function (ctx, request) {\n    if (request.isInMarginArea) {\n      var res = ctx.getFullLineRangeAtCoord(request.mouseVerticalOffset);\n      var pos = res.range.getStartPosition();\n      var offset = Math.abs(request.pos.x - request.editorPos.x);\n      var detail = {\n        isAfterLines: res.isAfterLines,\n        glyphMarginLeft: ctx.layoutInfo.glyphMarginLeft,\n        glyphMarginWidth: ctx.layoutInfo.glyphMarginWidth,\n        lineNumbersWidth: ctx.layoutInfo.lineNumbersWidth,\n        offsetX: offset\n      };\n      offset -= ctx.layoutInfo.glyphMarginLeft;\n\n      if (offset <= ctx.layoutInfo.glyphMarginWidth) {\n        // On the glyph margin\n        return request.fulfill(2\n        /* GUTTER_GLYPH_MARGIN */\n        , pos, res.range, detail);\n      }\n\n      offset -= ctx.layoutInfo.glyphMarginWidth;\n\n      if (offset <= ctx.layoutInfo.lineNumbersWidth) {\n        // On the line numbers\n        return request.fulfill(3\n        /* GUTTER_LINE_NUMBERS */\n        , pos, res.range, detail);\n      }\n\n      offset -= ctx.layoutInfo.lineNumbersWidth; // On the line decorations\n\n      return request.fulfill(4\n      /* GUTTER_LINE_DECORATIONS */\n      , pos, res.range, detail);\n    }\n\n    return null;\n  };\n\n  MouseTargetFactory._hitTestViewLines = function (ctx, request, domHitTestExecuted) {\n    if (!ElementPath.isChildOfViewLines(request.targetPath)) {\n      return null;\n    } // Check if it is below any lines and any view zones\n\n\n    if (ctx.isAfterLines(request.mouseVerticalOffset)) {\n      // This most likely indicates it happened after the last view-line\n      var lineCount = ctx.model.getLineCount();\n      var maxLineColumn = ctx.model.getLineMaxColumn(lineCount);\n      return request.fulfill(7\n      /* CONTENT_EMPTY */\n      , new Position(lineCount, maxLineColumn), undefined, EMPTY_CONTENT_AFTER_LINES);\n    }\n\n    if (domHitTestExecuted) {\n      // Check if we are hitting a view-line (can happen in the case of inline decorations on empty lines)\n      // See https://github.com/Microsoft/vscode/issues/46942\n      if (ElementPath.isStrictChildOfViewLines(request.targetPath)) {\n        var lineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n\n        if (ctx.model.getLineLength(lineNumber) === 0) {\n          var lineWidth_1 = ctx.getLineWidth(lineNumber);\n          var detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth_1);\n          return request.fulfill(7\n          /* CONTENT_EMPTY */\n          , new Position(lineNumber, 1), undefined, detail);\n        }\n\n        var lineWidth = ctx.getLineWidth(lineNumber);\n\n        if (request.mouseContentHorizontalOffset >= lineWidth) {\n          var detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\n          var pos = new Position(lineNumber, ctx.model.getLineMaxColumn(lineNumber));\n          return request.fulfill(7\n          /* CONTENT_EMPTY */\n          , pos, undefined, detail);\n        }\n      } // We have already executed hit test...\n\n\n      return request.fulfill(0\n      /* UNKNOWN */\n      );\n    }\n\n    var hitTestResult = MouseTargetFactory._doHitTest(ctx, request);\n\n    if (hitTestResult.position) {\n      return MouseTargetFactory.createMouseTargetFromHitTestPosition(ctx, request, hitTestResult.position.lineNumber, hitTestResult.position.column);\n    }\n\n    return this._createMouseTarget(ctx, request.withTarget(hitTestResult.hitTarget), true);\n  };\n\n  MouseTargetFactory._hitTestMinimap = function (ctx, request) {\n    if (ElementPath.isChildOfMinimap(request.targetPath)) {\n      var possibleLineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n      var maxColumn = ctx.model.getLineMaxColumn(possibleLineNumber);\n      return request.fulfill(11\n      /* SCROLLBAR */\n      , new Position(possibleLineNumber, maxColumn));\n    }\n\n    return null;\n  };\n\n  MouseTargetFactory._hitTestScrollbarSlider = function (ctx, request) {\n    if (ElementPath.isChildOfScrollableElement(request.targetPath)) {\n      if (request.target && request.target.nodeType === 1) {\n        var className = request.target.className;\n\n        if (className && /\\b(slider|scrollbar)\\b/.test(className)) {\n          var possibleLineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n          var maxColumn = ctx.model.getLineMaxColumn(possibleLineNumber);\n          return request.fulfill(11\n          /* SCROLLBAR */\n          , new Position(possibleLineNumber, maxColumn));\n        }\n      }\n    }\n\n    return null;\n  };\n\n  MouseTargetFactory._hitTestScrollbar = function (ctx, request) {\n    // Is it the overview ruler?\n    // Is it a child of the scrollable element?\n    if (ElementPath.isChildOfScrollableElement(request.targetPath)) {\n      var possibleLineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n      var maxColumn = ctx.model.getLineMaxColumn(possibleLineNumber);\n      return request.fulfill(11\n      /* SCROLLBAR */\n      , new Position(possibleLineNumber, maxColumn));\n    }\n\n    return null;\n  };\n\n  MouseTargetFactory.prototype.getMouseColumn = function (editorPos, pos) {\n    var options = this._context.configuration.options;\n    var layoutInfo = options.get(107\n    /* layoutInfo */\n    );\n    var mouseContentHorizontalOffset = this._context.viewLayout.getCurrentScrollLeft() + pos.x - editorPos.x - layoutInfo.contentLeft;\n    return MouseTargetFactory._getMouseColumn(mouseContentHorizontalOffset, options.get(34\n    /* fontInfo */\n    ).typicalHalfwidthCharacterWidth);\n  };\n\n  MouseTargetFactory._getMouseColumn = function (mouseContentHorizontalOffset, typicalHalfwidthCharacterWidth) {\n    if (mouseContentHorizontalOffset < 0) {\n      return 1;\n    }\n\n    var chars = Math.round(mouseContentHorizontalOffset / typicalHalfwidthCharacterWidth);\n    return chars + 1;\n  };\n\n  MouseTargetFactory.createMouseTargetFromHitTestPosition = function (ctx, request, lineNumber, column) {\n    var pos = new Position(lineNumber, column);\n    var lineWidth = ctx.getLineWidth(lineNumber);\n\n    if (request.mouseContentHorizontalOffset > lineWidth) {\n      if (browser.isEdge && pos.column === 1) {\n        // See https://github.com/Microsoft/vscode/issues/10875\n        var detail_1 = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\n        return request.fulfill(7\n        /* CONTENT_EMPTY */\n        , new Position(lineNumber, ctx.model.getLineMaxColumn(lineNumber)), undefined, detail_1);\n      }\n\n      var detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\n      return request.fulfill(7\n      /* CONTENT_EMPTY */\n      , pos, undefined, detail);\n    }\n\n    var visibleRange = ctx.visibleRangeForPosition(lineNumber, column);\n\n    if (!visibleRange) {\n      return request.fulfill(0\n      /* UNKNOWN */\n      , pos);\n    }\n\n    var columnHorizontalOffset = visibleRange.left;\n\n    if (request.mouseContentHorizontalOffset === columnHorizontalOffset) {\n      return request.fulfill(6\n      /* CONTENT_TEXT */\n      , pos);\n    }\n\n    var points = [];\n    points.push({\n      offset: visibleRange.left,\n      column: column\n    });\n\n    if (column > 1) {\n      var visibleRange_1 = ctx.visibleRangeForPosition(lineNumber, column - 1);\n\n      if (visibleRange_1) {\n        points.push({\n          offset: visibleRange_1.left,\n          column: column - 1\n        });\n      }\n    }\n\n    var lineMaxColumn = ctx.model.getLineMaxColumn(lineNumber);\n\n    if (column < lineMaxColumn) {\n      var visibleRange_2 = ctx.visibleRangeForPosition(lineNumber, column + 1);\n\n      if (visibleRange_2) {\n        points.push({\n          offset: visibleRange_2.left,\n          column: column + 1\n        });\n      }\n    }\n\n    points.sort(function (a, b) {\n      return a.offset - b.offset;\n    });\n\n    for (var i = 1; i < points.length; i++) {\n      var prev = points[i - 1];\n      var curr = points[i];\n\n      if (prev.offset <= request.mouseContentHorizontalOffset && request.mouseContentHorizontalOffset <= curr.offset) {\n        var rng = new EditorRange(lineNumber, prev.column, lineNumber, curr.column);\n        return request.fulfill(6\n        /* CONTENT_TEXT */\n        , pos, rng);\n      }\n    }\n\n    return request.fulfill(6\n    /* CONTENT_TEXT */\n    , pos);\n  };\n  /**\r\n   * Most probably WebKit browsers and Edge\r\n   */\n\n\n  MouseTargetFactory._doHitTestWithCaretRangeFromPoint = function (ctx, request) {\n    // In Chrome, especially on Linux it is possible to click between lines,\n    // so try to adjust the `hity` below so that it lands in the center of a line\n    var lineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n    var lineVerticalOffset = ctx.getVerticalOffsetForLineNumber(lineNumber);\n    var lineCenteredVerticalOffset = lineVerticalOffset + Math.floor(ctx.lineHeight / 2);\n    var adjustedPageY = request.pos.y + (lineCenteredVerticalOffset - request.mouseVerticalOffset);\n\n    if (adjustedPageY <= request.editorPos.y) {\n      adjustedPageY = request.editorPos.y + 1;\n    }\n\n    if (adjustedPageY >= request.editorPos.y + ctx.layoutInfo.height) {\n      adjustedPageY = request.editorPos.y + ctx.layoutInfo.height - 1;\n    }\n\n    var adjustedPage = new PageCoordinates(request.pos.x, adjustedPageY);\n\n    var r = this._actualDoHitTestWithCaretRangeFromPoint(ctx, adjustedPage.toClientCoordinates());\n\n    if (r.position) {\n      return r;\n    } // Also try to hit test without the adjustment (for the edge cases that we are near the top or bottom)\n\n\n    return this._actualDoHitTestWithCaretRangeFromPoint(ctx, request.pos.toClientCoordinates());\n  };\n\n  MouseTargetFactory._actualDoHitTestWithCaretRangeFromPoint = function (ctx, coords) {\n    var shadowRoot = dom.getShadowRoot(ctx.viewDomNode);\n    var range;\n\n    if (shadowRoot) {\n      if (typeof shadowRoot.caretRangeFromPoint === 'undefined') {\n        range = shadowCaretRangeFromPoint(shadowRoot, coords.clientX, coords.clientY);\n      } else {\n        range = shadowRoot.caretRangeFromPoint(coords.clientX, coords.clientY);\n      }\n    } else {\n      range = document.caretRangeFromPoint(coords.clientX, coords.clientY);\n    }\n\n    if (!range || !range.startContainer) {\n      return {\n        position: null,\n        hitTarget: null\n      };\n    } // Chrome always hits a TEXT_NODE, while Edge sometimes hits a token span\n\n\n    var startContainer = range.startContainer;\n    var hitTarget = null;\n\n    if (startContainer.nodeType === startContainer.TEXT_NODE) {\n      // startContainer is expected to be the token text\n      var parent1 = startContainer.parentNode; // expected to be the token span\n\n      var parent2 = parent1 ? parent1.parentNode : null; // expected to be the view line container span\n\n      var parent3 = parent2 ? parent2.parentNode : null; // expected to be the view line div\n\n      var parent3ClassName = parent3 && parent3.nodeType === parent3.ELEMENT_NODE ? parent3.className : null;\n\n      if (parent3ClassName === ViewLine.CLASS_NAME) {\n        var p = ctx.getPositionFromDOMInfo(parent1, range.startOffset);\n        return {\n          position: p,\n          hitTarget: null\n        };\n      } else {\n        hitTarget = startContainer.parentNode;\n      }\n    } else if (startContainer.nodeType === startContainer.ELEMENT_NODE) {\n      // startContainer is expected to be the token span\n      var parent1 = startContainer.parentNode; // expected to be the view line container span\n\n      var parent2 = parent1 ? parent1.parentNode : null; // expected to be the view line div\n\n      var parent2ClassName = parent2 && parent2.nodeType === parent2.ELEMENT_NODE ? parent2.className : null;\n\n      if (parent2ClassName === ViewLine.CLASS_NAME) {\n        var p = ctx.getPositionFromDOMInfo(startContainer, startContainer.textContent.length);\n        return {\n          position: p,\n          hitTarget: null\n        };\n      } else {\n        hitTarget = startContainer;\n      }\n    }\n\n    return {\n      position: null,\n      hitTarget: hitTarget\n    };\n  };\n  /**\r\n   * Most probably Gecko\r\n   */\n\n\n  MouseTargetFactory._doHitTestWithCaretPositionFromPoint = function (ctx, coords) {\n    var hitResult = document.caretPositionFromPoint(coords.clientX, coords.clientY);\n\n    if (hitResult.offsetNode.nodeType === hitResult.offsetNode.TEXT_NODE) {\n      // offsetNode is expected to be the token text\n      var parent1 = hitResult.offsetNode.parentNode; // expected to be the token span\n\n      var parent2 = parent1 ? parent1.parentNode : null; // expected to be the view line container span\n\n      var parent3 = parent2 ? parent2.parentNode : null; // expected to be the view line div\n\n      var parent3ClassName = parent3 && parent3.nodeType === parent3.ELEMENT_NODE ? parent3.className : null;\n\n      if (parent3ClassName === ViewLine.CLASS_NAME) {\n        var p = ctx.getPositionFromDOMInfo(hitResult.offsetNode.parentNode, hitResult.offset);\n        return {\n          position: p,\n          hitTarget: null\n        };\n      } else {\n        return {\n          position: null,\n          hitTarget: hitResult.offsetNode.parentNode\n        };\n      }\n    }\n\n    return {\n      position: null,\n      hitTarget: hitResult.offsetNode\n    };\n  };\n  /**\r\n   * Most probably IE\r\n   */\n\n\n  MouseTargetFactory._doHitTestWithMoveToPoint = function (ctx, coords) {\n    var resultPosition = null;\n    var resultHitTarget = null;\n    var textRange = document.body.createTextRange();\n\n    try {\n      textRange.moveToPoint(coords.clientX, coords.clientY);\n    } catch (err) {\n      return {\n        position: null,\n        hitTarget: null\n      };\n    }\n\n    textRange.collapse(true); // Now, let's do our best to figure out what we hit :)\n\n    var parentElement = textRange ? textRange.parentElement() : null;\n    var parent1 = parentElement ? parentElement.parentNode : null;\n    var parent2 = parent1 ? parent1.parentNode : null;\n    var parent2ClassName = parent2 && parent2.nodeType === parent2.ELEMENT_NODE ? parent2.className : '';\n\n    if (parent2ClassName === ViewLine.CLASS_NAME) {\n      var rangeToContainEntireSpan = textRange.duplicate();\n      rangeToContainEntireSpan.moveToElementText(parentElement);\n      rangeToContainEntireSpan.setEndPoint('EndToStart', textRange);\n      resultPosition = ctx.getPositionFromDOMInfo(parentElement, rangeToContainEntireSpan.text.length); // Move range out of the span node, IE doesn't like having many ranges in\n      // the same spot and will act badly for lines containing dashes ('-')\n\n      rangeToContainEntireSpan.moveToElementText(ctx.viewDomNode);\n    } else {\n      // Looks like we've hit the hover or something foreign\n      resultHitTarget = parentElement;\n    } // Move range out of the span node, IE doesn't like having many ranges in\n    // the same spot and will act badly for lines containing dashes ('-')\n\n\n    textRange.moveToElementText(ctx.viewDomNode);\n    return {\n      position: resultPosition,\n      hitTarget: resultHitTarget\n    };\n  };\n\n  MouseTargetFactory._doHitTest = function (ctx, request) {\n    // State of the art (18.10.2012):\n    // The spec says browsers should support document.caretPositionFromPoint, but nobody implemented it (http://dev.w3.org/csswg/cssom-view/)\n    // Gecko:\n    //    - they tried to implement it once, but failed: https://bugzilla.mozilla.org/show_bug.cgi?id=654352\n    //    - however, they do give out rangeParent/rangeOffset properties on mouse events\n    // Webkit:\n    //    - they have implemented a previous version of the spec which was using document.caretRangeFromPoint\n    // IE:\n    //    - they have a proprietary method on ranges, moveToPoint: https://msdn.microsoft.com/en-us/library/ie/ms536632(v=vs.85).aspx\n    // 24.08.2016: Edge has added WebKit's document.caretRangeFromPoint, but it is quite buggy\n    //    - when hit testing the cursor it returns the first or the last line in the viewport\n    //    - it inconsistently hits text nodes or span nodes, while WebKit only hits text nodes\n    //    - when toggling render whitespace on, and hit testing in the empty content after a line, it always hits offset 0 of the first span of the line\n    // Thank you browsers for making this so 'easy' :)\n    if (typeof document.caretRangeFromPoint === 'function') {\n      return this._doHitTestWithCaretRangeFromPoint(ctx, request);\n    } else if (document.caretPositionFromPoint) {\n      return this._doHitTestWithCaretPositionFromPoint(ctx, request.pos.toClientCoordinates());\n    } else if (document.body.createTextRange) {\n      return this._doHitTestWithMoveToPoint(ctx, request.pos.toClientCoordinates());\n    }\n\n    return {\n      position: null,\n      hitTarget: null\n    };\n  };\n\n  return MouseTargetFactory;\n}();\n\nexport { MouseTargetFactory };\nexport function shadowCaretRangeFromPoint(shadowRoot, x, y) {\n  var range = document.createRange(); // Get the element under the point\n\n  var el = shadowRoot.elementFromPoint(x, y);\n\n  if (el !== null) {\n    // Get the last child of the element until its firstChild is a text node\n    // This assumes that the pointer is on the right of the line, out of the tokens\n    // and that we want to get the offset of the last token of the line\n    while (el && el.firstChild && el.firstChild.nodeType !== el.firstChild.TEXT_NODE) {\n      el = el.lastChild;\n    } // Grab its rect\n\n\n    var rect = el.getBoundingClientRect(); // And its font\n\n    var font = window.getComputedStyle(el, null).getPropertyValue('font'); // And also its txt content\n\n    var text = el.innerText; // Position the pixel cursor at the left of the element\n\n    var pixelCursor = rect.left;\n    var offset = 0;\n    var step = void 0; // If the point is on the right of the box put the cursor after the last character\n\n    if (x > rect.left + rect.width) {\n      offset = text.length;\n    } else {\n      var charWidthReader = CharWidthReader.getInstance(); // Goes through all the characters of the innerText, and checks if the x of the point\n      // belongs to the character.\n\n      for (var i = 0; i < text.length + 1; i++) {\n        // The step is half the width of the character\n        step = charWidthReader.getCharWidth(text.charAt(i), font) / 2; // Move to the center of the character\n\n        pixelCursor += step; // If the x of the point is smaller that the position of the cursor, the point is over that character\n\n        if (x < pixelCursor) {\n          offset = i;\n          break;\n        } // Move between the current character and the next\n\n\n        pixelCursor += step;\n      }\n    } // Creates a range with the text node of the element and set the offset found\n\n\n    range.setStart(el.firstChild, offset);\n    range.setEnd(el.firstChild, offset);\n  }\n\n  return range;\n}\n\nvar CharWidthReader =\n/** @class */\nfunction () {\n  function CharWidthReader() {\n    this._cache = {};\n    this._canvas = document.createElement('canvas');\n  }\n\n  CharWidthReader.getInstance = function () {\n    if (!CharWidthReader._INSTANCE) {\n      CharWidthReader._INSTANCE = new CharWidthReader();\n    }\n\n    return CharWidthReader._INSTANCE;\n  };\n\n  CharWidthReader.prototype.getCharWidth = function (char, font) {\n    var cacheKey = char + font;\n\n    if (this._cache[cacheKey]) {\n      return this._cache[cacheKey];\n    }\n\n    var context = this._canvas.getContext('2d');\n\n    context.font = font;\n    var metrics = context.measureText(char);\n    var width = metrics.width;\n    this._cache[cacheKey] = width;\n    return width;\n  };\n\n  CharWidthReader._INSTANCE = null;\n  return CharWidthReader;\n}();","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/browser/controller/mouseTarget.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","browser","PageCoordinates","PartFingerprints","ViewLine","Position","Range","EditorRange","CursorColumns","dom","PointerHandlerLastRenderData","lastViewCursorsRenderData","lastTextareaPosition","MouseTarget","element","type","mouseColumn","position","range","detail","lineNumber","column","_typeToString","toString","target","ElementPath","isTextArea","path","length","isChildOfViewLines","isStrictChildOfViewLines","isChildOfScrollableElement","isChildOfMinimap","isChildOfContentWidgets","isChildOfOverflowingContentWidgets","isChildOfOverlayWidgets","HitTestContext","context","viewHelper","lastRenderData","model","options","configuration","layoutInfo","get","viewDomNode","lineHeight","typicalHalfwidthCharacterWidth","_context","_viewHelper","getZoneAtCoord","mouseVerticalOffset","viewZoneWhitespace","viewLayout","getWhitespaceAtVerticalOffset","viewZoneMiddle","verticalOffset","height","lineCount","getLineCount","positionBefore","positionAfter","afterLineNumber","getLineMaxColumn","viewZoneId","id","getFullLineRangeAtCoord","isAfterLines","lineNumber_1","maxLineColumn_1","getLineNumberAtVerticalOffset","maxLineColumn","getVerticalOffsetForLineNumber","findAttribute","attr","_findAttribute","stopAt","document","body","hasAttribute","getAttribute","parentNode","getLineWidth","visibleRangeForPosition","getPositionFromDOMInfo","spanNode","offset","getCurrentScrollTop","getCurrentScrollLeft","BareHitTestRequest","ctx","editorPos","pos","Math","max","y","mouseContentHorizontalOffset","x","contentLeft","isInMarginArea","glyphMarginLeft","isInContentArea","MouseTargetFactory","_getMouseColumn","HitTestRequest","_super","_this","call","_ctx","targetPath","collect","Uint8Array","outerHTML","fulfill","visibleColumnFromColumn","getLineContent","getOptions","tabSize","withTarget","EMPTY_CONTENT_AFTER_LINES","createEmptyContentDataInLines","horizontalDistanceToText","mouseTargetIsWidget","e","t","createMouseTarget","request","r","_createMouseTarget","err","domHitTestExecuted","hitTestResult","_doHitTest","createMouseTargetFromHitTestPosition","hitTarget","resolvedRequest","result","_hitTestContentWidget","_hitTestOverlayWidget","_hitTestMinimap","_hitTestScrollbarSlider","_hitTestViewZone","_hitTestMargin","_hitTestViewCursor","_hitTestTextArea","_hitTestViewLines","_hitTestScrollbar","widgetId","_i","lastViewCursorsRenderData_1","domNode","_a","lastViewCursorsRenderData_2","width","cursorVerticalOffset","viewZoneData","mouseTargetType","res","getStartPosition","abs","glyphMarginWidth","lineNumbersWidth","offsetX","undefined","getLineLength","lineWidth_1","lineWidth","possibleLineNumber","maxColumn","nodeType","className","test","getMouseColumn","chars","round","isEdge","detail_1","visibleRange","columnHorizontalOffset","left","points","push","visibleRange_1","lineMaxColumn","visibleRange_2","sort","a","i","prev","curr","rng","_doHitTestWithCaretRangeFromPoint","lineVerticalOffset","lineCenteredVerticalOffset","floor","adjustedPageY","adjustedPage","_actualDoHitTestWithCaretRangeFromPoint","toClientCoordinates","coords","shadowRoot","getShadowRoot","caretRangeFromPoint","shadowCaretRangeFromPoint","clientX","clientY","startContainer","TEXT_NODE","parent1","parent2","parent3","parent3ClassName","ELEMENT_NODE","CLASS_NAME","startOffset","parent2ClassName","textContent","_doHitTestWithCaretPositionFromPoint","hitResult","caretPositionFromPoint","offsetNode","_doHitTestWithMoveToPoint","resultPosition","resultHitTarget","textRange","createTextRange","moveToPoint","collapse","parentElement","rangeToContainEntireSpan","duplicate","moveToElementText","setEndPoint","text","createRange","el","elementFromPoint","firstChild","lastChild","rect","getBoundingClientRect","font","window","getComputedStyle","getPropertyValue","innerText","pixelCursor","step","charWidthReader","CharWidthReader","getInstance","getCharWidth","charAt","setStart","setEnd","_cache","_canvas","createElement","_INSTANCE","char","cacheKey","getContext","metrics","measureText"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport * as browser from '../../../base/browser/browser.js';\r\nimport { PageCoordinates } from '../editorDom.js';\r\nimport { PartFingerprints } from '../view/viewPart.js';\r\nimport { ViewLine } from '../viewParts/lines/viewLine.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range as EditorRange } from '../../common/core/range.js';\r\nimport { CursorColumns } from '../../common/controller/cursorCommon.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nvar PointerHandlerLastRenderData = /** @class */ (function () {\r\n    function PointerHandlerLastRenderData(lastViewCursorsRenderData, lastTextareaPosition) {\r\n        this.lastViewCursorsRenderData = lastViewCursorsRenderData;\r\n        this.lastTextareaPosition = lastTextareaPosition;\r\n    }\r\n    return PointerHandlerLastRenderData;\r\n}());\r\nexport { PointerHandlerLastRenderData };\r\nvar MouseTarget = /** @class */ (function () {\r\n    function MouseTarget(element, type, mouseColumn, position, range, detail) {\r\n        if (mouseColumn === void 0) { mouseColumn = 0; }\r\n        if (position === void 0) { position = null; }\r\n        if (range === void 0) { range = null; }\r\n        if (detail === void 0) { detail = null; }\r\n        this.element = element;\r\n        this.type = type;\r\n        this.mouseColumn = mouseColumn;\r\n        this.position = position;\r\n        if (!range && position) {\r\n            range = new EditorRange(position.lineNumber, position.column, position.lineNumber, position.column);\r\n        }\r\n        this.range = range;\r\n        this.detail = detail;\r\n    }\r\n    MouseTarget._typeToString = function (type) {\r\n        if (type === 1 /* TEXTAREA */) {\r\n            return 'TEXTAREA';\r\n        }\r\n        if (type === 2 /* GUTTER_GLYPH_MARGIN */) {\r\n            return 'GUTTER_GLYPH_MARGIN';\r\n        }\r\n        if (type === 3 /* GUTTER_LINE_NUMBERS */) {\r\n            return 'GUTTER_LINE_NUMBERS';\r\n        }\r\n        if (type === 4 /* GUTTER_LINE_DECORATIONS */) {\r\n            return 'GUTTER_LINE_DECORATIONS';\r\n        }\r\n        if (type === 5 /* GUTTER_VIEW_ZONE */) {\r\n            return 'GUTTER_VIEW_ZONE';\r\n        }\r\n        if (type === 6 /* CONTENT_TEXT */) {\r\n            return 'CONTENT_TEXT';\r\n        }\r\n        if (type === 7 /* CONTENT_EMPTY */) {\r\n            return 'CONTENT_EMPTY';\r\n        }\r\n        if (type === 8 /* CONTENT_VIEW_ZONE */) {\r\n            return 'CONTENT_VIEW_ZONE';\r\n        }\r\n        if (type === 9 /* CONTENT_WIDGET */) {\r\n            return 'CONTENT_WIDGET';\r\n        }\r\n        if (type === 10 /* OVERVIEW_RULER */) {\r\n            return 'OVERVIEW_RULER';\r\n        }\r\n        if (type === 11 /* SCROLLBAR */) {\r\n            return 'SCROLLBAR';\r\n        }\r\n        if (type === 12 /* OVERLAY_WIDGET */) {\r\n            return 'OVERLAY_WIDGET';\r\n        }\r\n        return 'UNKNOWN';\r\n    };\r\n    MouseTarget.toString = function (target) {\r\n        return this._typeToString(target.type) + ': ' + target.position + ' - ' + target.range + ' - ' + target.detail;\r\n    };\r\n    MouseTarget.prototype.toString = function () {\r\n        return MouseTarget.toString(this);\r\n    };\r\n    return MouseTarget;\r\n}());\r\nexport { MouseTarget };\r\nvar ElementPath = /** @class */ (function () {\r\n    function ElementPath() {\r\n    }\r\n    ElementPath.isTextArea = function (path) {\r\n        return (path.length === 2\r\n            && path[0] === 3 /* OverflowGuard */\r\n            && path[1] === 6 /* TextArea */);\r\n    };\r\n    ElementPath.isChildOfViewLines = function (path) {\r\n        return (path.length >= 4\r\n            && path[0] === 3 /* OverflowGuard */\r\n            && path[3] === 7 /* ViewLines */);\r\n    };\r\n    ElementPath.isStrictChildOfViewLines = function (path) {\r\n        return (path.length > 4\r\n            && path[0] === 3 /* OverflowGuard */\r\n            && path[3] === 7 /* ViewLines */);\r\n    };\r\n    ElementPath.isChildOfScrollableElement = function (path) {\r\n        return (path.length >= 2\r\n            && path[0] === 3 /* OverflowGuard */\r\n            && path[1] === 5 /* ScrollableElement */);\r\n    };\r\n    ElementPath.isChildOfMinimap = function (path) {\r\n        return (path.length >= 2\r\n            && path[0] === 3 /* OverflowGuard */\r\n            && path[1] === 8 /* Minimap */);\r\n    };\r\n    ElementPath.isChildOfContentWidgets = function (path) {\r\n        return (path.length >= 4\r\n            && path[0] === 3 /* OverflowGuard */\r\n            && path[3] === 1 /* ContentWidgets */);\r\n    };\r\n    ElementPath.isChildOfOverflowingContentWidgets = function (path) {\r\n        return (path.length >= 1\r\n            && path[0] === 2 /* OverflowingContentWidgets */);\r\n    };\r\n    ElementPath.isChildOfOverlayWidgets = function (path) {\r\n        return (path.length >= 2\r\n            && path[0] === 3 /* OverflowGuard */\r\n            && path[1] === 4 /* OverlayWidgets */);\r\n    };\r\n    return ElementPath;\r\n}());\r\nvar HitTestContext = /** @class */ (function () {\r\n    function HitTestContext(context, viewHelper, lastRenderData) {\r\n        this.model = context.model;\r\n        var options = context.configuration.options;\r\n        this.layoutInfo = options.get(107 /* layoutInfo */);\r\n        this.viewDomNode = viewHelper.viewDomNode;\r\n        this.lineHeight = options.get(49 /* lineHeight */);\r\n        this.typicalHalfwidthCharacterWidth = options.get(34 /* fontInfo */).typicalHalfwidthCharacterWidth;\r\n        this.lastRenderData = lastRenderData;\r\n        this._context = context;\r\n        this._viewHelper = viewHelper;\r\n    }\r\n    HitTestContext.prototype.getZoneAtCoord = function (mouseVerticalOffset) {\r\n        return HitTestContext.getZoneAtCoord(this._context, mouseVerticalOffset);\r\n    };\r\n    HitTestContext.getZoneAtCoord = function (context, mouseVerticalOffset) {\r\n        // The target is either a view zone or the empty space after the last view-line\r\n        var viewZoneWhitespace = context.viewLayout.getWhitespaceAtVerticalOffset(mouseVerticalOffset);\r\n        if (viewZoneWhitespace) {\r\n            var viewZoneMiddle = viewZoneWhitespace.verticalOffset + viewZoneWhitespace.height / 2, lineCount = context.model.getLineCount(), positionBefore = null, position = void 0, positionAfter = null;\r\n            if (viewZoneWhitespace.afterLineNumber !== lineCount) {\r\n                // There are more lines after this view zone\r\n                positionAfter = new Position(viewZoneWhitespace.afterLineNumber + 1, 1);\r\n            }\r\n            if (viewZoneWhitespace.afterLineNumber > 0) {\r\n                // There are more lines above this view zone\r\n                positionBefore = new Position(viewZoneWhitespace.afterLineNumber, context.model.getLineMaxColumn(viewZoneWhitespace.afterLineNumber));\r\n            }\r\n            if (positionAfter === null) {\r\n                position = positionBefore;\r\n            }\r\n            else if (positionBefore === null) {\r\n                position = positionAfter;\r\n            }\r\n            else if (mouseVerticalOffset < viewZoneMiddle) {\r\n                position = positionBefore;\r\n            }\r\n            else {\r\n                position = positionAfter;\r\n            }\r\n            return {\r\n                viewZoneId: viewZoneWhitespace.id,\r\n                afterLineNumber: viewZoneWhitespace.afterLineNumber,\r\n                positionBefore: positionBefore,\r\n                positionAfter: positionAfter,\r\n                position: position\r\n            };\r\n        }\r\n        return null;\r\n    };\r\n    HitTestContext.prototype.getFullLineRangeAtCoord = function (mouseVerticalOffset) {\r\n        if (this._context.viewLayout.isAfterLines(mouseVerticalOffset)) {\r\n            // Below the last line\r\n            var lineNumber_1 = this._context.model.getLineCount();\r\n            var maxLineColumn_1 = this._context.model.getLineMaxColumn(lineNumber_1);\r\n            return {\r\n                range: new EditorRange(lineNumber_1, maxLineColumn_1, lineNumber_1, maxLineColumn_1),\r\n                isAfterLines: true\r\n            };\r\n        }\r\n        var lineNumber = this._context.viewLayout.getLineNumberAtVerticalOffset(mouseVerticalOffset);\r\n        var maxLineColumn = this._context.model.getLineMaxColumn(lineNumber);\r\n        return {\r\n            range: new EditorRange(lineNumber, 1, lineNumber, maxLineColumn),\r\n            isAfterLines: false\r\n        };\r\n    };\r\n    HitTestContext.prototype.getLineNumberAtVerticalOffset = function (mouseVerticalOffset) {\r\n        return this._context.viewLayout.getLineNumberAtVerticalOffset(mouseVerticalOffset);\r\n    };\r\n    HitTestContext.prototype.isAfterLines = function (mouseVerticalOffset) {\r\n        return this._context.viewLayout.isAfterLines(mouseVerticalOffset);\r\n    };\r\n    HitTestContext.prototype.getVerticalOffsetForLineNumber = function (lineNumber) {\r\n        return this._context.viewLayout.getVerticalOffsetForLineNumber(lineNumber);\r\n    };\r\n    HitTestContext.prototype.findAttribute = function (element, attr) {\r\n        return HitTestContext._findAttribute(element, attr, this._viewHelper.viewDomNode);\r\n    };\r\n    HitTestContext._findAttribute = function (element, attr, stopAt) {\r\n        while (element && element !== document.body) {\r\n            if (element.hasAttribute && element.hasAttribute(attr)) {\r\n                return element.getAttribute(attr);\r\n            }\r\n            if (element === stopAt) {\r\n                return null;\r\n            }\r\n            element = element.parentNode;\r\n        }\r\n        return null;\r\n    };\r\n    HitTestContext.prototype.getLineWidth = function (lineNumber) {\r\n        return this._viewHelper.getLineWidth(lineNumber);\r\n    };\r\n    HitTestContext.prototype.visibleRangeForPosition = function (lineNumber, column) {\r\n        return this._viewHelper.visibleRangeForPosition(lineNumber, column);\r\n    };\r\n    HitTestContext.prototype.getPositionFromDOMInfo = function (spanNode, offset) {\r\n        return this._viewHelper.getPositionFromDOMInfo(spanNode, offset);\r\n    };\r\n    HitTestContext.prototype.getCurrentScrollTop = function () {\r\n        return this._context.viewLayout.getCurrentScrollTop();\r\n    };\r\n    HitTestContext.prototype.getCurrentScrollLeft = function () {\r\n        return this._context.viewLayout.getCurrentScrollLeft();\r\n    };\r\n    return HitTestContext;\r\n}());\r\nexport { HitTestContext };\r\nvar BareHitTestRequest = /** @class */ (function () {\r\n    function BareHitTestRequest(ctx, editorPos, pos) {\r\n        this.editorPos = editorPos;\r\n        this.pos = pos;\r\n        this.mouseVerticalOffset = Math.max(0, ctx.getCurrentScrollTop() + pos.y - editorPos.y);\r\n        this.mouseContentHorizontalOffset = ctx.getCurrentScrollLeft() + pos.x - editorPos.x - ctx.layoutInfo.contentLeft;\r\n        this.isInMarginArea = (pos.x - editorPos.x < ctx.layoutInfo.contentLeft && pos.x - editorPos.x >= ctx.layoutInfo.glyphMarginLeft);\r\n        this.isInContentArea = !this.isInMarginArea;\r\n        this.mouseColumn = Math.max(0, MouseTargetFactory._getMouseColumn(this.mouseContentHorizontalOffset, ctx.typicalHalfwidthCharacterWidth));\r\n    }\r\n    return BareHitTestRequest;\r\n}());\r\nvar HitTestRequest = /** @class */ (function (_super) {\r\n    __extends(HitTestRequest, _super);\r\n    function HitTestRequest(ctx, editorPos, pos, target) {\r\n        var _this = _super.call(this, ctx, editorPos, pos) || this;\r\n        _this._ctx = ctx;\r\n        if (target) {\r\n            _this.target = target;\r\n            _this.targetPath = PartFingerprints.collect(target, ctx.viewDomNode);\r\n        }\r\n        else {\r\n            _this.target = null;\r\n            _this.targetPath = new Uint8Array(0);\r\n        }\r\n        return _this;\r\n    }\r\n    HitTestRequest.prototype.toString = function () {\r\n        return \"pos(\" + this.pos.x + \",\" + this.pos.y + \"), editorPos(\" + this.editorPos.x + \",\" + this.editorPos.y + \"), mouseVerticalOffset: \" + this.mouseVerticalOffset + \", mouseContentHorizontalOffset: \" + this.mouseContentHorizontalOffset + \"\\n\\ttarget: \" + (this.target ? this.target.outerHTML : null);\r\n    };\r\n    HitTestRequest.prototype.fulfill = function (type, position, range, detail) {\r\n        if (position === void 0) { position = null; }\r\n        if (range === void 0) { range = null; }\r\n        if (detail === void 0) { detail = null; }\r\n        var mouseColumn = this.mouseColumn;\r\n        if (position && position.column < this._ctx.model.getLineMaxColumn(position.lineNumber)) {\r\n            // Most likely, the line contains foreign decorations...\r\n            mouseColumn = CursorColumns.visibleColumnFromColumn(this._ctx.model.getLineContent(position.lineNumber), position.column, this._ctx.model.getOptions().tabSize) + 1;\r\n        }\r\n        return new MouseTarget(this.target, type, mouseColumn, position, range, detail);\r\n    };\r\n    HitTestRequest.prototype.withTarget = function (target) {\r\n        return new HitTestRequest(this._ctx, this.editorPos, this.pos, target);\r\n    };\r\n    return HitTestRequest;\r\n}(BareHitTestRequest));\r\nvar EMPTY_CONTENT_AFTER_LINES = { isAfterLines: true };\r\nfunction createEmptyContentDataInLines(horizontalDistanceToText) {\r\n    return {\r\n        isAfterLines: false,\r\n        horizontalDistanceToText: horizontalDistanceToText\r\n    };\r\n}\r\nvar MouseTargetFactory = /** @class */ (function () {\r\n    function MouseTargetFactory(context, viewHelper) {\r\n        this._context = context;\r\n        this._viewHelper = viewHelper;\r\n    }\r\n    MouseTargetFactory.prototype.mouseTargetIsWidget = function (e) {\r\n        var t = e.target;\r\n        var path = PartFingerprints.collect(t, this._viewHelper.viewDomNode);\r\n        // Is it a content widget?\r\n        if (ElementPath.isChildOfContentWidgets(path) || ElementPath.isChildOfOverflowingContentWidgets(path)) {\r\n            return true;\r\n        }\r\n        // Is it an overlay widget?\r\n        if (ElementPath.isChildOfOverlayWidgets(path)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    MouseTargetFactory.prototype.createMouseTarget = function (lastRenderData, editorPos, pos, target) {\r\n        var ctx = new HitTestContext(this._context, this._viewHelper, lastRenderData);\r\n        var request = new HitTestRequest(ctx, editorPos, pos, target);\r\n        try {\r\n            var r = MouseTargetFactory._createMouseTarget(ctx, request, false);\r\n            // console.log(r.toString());\r\n            return r;\r\n        }\r\n        catch (err) {\r\n            // console.log(err);\r\n            return request.fulfill(0 /* UNKNOWN */);\r\n        }\r\n    };\r\n    MouseTargetFactory._createMouseTarget = function (ctx, request, domHitTestExecuted) {\r\n        // console.log(`${domHitTestExecuted ? '=>' : ''}CAME IN REQUEST: ${request}`);\r\n        // First ensure the request has a target\r\n        if (request.target === null) {\r\n            if (domHitTestExecuted) {\r\n                // Still no target... and we have already executed hit test...\r\n                return request.fulfill(0 /* UNKNOWN */);\r\n            }\r\n            var hitTestResult = MouseTargetFactory._doHitTest(ctx, request);\r\n            if (hitTestResult.position) {\r\n                return MouseTargetFactory.createMouseTargetFromHitTestPosition(ctx, request, hitTestResult.position.lineNumber, hitTestResult.position.column);\r\n            }\r\n            return this._createMouseTarget(ctx, request.withTarget(hitTestResult.hitTarget), true);\r\n        }\r\n        // we know for a fact that request.target is not null\r\n        var resolvedRequest = request;\r\n        var result = null;\r\n        result = result || MouseTargetFactory._hitTestContentWidget(ctx, resolvedRequest);\r\n        result = result || MouseTargetFactory._hitTestOverlayWidget(ctx, resolvedRequest);\r\n        result = result || MouseTargetFactory._hitTestMinimap(ctx, resolvedRequest);\r\n        result = result || MouseTargetFactory._hitTestScrollbarSlider(ctx, resolvedRequest);\r\n        result = result || MouseTargetFactory._hitTestViewZone(ctx, resolvedRequest);\r\n        result = result || MouseTargetFactory._hitTestMargin(ctx, resolvedRequest);\r\n        result = result || MouseTargetFactory._hitTestViewCursor(ctx, resolvedRequest);\r\n        result = result || MouseTargetFactory._hitTestTextArea(ctx, resolvedRequest);\r\n        result = result || MouseTargetFactory._hitTestViewLines(ctx, resolvedRequest, domHitTestExecuted);\r\n        result = result || MouseTargetFactory._hitTestScrollbar(ctx, resolvedRequest);\r\n        return (result || request.fulfill(0 /* UNKNOWN */));\r\n    };\r\n    MouseTargetFactory._hitTestContentWidget = function (ctx, request) {\r\n        // Is it a content widget?\r\n        if (ElementPath.isChildOfContentWidgets(request.targetPath) || ElementPath.isChildOfOverflowingContentWidgets(request.targetPath)) {\r\n            var widgetId = ctx.findAttribute(request.target, 'widgetId');\r\n            if (widgetId) {\r\n                return request.fulfill(9 /* CONTENT_WIDGET */, null, null, widgetId);\r\n            }\r\n            else {\r\n                return request.fulfill(0 /* UNKNOWN */);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    MouseTargetFactory._hitTestOverlayWidget = function (ctx, request) {\r\n        // Is it an overlay widget?\r\n        if (ElementPath.isChildOfOverlayWidgets(request.targetPath)) {\r\n            var widgetId = ctx.findAttribute(request.target, 'widgetId');\r\n            if (widgetId) {\r\n                return request.fulfill(12 /* OVERLAY_WIDGET */, null, null, widgetId);\r\n            }\r\n            else {\r\n                return request.fulfill(0 /* UNKNOWN */);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    MouseTargetFactory._hitTestViewCursor = function (ctx, request) {\r\n        if (request.target) {\r\n            // Check if we've hit a painted cursor\r\n            var lastViewCursorsRenderData = ctx.lastRenderData.lastViewCursorsRenderData;\r\n            for (var _i = 0, lastViewCursorsRenderData_1 = lastViewCursorsRenderData; _i < lastViewCursorsRenderData_1.length; _i++) {\r\n                var d = lastViewCursorsRenderData_1[_i];\r\n                if (request.target === d.domNode) {\r\n                    return request.fulfill(6 /* CONTENT_TEXT */, d.position);\r\n                }\r\n            }\r\n        }\r\n        if (request.isInContentArea) {\r\n            // Edge has a bug when hit-testing the exact position of a cursor,\r\n            // instead of returning the correct dom node, it returns the\r\n            // first or last rendered view line dom node, therefore help it out\r\n            // and first check if we are on top of a cursor\r\n            var lastViewCursorsRenderData = ctx.lastRenderData.lastViewCursorsRenderData;\r\n            var mouseContentHorizontalOffset = request.mouseContentHorizontalOffset;\r\n            var mouseVerticalOffset = request.mouseVerticalOffset;\r\n            for (var _a = 0, lastViewCursorsRenderData_2 = lastViewCursorsRenderData; _a < lastViewCursorsRenderData_2.length; _a++) {\r\n                var d = lastViewCursorsRenderData_2[_a];\r\n                if (mouseContentHorizontalOffset < d.contentLeft) {\r\n                    // mouse position is to the left of the cursor\r\n                    continue;\r\n                }\r\n                if (mouseContentHorizontalOffset > d.contentLeft + d.width) {\r\n                    // mouse position is to the right of the cursor\r\n                    continue;\r\n                }\r\n                var cursorVerticalOffset = ctx.getVerticalOffsetForLineNumber(d.position.lineNumber);\r\n                if (cursorVerticalOffset <= mouseVerticalOffset\r\n                    && mouseVerticalOffset <= cursorVerticalOffset + d.height) {\r\n                    return request.fulfill(6 /* CONTENT_TEXT */, d.position);\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    MouseTargetFactory._hitTestViewZone = function (ctx, request) {\r\n        var viewZoneData = ctx.getZoneAtCoord(request.mouseVerticalOffset);\r\n        if (viewZoneData) {\r\n            var mouseTargetType = (request.isInContentArea ? 8 /* CONTENT_VIEW_ZONE */ : 5 /* GUTTER_VIEW_ZONE */);\r\n            return request.fulfill(mouseTargetType, viewZoneData.position, null, viewZoneData);\r\n        }\r\n        return null;\r\n    };\r\n    MouseTargetFactory._hitTestTextArea = function (ctx, request) {\r\n        // Is it the textarea?\r\n        if (ElementPath.isTextArea(request.targetPath)) {\r\n            if (ctx.lastRenderData.lastTextareaPosition) {\r\n                return request.fulfill(6 /* CONTENT_TEXT */, ctx.lastRenderData.lastTextareaPosition);\r\n            }\r\n            return request.fulfill(1 /* TEXTAREA */, ctx.lastRenderData.lastTextareaPosition);\r\n        }\r\n        return null;\r\n    };\r\n    MouseTargetFactory._hitTestMargin = function (ctx, request) {\r\n        if (request.isInMarginArea) {\r\n            var res = ctx.getFullLineRangeAtCoord(request.mouseVerticalOffset);\r\n            var pos = res.range.getStartPosition();\r\n            var offset = Math.abs(request.pos.x - request.editorPos.x);\r\n            var detail = {\r\n                isAfterLines: res.isAfterLines,\r\n                glyphMarginLeft: ctx.layoutInfo.glyphMarginLeft,\r\n                glyphMarginWidth: ctx.layoutInfo.glyphMarginWidth,\r\n                lineNumbersWidth: ctx.layoutInfo.lineNumbersWidth,\r\n                offsetX: offset\r\n            };\r\n            offset -= ctx.layoutInfo.glyphMarginLeft;\r\n            if (offset <= ctx.layoutInfo.glyphMarginWidth) {\r\n                // On the glyph margin\r\n                return request.fulfill(2 /* GUTTER_GLYPH_MARGIN */, pos, res.range, detail);\r\n            }\r\n            offset -= ctx.layoutInfo.glyphMarginWidth;\r\n            if (offset <= ctx.layoutInfo.lineNumbersWidth) {\r\n                // On the line numbers\r\n                return request.fulfill(3 /* GUTTER_LINE_NUMBERS */, pos, res.range, detail);\r\n            }\r\n            offset -= ctx.layoutInfo.lineNumbersWidth;\r\n            // On the line decorations\r\n            return request.fulfill(4 /* GUTTER_LINE_DECORATIONS */, pos, res.range, detail);\r\n        }\r\n        return null;\r\n    };\r\n    MouseTargetFactory._hitTestViewLines = function (ctx, request, domHitTestExecuted) {\r\n        if (!ElementPath.isChildOfViewLines(request.targetPath)) {\r\n            return null;\r\n        }\r\n        // Check if it is below any lines and any view zones\r\n        if (ctx.isAfterLines(request.mouseVerticalOffset)) {\r\n            // This most likely indicates it happened after the last view-line\r\n            var lineCount = ctx.model.getLineCount();\r\n            var maxLineColumn = ctx.model.getLineMaxColumn(lineCount);\r\n            return request.fulfill(7 /* CONTENT_EMPTY */, new Position(lineCount, maxLineColumn), undefined, EMPTY_CONTENT_AFTER_LINES);\r\n        }\r\n        if (domHitTestExecuted) {\r\n            // Check if we are hitting a view-line (can happen in the case of inline decorations on empty lines)\r\n            // See https://github.com/Microsoft/vscode/issues/46942\r\n            if (ElementPath.isStrictChildOfViewLines(request.targetPath)) {\r\n                var lineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\r\n                if (ctx.model.getLineLength(lineNumber) === 0) {\r\n                    var lineWidth_1 = ctx.getLineWidth(lineNumber);\r\n                    var detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth_1);\r\n                    return request.fulfill(7 /* CONTENT_EMPTY */, new Position(lineNumber, 1), undefined, detail);\r\n                }\r\n                var lineWidth = ctx.getLineWidth(lineNumber);\r\n                if (request.mouseContentHorizontalOffset >= lineWidth) {\r\n                    var detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\r\n                    var pos = new Position(lineNumber, ctx.model.getLineMaxColumn(lineNumber));\r\n                    return request.fulfill(7 /* CONTENT_EMPTY */, pos, undefined, detail);\r\n                }\r\n            }\r\n            // We have already executed hit test...\r\n            return request.fulfill(0 /* UNKNOWN */);\r\n        }\r\n        var hitTestResult = MouseTargetFactory._doHitTest(ctx, request);\r\n        if (hitTestResult.position) {\r\n            return MouseTargetFactory.createMouseTargetFromHitTestPosition(ctx, request, hitTestResult.position.lineNumber, hitTestResult.position.column);\r\n        }\r\n        return this._createMouseTarget(ctx, request.withTarget(hitTestResult.hitTarget), true);\r\n    };\r\n    MouseTargetFactory._hitTestMinimap = function (ctx, request) {\r\n        if (ElementPath.isChildOfMinimap(request.targetPath)) {\r\n            var possibleLineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\r\n            var maxColumn = ctx.model.getLineMaxColumn(possibleLineNumber);\r\n            return request.fulfill(11 /* SCROLLBAR */, new Position(possibleLineNumber, maxColumn));\r\n        }\r\n        return null;\r\n    };\r\n    MouseTargetFactory._hitTestScrollbarSlider = function (ctx, request) {\r\n        if (ElementPath.isChildOfScrollableElement(request.targetPath)) {\r\n            if (request.target && request.target.nodeType === 1) {\r\n                var className = request.target.className;\r\n                if (className && /\\b(slider|scrollbar)\\b/.test(className)) {\r\n                    var possibleLineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\r\n                    var maxColumn = ctx.model.getLineMaxColumn(possibleLineNumber);\r\n                    return request.fulfill(11 /* SCROLLBAR */, new Position(possibleLineNumber, maxColumn));\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    MouseTargetFactory._hitTestScrollbar = function (ctx, request) {\r\n        // Is it the overview ruler?\r\n        // Is it a child of the scrollable element?\r\n        if (ElementPath.isChildOfScrollableElement(request.targetPath)) {\r\n            var possibleLineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\r\n            var maxColumn = ctx.model.getLineMaxColumn(possibleLineNumber);\r\n            return request.fulfill(11 /* SCROLLBAR */, new Position(possibleLineNumber, maxColumn));\r\n        }\r\n        return null;\r\n    };\r\n    MouseTargetFactory.prototype.getMouseColumn = function (editorPos, pos) {\r\n        var options = this._context.configuration.options;\r\n        var layoutInfo = options.get(107 /* layoutInfo */);\r\n        var mouseContentHorizontalOffset = this._context.viewLayout.getCurrentScrollLeft() + pos.x - editorPos.x - layoutInfo.contentLeft;\r\n        return MouseTargetFactory._getMouseColumn(mouseContentHorizontalOffset, options.get(34 /* fontInfo */).typicalHalfwidthCharacterWidth);\r\n    };\r\n    MouseTargetFactory._getMouseColumn = function (mouseContentHorizontalOffset, typicalHalfwidthCharacterWidth) {\r\n        if (mouseContentHorizontalOffset < 0) {\r\n            return 1;\r\n        }\r\n        var chars = Math.round(mouseContentHorizontalOffset / typicalHalfwidthCharacterWidth);\r\n        return (chars + 1);\r\n    };\r\n    MouseTargetFactory.createMouseTargetFromHitTestPosition = function (ctx, request, lineNumber, column) {\r\n        var pos = new Position(lineNumber, column);\r\n        var lineWidth = ctx.getLineWidth(lineNumber);\r\n        if (request.mouseContentHorizontalOffset > lineWidth) {\r\n            if (browser.isEdge && pos.column === 1) {\r\n                // See https://github.com/Microsoft/vscode/issues/10875\r\n                var detail_1 = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\r\n                return request.fulfill(7 /* CONTENT_EMPTY */, new Position(lineNumber, ctx.model.getLineMaxColumn(lineNumber)), undefined, detail_1);\r\n            }\r\n            var detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\r\n            return request.fulfill(7 /* CONTENT_EMPTY */, pos, undefined, detail);\r\n        }\r\n        var visibleRange = ctx.visibleRangeForPosition(lineNumber, column);\r\n        if (!visibleRange) {\r\n            return request.fulfill(0 /* UNKNOWN */, pos);\r\n        }\r\n        var columnHorizontalOffset = visibleRange.left;\r\n        if (request.mouseContentHorizontalOffset === columnHorizontalOffset) {\r\n            return request.fulfill(6 /* CONTENT_TEXT */, pos);\r\n        }\r\n        var points = [];\r\n        points.push({ offset: visibleRange.left, column: column });\r\n        if (column > 1) {\r\n            var visibleRange_1 = ctx.visibleRangeForPosition(lineNumber, column - 1);\r\n            if (visibleRange_1) {\r\n                points.push({ offset: visibleRange_1.left, column: column - 1 });\r\n            }\r\n        }\r\n        var lineMaxColumn = ctx.model.getLineMaxColumn(lineNumber);\r\n        if (column < lineMaxColumn) {\r\n            var visibleRange_2 = ctx.visibleRangeForPosition(lineNumber, column + 1);\r\n            if (visibleRange_2) {\r\n                points.push({ offset: visibleRange_2.left, column: column + 1 });\r\n            }\r\n        }\r\n        points.sort(function (a, b) { return a.offset - b.offset; });\r\n        for (var i = 1; i < points.length; i++) {\r\n            var prev = points[i - 1];\r\n            var curr = points[i];\r\n            if (prev.offset <= request.mouseContentHorizontalOffset && request.mouseContentHorizontalOffset <= curr.offset) {\r\n                var rng = new EditorRange(lineNumber, prev.column, lineNumber, curr.column);\r\n                return request.fulfill(6 /* CONTENT_TEXT */, pos, rng);\r\n            }\r\n        }\r\n        return request.fulfill(6 /* CONTENT_TEXT */, pos);\r\n    };\r\n    /**\r\n     * Most probably WebKit browsers and Edge\r\n     */\r\n    MouseTargetFactory._doHitTestWithCaretRangeFromPoint = function (ctx, request) {\r\n        // In Chrome, especially on Linux it is possible to click between lines,\r\n        // so try to adjust the `hity` below so that it lands in the center of a line\r\n        var lineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\r\n        var lineVerticalOffset = ctx.getVerticalOffsetForLineNumber(lineNumber);\r\n        var lineCenteredVerticalOffset = lineVerticalOffset + Math.floor(ctx.lineHeight / 2);\r\n        var adjustedPageY = request.pos.y + (lineCenteredVerticalOffset - request.mouseVerticalOffset);\r\n        if (adjustedPageY <= request.editorPos.y) {\r\n            adjustedPageY = request.editorPos.y + 1;\r\n        }\r\n        if (adjustedPageY >= request.editorPos.y + ctx.layoutInfo.height) {\r\n            adjustedPageY = request.editorPos.y + ctx.layoutInfo.height - 1;\r\n        }\r\n        var adjustedPage = new PageCoordinates(request.pos.x, adjustedPageY);\r\n        var r = this._actualDoHitTestWithCaretRangeFromPoint(ctx, adjustedPage.toClientCoordinates());\r\n        if (r.position) {\r\n            return r;\r\n        }\r\n        // Also try to hit test without the adjustment (for the edge cases that we are near the top or bottom)\r\n        return this._actualDoHitTestWithCaretRangeFromPoint(ctx, request.pos.toClientCoordinates());\r\n    };\r\n    MouseTargetFactory._actualDoHitTestWithCaretRangeFromPoint = function (ctx, coords) {\r\n        var shadowRoot = dom.getShadowRoot(ctx.viewDomNode);\r\n        var range;\r\n        if (shadowRoot) {\r\n            if (typeof shadowRoot.caretRangeFromPoint === 'undefined') {\r\n                range = shadowCaretRangeFromPoint(shadowRoot, coords.clientX, coords.clientY);\r\n            }\r\n            else {\r\n                range = shadowRoot.caretRangeFromPoint(coords.clientX, coords.clientY);\r\n            }\r\n        }\r\n        else {\r\n            range = document.caretRangeFromPoint(coords.clientX, coords.clientY);\r\n        }\r\n        if (!range || !range.startContainer) {\r\n            return {\r\n                position: null,\r\n                hitTarget: null\r\n            };\r\n        }\r\n        // Chrome always hits a TEXT_NODE, while Edge sometimes hits a token span\r\n        var startContainer = range.startContainer;\r\n        var hitTarget = null;\r\n        if (startContainer.nodeType === startContainer.TEXT_NODE) {\r\n            // startContainer is expected to be the token text\r\n            var parent1 = startContainer.parentNode; // expected to be the token span\r\n            var parent2 = parent1 ? parent1.parentNode : null; // expected to be the view line container span\r\n            var parent3 = parent2 ? parent2.parentNode : null; // expected to be the view line div\r\n            var parent3ClassName = parent3 && parent3.nodeType === parent3.ELEMENT_NODE ? parent3.className : null;\r\n            if (parent3ClassName === ViewLine.CLASS_NAME) {\r\n                var p = ctx.getPositionFromDOMInfo(parent1, range.startOffset);\r\n                return {\r\n                    position: p,\r\n                    hitTarget: null\r\n                };\r\n            }\r\n            else {\r\n                hitTarget = startContainer.parentNode;\r\n            }\r\n        }\r\n        else if (startContainer.nodeType === startContainer.ELEMENT_NODE) {\r\n            // startContainer is expected to be the token span\r\n            var parent1 = startContainer.parentNode; // expected to be the view line container span\r\n            var parent2 = parent1 ? parent1.parentNode : null; // expected to be the view line div\r\n            var parent2ClassName = parent2 && parent2.nodeType === parent2.ELEMENT_NODE ? parent2.className : null;\r\n            if (parent2ClassName === ViewLine.CLASS_NAME) {\r\n                var p = ctx.getPositionFromDOMInfo(startContainer, startContainer.textContent.length);\r\n                return {\r\n                    position: p,\r\n                    hitTarget: null\r\n                };\r\n            }\r\n            else {\r\n                hitTarget = startContainer;\r\n            }\r\n        }\r\n        return {\r\n            position: null,\r\n            hitTarget: hitTarget\r\n        };\r\n    };\r\n    /**\r\n     * Most probably Gecko\r\n     */\r\n    MouseTargetFactory._doHitTestWithCaretPositionFromPoint = function (ctx, coords) {\r\n        var hitResult = document.caretPositionFromPoint(coords.clientX, coords.clientY);\r\n        if (hitResult.offsetNode.nodeType === hitResult.offsetNode.TEXT_NODE) {\r\n            // offsetNode is expected to be the token text\r\n            var parent1 = hitResult.offsetNode.parentNode; // expected to be the token span\r\n            var parent2 = parent1 ? parent1.parentNode : null; // expected to be the view line container span\r\n            var parent3 = parent2 ? parent2.parentNode : null; // expected to be the view line div\r\n            var parent3ClassName = parent3 && parent3.nodeType === parent3.ELEMENT_NODE ? parent3.className : null;\r\n            if (parent3ClassName === ViewLine.CLASS_NAME) {\r\n                var p = ctx.getPositionFromDOMInfo(hitResult.offsetNode.parentNode, hitResult.offset);\r\n                return {\r\n                    position: p,\r\n                    hitTarget: null\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    position: null,\r\n                    hitTarget: hitResult.offsetNode.parentNode\r\n                };\r\n            }\r\n        }\r\n        return {\r\n            position: null,\r\n            hitTarget: hitResult.offsetNode\r\n        };\r\n    };\r\n    /**\r\n     * Most probably IE\r\n     */\r\n    MouseTargetFactory._doHitTestWithMoveToPoint = function (ctx, coords) {\r\n        var resultPosition = null;\r\n        var resultHitTarget = null;\r\n        var textRange = document.body.createTextRange();\r\n        try {\r\n            textRange.moveToPoint(coords.clientX, coords.clientY);\r\n        }\r\n        catch (err) {\r\n            return {\r\n                position: null,\r\n                hitTarget: null\r\n            };\r\n        }\r\n        textRange.collapse(true);\r\n        // Now, let's do our best to figure out what we hit :)\r\n        var parentElement = textRange ? textRange.parentElement() : null;\r\n        var parent1 = parentElement ? parentElement.parentNode : null;\r\n        var parent2 = parent1 ? parent1.parentNode : null;\r\n        var parent2ClassName = parent2 && parent2.nodeType === parent2.ELEMENT_NODE ? parent2.className : '';\r\n        if (parent2ClassName === ViewLine.CLASS_NAME) {\r\n            var rangeToContainEntireSpan = textRange.duplicate();\r\n            rangeToContainEntireSpan.moveToElementText(parentElement);\r\n            rangeToContainEntireSpan.setEndPoint('EndToStart', textRange);\r\n            resultPosition = ctx.getPositionFromDOMInfo(parentElement, rangeToContainEntireSpan.text.length);\r\n            // Move range out of the span node, IE doesn't like having many ranges in\r\n            // the same spot and will act badly for lines containing dashes ('-')\r\n            rangeToContainEntireSpan.moveToElementText(ctx.viewDomNode);\r\n        }\r\n        else {\r\n            // Looks like we've hit the hover or something foreign\r\n            resultHitTarget = parentElement;\r\n        }\r\n        // Move range out of the span node, IE doesn't like having many ranges in\r\n        // the same spot and will act badly for lines containing dashes ('-')\r\n        textRange.moveToElementText(ctx.viewDomNode);\r\n        return {\r\n            position: resultPosition,\r\n            hitTarget: resultHitTarget\r\n        };\r\n    };\r\n    MouseTargetFactory._doHitTest = function (ctx, request) {\r\n        // State of the art (18.10.2012):\r\n        // The spec says browsers should support document.caretPositionFromPoint, but nobody implemented it (http://dev.w3.org/csswg/cssom-view/)\r\n        // Gecko:\r\n        //    - they tried to implement it once, but failed: https://bugzilla.mozilla.org/show_bug.cgi?id=654352\r\n        //    - however, they do give out rangeParent/rangeOffset properties on mouse events\r\n        // Webkit:\r\n        //    - they have implemented a previous version of the spec which was using document.caretRangeFromPoint\r\n        // IE:\r\n        //    - they have a proprietary method on ranges, moveToPoint: https://msdn.microsoft.com/en-us/library/ie/ms536632(v=vs.85).aspx\r\n        // 24.08.2016: Edge has added WebKit's document.caretRangeFromPoint, but it is quite buggy\r\n        //    - when hit testing the cursor it returns the first or the last line in the viewport\r\n        //    - it inconsistently hits text nodes or span nodes, while WebKit only hits text nodes\r\n        //    - when toggling render whitespace on, and hit testing in the empty content after a line, it always hits offset 0 of the first span of the line\r\n        // Thank you browsers for making this so 'easy' :)\r\n        if (typeof document.caretRangeFromPoint === 'function') {\r\n            return this._doHitTestWithCaretRangeFromPoint(ctx, request);\r\n        }\r\n        else if (document.caretPositionFromPoint) {\r\n            return this._doHitTestWithCaretPositionFromPoint(ctx, request.pos.toClientCoordinates());\r\n        }\r\n        else if (document.body.createTextRange) {\r\n            return this._doHitTestWithMoveToPoint(ctx, request.pos.toClientCoordinates());\r\n        }\r\n        return {\r\n            position: null,\r\n            hitTarget: null\r\n        };\r\n    };\r\n    return MouseTargetFactory;\r\n}());\r\nexport { MouseTargetFactory };\r\nexport function shadowCaretRangeFromPoint(shadowRoot, x, y) {\r\n    var range = document.createRange();\r\n    // Get the element under the point\r\n    var el = shadowRoot.elementFromPoint(x, y);\r\n    if (el !== null) {\r\n        // Get the last child of the element until its firstChild is a text node\r\n        // This assumes that the pointer is on the right of the line, out of the tokens\r\n        // and that we want to get the offset of the last token of the line\r\n        while (el && el.firstChild && el.firstChild.nodeType !== el.firstChild.TEXT_NODE) {\r\n            el = el.lastChild;\r\n        }\r\n        // Grab its rect\r\n        var rect = el.getBoundingClientRect();\r\n        // And its font\r\n        var font = window.getComputedStyle(el, null).getPropertyValue('font');\r\n        // And also its txt content\r\n        var text = el.innerText;\r\n        // Position the pixel cursor at the left of the element\r\n        var pixelCursor = rect.left;\r\n        var offset = 0;\r\n        var step = void 0;\r\n        // If the point is on the right of the box put the cursor after the last character\r\n        if (x > rect.left + rect.width) {\r\n            offset = text.length;\r\n        }\r\n        else {\r\n            var charWidthReader = CharWidthReader.getInstance();\r\n            // Goes through all the characters of the innerText, and checks if the x of the point\r\n            // belongs to the character.\r\n            for (var i = 0; i < text.length + 1; i++) {\r\n                // The step is half the width of the character\r\n                step = charWidthReader.getCharWidth(text.charAt(i), font) / 2;\r\n                // Move to the center of the character\r\n                pixelCursor += step;\r\n                // If the x of the point is smaller that the position of the cursor, the point is over that character\r\n                if (x < pixelCursor) {\r\n                    offset = i;\r\n                    break;\r\n                }\r\n                // Move between the current character and the next\r\n                pixelCursor += step;\r\n            }\r\n        }\r\n        // Creates a range with the text node of the element and set the offset found\r\n        range.setStart(el.firstChild, offset);\r\n        range.setEnd(el.firstChild, offset);\r\n    }\r\n    return range;\r\n}\r\nvar CharWidthReader = /** @class */ (function () {\r\n    function CharWidthReader() {\r\n        this._cache = {};\r\n        this._canvas = document.createElement('canvas');\r\n    }\r\n    CharWidthReader.getInstance = function () {\r\n        if (!CharWidthReader._INSTANCE) {\r\n            CharWidthReader._INSTANCE = new CharWidthReader();\r\n        }\r\n        return CharWidthReader._INSTANCE;\r\n    };\r\n    CharWidthReader.prototype.getCharWidth = function (char, font) {\r\n        var cacheKey = char + font;\r\n        if (this._cache[cacheKey]) {\r\n            return this._cache[cacheKey];\r\n        }\r\n        var context = this._canvas.getContext('2d');\r\n        context.font = font;\r\n        var metrics = context.measureText(char);\r\n        var width = metrics.width;\r\n        this._cache[cacheKey] = width;\r\n        return width;\r\n    };\r\n    CharWidthReader._INSTANCE = null;\r\n    return CharWidthReader;\r\n}());\r\n"]},"metadata":{},"sourceType":"module"}