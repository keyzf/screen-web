{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { isNonEmptyArray } from '../../../base/common/arrays.js';\nimport { TimeoutTimer } from '../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { dispose, DisposableStore, isDisposable } from '../../../base/common/lifecycle.js';\nimport { Selection } from '../../common/core/selection.js';\nimport { CompletionProviderRegistry } from '../../common/modes.js';\nimport { CompletionModel } from './completionModel.js';\nimport { getSuggestionComparator, provideSuggestionItems, getSnippetSuggestSupport, CompletionOptions } from './suggest.js';\nimport { SnippetController2 } from '../snippet/snippetController2.js';\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { WordDistance } from './wordDistance.js';\nimport { isLowSurrogate, isHighSurrogate } from '../../../base/common/strings.js';\n\nvar LineContext =\n/** @class */\nfunction () {\n  function LineContext(model, position, auto, shy) {\n    this.leadingLineContent = model.getLineContent(position.lineNumber).substr(0, position.column - 1);\n    this.leadingWord = model.getWordUntilPosition(position);\n    this.lineNumber = position.lineNumber;\n    this.column = position.column;\n    this.auto = auto;\n    this.shy = shy;\n  }\n\n  LineContext.shouldAutoTrigger = function (editor) {\n    if (!editor.hasModel()) {\n      return false;\n    }\n\n    var model = editor.getModel();\n    var pos = editor.getPosition();\n    model.tokenizeIfCheap(pos.lineNumber);\n    var word = model.getWordAtPosition(pos);\n\n    if (!word) {\n      return false;\n    }\n\n    if (word.endColumn !== pos.column) {\n      return false;\n    }\n\n    if (!isNaN(Number(word.word))) {\n      return false;\n    }\n\n    return true;\n  };\n\n  return LineContext;\n}();\n\nexport { LineContext };\n\nvar SuggestModel =\n/** @class */\nfunction () {\n  function SuggestModel(_editor, _editorWorker) {\n    var _this = this;\n\n    this._editor = _editor;\n    this._editorWorker = _editorWorker;\n    this._toDispose = new DisposableStore();\n    this._quickSuggestDelay = 10;\n    this._triggerCharacterListener = new DisposableStore();\n    this._triggerQuickSuggest = new TimeoutTimer();\n    this._state = 0\n    /* Idle */\n    ;\n    this._completionDisposables = new DisposableStore();\n    this._onDidCancel = new Emitter();\n    this._onDidTrigger = new Emitter();\n    this._onDidSuggest = new Emitter();\n    this.onDidCancel = this._onDidCancel.event;\n    this.onDidTrigger = this._onDidTrigger.event;\n    this.onDidSuggest = this._onDidSuggest.event;\n    this._currentSelection = this._editor.getSelection() || new Selection(1, 1, 1, 1); // wire up various listeners\n\n    this._toDispose.add(this._editor.onDidChangeModel(function () {\n      _this._updateTriggerCharacters();\n\n      _this.cancel();\n    }));\n\n    this._toDispose.add(this._editor.onDidChangeModelLanguage(function () {\n      _this._updateTriggerCharacters();\n\n      _this.cancel();\n    }));\n\n    this._toDispose.add(this._editor.onDidChangeConfiguration(function () {\n      _this._updateTriggerCharacters();\n\n      _this._updateQuickSuggest();\n    }));\n\n    this._toDispose.add(CompletionProviderRegistry.onDidChange(function () {\n      _this._updateTriggerCharacters();\n\n      _this._updateActiveSuggestSession();\n    }));\n\n    this._toDispose.add(this._editor.onDidChangeCursorSelection(function (e) {\n      _this._onCursorChange(e);\n    }));\n\n    var editorIsComposing = false;\n\n    this._toDispose.add(this._editor.onDidCompositionStart(function () {\n      editorIsComposing = true;\n    }));\n\n    this._toDispose.add(this._editor.onDidCompositionEnd(function () {\n      // refilter when composition ends\n      editorIsComposing = false;\n\n      _this._refilterCompletionItems();\n    }));\n\n    this._toDispose.add(this._editor.onDidChangeModelContent(function () {\n      // only filter completions when the editor isn't\n      // composing a character, e.g. ¨ + u makes ü but just\n      // ¨ cannot be used for filtering\n      if (!editorIsComposing) {\n        _this._refilterCompletionItems();\n      }\n    }));\n\n    this._updateTriggerCharacters();\n\n    this._updateQuickSuggest();\n  }\n\n  SuggestModel.prototype.dispose = function () {\n    dispose(this._triggerCharacterListener);\n    dispose([this._onDidCancel, this._onDidSuggest, this._onDidTrigger, this._triggerQuickSuggest]);\n\n    this._toDispose.dispose();\n\n    this._completionDisposables.dispose();\n\n    this.cancel();\n  }; // --- handle configuration & precondition changes\n\n\n  SuggestModel.prototype._updateQuickSuggest = function () {\n    this._quickSuggestDelay = this._editor.getOption(67\n    /* quickSuggestionsDelay */\n    );\n\n    if (isNaN(this._quickSuggestDelay) || !this._quickSuggestDelay && this._quickSuggestDelay !== 0 || this._quickSuggestDelay < 0) {\n      this._quickSuggestDelay = 10;\n    }\n  };\n\n  SuggestModel.prototype._updateTriggerCharacters = function () {\n    var _this = this;\n\n    this._triggerCharacterListener.clear();\n\n    if (this._editor.getOption(68\n    /* readOnly */\n    ) || !this._editor.hasModel() || !this._editor.getOption(92\n    /* suggestOnTriggerCharacters */\n    )) {\n      return;\n    }\n\n    var supportsByTriggerCharacter = new Map();\n\n    for (var _i = 0, _a = CompletionProviderRegistry.all(this._editor.getModel()); _i < _a.length; _i++) {\n      var support = _a[_i];\n\n      for (var _b = 0, _c = support.triggerCharacters || []; _b < _c.length; _b++) {\n        var ch = _c[_b];\n        var set = supportsByTriggerCharacter.get(ch);\n\n        if (!set) {\n          set = new Set();\n          set.add(getSnippetSuggestSupport());\n          supportsByTriggerCharacter.set(ch, set);\n        }\n\n        set.add(support);\n      }\n    }\n\n    var checkTriggerCharacter = function (text) {\n      if (!text) {\n        // came here from the compositionEnd-event\n        var position = _this._editor.getPosition();\n\n        var model = _this._editor.getModel();\n\n        text = model.getLineContent(position.lineNumber).substr(0, position.column - 1);\n      }\n\n      var lastChar = '';\n\n      if (isLowSurrogate(text.charCodeAt(text.length - 1))) {\n        if (isHighSurrogate(text.charCodeAt(text.length - 2))) {\n          lastChar = text.substr(text.length - 2);\n        }\n      } else {\n        lastChar = text.charAt(text.length - 1);\n      }\n\n      var supports = supportsByTriggerCharacter.get(lastChar);\n\n      if (supports) {\n        // keep existing items that where not computed by the\n        // supports/providers that want to trigger now\n        var items = _this._completionModel ? _this._completionModel.adopt(supports) : undefined;\n\n        _this.trigger({\n          auto: true,\n          shy: false,\n          triggerCharacter: lastChar\n        }, Boolean(_this._completionModel), supports, items);\n      }\n    };\n\n    this._triggerCharacterListener.add(this._editor.onDidType(checkTriggerCharacter));\n\n    this._triggerCharacterListener.add(this._editor.onDidCompositionEnd(checkTriggerCharacter));\n  };\n\n  Object.defineProperty(SuggestModel.prototype, \"state\", {\n    // --- trigger/retrigger/cancel suggest\n    get: function () {\n      return this._state;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  SuggestModel.prototype.cancel = function (retrigger) {\n    if (retrigger === void 0) {\n      retrigger = false;\n    }\n\n    if (this._state !== 0\n    /* Idle */\n    ) {\n        this._triggerQuickSuggest.cancel();\n\n        if (this._requestToken) {\n          this._requestToken.cancel();\n\n          this._requestToken = undefined;\n        }\n\n        this._state = 0\n        /* Idle */\n        ;\n        this._completionModel = undefined;\n        this._context = undefined;\n\n        this._onDidCancel.fire({\n          retrigger: retrigger\n        });\n      }\n  };\n\n  SuggestModel.prototype.clear = function () {\n    this._completionDisposables.clear();\n  };\n\n  SuggestModel.prototype._updateActiveSuggestSession = function () {\n    if (this._state !== 0\n    /* Idle */\n    ) {\n        if (!this._editor.hasModel() || !CompletionProviderRegistry.has(this._editor.getModel())) {\n          this.cancel();\n        } else {\n          this.trigger({\n            auto: this._state === 2\n            /* Auto */\n            ,\n            shy: false\n          }, true);\n        }\n      }\n  };\n\n  SuggestModel.prototype._onCursorChange = function (e) {\n    var _this = this;\n\n    if (!this._editor.hasModel()) {\n      return;\n    }\n\n    var model = this._editor.getModel();\n\n    var prevSelection = this._currentSelection;\n    this._currentSelection = this._editor.getSelection();\n\n    if (!e.selection.isEmpty() || e.reason !== 0\n    /* NotSet */\n    || e.source !== 'keyboard' && e.source !== 'deleteLeft') {\n      // Early exit if nothing needs to be done!\n      // Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\n      this.cancel();\n      return;\n    }\n\n    if (!CompletionProviderRegistry.has(model)) {\n      return;\n    }\n\n    if (this._state === 0\n    /* Idle */\n    ) {\n        if (this._editor.getOption(66\n        /* quickSuggestions */\n        ) === false) {\n          // not enabled\n          return;\n        }\n\n        if (!prevSelection.containsRange(this._currentSelection) && !prevSelection.getEndPosition().isBeforeOrEqual(this._currentSelection.getPosition())) {\n          // cursor didn't move RIGHT\n          return;\n        }\n\n        if (this._editor.getOption(89\n        /* suggest */\n        ).snippetsPreventQuickSuggestions && SnippetController2.get(this._editor).isInSnippet()) {\n          // no quick suggestion when in snippet mode\n          return;\n        }\n\n        this.cancel();\n\n        this._triggerQuickSuggest.cancelAndSet(function () {\n          if (_this._state !== 0\n          /* Idle */\n          ) {\n              return;\n            }\n\n          if (!LineContext.shouldAutoTrigger(_this._editor)) {\n            return;\n          }\n\n          if (!_this._editor.hasModel()) {\n            return;\n          }\n\n          var model = _this._editor.getModel();\n\n          var pos = _this._editor.getPosition(); // validate enabled now\n\n\n          var quickSuggestions = _this._editor.getOption(66\n          /* quickSuggestions */\n          );\n\n          if (quickSuggestions === false) {\n            return;\n          } else if (quickSuggestions === true) {// all good\n          } else {\n            // Check the type of the token that triggered this\n            model.tokenizeIfCheap(pos.lineNumber);\n            var lineTokens = model.getLineTokens(pos.lineNumber);\n            var tokenType = lineTokens.getStandardTokenType(lineTokens.findTokenIndexAtOffset(Math.max(pos.column - 1 - 1, 0)));\n            var inValidScope = quickSuggestions.other && tokenType === 0\n            /* Other */\n            || quickSuggestions.comments && tokenType === 1\n            /* Comment */\n            || quickSuggestions.strings && tokenType === 2\n            /* String */\n            ;\n\n            if (!inValidScope) {\n              return;\n            }\n          } // we made it till here -> trigger now\n\n\n          _this.trigger({\n            auto: true,\n            shy: false\n          });\n        }, this._quickSuggestDelay);\n      }\n  };\n\n  SuggestModel.prototype._refilterCompletionItems = function () {\n    var _this = this; // Re-filter suggestions. This MUST run async because filtering/scoring\n    // uses the model content AND the cursor position. The latter is NOT\n    // updated when the document has changed (the event which drives this method)\n    // and therefore a little pause (next mirco task) is needed. See:\n    // https://stackoverflow.com/questions/25915634/difference-between-microtask-and-macrotask-within-an-event-loop-context#25933985\n\n\n    Promise.resolve().then(function () {\n      if (_this._state === 0\n      /* Idle */\n      ) {\n          return;\n        }\n\n      if (!_this._editor.hasModel()) {\n        return;\n      }\n\n      var model = _this._editor.getModel();\n\n      var position = _this._editor.getPosition();\n\n      var ctx = new LineContext(model, position, _this._state === 2\n      /* Auto */\n      , false);\n\n      _this._onNewContext(ctx);\n    });\n  };\n\n  SuggestModel.prototype.trigger = function (context, retrigger, onlyFrom, existingItems) {\n    var _this = this;\n\n    if (retrigger === void 0) {\n      retrigger = false;\n    }\n\n    if (!this._editor.hasModel()) {\n      return;\n    }\n\n    var model = this._editor.getModel();\n\n    var auto = context.auto;\n    var ctx = new LineContext(model, this._editor.getPosition(), auto, context.shy); // Cancel previous requests, change state & update UI\n\n    this.cancel(retrigger);\n    this._state = auto ? 2\n    /* Auto */\n    : 1\n    /* Manual */\n    ;\n\n    this._onDidTrigger.fire({\n      auto: auto,\n      shy: context.shy,\n      position: this._editor.getPosition()\n    }); // Capture context when request was sent\n\n\n    this._context = ctx; // Build context for request\n\n    var suggestCtx;\n\n    if (context.triggerCharacter) {\n      suggestCtx = {\n        triggerKind: 1\n        /* TriggerCharacter */\n        ,\n        triggerCharacter: context.triggerCharacter\n      };\n    } else if (onlyFrom && onlyFrom.size > 0) {\n      suggestCtx = {\n        triggerKind: 2\n        /* TriggerForIncompleteCompletions */\n\n      };\n    } else {\n      suggestCtx = {\n        triggerKind: 0\n        /* Invoke */\n\n      };\n    }\n\n    this._requestToken = new CancellationTokenSource(); // kind filter and snippet sort rules\n\n    var snippetSuggestions = this._editor.getOption(86\n    /* snippetSuggestions */\n    );\n\n    var snippetSortOrder = 1\n    /* Inline */\n    ;\n\n    switch (snippetSuggestions) {\n      case 'top':\n        snippetSortOrder = 0\n        /* Top */\n        ;\n        break;\n      // \t↓ that's the default anyways...\n      // case 'inline':\n      // \tsnippetSortOrder = SnippetSortOrder.Inline;\n      // \tbreak;\n\n      case 'bottom':\n        snippetSortOrder = 2\n        /* Bottom */\n        ;\n        break;\n    }\n\n    var itemKindFilter = SuggestModel._createItemKindFilter(this._editor);\n\n    var wordDistance = WordDistance.create(this._editorWorker, this._editor);\n    var items = provideSuggestionItems(model, this._editor.getPosition(), new CompletionOptions(snippetSortOrder, itemKindFilter, onlyFrom), suggestCtx, this._requestToken.token);\n    Promise.all([items, wordDistance]).then(function (_a) {\n      var items = _a[0],\n          wordDistance = _a[1];\n      dispose(_this._requestToken);\n\n      if (_this._state === 0\n      /* Idle */\n      ) {\n          return;\n        }\n\n      if (!_this._editor.hasModel()) {\n        return;\n      }\n\n      var model = _this._editor.getModel();\n\n      if (isNonEmptyArray(existingItems)) {\n        var cmpFn = getSuggestionComparator(snippetSortOrder);\n        items = items.concat(existingItems).sort(cmpFn);\n      }\n\n      var ctx = new LineContext(model, _this._editor.getPosition(), auto, context.shy);\n      _this._completionModel = new CompletionModel(items, _this._context.column, {\n        leadingLineContent: ctx.leadingLineContent,\n        characterCountDelta: ctx.column - _this._context.column\n      }, wordDistance, _this._editor.getOption(89\n      /* suggest */\n      ), _this._editor.getOption(86\n      /* snippetSuggestions */\n      )); // store containers so that they can be disposed later\n\n      for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\n        var item = items_1[_i];\n\n        if (isDisposable(item.container)) {\n          _this._completionDisposables.add(item.container);\n        }\n      }\n\n      _this._onNewContext(ctx);\n    }).catch(onUnexpectedError);\n  };\n\n  SuggestModel._createItemKindFilter = function (editor) {\n    // kind filter and snippet sort rules\n    var result = new Set(); // snippet setting\n\n    var snippetSuggestions = editor.getOption(86\n    /* snippetSuggestions */\n    );\n\n    if (snippetSuggestions === 'none') {\n      result.add(25\n      /* Snippet */\n      );\n    } // type setting\n\n\n    var suggestOptions = editor.getOption(89\n    /* suggest */\n    );\n\n    if (!suggestOptions.showMethods) {\n      result.add(0\n      /* Method */\n      );\n    }\n\n    if (!suggestOptions.showFunctions) {\n      result.add(1\n      /* Function */\n      );\n    }\n\n    if (!suggestOptions.showConstructors) {\n      result.add(2\n      /* Constructor */\n      );\n    }\n\n    if (!suggestOptions.showFields) {\n      result.add(3\n      /* Field */\n      );\n    }\n\n    if (!suggestOptions.showVariables) {\n      result.add(4\n      /* Variable */\n      );\n    }\n\n    if (!suggestOptions.showClasses) {\n      result.add(5\n      /* Class */\n      );\n    }\n\n    if (!suggestOptions.showStructs) {\n      result.add(6\n      /* Struct */\n      );\n    }\n\n    if (!suggestOptions.showInterfaces) {\n      result.add(7\n      /* Interface */\n      );\n    }\n\n    if (!suggestOptions.showModules) {\n      result.add(8\n      /* Module */\n      );\n    }\n\n    if (!suggestOptions.showProperties) {\n      result.add(9\n      /* Property */\n      );\n    }\n\n    if (!suggestOptions.showEvents) {\n      result.add(10\n      /* Event */\n      );\n    }\n\n    if (!suggestOptions.showOperators) {\n      result.add(11\n      /* Operator */\n      );\n    }\n\n    if (!suggestOptions.showUnits) {\n      result.add(12\n      /* Unit */\n      );\n    }\n\n    if (!suggestOptions.showValues) {\n      result.add(13\n      /* Value */\n      );\n    }\n\n    if (!suggestOptions.showConstants) {\n      result.add(14\n      /* Constant */\n      );\n    }\n\n    if (!suggestOptions.showEnums) {\n      result.add(15\n      /* Enum */\n      );\n    }\n\n    if (!suggestOptions.showEnumMembers) {\n      result.add(16\n      /* EnumMember */\n      );\n    }\n\n    if (!suggestOptions.showKeywords) {\n      result.add(17\n      /* Keyword */\n      );\n    }\n\n    if (!suggestOptions.showWords) {\n      result.add(18\n      /* Text */\n      );\n    }\n\n    if (!suggestOptions.showColors) {\n      result.add(19\n      /* Color */\n      );\n    }\n\n    if (!suggestOptions.showFiles) {\n      result.add(20\n      /* File */\n      );\n    }\n\n    if (!suggestOptions.showReferences) {\n      result.add(21\n      /* Reference */\n      );\n    }\n\n    if (!suggestOptions.showColors) {\n      result.add(22\n      /* Customcolor */\n      );\n    }\n\n    if (!suggestOptions.showFolders) {\n      result.add(23\n      /* Folder */\n      );\n    }\n\n    if (!suggestOptions.showTypeParameters) {\n      result.add(24\n      /* TypeParameter */\n      );\n    }\n\n    if (!suggestOptions.showSnippets) {\n      result.add(25\n      /* Snippet */\n      );\n    }\n\n    return result;\n  };\n\n  SuggestModel.prototype._onNewContext = function (ctx) {\n    if (!this._context) {\n      // happens when 24x7 IntelliSense is enabled and still in its delay\n      return;\n    }\n\n    if (ctx.lineNumber !== this._context.lineNumber) {\n      // e.g. happens when pressing Enter while IntelliSense is computed\n      this.cancel();\n      return;\n    }\n\n    if (ctx.leadingWord.startColumn < this._context.leadingWord.startColumn) {\n      // happens when the current word gets outdented\n      this.cancel();\n      return;\n    }\n\n    if (ctx.column < this._context.column) {\n      // typed -> moved cursor LEFT -> retrigger if still on a word\n      if (ctx.leadingWord.word) {\n        this.trigger({\n          auto: this._context.auto,\n          shy: false\n        }, true);\n      } else {\n        this.cancel();\n      }\n\n      return;\n    }\n\n    if (!this._completionModel) {\n      // happens when IntelliSense is not yet computed\n      return;\n    }\n\n    if (ctx.column > this._context.column && this._completionModel.incomplete.size > 0 && ctx.leadingWord.word.length !== 0) {\n      // typed -> moved cursor RIGHT & incomple model & still on a word -> retrigger\n      var incomplete = this._completionModel.incomplete;\n\n      var adopted = this._completionModel.adopt(incomplete);\n\n      this.trigger({\n        auto: this._state === 2\n        /* Auto */\n        ,\n        shy: false\n      }, true, incomplete, adopted);\n    } else {\n      // typed -> moved cursor RIGHT -> update UI\n      var oldLineContext = this._completionModel.lineContext;\n      var isFrozen = false;\n      this._completionModel.lineContext = {\n        leadingLineContent: ctx.leadingLineContent,\n        characterCountDelta: ctx.column - this._context.column\n      };\n\n      if (this._completionModel.items.length === 0) {\n        if (LineContext.shouldAutoTrigger(this._editor) && this._context.leadingWord.endColumn < ctx.leadingWord.startColumn) {\n          // retrigger when heading into a new word\n          this.trigger({\n            auto: this._context.auto,\n            shy: false\n          }, true);\n          return;\n        }\n\n        if (!this._context.auto) {\n          // freeze when IntelliSense was manually requested\n          this._completionModel.lineContext = oldLineContext;\n          isFrozen = this._completionModel.items.length > 0;\n\n          if (isFrozen && ctx.leadingWord.word.length === 0) {\n            // there were results before but now there aren't\n            // and also we are not on a word anymore -> cancel\n            this.cancel();\n            return;\n          }\n        } else {\n          // nothing left\n          this.cancel();\n          return;\n        }\n      }\n\n      this._onDidSuggest.fire({\n        completionModel: this._completionModel,\n        auto: this._context.auto,\n        shy: this._context.shy,\n        isFrozen: isFrozen\n      });\n    }\n  };\n\n  return SuggestModel;\n}();\n\nexport { SuggestModel };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/contrib/suggest/suggestModel.js"],"names":["isNonEmptyArray","TimeoutTimer","onUnexpectedError","Emitter","dispose","DisposableStore","isDisposable","Selection","CompletionProviderRegistry","CompletionModel","getSuggestionComparator","provideSuggestionItems","getSnippetSuggestSupport","CompletionOptions","SnippetController2","CancellationTokenSource","WordDistance","isLowSurrogate","isHighSurrogate","LineContext","model","position","auto","shy","leadingLineContent","getLineContent","lineNumber","substr","column","leadingWord","getWordUntilPosition","shouldAutoTrigger","editor","hasModel","getModel","pos","getPosition","tokenizeIfCheap","word","getWordAtPosition","endColumn","isNaN","Number","SuggestModel","_editor","_editorWorker","_this","_toDispose","_quickSuggestDelay","_triggerCharacterListener","_triggerQuickSuggest","_state","_completionDisposables","_onDidCancel","_onDidTrigger","_onDidSuggest","onDidCancel","event","onDidTrigger","onDidSuggest","_currentSelection","getSelection","add","onDidChangeModel","_updateTriggerCharacters","cancel","onDidChangeModelLanguage","onDidChangeConfiguration","_updateQuickSuggest","onDidChange","_updateActiveSuggestSession","onDidChangeCursorSelection","e","_onCursorChange","editorIsComposing","onDidCompositionStart","onDidCompositionEnd","_refilterCompletionItems","onDidChangeModelContent","prototype","getOption","clear","supportsByTriggerCharacter","Map","_i","_a","all","length","support","_b","_c","triggerCharacters","ch","set","get","Set","checkTriggerCharacter","text","lastChar","charCodeAt","charAt","supports","items","_completionModel","adopt","undefined","trigger","triggerCharacter","Boolean","onDidType","Object","defineProperty","enumerable","configurable","retrigger","_requestToken","_context","fire","has","prevSelection","selection","isEmpty","reason","source","containsRange","getEndPosition","isBeforeOrEqual","snippetsPreventQuickSuggestions","isInSnippet","cancelAndSet","quickSuggestions","lineTokens","getLineTokens","tokenType","getStandardTokenType","findTokenIndexAtOffset","Math","max","inValidScope","other","comments","strings","Promise","resolve","then","ctx","_onNewContext","context","onlyFrom","existingItems","suggestCtx","triggerKind","size","snippetSuggestions","snippetSortOrder","itemKindFilter","_createItemKindFilter","wordDistance","create","token","cmpFn","concat","sort","characterCountDelta","items_1","item","container","catch","result","suggestOptions","showMethods","showFunctions","showConstructors","showFields","showVariables","showClasses","showStructs","showInterfaces","showModules","showProperties","showEvents","showOperators","showUnits","showValues","showConstants","showEnums","showEnumMembers","showKeywords","showWords","showColors","showFiles","showReferences","showFolders","showTypeParameters","showSnippets","startColumn","incomplete","adopted","oldLineContext","lineContext","isFrozen","completionModel"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { isNonEmptyArray } from '../../../base/common/arrays.js';\r\nimport { TimeoutTimer } from '../../../base/common/async.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { dispose, DisposableStore, isDisposable } from '../../../base/common/lifecycle.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { CompletionProviderRegistry } from '../../common/modes.js';\r\nimport { CompletionModel } from './completionModel.js';\r\nimport { getSuggestionComparator, provideSuggestionItems, getSnippetSuggestSupport, CompletionOptions } from './suggest.js';\r\nimport { SnippetController2 } from '../snippet/snippetController2.js';\r\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\r\nimport { WordDistance } from './wordDistance.js';\r\nimport { isLowSurrogate, isHighSurrogate } from '../../../base/common/strings.js';\r\nvar LineContext = /** @class */ (function () {\r\n    function LineContext(model, position, auto, shy) {\r\n        this.leadingLineContent = model.getLineContent(position.lineNumber).substr(0, position.column - 1);\r\n        this.leadingWord = model.getWordUntilPosition(position);\r\n        this.lineNumber = position.lineNumber;\r\n        this.column = position.column;\r\n        this.auto = auto;\r\n        this.shy = shy;\r\n    }\r\n    LineContext.shouldAutoTrigger = function (editor) {\r\n        if (!editor.hasModel()) {\r\n            return false;\r\n        }\r\n        var model = editor.getModel();\r\n        var pos = editor.getPosition();\r\n        model.tokenizeIfCheap(pos.lineNumber);\r\n        var word = model.getWordAtPosition(pos);\r\n        if (!word) {\r\n            return false;\r\n        }\r\n        if (word.endColumn !== pos.column) {\r\n            return false;\r\n        }\r\n        if (!isNaN(Number(word.word))) {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    return LineContext;\r\n}());\r\nexport { LineContext };\r\nvar SuggestModel = /** @class */ (function () {\r\n    function SuggestModel(_editor, _editorWorker) {\r\n        var _this = this;\r\n        this._editor = _editor;\r\n        this._editorWorker = _editorWorker;\r\n        this._toDispose = new DisposableStore();\r\n        this._quickSuggestDelay = 10;\r\n        this._triggerCharacterListener = new DisposableStore();\r\n        this._triggerQuickSuggest = new TimeoutTimer();\r\n        this._state = 0 /* Idle */;\r\n        this._completionDisposables = new DisposableStore();\r\n        this._onDidCancel = new Emitter();\r\n        this._onDidTrigger = new Emitter();\r\n        this._onDidSuggest = new Emitter();\r\n        this.onDidCancel = this._onDidCancel.event;\r\n        this.onDidTrigger = this._onDidTrigger.event;\r\n        this.onDidSuggest = this._onDidSuggest.event;\r\n        this._currentSelection = this._editor.getSelection() || new Selection(1, 1, 1, 1);\r\n        // wire up various listeners\r\n        this._toDispose.add(this._editor.onDidChangeModel(function () {\r\n            _this._updateTriggerCharacters();\r\n            _this.cancel();\r\n        }));\r\n        this._toDispose.add(this._editor.onDidChangeModelLanguage(function () {\r\n            _this._updateTriggerCharacters();\r\n            _this.cancel();\r\n        }));\r\n        this._toDispose.add(this._editor.onDidChangeConfiguration(function () {\r\n            _this._updateTriggerCharacters();\r\n            _this._updateQuickSuggest();\r\n        }));\r\n        this._toDispose.add(CompletionProviderRegistry.onDidChange(function () {\r\n            _this._updateTriggerCharacters();\r\n            _this._updateActiveSuggestSession();\r\n        }));\r\n        this._toDispose.add(this._editor.onDidChangeCursorSelection(function (e) {\r\n            _this._onCursorChange(e);\r\n        }));\r\n        var editorIsComposing = false;\r\n        this._toDispose.add(this._editor.onDidCompositionStart(function () {\r\n            editorIsComposing = true;\r\n        }));\r\n        this._toDispose.add(this._editor.onDidCompositionEnd(function () {\r\n            // refilter when composition ends\r\n            editorIsComposing = false;\r\n            _this._refilterCompletionItems();\r\n        }));\r\n        this._toDispose.add(this._editor.onDidChangeModelContent(function () {\r\n            // only filter completions when the editor isn't\r\n            // composing a character, e.g. ¨ + u makes ü but just\r\n            // ¨ cannot be used for filtering\r\n            if (!editorIsComposing) {\r\n                _this._refilterCompletionItems();\r\n            }\r\n        }));\r\n        this._updateTriggerCharacters();\r\n        this._updateQuickSuggest();\r\n    }\r\n    SuggestModel.prototype.dispose = function () {\r\n        dispose(this._triggerCharacterListener);\r\n        dispose([this._onDidCancel, this._onDidSuggest, this._onDidTrigger, this._triggerQuickSuggest]);\r\n        this._toDispose.dispose();\r\n        this._completionDisposables.dispose();\r\n        this.cancel();\r\n    };\r\n    // --- handle configuration & precondition changes\r\n    SuggestModel.prototype._updateQuickSuggest = function () {\r\n        this._quickSuggestDelay = this._editor.getOption(67 /* quickSuggestionsDelay */);\r\n        if (isNaN(this._quickSuggestDelay) || (!this._quickSuggestDelay && this._quickSuggestDelay !== 0) || this._quickSuggestDelay < 0) {\r\n            this._quickSuggestDelay = 10;\r\n        }\r\n    };\r\n    SuggestModel.prototype._updateTriggerCharacters = function () {\r\n        var _this = this;\r\n        this._triggerCharacterListener.clear();\r\n        if (this._editor.getOption(68 /* readOnly */)\r\n            || !this._editor.hasModel()\r\n            || !this._editor.getOption(92 /* suggestOnTriggerCharacters */)) {\r\n            return;\r\n        }\r\n        var supportsByTriggerCharacter = new Map();\r\n        for (var _i = 0, _a = CompletionProviderRegistry.all(this._editor.getModel()); _i < _a.length; _i++) {\r\n            var support = _a[_i];\r\n            for (var _b = 0, _c = support.triggerCharacters || []; _b < _c.length; _b++) {\r\n                var ch = _c[_b];\r\n                var set = supportsByTriggerCharacter.get(ch);\r\n                if (!set) {\r\n                    set = new Set();\r\n                    set.add(getSnippetSuggestSupport());\r\n                    supportsByTriggerCharacter.set(ch, set);\r\n                }\r\n                set.add(support);\r\n            }\r\n        }\r\n        var checkTriggerCharacter = function (text) {\r\n            if (!text) {\r\n                // came here from the compositionEnd-event\r\n                var position = _this._editor.getPosition();\r\n                var model = _this._editor.getModel();\r\n                text = model.getLineContent(position.lineNumber).substr(0, position.column - 1);\r\n            }\r\n            var lastChar = '';\r\n            if (isLowSurrogate(text.charCodeAt(text.length - 1))) {\r\n                if (isHighSurrogate(text.charCodeAt(text.length - 2))) {\r\n                    lastChar = text.substr(text.length - 2);\r\n                }\r\n            }\r\n            else {\r\n                lastChar = text.charAt(text.length - 1);\r\n            }\r\n            var supports = supportsByTriggerCharacter.get(lastChar);\r\n            if (supports) {\r\n                // keep existing items that where not computed by the\r\n                // supports/providers that want to trigger now\r\n                var items = _this._completionModel ? _this._completionModel.adopt(supports) : undefined;\r\n                _this.trigger({ auto: true, shy: false, triggerCharacter: lastChar }, Boolean(_this._completionModel), supports, items);\r\n            }\r\n        };\r\n        this._triggerCharacterListener.add(this._editor.onDidType(checkTriggerCharacter));\r\n        this._triggerCharacterListener.add(this._editor.onDidCompositionEnd(checkTriggerCharacter));\r\n    };\r\n    Object.defineProperty(SuggestModel.prototype, \"state\", {\r\n        // --- trigger/retrigger/cancel suggest\r\n        get: function () {\r\n            return this._state;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SuggestModel.prototype.cancel = function (retrigger) {\r\n        if (retrigger === void 0) { retrigger = false; }\r\n        if (this._state !== 0 /* Idle */) {\r\n            this._triggerQuickSuggest.cancel();\r\n            if (this._requestToken) {\r\n                this._requestToken.cancel();\r\n                this._requestToken = undefined;\r\n            }\r\n            this._state = 0 /* Idle */;\r\n            this._completionModel = undefined;\r\n            this._context = undefined;\r\n            this._onDidCancel.fire({ retrigger: retrigger });\r\n        }\r\n    };\r\n    SuggestModel.prototype.clear = function () {\r\n        this._completionDisposables.clear();\r\n    };\r\n    SuggestModel.prototype._updateActiveSuggestSession = function () {\r\n        if (this._state !== 0 /* Idle */) {\r\n            if (!this._editor.hasModel() || !CompletionProviderRegistry.has(this._editor.getModel())) {\r\n                this.cancel();\r\n            }\r\n            else {\r\n                this.trigger({ auto: this._state === 2 /* Auto */, shy: false }, true);\r\n            }\r\n        }\r\n    };\r\n    SuggestModel.prototype._onCursorChange = function (e) {\r\n        var _this = this;\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        var model = this._editor.getModel();\r\n        var prevSelection = this._currentSelection;\r\n        this._currentSelection = this._editor.getSelection();\r\n        if (!e.selection.isEmpty()\r\n            || e.reason !== 0 /* NotSet */\r\n            || (e.source !== 'keyboard' && e.source !== 'deleteLeft')) {\r\n            // Early exit if nothing needs to be done!\r\n            // Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\r\n            this.cancel();\r\n            return;\r\n        }\r\n        if (!CompletionProviderRegistry.has(model)) {\r\n            return;\r\n        }\r\n        if (this._state === 0 /* Idle */) {\r\n            if (this._editor.getOption(66 /* quickSuggestions */) === false) {\r\n                // not enabled\r\n                return;\r\n            }\r\n            if (!prevSelection.containsRange(this._currentSelection) && !prevSelection.getEndPosition().isBeforeOrEqual(this._currentSelection.getPosition())) {\r\n                // cursor didn't move RIGHT\r\n                return;\r\n            }\r\n            if (this._editor.getOption(89 /* suggest */).snippetsPreventQuickSuggestions && SnippetController2.get(this._editor).isInSnippet()) {\r\n                // no quick suggestion when in snippet mode\r\n                return;\r\n            }\r\n            this.cancel();\r\n            this._triggerQuickSuggest.cancelAndSet(function () {\r\n                if (_this._state !== 0 /* Idle */) {\r\n                    return;\r\n                }\r\n                if (!LineContext.shouldAutoTrigger(_this._editor)) {\r\n                    return;\r\n                }\r\n                if (!_this._editor.hasModel()) {\r\n                    return;\r\n                }\r\n                var model = _this._editor.getModel();\r\n                var pos = _this._editor.getPosition();\r\n                // validate enabled now\r\n                var quickSuggestions = _this._editor.getOption(66 /* quickSuggestions */);\r\n                if (quickSuggestions === false) {\r\n                    return;\r\n                }\r\n                else if (quickSuggestions === true) {\r\n                    // all good\r\n                }\r\n                else {\r\n                    // Check the type of the token that triggered this\r\n                    model.tokenizeIfCheap(pos.lineNumber);\r\n                    var lineTokens = model.getLineTokens(pos.lineNumber);\r\n                    var tokenType = lineTokens.getStandardTokenType(lineTokens.findTokenIndexAtOffset(Math.max(pos.column - 1 - 1, 0)));\r\n                    var inValidScope = quickSuggestions.other && tokenType === 0 /* Other */\r\n                        || quickSuggestions.comments && tokenType === 1 /* Comment */\r\n                        || quickSuggestions.strings && tokenType === 2 /* String */;\r\n                    if (!inValidScope) {\r\n                        return;\r\n                    }\r\n                }\r\n                // we made it till here -> trigger now\r\n                _this.trigger({ auto: true, shy: false });\r\n            }, this._quickSuggestDelay);\r\n        }\r\n    };\r\n    SuggestModel.prototype._refilterCompletionItems = function () {\r\n        var _this = this;\r\n        // Re-filter suggestions. This MUST run async because filtering/scoring\r\n        // uses the model content AND the cursor position. The latter is NOT\r\n        // updated when the document has changed (the event which drives this method)\r\n        // and therefore a little pause (next mirco task) is needed. See:\r\n        // https://stackoverflow.com/questions/25915634/difference-between-microtask-and-macrotask-within-an-event-loop-context#25933985\r\n        Promise.resolve().then(function () {\r\n            if (_this._state === 0 /* Idle */) {\r\n                return;\r\n            }\r\n            if (!_this._editor.hasModel()) {\r\n                return;\r\n            }\r\n            var model = _this._editor.getModel();\r\n            var position = _this._editor.getPosition();\r\n            var ctx = new LineContext(model, position, _this._state === 2 /* Auto */, false);\r\n            _this._onNewContext(ctx);\r\n        });\r\n    };\r\n    SuggestModel.prototype.trigger = function (context, retrigger, onlyFrom, existingItems) {\r\n        var _this = this;\r\n        if (retrigger === void 0) { retrigger = false; }\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        var model = this._editor.getModel();\r\n        var auto = context.auto;\r\n        var ctx = new LineContext(model, this._editor.getPosition(), auto, context.shy);\r\n        // Cancel previous requests, change state & update UI\r\n        this.cancel(retrigger);\r\n        this._state = auto ? 2 /* Auto */ : 1 /* Manual */;\r\n        this._onDidTrigger.fire({ auto: auto, shy: context.shy, position: this._editor.getPosition() });\r\n        // Capture context when request was sent\r\n        this._context = ctx;\r\n        // Build context for request\r\n        var suggestCtx;\r\n        if (context.triggerCharacter) {\r\n            suggestCtx = {\r\n                triggerKind: 1 /* TriggerCharacter */,\r\n                triggerCharacter: context.triggerCharacter\r\n            };\r\n        }\r\n        else if (onlyFrom && onlyFrom.size > 0) {\r\n            suggestCtx = { triggerKind: 2 /* TriggerForIncompleteCompletions */ };\r\n        }\r\n        else {\r\n            suggestCtx = { triggerKind: 0 /* Invoke */ };\r\n        }\r\n        this._requestToken = new CancellationTokenSource();\r\n        // kind filter and snippet sort rules\r\n        var snippetSuggestions = this._editor.getOption(86 /* snippetSuggestions */);\r\n        var snippetSortOrder = 1 /* Inline */;\r\n        switch (snippetSuggestions) {\r\n            case 'top':\r\n                snippetSortOrder = 0 /* Top */;\r\n                break;\r\n            // \t↓ that's the default anyways...\r\n            // case 'inline':\r\n            // \tsnippetSortOrder = SnippetSortOrder.Inline;\r\n            // \tbreak;\r\n            case 'bottom':\r\n                snippetSortOrder = 2 /* Bottom */;\r\n                break;\r\n        }\r\n        var itemKindFilter = SuggestModel._createItemKindFilter(this._editor);\r\n        var wordDistance = WordDistance.create(this._editorWorker, this._editor);\r\n        var items = provideSuggestionItems(model, this._editor.getPosition(), new CompletionOptions(snippetSortOrder, itemKindFilter, onlyFrom), suggestCtx, this._requestToken.token);\r\n        Promise.all([items, wordDistance]).then(function (_a) {\r\n            var items = _a[0], wordDistance = _a[1];\r\n            dispose(_this._requestToken);\r\n            if (_this._state === 0 /* Idle */) {\r\n                return;\r\n            }\r\n            if (!_this._editor.hasModel()) {\r\n                return;\r\n            }\r\n            var model = _this._editor.getModel();\r\n            if (isNonEmptyArray(existingItems)) {\r\n                var cmpFn = getSuggestionComparator(snippetSortOrder);\r\n                items = items.concat(existingItems).sort(cmpFn);\r\n            }\r\n            var ctx = new LineContext(model, _this._editor.getPosition(), auto, context.shy);\r\n            _this._completionModel = new CompletionModel(items, _this._context.column, {\r\n                leadingLineContent: ctx.leadingLineContent,\r\n                characterCountDelta: ctx.column - _this._context.column\r\n            }, wordDistance, _this._editor.getOption(89 /* suggest */), _this._editor.getOption(86 /* snippetSuggestions */));\r\n            // store containers so that they can be disposed later\r\n            for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\r\n                var item = items_1[_i];\r\n                if (isDisposable(item.container)) {\r\n                    _this._completionDisposables.add(item.container);\r\n                }\r\n            }\r\n            _this._onNewContext(ctx);\r\n        }).catch(onUnexpectedError);\r\n    };\r\n    SuggestModel._createItemKindFilter = function (editor) {\r\n        // kind filter and snippet sort rules\r\n        var result = new Set();\r\n        // snippet setting\r\n        var snippetSuggestions = editor.getOption(86 /* snippetSuggestions */);\r\n        if (snippetSuggestions === 'none') {\r\n            result.add(25 /* Snippet */);\r\n        }\r\n        // type setting\r\n        var suggestOptions = editor.getOption(89 /* suggest */);\r\n        if (!suggestOptions.showMethods) {\r\n            result.add(0 /* Method */);\r\n        }\r\n        if (!suggestOptions.showFunctions) {\r\n            result.add(1 /* Function */);\r\n        }\r\n        if (!suggestOptions.showConstructors) {\r\n            result.add(2 /* Constructor */);\r\n        }\r\n        if (!suggestOptions.showFields) {\r\n            result.add(3 /* Field */);\r\n        }\r\n        if (!suggestOptions.showVariables) {\r\n            result.add(4 /* Variable */);\r\n        }\r\n        if (!suggestOptions.showClasses) {\r\n            result.add(5 /* Class */);\r\n        }\r\n        if (!suggestOptions.showStructs) {\r\n            result.add(6 /* Struct */);\r\n        }\r\n        if (!suggestOptions.showInterfaces) {\r\n            result.add(7 /* Interface */);\r\n        }\r\n        if (!suggestOptions.showModules) {\r\n            result.add(8 /* Module */);\r\n        }\r\n        if (!suggestOptions.showProperties) {\r\n            result.add(9 /* Property */);\r\n        }\r\n        if (!suggestOptions.showEvents) {\r\n            result.add(10 /* Event */);\r\n        }\r\n        if (!suggestOptions.showOperators) {\r\n            result.add(11 /* Operator */);\r\n        }\r\n        if (!suggestOptions.showUnits) {\r\n            result.add(12 /* Unit */);\r\n        }\r\n        if (!suggestOptions.showValues) {\r\n            result.add(13 /* Value */);\r\n        }\r\n        if (!suggestOptions.showConstants) {\r\n            result.add(14 /* Constant */);\r\n        }\r\n        if (!suggestOptions.showEnums) {\r\n            result.add(15 /* Enum */);\r\n        }\r\n        if (!suggestOptions.showEnumMembers) {\r\n            result.add(16 /* EnumMember */);\r\n        }\r\n        if (!suggestOptions.showKeywords) {\r\n            result.add(17 /* Keyword */);\r\n        }\r\n        if (!suggestOptions.showWords) {\r\n            result.add(18 /* Text */);\r\n        }\r\n        if (!suggestOptions.showColors) {\r\n            result.add(19 /* Color */);\r\n        }\r\n        if (!suggestOptions.showFiles) {\r\n            result.add(20 /* File */);\r\n        }\r\n        if (!suggestOptions.showReferences) {\r\n            result.add(21 /* Reference */);\r\n        }\r\n        if (!suggestOptions.showColors) {\r\n            result.add(22 /* Customcolor */);\r\n        }\r\n        if (!suggestOptions.showFolders) {\r\n            result.add(23 /* Folder */);\r\n        }\r\n        if (!suggestOptions.showTypeParameters) {\r\n            result.add(24 /* TypeParameter */);\r\n        }\r\n        if (!suggestOptions.showSnippets) {\r\n            result.add(25 /* Snippet */);\r\n        }\r\n        return result;\r\n    };\r\n    SuggestModel.prototype._onNewContext = function (ctx) {\r\n        if (!this._context) {\r\n            // happens when 24x7 IntelliSense is enabled and still in its delay\r\n            return;\r\n        }\r\n        if (ctx.lineNumber !== this._context.lineNumber) {\r\n            // e.g. happens when pressing Enter while IntelliSense is computed\r\n            this.cancel();\r\n            return;\r\n        }\r\n        if (ctx.leadingWord.startColumn < this._context.leadingWord.startColumn) {\r\n            // happens when the current word gets outdented\r\n            this.cancel();\r\n            return;\r\n        }\r\n        if (ctx.column < this._context.column) {\r\n            // typed -> moved cursor LEFT -> retrigger if still on a word\r\n            if (ctx.leadingWord.word) {\r\n                this.trigger({ auto: this._context.auto, shy: false }, true);\r\n            }\r\n            else {\r\n                this.cancel();\r\n            }\r\n            return;\r\n        }\r\n        if (!this._completionModel) {\r\n            // happens when IntelliSense is not yet computed\r\n            return;\r\n        }\r\n        if (ctx.column > this._context.column && this._completionModel.incomplete.size > 0 && ctx.leadingWord.word.length !== 0) {\r\n            // typed -> moved cursor RIGHT & incomple model & still on a word -> retrigger\r\n            var incomplete = this._completionModel.incomplete;\r\n            var adopted = this._completionModel.adopt(incomplete);\r\n            this.trigger({ auto: this._state === 2 /* Auto */, shy: false }, true, incomplete, adopted);\r\n        }\r\n        else {\r\n            // typed -> moved cursor RIGHT -> update UI\r\n            var oldLineContext = this._completionModel.lineContext;\r\n            var isFrozen = false;\r\n            this._completionModel.lineContext = {\r\n                leadingLineContent: ctx.leadingLineContent,\r\n                characterCountDelta: ctx.column - this._context.column\r\n            };\r\n            if (this._completionModel.items.length === 0) {\r\n                if (LineContext.shouldAutoTrigger(this._editor) && this._context.leadingWord.endColumn < ctx.leadingWord.startColumn) {\r\n                    // retrigger when heading into a new word\r\n                    this.trigger({ auto: this._context.auto, shy: false }, true);\r\n                    return;\r\n                }\r\n                if (!this._context.auto) {\r\n                    // freeze when IntelliSense was manually requested\r\n                    this._completionModel.lineContext = oldLineContext;\r\n                    isFrozen = this._completionModel.items.length > 0;\r\n                    if (isFrozen && ctx.leadingWord.word.length === 0) {\r\n                        // there were results before but now there aren't\r\n                        // and also we are not on a word anymore -> cancel\r\n                        this.cancel();\r\n                        return;\r\n                    }\r\n                }\r\n                else {\r\n                    // nothing left\r\n                    this.cancel();\r\n                    return;\r\n                }\r\n            }\r\n            this._onDidSuggest.fire({\r\n                completionModel: this._completionModel,\r\n                auto: this._context.auto,\r\n                shy: this._context.shy,\r\n                isFrozen: isFrozen,\r\n            });\r\n        }\r\n    };\r\n    return SuggestModel;\r\n}());\r\nexport { SuggestModel };\r\n"]},"metadata":{},"sourceType":"module"}