{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport './gotoLine.css';\nimport * as strings from '../../../../base/common/strings.js';\nimport { QuickOpenEntry, QuickOpenModel } from '../../../../base/parts/quickopen/browser/quickOpenModel.js';\nimport { isCodeEditor } from '../../../browser/editorBrowser.js';\nimport { registerEditorAction } from '../../../browser/editorExtensions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { BaseEditorQuickOpenAction } from './editorQuickOpen.js';\nimport { GoToLineNLS } from '../../../common/standaloneStrings.js';\n\nvar GotoLineEntry =\n/** @class */\nfunction (_super) {\n  __extends(GotoLineEntry, _super);\n\n  function GotoLineEntry(line, editor, decorator) {\n    var _this = _super.call(this) || this;\n\n    _this.editor = editor;\n    _this.decorator = decorator;\n    _this.parseResult = _this.parseInput(line);\n    return _this;\n  }\n\n  GotoLineEntry.prototype.parseInput = function (line) {\n    var numbers = line.split(',').map(function (part) {\n      return parseInt(part, 10);\n    }).filter(function (part) {\n      return !isNaN(part);\n    });\n    var position;\n\n    if (numbers.length === 0) {\n      position = new Position(-1, -1);\n    } else if (numbers.length === 1) {\n      position = new Position(numbers[0], 1);\n    } else {\n      position = new Position(numbers[0], numbers[1]);\n    }\n\n    var model;\n\n    if (isCodeEditor(this.editor)) {\n      model = this.editor.getModel();\n    } else {\n      var diffModel = this.editor.getModel();\n      model = diffModel ? diffModel.modified : null;\n    }\n\n    var isValid = model ? model.validatePosition(position).equals(position) : false;\n    var label;\n\n    if (isValid) {\n      if (position.column && position.column > 1) {\n        label = strings.format(GoToLineNLS.gotoLineLabelValidLineAndColumn, position.lineNumber, position.column);\n      } else {\n        label = strings.format(GoToLineNLS.gotoLineLabelValidLine, position.lineNumber);\n      }\n    } else if (position.lineNumber < 1 || position.lineNumber > (model ? model.getLineCount() : 0)) {\n      label = strings.format(GoToLineNLS.gotoLineLabelEmptyWithLineLimit, model ? model.getLineCount() : 0);\n    } else {\n      label = strings.format(GoToLineNLS.gotoLineLabelEmptyWithLineAndColumnLimit, model ? model.getLineMaxColumn(position.lineNumber) : 0);\n    }\n\n    return {\n      position: position,\n      isValid: isValid,\n      label: label\n    };\n  };\n\n  GotoLineEntry.prototype.getLabel = function () {\n    return this.parseResult.label;\n  };\n\n  GotoLineEntry.prototype.getAriaLabel = function () {\n    var position = this.editor.getPosition();\n    var currentLine = position ? position.lineNumber : 0;\n    return strings.format(GoToLineNLS.gotoLineAriaLabel, currentLine, this.parseResult.label);\n  };\n\n  GotoLineEntry.prototype.run = function (mode, _context) {\n    if (mode === 1\n    /* OPEN */\n    ) {\n        return this.runOpen();\n      }\n\n    return this.runPreview();\n  };\n\n  GotoLineEntry.prototype.runOpen = function () {\n    // No-op if range is not valid\n    if (!this.parseResult.isValid) {\n      return false;\n    } // Apply selection and focus\n\n\n    var range = this.toSelection();\n    this.editor.setSelection(range);\n    this.editor.revealRangeInCenter(range, 0\n    /* Smooth */\n    );\n    this.editor.focus();\n    return true;\n  };\n\n  GotoLineEntry.prototype.runPreview = function () {\n    // No-op if range is not valid\n    if (!this.parseResult.isValid) {\n      this.decorator.clearDecorations();\n      return false;\n    } // Select Line Position\n\n\n    var range = this.toSelection();\n    this.editor.revealRangeInCenter(range, 0\n    /* Smooth */\n    ); // Decorate if possible\n\n    this.decorator.decorateLine(range, this.editor);\n    return false;\n  };\n\n  GotoLineEntry.prototype.toSelection = function () {\n    return new Range(this.parseResult.position.lineNumber, this.parseResult.position.column, this.parseResult.position.lineNumber, this.parseResult.position.column);\n  };\n\n  return GotoLineEntry;\n}(QuickOpenEntry);\n\nexport { GotoLineEntry };\n\nvar GotoLineAction =\n/** @class */\nfunction (_super) {\n  __extends(GotoLineAction, _super);\n\n  function GotoLineAction() {\n    return _super.call(this, GoToLineNLS.gotoLineActionInput, {\n      id: 'editor.action.gotoLine',\n      label: GoToLineNLS.gotoLineActionLabel,\n      alias: 'Go to Line...',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.focus,\n        primary: 2048\n        /* CtrlCmd */\n        | 37\n        /* KEY_G */\n        ,\n        mac: {\n          primary: 256\n          /* WinCtrl */\n          | 37\n          /* KEY_G */\n\n        },\n        weight: 100\n        /* EditorContrib */\n\n      }\n    }) || this;\n  }\n\n  GotoLineAction.prototype.run = function (accessor, editor) {\n    var _this = this;\n\n    this._show(this.getController(editor), {\n      getModel: function (value) {\n        return new QuickOpenModel([new GotoLineEntry(value, editor, _this.getController(editor))]);\n      },\n      getAutoFocus: function (searchValue) {\n        return {\n          autoFocusFirstEntry: searchValue.length > 0\n        };\n      }\n    });\n  };\n\n  return GotoLineAction;\n}(BaseEditorQuickOpenAction);\n\nexport { GotoLineAction };\nregisterEditorAction(GotoLineAction);","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/standalone/browser/quickOpen/gotoLine.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","strings","QuickOpenEntry","QuickOpenModel","isCodeEditor","registerEditorAction","Position","Range","EditorContextKeys","BaseEditorQuickOpenAction","GoToLineNLS","GotoLineEntry","_super","line","editor","decorator","_this","call","parseResult","parseInput","numbers","split","map","part","parseInt","filter","isNaN","position","length","model","getModel","diffModel","modified","isValid","validatePosition","equals","label","column","format","gotoLineLabelValidLineAndColumn","lineNumber","gotoLineLabelValidLine","getLineCount","gotoLineLabelEmptyWithLineLimit","gotoLineLabelEmptyWithLineAndColumnLimit","getLineMaxColumn","getLabel","getAriaLabel","getPosition","currentLine","gotoLineAriaLabel","run","mode","_context","runOpen","runPreview","range","toSelection","setSelection","revealRangeInCenter","focus","clearDecorations","decorateLine","GotoLineAction","gotoLineActionInput","id","gotoLineActionLabel","alias","precondition","undefined","kbOpts","kbExpr","primary","mac","weight","accessor","_show","getController","value","getAutoFocus","searchValue","autoFocusFirstEntry"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport './gotoLine.css';\r\nimport * as strings from '../../../../base/common/strings.js';\r\nimport { QuickOpenEntry, QuickOpenModel } from '../../../../base/parts/quickopen/browser/quickOpenModel.js';\r\nimport { isCodeEditor } from '../../../browser/editorBrowser.js';\r\nimport { registerEditorAction } from '../../../browser/editorExtensions.js';\r\nimport { Position } from '../../../common/core/position.js';\r\nimport { Range } from '../../../common/core/range.js';\r\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\r\nimport { BaseEditorQuickOpenAction } from './editorQuickOpen.js';\r\nimport { GoToLineNLS } from '../../../common/standaloneStrings.js';\r\nvar GotoLineEntry = /** @class */ (function (_super) {\r\n    __extends(GotoLineEntry, _super);\r\n    function GotoLineEntry(line, editor, decorator) {\r\n        var _this = _super.call(this) || this;\r\n        _this.editor = editor;\r\n        _this.decorator = decorator;\r\n        _this.parseResult = _this.parseInput(line);\r\n        return _this;\r\n    }\r\n    GotoLineEntry.prototype.parseInput = function (line) {\r\n        var numbers = line.split(',').map(function (part) { return parseInt(part, 10); }).filter(function (part) { return !isNaN(part); });\r\n        var position;\r\n        if (numbers.length === 0) {\r\n            position = new Position(-1, -1);\r\n        }\r\n        else if (numbers.length === 1) {\r\n            position = new Position(numbers[0], 1);\r\n        }\r\n        else {\r\n            position = new Position(numbers[0], numbers[1]);\r\n        }\r\n        var model;\r\n        if (isCodeEditor(this.editor)) {\r\n            model = this.editor.getModel();\r\n        }\r\n        else {\r\n            var diffModel = this.editor.getModel();\r\n            model = diffModel ? diffModel.modified : null;\r\n        }\r\n        var isValid = model ? model.validatePosition(position).equals(position) : false;\r\n        var label;\r\n        if (isValid) {\r\n            if (position.column && position.column > 1) {\r\n                label = strings.format(GoToLineNLS.gotoLineLabelValidLineAndColumn, position.lineNumber, position.column);\r\n            }\r\n            else {\r\n                label = strings.format(GoToLineNLS.gotoLineLabelValidLine, position.lineNumber);\r\n            }\r\n        }\r\n        else if (position.lineNumber < 1 || position.lineNumber > (model ? model.getLineCount() : 0)) {\r\n            label = strings.format(GoToLineNLS.gotoLineLabelEmptyWithLineLimit, model ? model.getLineCount() : 0);\r\n        }\r\n        else {\r\n            label = strings.format(GoToLineNLS.gotoLineLabelEmptyWithLineAndColumnLimit, model ? model.getLineMaxColumn(position.lineNumber) : 0);\r\n        }\r\n        return {\r\n            position: position,\r\n            isValid: isValid,\r\n            label: label\r\n        };\r\n    };\r\n    GotoLineEntry.prototype.getLabel = function () {\r\n        return this.parseResult.label;\r\n    };\r\n    GotoLineEntry.prototype.getAriaLabel = function () {\r\n        var position = this.editor.getPosition();\r\n        var currentLine = position ? position.lineNumber : 0;\r\n        return strings.format(GoToLineNLS.gotoLineAriaLabel, currentLine, this.parseResult.label);\r\n    };\r\n    GotoLineEntry.prototype.run = function (mode, _context) {\r\n        if (mode === 1 /* OPEN */) {\r\n            return this.runOpen();\r\n        }\r\n        return this.runPreview();\r\n    };\r\n    GotoLineEntry.prototype.runOpen = function () {\r\n        // No-op if range is not valid\r\n        if (!this.parseResult.isValid) {\r\n            return false;\r\n        }\r\n        // Apply selection and focus\r\n        var range = this.toSelection();\r\n        this.editor.setSelection(range);\r\n        this.editor.revealRangeInCenter(range, 0 /* Smooth */);\r\n        this.editor.focus();\r\n        return true;\r\n    };\r\n    GotoLineEntry.prototype.runPreview = function () {\r\n        // No-op if range is not valid\r\n        if (!this.parseResult.isValid) {\r\n            this.decorator.clearDecorations();\r\n            return false;\r\n        }\r\n        // Select Line Position\r\n        var range = this.toSelection();\r\n        this.editor.revealRangeInCenter(range, 0 /* Smooth */);\r\n        // Decorate if possible\r\n        this.decorator.decorateLine(range, this.editor);\r\n        return false;\r\n    };\r\n    GotoLineEntry.prototype.toSelection = function () {\r\n        return new Range(this.parseResult.position.lineNumber, this.parseResult.position.column, this.parseResult.position.lineNumber, this.parseResult.position.column);\r\n    };\r\n    return GotoLineEntry;\r\n}(QuickOpenEntry));\r\nexport { GotoLineEntry };\r\nvar GotoLineAction = /** @class */ (function (_super) {\r\n    __extends(GotoLineAction, _super);\r\n    function GotoLineAction() {\r\n        return _super.call(this, GoToLineNLS.gotoLineActionInput, {\r\n            id: 'editor.action.gotoLine',\r\n            label: GoToLineNLS.gotoLineActionLabel,\r\n            alias: 'Go to Line...',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: 2048 /* CtrlCmd */ | 37 /* KEY_G */,\r\n                mac: { primary: 256 /* WinCtrl */ | 37 /* KEY_G */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        }) || this;\r\n    }\r\n    GotoLineAction.prototype.run = function (accessor, editor) {\r\n        var _this = this;\r\n        this._show(this.getController(editor), {\r\n            getModel: function (value) {\r\n                return new QuickOpenModel([new GotoLineEntry(value, editor, _this.getController(editor))]);\r\n            },\r\n            getAutoFocus: function (searchValue) {\r\n                return {\r\n                    autoFocusFirstEntry: searchValue.length > 0\r\n                };\r\n            }\r\n        });\r\n    };\r\n    return GotoLineAction;\r\n}(BaseEditorQuickOpenAction));\r\nexport { GotoLineAction };\r\nregisterEditorAction(GotoLineAction);\r\n"]},"metadata":{},"sourceType":"module"}