{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport './keybindingLabel.css';\nimport { equals } from '../../../common/objects.js';\nimport { UILabelProvider } from '../../../common/keybindingLabels.js';\nimport * as dom from '../../dom.js';\nimport { localize } from '../../../../nls.js';\nvar $ = dom.$;\n\nvar KeybindingLabel =\n/** @class */\nfunction () {\n  function KeybindingLabel(container, os, options) {\n    this.os = os;\n    this.options = options;\n    this.domNode = dom.append(container, $('.monaco-keybinding'));\n    this.didEverRender = false;\n    container.appendChild(this.domNode);\n  }\n\n  KeybindingLabel.prototype.set = function (keybinding, matches) {\n    if (this.didEverRender && this.keybinding === keybinding && KeybindingLabel.areSame(this.matches, matches)) {\n      return;\n    }\n\n    this.keybinding = keybinding;\n    this.matches = matches;\n    this.render();\n  };\n\n  KeybindingLabel.prototype.render = function () {\n    dom.clearNode(this.domNode);\n\n    if (this.keybinding) {\n      var _a = this.keybinding.getParts(),\n          firstPart = _a[0],\n          chordPart = _a[1];\n\n      if (firstPart) {\n        this.renderPart(this.domNode, firstPart, this.matches ? this.matches.firstPart : null);\n      }\n\n      if (chordPart) {\n        dom.append(this.domNode, $('span.monaco-keybinding-key-chord-separator', undefined, ' '));\n        this.renderPart(this.domNode, chordPart, this.matches ? this.matches.chordPart : null);\n      }\n\n      this.domNode.title = this.keybinding.getAriaLabel() || '';\n    } else if (this.options && this.options.renderUnboundKeybindings) {\n      this.renderUnbound(this.domNode);\n    }\n\n    this.didEverRender = true;\n  };\n\n  KeybindingLabel.prototype.renderPart = function (parent, part, match) {\n    var modifierLabels = UILabelProvider.modifierLabels[this.os];\n\n    if (part.ctrlKey) {\n      this.renderKey(parent, modifierLabels.ctrlKey, Boolean(match === null || match === void 0 ? void 0 : match.ctrlKey), modifierLabels.separator);\n    }\n\n    if (part.shiftKey) {\n      this.renderKey(parent, modifierLabels.shiftKey, Boolean(match === null || match === void 0 ? void 0 : match.shiftKey), modifierLabels.separator);\n    }\n\n    if (part.altKey) {\n      this.renderKey(parent, modifierLabels.altKey, Boolean(match === null || match === void 0 ? void 0 : match.altKey), modifierLabels.separator);\n    }\n\n    if (part.metaKey) {\n      this.renderKey(parent, modifierLabels.metaKey, Boolean(match === null || match === void 0 ? void 0 : match.metaKey), modifierLabels.separator);\n    }\n\n    var keyLabel = part.keyLabel;\n\n    if (keyLabel) {\n      this.renderKey(parent, keyLabel, Boolean(match === null || match === void 0 ? void 0 : match.keyCode), '');\n    }\n  };\n\n  KeybindingLabel.prototype.renderKey = function (parent, label, highlight, separator) {\n    dom.append(parent, $('span.monaco-keybinding-key' + (highlight ? '.highlight' : ''), undefined, label));\n\n    if (separator) {\n      dom.append(parent, $('span.monaco-keybinding-key-separator', undefined, separator));\n    }\n  };\n\n  KeybindingLabel.prototype.renderUnbound = function (parent) {\n    dom.append(parent, $('span.monaco-keybinding-key', undefined, localize('unbound', \"Unbound\")));\n  };\n\n  KeybindingLabel.areSame = function (a, b) {\n    if (a === b || !a && !b) {\n      return true;\n    }\n\n    return !!a && !!b && equals(a.firstPart, b.firstPart) && equals(a.chordPart, b.chordPart);\n  };\n\n  return KeybindingLabel;\n}();\n\nexport { KeybindingLabel };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/base/browser/ui/keybindingLabel/keybindingLabel.js"],"names":["equals","UILabelProvider","dom","localize","$","KeybindingLabel","container","os","options","domNode","append","didEverRender","appendChild","prototype","set","keybinding","matches","areSame","render","clearNode","_a","getParts","firstPart","chordPart","renderPart","undefined","title","getAriaLabel","renderUnboundKeybindings","renderUnbound","parent","part","match","modifierLabels","ctrlKey","renderKey","Boolean","separator","shiftKey","altKey","metaKey","keyLabel","keyCode","label","highlight","a","b"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './keybindingLabel.css';\r\nimport { equals } from '../../../common/objects.js';\r\nimport { UILabelProvider } from '../../../common/keybindingLabels.js';\r\nimport * as dom from '../../dom.js';\r\nimport { localize } from '../../../../nls.js';\r\nvar $ = dom.$;\r\nvar KeybindingLabel = /** @class */ (function () {\r\n    function KeybindingLabel(container, os, options) {\r\n        this.os = os;\r\n        this.options = options;\r\n        this.domNode = dom.append(container, $('.monaco-keybinding'));\r\n        this.didEverRender = false;\r\n        container.appendChild(this.domNode);\r\n    }\r\n    KeybindingLabel.prototype.set = function (keybinding, matches) {\r\n        if (this.didEverRender && this.keybinding === keybinding && KeybindingLabel.areSame(this.matches, matches)) {\r\n            return;\r\n        }\r\n        this.keybinding = keybinding;\r\n        this.matches = matches;\r\n        this.render();\r\n    };\r\n    KeybindingLabel.prototype.render = function () {\r\n        dom.clearNode(this.domNode);\r\n        if (this.keybinding) {\r\n            var _a = this.keybinding.getParts(), firstPart = _a[0], chordPart = _a[1];\r\n            if (firstPart) {\r\n                this.renderPart(this.domNode, firstPart, this.matches ? this.matches.firstPart : null);\r\n            }\r\n            if (chordPart) {\r\n                dom.append(this.domNode, $('span.monaco-keybinding-key-chord-separator', undefined, ' '));\r\n                this.renderPart(this.domNode, chordPart, this.matches ? this.matches.chordPart : null);\r\n            }\r\n            this.domNode.title = this.keybinding.getAriaLabel() || '';\r\n        }\r\n        else if (this.options && this.options.renderUnboundKeybindings) {\r\n            this.renderUnbound(this.domNode);\r\n        }\r\n        this.didEverRender = true;\r\n    };\r\n    KeybindingLabel.prototype.renderPart = function (parent, part, match) {\r\n        var modifierLabels = UILabelProvider.modifierLabels[this.os];\r\n        if (part.ctrlKey) {\r\n            this.renderKey(parent, modifierLabels.ctrlKey, Boolean(match === null || match === void 0 ? void 0 : match.ctrlKey), modifierLabels.separator);\r\n        }\r\n        if (part.shiftKey) {\r\n            this.renderKey(parent, modifierLabels.shiftKey, Boolean(match === null || match === void 0 ? void 0 : match.shiftKey), modifierLabels.separator);\r\n        }\r\n        if (part.altKey) {\r\n            this.renderKey(parent, modifierLabels.altKey, Boolean(match === null || match === void 0 ? void 0 : match.altKey), modifierLabels.separator);\r\n        }\r\n        if (part.metaKey) {\r\n            this.renderKey(parent, modifierLabels.metaKey, Boolean(match === null || match === void 0 ? void 0 : match.metaKey), modifierLabels.separator);\r\n        }\r\n        var keyLabel = part.keyLabel;\r\n        if (keyLabel) {\r\n            this.renderKey(parent, keyLabel, Boolean(match === null || match === void 0 ? void 0 : match.keyCode), '');\r\n        }\r\n    };\r\n    KeybindingLabel.prototype.renderKey = function (parent, label, highlight, separator) {\r\n        dom.append(parent, $('span.monaco-keybinding-key' + (highlight ? '.highlight' : ''), undefined, label));\r\n        if (separator) {\r\n            dom.append(parent, $('span.monaco-keybinding-key-separator', undefined, separator));\r\n        }\r\n    };\r\n    KeybindingLabel.prototype.renderUnbound = function (parent) {\r\n        dom.append(parent, $('span.monaco-keybinding-key', undefined, localize('unbound', \"Unbound\")));\r\n    };\r\n    KeybindingLabel.areSame = function (a, b) {\r\n        if (a === b || (!a && !b)) {\r\n            return true;\r\n        }\r\n        return !!a && !!b && equals(a.firstPart, b.firstPart) && equals(a.chordPart, b.chordPart);\r\n    };\r\n    return KeybindingLabel;\r\n}());\r\nexport { KeybindingLabel };\r\n"]},"metadata":{},"sourceType":"module"}