{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { EditOperation } from '../../common/core/editOperation.js';\nimport { Range } from '../../common/core/range.js';\n\nvar SortLinesCommand =\n/** @class */\nfunction () {\n  function SortLinesCommand(selection, descending) {\n    this.selection = selection;\n    this.descending = descending;\n    this.selectionId = null;\n  }\n\n  SortLinesCommand.getCollator = function () {\n    if (!SortLinesCommand._COLLATOR) {\n      SortLinesCommand._COLLATOR = new Intl.Collator();\n    }\n\n    return SortLinesCommand._COLLATOR;\n  };\n\n  SortLinesCommand.prototype.getEditOperations = function (model, builder) {\n    var op = sortLines(model, this.selection, this.descending);\n\n    if (op) {\n      builder.addEditOperation(op.range, op.text);\n    }\n\n    this.selectionId = builder.trackSelection(this.selection);\n  };\n\n  SortLinesCommand.prototype.computeCursorState = function (model, helper) {\n    return helper.getTrackedSelection(this.selectionId);\n  };\n\n  SortLinesCommand.canRun = function (model, selection, descending) {\n    if (model === null) {\n      return false;\n    }\n\n    var data = getSortData(model, selection, descending);\n\n    if (!data) {\n      return false;\n    }\n\n    for (var i = 0, len = data.before.length; i < len; i++) {\n      if (data.before[i] !== data.after[i]) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  SortLinesCommand._COLLATOR = null;\n  return SortLinesCommand;\n}();\n\nexport { SortLinesCommand };\n\nfunction getSortData(model, selection, descending) {\n  var startLineNumber = selection.startLineNumber;\n  var endLineNumber = selection.endLineNumber;\n\n  if (selection.endColumn === 1) {\n    endLineNumber--;\n  } // Nothing to sort if user didn't select anything.\n\n\n  if (startLineNumber >= endLineNumber) {\n    return null;\n  }\n\n  var linesToSort = []; // Get the contents of the selection to be sorted.\n\n  for (var lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n    linesToSort.push(model.getLineContent(lineNumber));\n  }\n\n  var sorted = linesToSort.slice(0);\n  sorted.sort(SortLinesCommand.getCollator().compare); // If descending, reverse the order.\n\n  if (descending === true) {\n    sorted = sorted.reverse();\n  }\n\n  return {\n    startLineNumber: startLineNumber,\n    endLineNumber: endLineNumber,\n    before: linesToSort,\n    after: sorted\n  };\n}\n/**\r\n * Generate commands for sorting lines on a model.\r\n */\n\n\nfunction sortLines(model, selection, descending) {\n  var data = getSortData(model, selection, descending);\n\n  if (!data) {\n    return null;\n  }\n\n  return EditOperation.replace(new Range(data.startLineNumber, 1, data.endLineNumber, model.getLineMaxColumn(data.endLineNumber)), data.after.join('\\n'));\n}","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/sortLinesCommand.js"],"names":["EditOperation","Range","SortLinesCommand","selection","descending","selectionId","getCollator","_COLLATOR","Intl","Collator","prototype","getEditOperations","model","builder","op","sortLines","addEditOperation","range","text","trackSelection","computeCursorState","helper","getTrackedSelection","canRun","data","getSortData","i","len","before","length","after","startLineNumber","endLineNumber","endColumn","linesToSort","lineNumber","push","getLineContent","sorted","slice","sort","compare","reverse","replace","getLineMaxColumn","join"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { EditOperation } from '../../common/core/editOperation.js';\r\nimport { Range } from '../../common/core/range.js';\r\nvar SortLinesCommand = /** @class */ (function () {\r\n    function SortLinesCommand(selection, descending) {\r\n        this.selection = selection;\r\n        this.descending = descending;\r\n        this.selectionId = null;\r\n    }\r\n    SortLinesCommand.getCollator = function () {\r\n        if (!SortLinesCommand._COLLATOR) {\r\n            SortLinesCommand._COLLATOR = new Intl.Collator();\r\n        }\r\n        return SortLinesCommand._COLLATOR;\r\n    };\r\n    SortLinesCommand.prototype.getEditOperations = function (model, builder) {\r\n        var op = sortLines(model, this.selection, this.descending);\r\n        if (op) {\r\n            builder.addEditOperation(op.range, op.text);\r\n        }\r\n        this.selectionId = builder.trackSelection(this.selection);\r\n    };\r\n    SortLinesCommand.prototype.computeCursorState = function (model, helper) {\r\n        return helper.getTrackedSelection(this.selectionId);\r\n    };\r\n    SortLinesCommand.canRun = function (model, selection, descending) {\r\n        if (model === null) {\r\n            return false;\r\n        }\r\n        var data = getSortData(model, selection, descending);\r\n        if (!data) {\r\n            return false;\r\n        }\r\n        for (var i = 0, len = data.before.length; i < len; i++) {\r\n            if (data.before[i] !== data.after[i]) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    SortLinesCommand._COLLATOR = null;\r\n    return SortLinesCommand;\r\n}());\r\nexport { SortLinesCommand };\r\nfunction getSortData(model, selection, descending) {\r\n    var startLineNumber = selection.startLineNumber;\r\n    var endLineNumber = selection.endLineNumber;\r\n    if (selection.endColumn === 1) {\r\n        endLineNumber--;\r\n    }\r\n    // Nothing to sort if user didn't select anything.\r\n    if (startLineNumber >= endLineNumber) {\r\n        return null;\r\n    }\r\n    var linesToSort = [];\r\n    // Get the contents of the selection to be sorted.\r\n    for (var lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\r\n        linesToSort.push(model.getLineContent(lineNumber));\r\n    }\r\n    var sorted = linesToSort.slice(0);\r\n    sorted.sort(SortLinesCommand.getCollator().compare);\r\n    // If descending, reverse the order.\r\n    if (descending === true) {\r\n        sorted = sorted.reverse();\r\n    }\r\n    return {\r\n        startLineNumber: startLineNumber,\r\n        endLineNumber: endLineNumber,\r\n        before: linesToSort,\r\n        after: sorted\r\n    };\r\n}\r\n/**\r\n * Generate commands for sorting lines on a model.\r\n */\r\nfunction sortLines(model, selection, descending) {\r\n    var data = getSortData(model, selection, descending);\r\n    if (!data) {\r\n        return null;\r\n    }\r\n    return EditOperation.replace(new Range(data.startLineNumber, 1, data.endLineNumber, model.getLineMaxColumn(data.endLineNumber)), data.after.join('\\n'));\r\n}\r\n"]},"metadata":{},"sourceType":"module"}