{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar CharWidthRequest =\n/** @class */\nfunction () {\n  function CharWidthRequest(chr, type) {\n    this.chr = chr;\n    this.type = type;\n    this.width = 0;\n  }\n\n  CharWidthRequest.prototype.fulfill = function (width) {\n    this.width = width;\n  };\n\n  return CharWidthRequest;\n}();\n\nexport { CharWidthRequest };\n\nvar DomCharWidthReader =\n/** @class */\nfunction () {\n  function DomCharWidthReader(bareFontInfo, requests) {\n    this._bareFontInfo = bareFontInfo;\n    this._requests = requests;\n    this._container = null;\n    this._testElements = null;\n  }\n\n  DomCharWidthReader.prototype.read = function () {\n    // Create a test container with all these test elements\n    this._createDomElements(); // Add the container to the DOM\n\n\n    document.body.appendChild(this._container); // Read character widths\n\n    this._readFromDomElements(); // Remove the container from the DOM\n\n\n    document.body.removeChild(this._container);\n    this._container = null;\n    this._testElements = null;\n  };\n\n  DomCharWidthReader.prototype._createDomElements = function () {\n    var container = document.createElement('div');\n    container.style.position = 'absolute';\n    container.style.top = '-50000px';\n    container.style.width = '50000px';\n    var regularDomNode = document.createElement('div');\n    regularDomNode.style.fontFamily = this._bareFontInfo.getMassagedFontFamily();\n    regularDomNode.style.fontWeight = this._bareFontInfo.fontWeight;\n    regularDomNode.style.fontSize = this._bareFontInfo.fontSize + 'px';\n    regularDomNode.style.fontFeatureSettings = this._bareFontInfo.fontFeatureSettings;\n    regularDomNode.style.lineHeight = this._bareFontInfo.lineHeight + 'px';\n    regularDomNode.style.letterSpacing = this._bareFontInfo.letterSpacing + 'px';\n    container.appendChild(regularDomNode);\n    var boldDomNode = document.createElement('div');\n    boldDomNode.style.fontFamily = this._bareFontInfo.getMassagedFontFamily();\n    boldDomNode.style.fontWeight = 'bold';\n    boldDomNode.style.fontSize = this._bareFontInfo.fontSize + 'px';\n    boldDomNode.style.fontFeatureSettings = this._bareFontInfo.fontFeatureSettings;\n    boldDomNode.style.lineHeight = this._bareFontInfo.lineHeight + 'px';\n    boldDomNode.style.letterSpacing = this._bareFontInfo.letterSpacing + 'px';\n    container.appendChild(boldDomNode);\n    var italicDomNode = document.createElement('div');\n    italicDomNode.style.fontFamily = this._bareFontInfo.getMassagedFontFamily();\n    italicDomNode.style.fontWeight = this._bareFontInfo.fontWeight;\n    italicDomNode.style.fontSize = this._bareFontInfo.fontSize + 'px';\n    italicDomNode.style.fontFeatureSettings = this._bareFontInfo.fontFeatureSettings;\n    italicDomNode.style.lineHeight = this._bareFontInfo.lineHeight + 'px';\n    italicDomNode.style.letterSpacing = this._bareFontInfo.letterSpacing + 'px';\n    italicDomNode.style.fontStyle = 'italic';\n    container.appendChild(italicDomNode);\n    var testElements = [];\n\n    for (var _i = 0, _a = this._requests; _i < _a.length; _i++) {\n      var request = _a[_i];\n      var parent_1 = void 0;\n\n      if (request.type === 0\n      /* Regular */\n      ) {\n          parent_1 = regularDomNode;\n        }\n\n      if (request.type === 2\n      /* Bold */\n      ) {\n          parent_1 = boldDomNode;\n        }\n\n      if (request.type === 1\n      /* Italic */\n      ) {\n          parent_1 = italicDomNode;\n        }\n\n      parent_1.appendChild(document.createElement('br'));\n      var testElement = document.createElement('span');\n\n      DomCharWidthReader._render(testElement, request);\n\n      parent_1.appendChild(testElement);\n      testElements.push(testElement);\n    }\n\n    this._container = container;\n    this._testElements = testElements;\n  };\n\n  DomCharWidthReader._render = function (testElement, request) {\n    if (request.chr === ' ') {\n      var htmlString = '&#160;'; // Repeat character 256 (2^8) times\n\n      for (var i = 0; i < 8; i++) {\n        htmlString += htmlString;\n      }\n\n      testElement.innerHTML = htmlString;\n    } else {\n      var testString = request.chr; // Repeat character 256 (2^8) times\n\n      for (var i = 0; i < 8; i++) {\n        testString += testString;\n      }\n\n      testElement.textContent = testString;\n    }\n  };\n\n  DomCharWidthReader.prototype._readFromDomElements = function () {\n    for (var i = 0, len = this._requests.length; i < len; i++) {\n      var request = this._requests[i];\n      var testElement = this._testElements[i];\n      request.fulfill(testElement.offsetWidth / 256);\n    }\n  };\n\n  return DomCharWidthReader;\n}();\n\nexport function readCharWidths(bareFontInfo, requests) {\n  var reader = new DomCharWidthReader(bareFontInfo, requests);\n  reader.read();\n}","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/browser/config/charWidthReader.js"],"names":["CharWidthRequest","chr","type","width","prototype","fulfill","DomCharWidthReader","bareFontInfo","requests","_bareFontInfo","_requests","_container","_testElements","read","_createDomElements","document","body","appendChild","_readFromDomElements","removeChild","container","createElement","style","position","top","regularDomNode","fontFamily","getMassagedFontFamily","fontWeight","fontSize","fontFeatureSettings","lineHeight","letterSpacing","boldDomNode","italicDomNode","fontStyle","testElements","_i","_a","length","request","parent_1","testElement","_render","push","htmlString","i","innerHTML","testString","textContent","len","offsetWidth","readCharWidths","reader"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar CharWidthRequest = /** @class */ (function () {\r\n    function CharWidthRequest(chr, type) {\r\n        this.chr = chr;\r\n        this.type = type;\r\n        this.width = 0;\r\n    }\r\n    CharWidthRequest.prototype.fulfill = function (width) {\r\n        this.width = width;\r\n    };\r\n    return CharWidthRequest;\r\n}());\r\nexport { CharWidthRequest };\r\nvar DomCharWidthReader = /** @class */ (function () {\r\n    function DomCharWidthReader(bareFontInfo, requests) {\r\n        this._bareFontInfo = bareFontInfo;\r\n        this._requests = requests;\r\n        this._container = null;\r\n        this._testElements = null;\r\n    }\r\n    DomCharWidthReader.prototype.read = function () {\r\n        // Create a test container with all these test elements\r\n        this._createDomElements();\r\n        // Add the container to the DOM\r\n        document.body.appendChild(this._container);\r\n        // Read character widths\r\n        this._readFromDomElements();\r\n        // Remove the container from the DOM\r\n        document.body.removeChild(this._container);\r\n        this._container = null;\r\n        this._testElements = null;\r\n    };\r\n    DomCharWidthReader.prototype._createDomElements = function () {\r\n        var container = document.createElement('div');\r\n        container.style.position = 'absolute';\r\n        container.style.top = '-50000px';\r\n        container.style.width = '50000px';\r\n        var regularDomNode = document.createElement('div');\r\n        regularDomNode.style.fontFamily = this._bareFontInfo.getMassagedFontFamily();\r\n        regularDomNode.style.fontWeight = this._bareFontInfo.fontWeight;\r\n        regularDomNode.style.fontSize = this._bareFontInfo.fontSize + 'px';\r\n        regularDomNode.style.fontFeatureSettings = this._bareFontInfo.fontFeatureSettings;\r\n        regularDomNode.style.lineHeight = this._bareFontInfo.lineHeight + 'px';\r\n        regularDomNode.style.letterSpacing = this._bareFontInfo.letterSpacing + 'px';\r\n        container.appendChild(regularDomNode);\r\n        var boldDomNode = document.createElement('div');\r\n        boldDomNode.style.fontFamily = this._bareFontInfo.getMassagedFontFamily();\r\n        boldDomNode.style.fontWeight = 'bold';\r\n        boldDomNode.style.fontSize = this._bareFontInfo.fontSize + 'px';\r\n        boldDomNode.style.fontFeatureSettings = this._bareFontInfo.fontFeatureSettings;\r\n        boldDomNode.style.lineHeight = this._bareFontInfo.lineHeight + 'px';\r\n        boldDomNode.style.letterSpacing = this._bareFontInfo.letterSpacing + 'px';\r\n        container.appendChild(boldDomNode);\r\n        var italicDomNode = document.createElement('div');\r\n        italicDomNode.style.fontFamily = this._bareFontInfo.getMassagedFontFamily();\r\n        italicDomNode.style.fontWeight = this._bareFontInfo.fontWeight;\r\n        italicDomNode.style.fontSize = this._bareFontInfo.fontSize + 'px';\r\n        italicDomNode.style.fontFeatureSettings = this._bareFontInfo.fontFeatureSettings;\r\n        italicDomNode.style.lineHeight = this._bareFontInfo.lineHeight + 'px';\r\n        italicDomNode.style.letterSpacing = this._bareFontInfo.letterSpacing + 'px';\r\n        italicDomNode.style.fontStyle = 'italic';\r\n        container.appendChild(italicDomNode);\r\n        var testElements = [];\r\n        for (var _i = 0, _a = this._requests; _i < _a.length; _i++) {\r\n            var request = _a[_i];\r\n            var parent_1 = void 0;\r\n            if (request.type === 0 /* Regular */) {\r\n                parent_1 = regularDomNode;\r\n            }\r\n            if (request.type === 2 /* Bold */) {\r\n                parent_1 = boldDomNode;\r\n            }\r\n            if (request.type === 1 /* Italic */) {\r\n                parent_1 = italicDomNode;\r\n            }\r\n            parent_1.appendChild(document.createElement('br'));\r\n            var testElement = document.createElement('span');\r\n            DomCharWidthReader._render(testElement, request);\r\n            parent_1.appendChild(testElement);\r\n            testElements.push(testElement);\r\n        }\r\n        this._container = container;\r\n        this._testElements = testElements;\r\n    };\r\n    DomCharWidthReader._render = function (testElement, request) {\r\n        if (request.chr === ' ') {\r\n            var htmlString = '&#160;';\r\n            // Repeat character 256 (2^8) times\r\n            for (var i = 0; i < 8; i++) {\r\n                htmlString += htmlString;\r\n            }\r\n            testElement.innerHTML = htmlString;\r\n        }\r\n        else {\r\n            var testString = request.chr;\r\n            // Repeat character 256 (2^8) times\r\n            for (var i = 0; i < 8; i++) {\r\n                testString += testString;\r\n            }\r\n            testElement.textContent = testString;\r\n        }\r\n    };\r\n    DomCharWidthReader.prototype._readFromDomElements = function () {\r\n        for (var i = 0, len = this._requests.length; i < len; i++) {\r\n            var request = this._requests[i];\r\n            var testElement = this._testElements[i];\r\n            request.fulfill(testElement.offsetWidth / 256);\r\n        }\r\n    };\r\n    return DomCharWidthReader;\r\n}());\r\nexport function readCharWidths(bareFontInfo, requests) {\r\n    var reader = new DomCharWidthReader(bareFontInfo, requests);\r\n    reader.read();\r\n}\r\n"]},"metadata":{},"sourceType":"module"}