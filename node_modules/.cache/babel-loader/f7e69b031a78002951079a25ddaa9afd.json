{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as Json from './../../jsonc-parser/main.js';\nimport { URI } from './../../vscode-uri/index.js';\nimport * as Strings from '../utils/strings.js';\nimport * as Parser from '../parser/jsonParser.js';\nimport * as nls from './../../../fillers/vscode-nls.js';\nvar localize = nls.loadMessageBundle();\n\nvar FilePatternAssociation =\n/** @class */\nfunction () {\n  function FilePatternAssociation(pattern) {\n    try {\n      this.patternRegExp = new RegExp(Strings.convertSimple2RegExpPattern(pattern) + '$');\n    } catch (e) {\n      // invalid pattern\n      this.patternRegExp = null;\n    }\n\n    this.schemas = [];\n  }\n\n  FilePatternAssociation.prototype.addSchema = function (id) {\n    this.schemas.push(id);\n  };\n\n  FilePatternAssociation.prototype.matchesPattern = function (fileName) {\n    return this.patternRegExp && this.patternRegExp.test(fileName);\n  };\n\n  FilePatternAssociation.prototype.getSchemas = function () {\n    return this.schemas;\n  };\n\n  return FilePatternAssociation;\n}();\n\nvar SchemaHandle =\n/** @class */\nfunction () {\n  function SchemaHandle(service, url, unresolvedSchemaContent) {\n    this.service = service;\n    this.url = url;\n    this.dependencies = {};\n\n    if (unresolvedSchemaContent) {\n      this.unresolvedSchema = this.service.promise.resolve(new UnresolvedSchema(unresolvedSchemaContent));\n    }\n  }\n\n  SchemaHandle.prototype.getUnresolvedSchema = function () {\n    if (!this.unresolvedSchema) {\n      this.unresolvedSchema = this.service.loadSchema(this.url);\n    }\n\n    return this.unresolvedSchema;\n  };\n\n  SchemaHandle.prototype.getResolvedSchema = function () {\n    var _this = this;\n\n    if (!this.resolvedSchema) {\n      this.resolvedSchema = this.getUnresolvedSchema().then(function (unresolved) {\n        return _this.service.resolveSchemaContent(unresolved, _this.url, _this.dependencies);\n      });\n    }\n\n    return this.resolvedSchema;\n  };\n\n  SchemaHandle.prototype.clearSchema = function () {\n    this.resolvedSchema = null;\n    this.unresolvedSchema = null;\n    this.dependencies = {};\n  };\n\n  return SchemaHandle;\n}();\n\nvar UnresolvedSchema =\n/** @class */\nfunction () {\n  function UnresolvedSchema(schema, errors) {\n    if (errors === void 0) {\n      errors = [];\n    }\n\n    this.schema = schema;\n    this.errors = errors;\n  }\n\n  return UnresolvedSchema;\n}();\n\nexport { UnresolvedSchema };\n\nvar ResolvedSchema =\n/** @class */\nfunction () {\n  function ResolvedSchema(schema, errors) {\n    if (errors === void 0) {\n      errors = [];\n    }\n\n    this.schema = schema;\n    this.errors = errors;\n  }\n\n  ResolvedSchema.prototype.getSection = function (path) {\n    return Parser.asSchema(this.getSectionRecursive(path, this.schema));\n  };\n\n  ResolvedSchema.prototype.getSectionRecursive = function (path, schema) {\n    if (!schema || typeof schema === 'boolean' || path.length === 0) {\n      return schema;\n    }\n\n    var next = path.shift();\n\n    if (schema.properties && typeof schema.properties[next]) {\n      return this.getSectionRecursive(path, schema.properties[next]);\n    } else if (schema.patternProperties) {\n      for (var _i = 0, _a = Object.keys(schema.patternProperties); _i < _a.length; _i++) {\n        var pattern = _a[_i];\n        var regex = new RegExp(pattern);\n\n        if (regex.test(next)) {\n          return this.getSectionRecursive(path, schema.patternProperties[pattern]);\n        }\n      }\n    } else if (typeof schema.additionalProperties === 'object') {\n      return this.getSectionRecursive(path, schema.additionalProperties);\n    } else if (next.match('[0-9]+')) {\n      if (Array.isArray(schema.items)) {\n        var index = parseInt(next, 10);\n\n        if (!isNaN(index) && schema.items[index]) {\n          return this.getSectionRecursive(path, schema.items[index]);\n        }\n      } else if (schema.items) {\n        return this.getSectionRecursive(path, schema.items);\n      }\n    }\n\n    return null;\n  };\n\n  return ResolvedSchema;\n}();\n\nexport { ResolvedSchema };\n\nvar JSONSchemaService =\n/** @class */\nfunction () {\n  function JSONSchemaService(requestService, contextService, promiseConstructor) {\n    this.contextService = contextService;\n    this.requestService = requestService;\n    this.promiseConstructor = promiseConstructor || Promise;\n    this.callOnDispose = [];\n    this.contributionSchemas = {};\n    this.contributionAssociations = {};\n    this.schemasById = {};\n    this.filePatternAssociations = [];\n    this.filePatternAssociationById = {};\n    this.registeredSchemasIds = {};\n  }\n\n  JSONSchemaService.prototype.getRegisteredSchemaIds = function (filter) {\n    return Object.keys(this.registeredSchemasIds).filter(function (id) {\n      var scheme = URI.parse(id).scheme;\n      return scheme !== 'schemaservice' && (!filter || filter(scheme));\n    });\n  };\n\n  Object.defineProperty(JSONSchemaService.prototype, \"promise\", {\n    get: function () {\n      return this.promiseConstructor;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  JSONSchemaService.prototype.dispose = function () {\n    while (this.callOnDispose.length > 0) {\n      this.callOnDispose.pop()();\n    }\n  };\n\n  JSONSchemaService.prototype.onResourceChange = function (uri) {\n    var _this = this;\n\n    var hasChanges = false;\n    uri = this.normalizeId(uri);\n    var toWalk = [uri];\n    var all = Object.keys(this.schemasById).map(function (key) {\n      return _this.schemasById[key];\n    });\n\n    while (toWalk.length) {\n      var curr = toWalk.pop();\n\n      for (var i = 0; i < all.length; i++) {\n        var handle = all[i];\n\n        if (handle && (handle.url === curr || handle.dependencies[curr])) {\n          if (handle.url !== curr) {\n            toWalk.push(handle.url);\n          }\n\n          handle.clearSchema();\n          all[i] = undefined;\n          hasChanges = true;\n        }\n      }\n    }\n\n    return hasChanges;\n  };\n\n  JSONSchemaService.prototype.normalizeId = function (id) {\n    // remove trailing '#', normalize drive capitalization\n    try {\n      return URI.parse(id).toString();\n    } catch (e) {\n      return id;\n    }\n  };\n\n  JSONSchemaService.prototype.setSchemaContributions = function (schemaContributions) {\n    if (schemaContributions.schemas) {\n      var schemas = schemaContributions.schemas;\n\n      for (var id in schemas) {\n        var normalizedId = this.normalizeId(id);\n        this.contributionSchemas[normalizedId] = this.addSchemaHandle(normalizedId, schemas[id]);\n      }\n    }\n\n    if (schemaContributions.schemaAssociations) {\n      var schemaAssociations = schemaContributions.schemaAssociations;\n\n      for (var pattern in schemaAssociations) {\n        var associations = schemaAssociations[pattern];\n        this.contributionAssociations[pattern] = associations;\n        var fpa = this.getOrAddFilePatternAssociation(pattern);\n\n        for (var _i = 0, associations_1 = associations; _i < associations_1.length; _i++) {\n          var schemaId = associations_1[_i];\n          var id = this.normalizeId(schemaId);\n          fpa.addSchema(id);\n        }\n      }\n    }\n  };\n\n  JSONSchemaService.prototype.addSchemaHandle = function (id, unresolvedSchemaContent) {\n    var schemaHandle = new SchemaHandle(this, id, unresolvedSchemaContent);\n    this.schemasById[id] = schemaHandle;\n    return schemaHandle;\n  };\n\n  JSONSchemaService.prototype.getOrAddSchemaHandle = function (id, unresolvedSchemaContent) {\n    return this.schemasById[id] || this.addSchemaHandle(id, unresolvedSchemaContent);\n  };\n\n  JSONSchemaService.prototype.getOrAddFilePatternAssociation = function (pattern) {\n    var fpa = this.filePatternAssociationById[pattern];\n\n    if (!fpa) {\n      fpa = new FilePatternAssociation(pattern);\n      this.filePatternAssociationById[pattern] = fpa;\n      this.filePatternAssociations.push(fpa);\n    }\n\n    return fpa;\n  };\n\n  JSONSchemaService.prototype.registerExternalSchema = function (uri, filePatterns, unresolvedSchemaContent) {\n    if (filePatterns === void 0) {\n      filePatterns = null;\n    }\n\n    var id = this.normalizeId(uri);\n    this.registeredSchemasIds[id] = true;\n\n    if (filePatterns) {\n      for (var _i = 0, filePatterns_1 = filePatterns; _i < filePatterns_1.length; _i++) {\n        var pattern = filePatterns_1[_i];\n        this.getOrAddFilePatternAssociation(pattern).addSchema(id);\n      }\n    }\n\n    return unresolvedSchemaContent ? this.addSchemaHandle(id, unresolvedSchemaContent) : this.getOrAddSchemaHandle(id);\n  };\n\n  JSONSchemaService.prototype.clearExternalSchemas = function () {\n    this.schemasById = {};\n    this.filePatternAssociations = [];\n    this.filePatternAssociationById = {};\n    this.registeredSchemasIds = {};\n\n    for (var id in this.contributionSchemas) {\n      this.schemasById[id] = this.contributionSchemas[id];\n      this.registeredSchemasIds[id] = true;\n    }\n\n    for (var pattern in this.contributionAssociations) {\n      var fpa = this.getOrAddFilePatternAssociation(pattern);\n\n      for (var _i = 0, _a = this.contributionAssociations[pattern]; _i < _a.length; _i++) {\n        var schemaId = _a[_i];\n        var id = this.normalizeId(schemaId);\n        fpa.addSchema(id);\n      }\n    }\n  };\n\n  JSONSchemaService.prototype.getResolvedSchema = function (schemaId) {\n    var id = this.normalizeId(schemaId);\n    var schemaHandle = this.schemasById[id];\n\n    if (schemaHandle) {\n      return schemaHandle.getResolvedSchema();\n    }\n\n    return this.promise.resolve(null);\n  };\n\n  JSONSchemaService.prototype.loadSchema = function (url) {\n    if (!this.requestService) {\n      var errorMessage = localize('json.schema.norequestservice', 'Unable to load schema from \\'{0}\\'. No schema request service available', toDisplayString(url));\n      return this.promise.resolve(new UnresolvedSchema({}, [errorMessage]));\n    }\n\n    return this.requestService(url).then(function (content) {\n      if (!content) {\n        var errorMessage = localize('json.schema.nocontent', 'Unable to load schema from \\'{0}\\': No content.', toDisplayString(url));\n        return new UnresolvedSchema({}, [errorMessage]);\n      }\n\n      var schemaContent = {};\n      var jsonErrors = [];\n      schemaContent = Json.parse(content, jsonErrors);\n      var errors = jsonErrors.length ? [localize('json.schema.invalidFormat', 'Unable to parse content from \\'{0}\\': Parse error at offset {1}.', toDisplayString(url), jsonErrors[0].offset)] : [];\n      return new UnresolvedSchema(schemaContent, errors);\n    }, function (error) {\n      var errorMessage = error.toString();\n      var errorSplit = error.toString().split('Error: ');\n\n      if (errorSplit.length > 1) {\n        // more concise error message, URL and context are attached by caller anyways\n        errorMessage = errorSplit[1];\n      }\n\n      if (Strings.endsWith(errorMessage, '.')) {\n        errorMessage = errorMessage.substr(0, errorMessage.length - 1);\n      }\n\n      return new UnresolvedSchema({}, [localize('json.schema.nocontent', 'Unable to load schema from \\'{0}\\': {1}.', toDisplayString(url), errorMessage)]);\n    });\n  };\n\n  JSONSchemaService.prototype.resolveSchemaContent = function (schemaToResolve, schemaURL, dependencies) {\n    var _this = this;\n\n    var resolveErrors = schemaToResolve.errors.slice(0);\n    var schema = schemaToResolve.schema;\n\n    if (schema.$schema) {\n      var id = this.normalizeId(schema.$schema);\n\n      if (id === 'http://json-schema.org/draft-03/schema') {\n        return this.promise.resolve(new ResolvedSchema({}, [localize('json.schema.draft03.notsupported', \"Draft-03 schemas are not supported.\")]));\n      } else if (id === 'https://json-schema.org/draft/2019-09/schema') {\n        schemaToResolve.errors.push(localize('json.schema.draft201909.notsupported', \"Draft 2019-09 schemas are not yet fully supported.\"));\n      }\n    }\n\n    var contextService = this.contextService;\n\n    var findSection = function (schema, path) {\n      if (!path) {\n        return schema;\n      }\n\n      var current = schema;\n\n      if (path[0] === '/') {\n        path = path.substr(1);\n      }\n\n      path.split('/').some(function (part) {\n        current = current[part];\n        return !current;\n      });\n      return current;\n    };\n\n    var merge = function (target, sourceRoot, sourceURI, path) {\n      var section = findSection(sourceRoot, path);\n\n      if (section) {\n        for (var key in section) {\n          if (section.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n            target[key] = section[key];\n          }\n        }\n      } else {\n        resolveErrors.push(localize('json.schema.invalidref', '$ref \\'{0}\\' in \\'{1}\\' can not be resolved.', path, sourceURI));\n      }\n    };\n\n    var resolveExternalLink = function (node, uri, linkPath, parentSchemaURL, parentSchemaDependencies) {\n      if (contextService && !/^\\w+:\\/\\/.*/.test(uri)) {\n        uri = contextService.resolveRelativePath(uri, parentSchemaURL);\n      }\n\n      uri = _this.normalizeId(uri);\n\n      var referencedHandle = _this.getOrAddSchemaHandle(uri);\n\n      return referencedHandle.getUnresolvedSchema().then(function (unresolvedSchema) {\n        parentSchemaDependencies[uri] = true;\n\n        if (unresolvedSchema.errors.length) {\n          var loc = linkPath ? uri + '#' + linkPath : uri;\n          resolveErrors.push(localize('json.schema.problemloadingref', 'Problems loading reference \\'{0}\\': {1}', loc, unresolvedSchema.errors[0]));\n        }\n\n        merge(node, unresolvedSchema.schema, uri, linkPath);\n        return resolveRefs(node, unresolvedSchema.schema, uri, referencedHandle.dependencies);\n      });\n    };\n\n    var resolveRefs = function (node, parentSchema, parentSchemaURL, parentSchemaDependencies) {\n      if (!node || typeof node !== 'object') {\n        return Promise.resolve(null);\n      }\n\n      var toWalk = [node];\n      var seen = [];\n      var openPromises = [];\n\n      var collectEntries = function () {\n        var entries = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          entries[_i] = arguments[_i];\n        }\n\n        for (var _a = 0, entries_1 = entries; _a < entries_1.length; _a++) {\n          var entry = entries_1[_a];\n\n          if (typeof entry === 'object') {\n            toWalk.push(entry);\n          }\n        }\n      };\n\n      var collectMapEntries = function () {\n        var maps = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          maps[_i] = arguments[_i];\n        }\n\n        for (var _a = 0, maps_1 = maps; _a < maps_1.length; _a++) {\n          var map = maps_1[_a];\n\n          if (typeof map === 'object') {\n            for (var key in map) {\n              var entry = map[key];\n\n              if (typeof entry === 'object') {\n                toWalk.push(entry);\n              }\n            }\n          }\n        }\n      };\n\n      var collectArrayEntries = function () {\n        var arrays = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          arrays[_i] = arguments[_i];\n        }\n\n        for (var _a = 0, arrays_1 = arrays; _a < arrays_1.length; _a++) {\n          var array = arrays_1[_a];\n\n          if (Array.isArray(array)) {\n            for (var _b = 0, array_1 = array; _b < array_1.length; _b++) {\n              var entry = array_1[_b];\n\n              if (typeof entry === 'object') {\n                toWalk.push(entry);\n              }\n            }\n          }\n        }\n      };\n\n      var handleRef = function (next) {\n        var seenRefs = [];\n\n        while (next.$ref) {\n          var ref = next.$ref;\n          var segments = ref.split('#', 2);\n          delete next.$ref;\n\n          if (segments[0].length > 0) {\n            openPromises.push(resolveExternalLink(next, segments[0], segments[1], parentSchemaURL, parentSchemaDependencies));\n            return;\n          } else {\n            if (seenRefs.indexOf(ref) === -1) {\n              merge(next, parentSchema, parentSchemaURL, segments[1]); // can set next.$ref again, use seenRefs to avoid circle\n\n              seenRefs.push(ref);\n            }\n          }\n        }\n\n        collectEntries(next.items, next.additionalProperties, next.not, next.contains, next.propertyNames, next.if, next.then, next.else);\n        collectMapEntries(next.definitions, next.properties, next.patternProperties, next.dependencies);\n        collectArrayEntries(next.anyOf, next.allOf, next.oneOf, next.items);\n      };\n\n      while (toWalk.length) {\n        var next = toWalk.pop();\n\n        if (seen.indexOf(next) >= 0) {\n          continue;\n        }\n\n        seen.push(next);\n        handleRef(next);\n      }\n\n      return _this.promise.all(openPromises);\n    };\n\n    return resolveRefs(schema, schema, schemaURL, dependencies).then(function (_) {\n      return new ResolvedSchema(schema, resolveErrors);\n    });\n  };\n\n  JSONSchemaService.prototype.getSchemaForResource = function (resource, document) {\n    // first use $schema if present\n    if (document && document.root && document.root.type === 'object') {\n      var schemaProperties = document.root.properties.filter(function (p) {\n        return p.keyNode.value === '$schema' && p.valueNode && p.valueNode.type === 'string';\n      });\n\n      if (schemaProperties.length > 0) {\n        var schemeId = Parser.getNodeValue(schemaProperties[0].valueNode);\n\n        if (schemeId && Strings.startsWith(schemeId, '.') && this.contextService) {\n          schemeId = this.contextService.resolveRelativePath(schemeId, resource);\n        }\n\n        if (schemeId) {\n          var id = this.normalizeId(schemeId);\n          return this.getOrAddSchemaHandle(id).getResolvedSchema();\n        }\n      }\n    }\n\n    var seen = Object.create(null);\n    var schemas = [];\n\n    for (var _i = 0, _a = this.filePatternAssociations; _i < _a.length; _i++) {\n      var entry = _a[_i];\n\n      if (entry.matchesPattern(resource)) {\n        for (var _b = 0, _c = entry.getSchemas(); _b < _c.length; _b++) {\n          var schemaId = _c[_b];\n\n          if (!seen[schemaId]) {\n            schemas.push(schemaId);\n            seen[schemaId] = true;\n          }\n        }\n      }\n    }\n\n    if (schemas.length > 0) {\n      return this.createCombinedSchema(resource, schemas).getResolvedSchema();\n    }\n\n    return this.promise.resolve(null);\n  };\n\n  JSONSchemaService.prototype.createCombinedSchema = function (resource, schemaIds) {\n    if (schemaIds.length === 1) {\n      return this.getOrAddSchemaHandle(schemaIds[0]);\n    } else {\n      var combinedSchemaId = 'schemaservice://combinedSchema/' + encodeURIComponent(resource);\n      var combinedSchema = {\n        allOf: schemaIds.map(function (schemaId) {\n          return {\n            $ref: schemaId\n          };\n        })\n      };\n      return this.addSchemaHandle(combinedSchemaId, combinedSchema);\n    }\n  };\n\n  return JSONSchemaService;\n}();\n\nexport { JSONSchemaService };\n\nfunction toDisplayString(url) {\n  try {\n    var uri = URI.parse(url);\n\n    if (uri.scheme === 'file') {\n      return uri.fsPath;\n    }\n  } catch (e) {// ignore\n  }\n\n  return url;\n}","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/services/jsonSchemaService.js"],"names":["Json","URI","Strings","Parser","nls","localize","loadMessageBundle","FilePatternAssociation","pattern","patternRegExp","RegExp","convertSimple2RegExpPattern","e","schemas","prototype","addSchema","id","push","matchesPattern","fileName","test","getSchemas","SchemaHandle","service","url","unresolvedSchemaContent","dependencies","unresolvedSchema","promise","resolve","UnresolvedSchema","getUnresolvedSchema","loadSchema","getResolvedSchema","_this","resolvedSchema","then","unresolved","resolveSchemaContent","clearSchema","schema","errors","ResolvedSchema","getSection","path","asSchema","getSectionRecursive","length","next","shift","properties","patternProperties","_i","_a","Object","keys","regex","additionalProperties","match","Array","isArray","items","index","parseInt","isNaN","JSONSchemaService","requestService","contextService","promiseConstructor","Promise","callOnDispose","contributionSchemas","contributionAssociations","schemasById","filePatternAssociations","filePatternAssociationById","registeredSchemasIds","getRegisteredSchemaIds","filter","scheme","parse","defineProperty","get","enumerable","configurable","dispose","pop","onResourceChange","uri","hasChanges","normalizeId","toWalk","all","map","key","curr","i","handle","undefined","toString","setSchemaContributions","schemaContributions","normalizedId","addSchemaHandle","schemaAssociations","associations","fpa","getOrAddFilePatternAssociation","associations_1","schemaId","schemaHandle","getOrAddSchemaHandle","registerExternalSchema","filePatterns","filePatterns_1","clearExternalSchemas","errorMessage","toDisplayString","content","schemaContent","jsonErrors","offset","error","errorSplit","split","endsWith","substr","schemaToResolve","schemaURL","resolveErrors","slice","$schema","findSection","current","some","part","merge","target","sourceRoot","sourceURI","section","hasOwnProperty","resolveExternalLink","node","linkPath","parentSchemaURL","parentSchemaDependencies","resolveRelativePath","referencedHandle","loc","resolveRefs","parentSchema","seen","openPromises","collectEntries","entries","arguments","entries_1","entry","collectMapEntries","maps","maps_1","collectArrayEntries","arrays","arrays_1","array","_b","array_1","handleRef","seenRefs","$ref","ref","segments","indexOf","not","contains","propertyNames","if","else","definitions","anyOf","allOf","oneOf","_","getSchemaForResource","resource","document","root","type","schemaProperties","p","keyNode","value","valueNode","schemeId","getNodeValue","startsWith","create","_c","createCombinedSchema","schemaIds","combinedSchemaId","encodeURIComponent","combinedSchema","fsPath"],"mappings":"AAAA;;;;AAIA,OAAO,KAAKA,IAAZ,MAAsB,8BAAtB;AACA,SAASC,GAAT,QAAoB,6BAApB;AACA,OAAO,KAAKC,OAAZ,MAAyB,qBAAzB;AACA,OAAO,KAAKC,MAAZ,MAAwB,yBAAxB;AACA,OAAO,KAAKC,GAAZ,MAAqB,kCAArB;AACA,IAAIC,QAAQ,GAAGD,GAAG,CAACE,iBAAJ,EAAf;;AACA,IAAIC,sBAAsB;AAAG;AAAe,YAAY;AACpD,WAASA,sBAAT,CAAgCC,OAAhC,EAAyC;AACrC,QAAI;AACA,WAAKC,aAAL,GAAqB,IAAIC,MAAJ,CAAWR,OAAO,CAACS,2BAAR,CAAoCH,OAApC,IAA+C,GAA1D,CAArB;AACH,KAFD,CAGA,OAAOI,CAAP,EAAU;AACN;AACA,WAAKH,aAAL,GAAqB,IAArB;AACH;;AACD,SAAKI,OAAL,GAAe,EAAf;AACH;;AACDN,EAAAA,sBAAsB,CAACO,SAAvB,CAAiCC,SAAjC,GAA6C,UAAUC,EAAV,EAAc;AACvD,SAAKH,OAAL,CAAaI,IAAb,CAAkBD,EAAlB;AACH,GAFD;;AAGAT,EAAAA,sBAAsB,CAACO,SAAvB,CAAiCI,cAAjC,GAAkD,UAAUC,QAAV,EAAoB;AAClE,WAAO,KAAKV,aAAL,IAAsB,KAAKA,aAAL,CAAmBW,IAAnB,CAAwBD,QAAxB,CAA7B;AACH,GAFD;;AAGAZ,EAAAA,sBAAsB,CAACO,SAAvB,CAAiCO,UAAjC,GAA8C,YAAY;AACtD,WAAO,KAAKR,OAAZ;AACH,GAFD;;AAGA,SAAON,sBAAP;AACH,CArB2C,EAA5C;;AAsBA,IAAIe,YAAY;AAAG;AAAe,YAAY;AAC1C,WAASA,YAAT,CAAsBC,OAAtB,EAA+BC,GAA/B,EAAoCC,uBAApC,EAA6D;AACzD,SAAKF,OAAL,GAAeA,OAAf;AACA,SAAKC,GAAL,GAAWA,GAAX;AACA,SAAKE,YAAL,GAAoB,EAApB;;AACA,QAAID,uBAAJ,EAA6B;AACzB,WAAKE,gBAAL,GAAwB,KAAKJ,OAAL,CAAaK,OAAb,CAAqBC,OAArB,CAA6B,IAAIC,gBAAJ,CAAqBL,uBAArB,CAA7B,CAAxB;AACH;AACJ;;AACDH,EAAAA,YAAY,CAACR,SAAb,CAAuBiB,mBAAvB,GAA6C,YAAY;AACrD,QAAI,CAAC,KAAKJ,gBAAV,EAA4B;AACxB,WAAKA,gBAAL,GAAwB,KAAKJ,OAAL,CAAaS,UAAb,CAAwB,KAAKR,GAA7B,CAAxB;AACH;;AACD,WAAO,KAAKG,gBAAZ;AACH,GALD;;AAMAL,EAAAA,YAAY,CAACR,SAAb,CAAuBmB,iBAAvB,GAA2C,YAAY;AACnD,QAAIC,KAAK,GAAG,IAAZ;;AACA,QAAI,CAAC,KAAKC,cAAV,EAA0B;AACtB,WAAKA,cAAL,GAAsB,KAAKJ,mBAAL,GAA2BK,IAA3B,CAAgC,UAAUC,UAAV,EAAsB;AACxE,eAAOH,KAAK,CAACX,OAAN,CAAce,oBAAd,CAAmCD,UAAnC,EAA+CH,KAAK,CAACV,GAArD,EAA0DU,KAAK,CAACR,YAAhE,CAAP;AACH,OAFqB,CAAtB;AAGH;;AACD,WAAO,KAAKS,cAAZ;AACH,GARD;;AASAb,EAAAA,YAAY,CAACR,SAAb,CAAuByB,WAAvB,GAAqC,YAAY;AAC7C,SAAKJ,cAAL,GAAsB,IAAtB;AACA,SAAKR,gBAAL,GAAwB,IAAxB;AACA,SAAKD,YAAL,GAAoB,EAApB;AACH,GAJD;;AAKA,SAAOJ,YAAP;AACH,CA9BiC,EAAlC;;AA+BA,IAAIQ,gBAAgB;AAAG;AAAe,YAAY;AAC9C,WAASA,gBAAT,CAA0BU,MAA1B,EAAkCC,MAAlC,EAA0C;AACtC,QAAIA,MAAM,KAAK,KAAK,CAApB,EAAuB;AAAEA,MAAAA,MAAM,GAAG,EAAT;AAAc;;AACvC,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKC,MAAL,GAAcA,MAAd;AACH;;AACD,SAAOX,gBAAP;AACH,CAPqC,EAAtC;;AAQA,SAASA,gBAAT;;AACA,IAAIY,cAAc;AAAG;AAAe,YAAY;AAC5C,WAASA,cAAT,CAAwBF,MAAxB,EAAgCC,MAAhC,EAAwC;AACpC,QAAIA,MAAM,KAAK,KAAK,CAApB,EAAuB;AAAEA,MAAAA,MAAM,GAAG,EAAT;AAAc;;AACvC,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKC,MAAL,GAAcA,MAAd;AACH;;AACDC,EAAAA,cAAc,CAAC5B,SAAf,CAAyB6B,UAAzB,GAAsC,UAAUC,IAAV,EAAgB;AAClD,WAAOzC,MAAM,CAAC0C,QAAP,CAAgB,KAAKC,mBAAL,CAAyBF,IAAzB,EAA+B,KAAKJ,MAApC,CAAhB,CAAP;AACH,GAFD;;AAGAE,EAAAA,cAAc,CAAC5B,SAAf,CAAyBgC,mBAAzB,GAA+C,UAAUF,IAAV,EAAgBJ,MAAhB,EAAwB;AACnE,QAAI,CAACA,MAAD,IAAW,OAAOA,MAAP,KAAkB,SAA7B,IAA0CI,IAAI,CAACG,MAAL,KAAgB,CAA9D,EAAiE;AAC7D,aAAOP,MAAP;AACH;;AACD,QAAIQ,IAAI,GAAGJ,IAAI,CAACK,KAAL,EAAX;;AACA,QAAIT,MAAM,CAACU,UAAP,IAAqB,OAAOV,MAAM,CAACU,UAAP,CAAkBF,IAAlB,CAAhC,EAAyD;AACrD,aAAO,KAAKF,mBAAL,CAAyBF,IAAzB,EAA+BJ,MAAM,CAACU,UAAP,CAAkBF,IAAlB,CAA/B,CAAP;AACH,KAFD,MAGK,IAAIR,MAAM,CAACW,iBAAX,EAA8B;AAC/B,WAAK,IAAIC,EAAE,GAAG,CAAT,EAAYC,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYf,MAAM,CAACW,iBAAnB,CAAtB,EAA6DC,EAAE,GAAGC,EAAE,CAACN,MAArE,EAA6EK,EAAE,EAA/E,EAAmF;AAC/E,YAAI5C,OAAO,GAAG6C,EAAE,CAACD,EAAD,CAAhB;AACA,YAAII,KAAK,GAAG,IAAI9C,MAAJ,CAAWF,OAAX,CAAZ;;AACA,YAAIgD,KAAK,CAACpC,IAAN,CAAW4B,IAAX,CAAJ,EAAsB;AAClB,iBAAO,KAAKF,mBAAL,CAAyBF,IAAzB,EAA+BJ,MAAM,CAACW,iBAAP,CAAyB3C,OAAzB,CAA/B,CAAP;AACH;AACJ;AACJ,KARI,MASA,IAAI,OAAOgC,MAAM,CAACiB,oBAAd,KAAuC,QAA3C,EAAqD;AACtD,aAAO,KAAKX,mBAAL,CAAyBF,IAAzB,EAA+BJ,MAAM,CAACiB,oBAAtC,CAAP;AACH,KAFI,MAGA,IAAIT,IAAI,CAACU,KAAL,CAAW,QAAX,CAAJ,EAA0B;AAC3B,UAAIC,KAAK,CAACC,OAAN,CAAcpB,MAAM,CAACqB,KAArB,CAAJ,EAAiC;AAC7B,YAAIC,KAAK,GAAGC,QAAQ,CAACf,IAAD,EAAO,EAAP,CAApB;;AACA,YAAI,CAACgB,KAAK,CAACF,KAAD,CAAN,IAAiBtB,MAAM,CAACqB,KAAP,CAAaC,KAAb,CAArB,EAA0C;AACtC,iBAAO,KAAKhB,mBAAL,CAAyBF,IAAzB,EAA+BJ,MAAM,CAACqB,KAAP,CAAaC,KAAb,CAA/B,CAAP;AACH;AACJ,OALD,MAMK,IAAItB,MAAM,CAACqB,KAAX,EAAkB;AACnB,eAAO,KAAKf,mBAAL,CAAyBF,IAAzB,EAA+BJ,MAAM,CAACqB,KAAtC,CAAP;AACH;AACJ;;AACD,WAAO,IAAP;AACH,GAhCD;;AAiCA,SAAOnB,cAAP;AACH,CA3CmC,EAApC;;AA4CA,SAASA,cAAT;;AACA,IAAIuB,iBAAiB;AAAG;AAAe,YAAY;AAC/C,WAASA,iBAAT,CAA2BC,cAA3B,EAA2CC,cAA3C,EAA2DC,kBAA3D,EAA+E;AAC3E,SAAKD,cAAL,GAAsBA,cAAtB;AACA,SAAKD,cAAL,GAAsBA,cAAtB;AACA,SAAKE,kBAAL,GAA0BA,kBAAkB,IAAIC,OAAhD;AACA,SAAKC,aAAL,GAAqB,EAArB;AACA,SAAKC,mBAAL,GAA2B,EAA3B;AACA,SAAKC,wBAAL,GAAgC,EAAhC;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACA,SAAKC,uBAAL,GAA+B,EAA/B;AACA,SAAKC,0BAAL,GAAkC,EAAlC;AACA,SAAKC,oBAAL,GAA4B,EAA5B;AACH;;AACDX,EAAAA,iBAAiB,CAACnD,SAAlB,CAA4B+D,sBAA5B,GAAqD,UAAUC,MAAV,EAAkB;AACnE,WAAOxB,MAAM,CAACC,IAAP,CAAY,KAAKqB,oBAAjB,EAAuCE,MAAvC,CAA8C,UAAU9D,EAAV,EAAc;AAC/D,UAAI+D,MAAM,GAAG9E,GAAG,CAAC+E,KAAJ,CAAUhE,EAAV,EAAc+D,MAA3B;AACA,aAAOA,MAAM,KAAK,eAAX,KAA+B,CAACD,MAAD,IAAWA,MAAM,CAACC,MAAD,CAAhD,CAAP;AACH,KAHM,CAAP;AAIH,GALD;;AAMAzB,EAAAA,MAAM,CAAC2B,cAAP,CAAsBhB,iBAAiB,CAACnD,SAAxC,EAAmD,SAAnD,EAA8D;AAC1DoE,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKd,kBAAZ;AACH,KAHyD;AAI1De,IAAAA,UAAU,EAAE,IAJ8C;AAK1DC,IAAAA,YAAY,EAAE;AAL4C,GAA9D;;AAOAnB,EAAAA,iBAAiB,CAACnD,SAAlB,CAA4BuE,OAA5B,GAAsC,YAAY;AAC9C,WAAO,KAAKf,aAAL,CAAmBvB,MAAnB,GAA4B,CAAnC,EAAsC;AAClC,WAAKuB,aAAL,CAAmBgB,GAAnB;AACH;AACJ,GAJD;;AAKArB,EAAAA,iBAAiB,CAACnD,SAAlB,CAA4ByE,gBAA5B,GAA+C,UAAUC,GAAV,EAAe;AAC1D,QAAItD,KAAK,GAAG,IAAZ;;AACA,QAAIuD,UAAU,GAAG,KAAjB;AACAD,IAAAA,GAAG,GAAG,KAAKE,WAAL,CAAiBF,GAAjB,CAAN;AACA,QAAIG,MAAM,GAAG,CAACH,GAAD,CAAb;AACA,QAAII,GAAG,GAAGtC,MAAM,CAACC,IAAP,CAAY,KAAKkB,WAAjB,EAA8BoB,GAA9B,CAAkC,UAAUC,GAAV,EAAe;AAAE,aAAO5D,KAAK,CAACuC,WAAN,CAAkBqB,GAAlB,CAAP;AAAgC,KAAnF,CAAV;;AACA,WAAOH,MAAM,CAAC5C,MAAd,EAAsB;AAClB,UAAIgD,IAAI,GAAGJ,MAAM,CAACL,GAAP,EAAX;;AACA,WAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,GAAG,CAAC7C,MAAxB,EAAgCiD,CAAC,EAAjC,EAAqC;AACjC,YAAIC,MAAM,GAAGL,GAAG,CAACI,CAAD,CAAhB;;AACA,YAAIC,MAAM,KAAKA,MAAM,CAACzE,GAAP,KAAeuE,IAAf,IAAuBE,MAAM,CAACvE,YAAP,CAAoBqE,IAApB,CAA5B,CAAV,EAAkE;AAC9D,cAAIE,MAAM,CAACzE,GAAP,KAAeuE,IAAnB,EAAyB;AACrBJ,YAAAA,MAAM,CAAC1E,IAAP,CAAYgF,MAAM,CAACzE,GAAnB;AACH;;AACDyE,UAAAA,MAAM,CAAC1D,WAAP;AACAqD,UAAAA,GAAG,CAACI,CAAD,CAAH,GAASE,SAAT;AACAT,UAAAA,UAAU,GAAG,IAAb;AACH;AACJ;AACJ;;AACD,WAAOA,UAAP;AACH,GArBD;;AAsBAxB,EAAAA,iBAAiB,CAACnD,SAAlB,CAA4B4E,WAA5B,GAA0C,UAAU1E,EAAV,EAAc;AACpD;AACA,QAAI;AACA,aAAOf,GAAG,CAAC+E,KAAJ,CAAUhE,EAAV,EAAcmF,QAAd,EAAP;AACH,KAFD,CAGA,OAAOvF,CAAP,EAAU;AACN,aAAOI,EAAP;AACH;AACJ,GARD;;AASAiD,EAAAA,iBAAiB,CAACnD,SAAlB,CAA4BsF,sBAA5B,GAAqD,UAAUC,mBAAV,EAA+B;AAChF,QAAIA,mBAAmB,CAACxF,OAAxB,EAAiC;AAC7B,UAAIA,OAAO,GAAGwF,mBAAmB,CAACxF,OAAlC;;AACA,WAAK,IAAIG,EAAT,IAAeH,OAAf,EAAwB;AACpB,YAAIyF,YAAY,GAAG,KAAKZ,WAAL,CAAiB1E,EAAjB,CAAnB;AACA,aAAKuD,mBAAL,CAAyB+B,YAAzB,IAAyC,KAAKC,eAAL,CAAqBD,YAArB,EAAmCzF,OAAO,CAACG,EAAD,CAA1C,CAAzC;AACH;AACJ;;AACD,QAAIqF,mBAAmB,CAACG,kBAAxB,EAA4C;AACxC,UAAIA,kBAAkB,GAAGH,mBAAmB,CAACG,kBAA7C;;AACA,WAAK,IAAIhG,OAAT,IAAoBgG,kBAApB,EAAwC;AACpC,YAAIC,YAAY,GAAGD,kBAAkB,CAAChG,OAAD,CAArC;AACA,aAAKgE,wBAAL,CAA8BhE,OAA9B,IAAyCiG,YAAzC;AACA,YAAIC,GAAG,GAAG,KAAKC,8BAAL,CAAoCnG,OAApC,CAAV;;AACA,aAAK,IAAI4C,EAAE,GAAG,CAAT,EAAYwD,cAAc,GAAGH,YAAlC,EAAgDrD,EAAE,GAAGwD,cAAc,CAAC7D,MAApE,EAA4EK,EAAE,EAA9E,EAAkF;AAC9E,cAAIyD,QAAQ,GAAGD,cAAc,CAACxD,EAAD,CAA7B;AACA,cAAIpC,EAAE,GAAG,KAAK0E,WAAL,CAAiBmB,QAAjB,CAAT;AACAH,UAAAA,GAAG,CAAC3F,SAAJ,CAAcC,EAAd;AACH;AACJ;AACJ;AACJ,GArBD;;AAsBAiD,EAAAA,iBAAiB,CAACnD,SAAlB,CAA4ByF,eAA5B,GAA8C,UAAUvF,EAAV,EAAcS,uBAAd,EAAuC;AACjF,QAAIqF,YAAY,GAAG,IAAIxF,YAAJ,CAAiB,IAAjB,EAAuBN,EAAvB,EAA2BS,uBAA3B,CAAnB;AACA,SAAKgD,WAAL,CAAiBzD,EAAjB,IAAuB8F,YAAvB;AACA,WAAOA,YAAP;AACH,GAJD;;AAKA7C,EAAAA,iBAAiB,CAACnD,SAAlB,CAA4BiG,oBAA5B,GAAmD,UAAU/F,EAAV,EAAcS,uBAAd,EAAuC;AACtF,WAAO,KAAKgD,WAAL,CAAiBzD,EAAjB,KAAwB,KAAKuF,eAAL,CAAqBvF,EAArB,EAAyBS,uBAAzB,CAA/B;AACH,GAFD;;AAGAwC,EAAAA,iBAAiB,CAACnD,SAAlB,CAA4B6F,8BAA5B,GAA6D,UAAUnG,OAAV,EAAmB;AAC5E,QAAIkG,GAAG,GAAG,KAAK/B,0BAAL,CAAgCnE,OAAhC,CAAV;;AACA,QAAI,CAACkG,GAAL,EAAU;AACNA,MAAAA,GAAG,GAAG,IAAInG,sBAAJ,CAA2BC,OAA3B,CAAN;AACA,WAAKmE,0BAAL,CAAgCnE,OAAhC,IAA2CkG,GAA3C;AACA,WAAKhC,uBAAL,CAA6BzD,IAA7B,CAAkCyF,GAAlC;AACH;;AACD,WAAOA,GAAP;AACH,GARD;;AASAzC,EAAAA,iBAAiB,CAACnD,SAAlB,CAA4BkG,sBAA5B,GAAqD,UAAUxB,GAAV,EAAeyB,YAAf,EAA6BxF,uBAA7B,EAAsD;AACvG,QAAIwF,YAAY,KAAK,KAAK,CAA1B,EAA6B;AAAEA,MAAAA,YAAY,GAAG,IAAf;AAAsB;;AACrD,QAAIjG,EAAE,GAAG,KAAK0E,WAAL,CAAiBF,GAAjB,CAAT;AACA,SAAKZ,oBAAL,CAA0B5D,EAA1B,IAAgC,IAAhC;;AACA,QAAIiG,YAAJ,EAAkB;AACd,WAAK,IAAI7D,EAAE,GAAG,CAAT,EAAY8D,cAAc,GAAGD,YAAlC,EAAgD7D,EAAE,GAAG8D,cAAc,CAACnE,MAApE,EAA4EK,EAAE,EAA9E,EAAkF;AAC9E,YAAI5C,OAAO,GAAG0G,cAAc,CAAC9D,EAAD,CAA5B;AACA,aAAKuD,8BAAL,CAAoCnG,OAApC,EAA6CO,SAA7C,CAAuDC,EAAvD;AACH;AACJ;;AACD,WAAOS,uBAAuB,GAAG,KAAK8E,eAAL,CAAqBvF,EAArB,EAAyBS,uBAAzB,CAAH,GAAuD,KAAKsF,oBAAL,CAA0B/F,EAA1B,CAArF;AACH,GAXD;;AAYAiD,EAAAA,iBAAiB,CAACnD,SAAlB,CAA4BqG,oBAA5B,GAAmD,YAAY;AAC3D,SAAK1C,WAAL,GAAmB,EAAnB;AACA,SAAKC,uBAAL,GAA+B,EAA/B;AACA,SAAKC,0BAAL,GAAkC,EAAlC;AACA,SAAKC,oBAAL,GAA4B,EAA5B;;AACA,SAAK,IAAI5D,EAAT,IAAe,KAAKuD,mBAApB,EAAyC;AACrC,WAAKE,WAAL,CAAiBzD,EAAjB,IAAuB,KAAKuD,mBAAL,CAAyBvD,EAAzB,CAAvB;AACA,WAAK4D,oBAAL,CAA0B5D,EAA1B,IAAgC,IAAhC;AACH;;AACD,SAAK,IAAIR,OAAT,IAAoB,KAAKgE,wBAAzB,EAAmD;AAC/C,UAAIkC,GAAG,GAAG,KAAKC,8BAAL,CAAoCnG,OAApC,CAAV;;AACA,WAAK,IAAI4C,EAAE,GAAG,CAAT,EAAYC,EAAE,GAAG,KAAKmB,wBAAL,CAA8BhE,OAA9B,CAAtB,EAA8D4C,EAAE,GAAGC,EAAE,CAACN,MAAtE,EAA8EK,EAAE,EAAhF,EAAoF;AAChF,YAAIyD,QAAQ,GAAGxD,EAAE,CAACD,EAAD,CAAjB;AACA,YAAIpC,EAAE,GAAG,KAAK0E,WAAL,CAAiBmB,QAAjB,CAAT;AACAH,QAAAA,GAAG,CAAC3F,SAAJ,CAAcC,EAAd;AACH;AACJ;AACJ,GAjBD;;AAkBAiD,EAAAA,iBAAiB,CAACnD,SAAlB,CAA4BmB,iBAA5B,GAAgD,UAAU4E,QAAV,EAAoB;AAChE,QAAI7F,EAAE,GAAG,KAAK0E,WAAL,CAAiBmB,QAAjB,CAAT;AACA,QAAIC,YAAY,GAAG,KAAKrC,WAAL,CAAiBzD,EAAjB,CAAnB;;AACA,QAAI8F,YAAJ,EAAkB;AACd,aAAOA,YAAY,CAAC7E,iBAAb,EAAP;AACH;;AACD,WAAO,KAAKL,OAAL,CAAaC,OAAb,CAAqB,IAArB,CAAP;AACH,GAPD;;AAQAoC,EAAAA,iBAAiB,CAACnD,SAAlB,CAA4BkB,UAA5B,GAAyC,UAAUR,GAAV,EAAe;AACpD,QAAI,CAAC,KAAK0C,cAAV,EAA0B;AACtB,UAAIkD,YAAY,GAAG/G,QAAQ,CAAC,8BAAD,EAAiC,yEAAjC,EAA4GgH,eAAe,CAAC7F,GAAD,CAA3H,CAA3B;AACA,aAAO,KAAKI,OAAL,CAAaC,OAAb,CAAqB,IAAIC,gBAAJ,CAAqB,EAArB,EAAyB,CAACsF,YAAD,CAAzB,CAArB,CAAP;AACH;;AACD,WAAO,KAAKlD,cAAL,CAAoB1C,GAApB,EAAyBY,IAAzB,CAA8B,UAAUkF,OAAV,EAAmB;AACpD,UAAI,CAACA,OAAL,EAAc;AACV,YAAIF,YAAY,GAAG/G,QAAQ,CAAC,uBAAD,EAA0B,iDAA1B,EAA6EgH,eAAe,CAAC7F,GAAD,CAA5F,CAA3B;AACA,eAAO,IAAIM,gBAAJ,CAAqB,EAArB,EAAyB,CAACsF,YAAD,CAAzB,CAAP;AACH;;AACD,UAAIG,aAAa,GAAG,EAApB;AACA,UAAIC,UAAU,GAAG,EAAjB;AACAD,MAAAA,aAAa,GAAGvH,IAAI,CAACgF,KAAL,CAAWsC,OAAX,EAAoBE,UAApB,CAAhB;AACA,UAAI/E,MAAM,GAAG+E,UAAU,CAACzE,MAAX,GAAoB,CAAC1C,QAAQ,CAAC,2BAAD,EAA8B,kEAA9B,EAAkGgH,eAAe,CAAC7F,GAAD,CAAjH,EAAwHgG,UAAU,CAAC,CAAD,CAAV,CAAcC,MAAtI,CAAT,CAApB,GAA8K,EAA3L;AACA,aAAO,IAAI3F,gBAAJ,CAAqByF,aAArB,EAAoC9E,MAApC,CAAP;AACH,KAVM,EAUJ,UAAUiF,KAAV,EAAiB;AAChB,UAAIN,YAAY,GAAGM,KAAK,CAACvB,QAAN,EAAnB;AACA,UAAIwB,UAAU,GAAGD,KAAK,CAACvB,QAAN,GAAiByB,KAAjB,CAAuB,SAAvB,CAAjB;;AACA,UAAID,UAAU,CAAC5E,MAAX,GAAoB,CAAxB,EAA2B;AACvB;AACAqE,QAAAA,YAAY,GAAGO,UAAU,CAAC,CAAD,CAAzB;AACH;;AACD,UAAIzH,OAAO,CAAC2H,QAAR,CAAiBT,YAAjB,EAA+B,GAA/B,CAAJ,EAAyC;AACrCA,QAAAA,YAAY,GAAGA,YAAY,CAACU,MAAb,CAAoB,CAApB,EAAuBV,YAAY,CAACrE,MAAb,GAAsB,CAA7C,CAAf;AACH;;AACD,aAAO,IAAIjB,gBAAJ,CAAqB,EAArB,EAAyB,CAACzB,QAAQ,CAAC,uBAAD,EAA0B,0CAA1B,EAAsEgH,eAAe,CAAC7F,GAAD,CAArF,EAA4F4F,YAA5F,CAAT,CAAzB,CAAP;AACH,KArBM,CAAP;AAsBH,GA3BD;;AA4BAnD,EAAAA,iBAAiB,CAACnD,SAAlB,CAA4BwB,oBAA5B,GAAmD,UAAUyF,eAAV,EAA2BC,SAA3B,EAAsCtG,YAAtC,EAAoD;AACnG,QAAIQ,KAAK,GAAG,IAAZ;;AACA,QAAI+F,aAAa,GAAGF,eAAe,CAACtF,MAAhB,CAAuByF,KAAvB,CAA6B,CAA7B,CAApB;AACA,QAAI1F,MAAM,GAAGuF,eAAe,CAACvF,MAA7B;;AACA,QAAIA,MAAM,CAAC2F,OAAX,EAAoB;AAChB,UAAInH,EAAE,GAAG,KAAK0E,WAAL,CAAiBlD,MAAM,CAAC2F,OAAxB,CAAT;;AACA,UAAInH,EAAE,KAAK,wCAAX,EAAqD;AACjD,eAAO,KAAKY,OAAL,CAAaC,OAAb,CAAqB,IAAIa,cAAJ,CAAmB,EAAnB,EAAuB,CAACrC,QAAQ,CAAC,kCAAD,EAAqC,qCAArC,CAAT,CAAvB,CAArB,CAAP;AACH,OAFD,MAGK,IAAIW,EAAE,KAAK,8CAAX,EAA2D;AAC5D+G,QAAAA,eAAe,CAACtF,MAAhB,CAAuBxB,IAAvB,CAA4BZ,QAAQ,CAAC,sCAAD,EAAyC,oDAAzC,CAApC;AACH;AACJ;;AACD,QAAI8D,cAAc,GAAG,KAAKA,cAA1B;;AACA,QAAIiE,WAAW,GAAG,UAAU5F,MAAV,EAAkBI,IAAlB,EAAwB;AACtC,UAAI,CAACA,IAAL,EAAW;AACP,eAAOJ,MAAP;AACH;;AACD,UAAI6F,OAAO,GAAG7F,MAAd;;AACA,UAAII,IAAI,CAAC,CAAD,CAAJ,KAAY,GAAhB,EAAqB;AACjBA,QAAAA,IAAI,GAAGA,IAAI,CAACkF,MAAL,CAAY,CAAZ,CAAP;AACH;;AACDlF,MAAAA,IAAI,CAACgF,KAAL,CAAW,GAAX,EAAgBU,IAAhB,CAAqB,UAAUC,IAAV,EAAgB;AACjCF,QAAAA,OAAO,GAAGA,OAAO,CAACE,IAAD,CAAjB;AACA,eAAO,CAACF,OAAR;AACH,OAHD;AAIA,aAAOA,OAAP;AACH,KAbD;;AAcA,QAAIG,KAAK,GAAG,UAAUC,MAAV,EAAkBC,UAAlB,EAA8BC,SAA9B,EAAyC/F,IAAzC,EAA+C;AACvD,UAAIgG,OAAO,GAAGR,WAAW,CAACM,UAAD,EAAa9F,IAAb,CAAzB;;AACA,UAAIgG,OAAJ,EAAa;AACT,aAAK,IAAI9C,GAAT,IAAgB8C,OAAhB,EAAyB;AACrB,cAAIA,OAAO,CAACC,cAAR,CAAuB/C,GAAvB,KAA+B,CAAC2C,MAAM,CAACI,cAAP,CAAsB/C,GAAtB,CAApC,EAAgE;AAC5D2C,YAAAA,MAAM,CAAC3C,GAAD,CAAN,GAAc8C,OAAO,CAAC9C,GAAD,CAArB;AACH;AACJ;AACJ,OAND,MAOK;AACDmC,QAAAA,aAAa,CAAChH,IAAd,CAAmBZ,QAAQ,CAAC,wBAAD,EAA2B,8CAA3B,EAA2EuC,IAA3E,EAAiF+F,SAAjF,CAA3B;AACH;AACJ,KAZD;;AAaA,QAAIG,mBAAmB,GAAG,UAAUC,IAAV,EAAgBvD,GAAhB,EAAqBwD,QAArB,EAA+BC,eAA/B,EAAgDC,wBAAhD,EAA0E;AAChG,UAAI/E,cAAc,IAAI,CAAC,cAAc/C,IAAd,CAAmBoE,GAAnB,CAAvB,EAAgD;AAC5CA,QAAAA,GAAG,GAAGrB,cAAc,CAACgF,mBAAf,CAAmC3D,GAAnC,EAAwCyD,eAAxC,CAAN;AACH;;AACDzD,MAAAA,GAAG,GAAGtD,KAAK,CAACwD,WAAN,CAAkBF,GAAlB,CAAN;;AACA,UAAI4D,gBAAgB,GAAGlH,KAAK,CAAC6E,oBAAN,CAA2BvB,GAA3B,CAAvB;;AACA,aAAO4D,gBAAgB,CAACrH,mBAAjB,GAAuCK,IAAvC,CAA4C,UAAUT,gBAAV,EAA4B;AAC3EuH,QAAAA,wBAAwB,CAAC1D,GAAD,CAAxB,GAAgC,IAAhC;;AACA,YAAI7D,gBAAgB,CAACc,MAAjB,CAAwBM,MAA5B,EAAoC;AAChC,cAAIsG,GAAG,GAAGL,QAAQ,GAAGxD,GAAG,GAAG,GAAN,GAAYwD,QAAf,GAA0BxD,GAA5C;AACAyC,UAAAA,aAAa,CAAChH,IAAd,CAAmBZ,QAAQ,CAAC,+BAAD,EAAkC,yCAAlC,EAA6EgJ,GAA7E,EAAkF1H,gBAAgB,CAACc,MAAjB,CAAwB,CAAxB,CAAlF,CAA3B;AACH;;AACD+F,QAAAA,KAAK,CAACO,IAAD,EAAOpH,gBAAgB,CAACa,MAAxB,EAAgCgD,GAAhC,EAAqCwD,QAArC,CAAL;AACA,eAAOM,WAAW,CAACP,IAAD,EAAOpH,gBAAgB,CAACa,MAAxB,EAAgCgD,GAAhC,EAAqC4D,gBAAgB,CAAC1H,YAAtD,CAAlB;AACH,OARM,CAAP;AASH,KAfD;;AAgBA,QAAI4H,WAAW,GAAG,UAAUP,IAAV,EAAgBQ,YAAhB,EAA8BN,eAA9B,EAA+CC,wBAA/C,EAAyE;AACvF,UAAI,CAACH,IAAD,IAAS,OAAOA,IAAP,KAAgB,QAA7B,EAAuC;AACnC,eAAO1E,OAAO,CAACxC,OAAR,CAAgB,IAAhB,CAAP;AACH;;AACD,UAAI8D,MAAM,GAAG,CAACoD,IAAD,CAAb;AACA,UAAIS,IAAI,GAAG,EAAX;AACA,UAAIC,YAAY,GAAG,EAAnB;;AACA,UAAIC,cAAc,GAAG,YAAY;AAC7B,YAAIC,OAAO,GAAG,EAAd;;AACA,aAAK,IAAIvG,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGwG,SAAS,CAAC7G,MAAhC,EAAwCK,EAAE,EAA1C,EAA8C;AAC1CuG,UAAAA,OAAO,CAACvG,EAAD,CAAP,GAAcwG,SAAS,CAACxG,EAAD,CAAvB;AACH;;AACD,aAAK,IAAIC,EAAE,GAAG,CAAT,EAAYwG,SAAS,GAAGF,OAA7B,EAAsCtG,EAAE,GAAGwG,SAAS,CAAC9G,MAArD,EAA6DM,EAAE,EAA/D,EAAmE;AAC/D,cAAIyG,KAAK,GAAGD,SAAS,CAACxG,EAAD,CAArB;;AACA,cAAI,OAAOyG,KAAP,KAAiB,QAArB,EAA+B;AAC3BnE,YAAAA,MAAM,CAAC1E,IAAP,CAAY6I,KAAZ;AACH;AACJ;AACJ,OAXD;;AAYA,UAAIC,iBAAiB,GAAG,YAAY;AAChC,YAAIC,IAAI,GAAG,EAAX;;AACA,aAAK,IAAI5G,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGwG,SAAS,CAAC7G,MAAhC,EAAwCK,EAAE,EAA1C,EAA8C;AAC1C4G,UAAAA,IAAI,CAAC5G,EAAD,CAAJ,GAAWwG,SAAS,CAACxG,EAAD,CAApB;AACH;;AACD,aAAK,IAAIC,EAAE,GAAG,CAAT,EAAY4G,MAAM,GAAGD,IAA1B,EAAgC3G,EAAE,GAAG4G,MAAM,CAAClH,MAA5C,EAAoDM,EAAE,EAAtD,EAA0D;AACtD,cAAIwC,GAAG,GAAGoE,MAAM,CAAC5G,EAAD,CAAhB;;AACA,cAAI,OAAOwC,GAAP,KAAe,QAAnB,EAA6B;AACzB,iBAAK,IAAIC,GAAT,IAAgBD,GAAhB,EAAqB;AACjB,kBAAIiE,KAAK,GAAGjE,GAAG,CAACC,GAAD,CAAf;;AACA,kBAAI,OAAOgE,KAAP,KAAiB,QAArB,EAA+B;AAC3BnE,gBAAAA,MAAM,CAAC1E,IAAP,CAAY6I,KAAZ;AACH;AACJ;AACJ;AACJ;AACJ,OAhBD;;AAiBA,UAAII,mBAAmB,GAAG,YAAY;AAClC,YAAIC,MAAM,GAAG,EAAb;;AACA,aAAK,IAAI/G,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGwG,SAAS,CAAC7G,MAAhC,EAAwCK,EAAE,EAA1C,EAA8C;AAC1C+G,UAAAA,MAAM,CAAC/G,EAAD,CAAN,GAAawG,SAAS,CAACxG,EAAD,CAAtB;AACH;;AACD,aAAK,IAAIC,EAAE,GAAG,CAAT,EAAY+G,QAAQ,GAAGD,MAA5B,EAAoC9G,EAAE,GAAG+G,QAAQ,CAACrH,MAAlD,EAA0DM,EAAE,EAA5D,EAAgE;AAC5D,cAAIgH,KAAK,GAAGD,QAAQ,CAAC/G,EAAD,CAApB;;AACA,cAAIM,KAAK,CAACC,OAAN,CAAcyG,KAAd,CAAJ,EAA0B;AACtB,iBAAK,IAAIC,EAAE,GAAG,CAAT,EAAYC,OAAO,GAAGF,KAA3B,EAAkCC,EAAE,GAAGC,OAAO,CAACxH,MAA/C,EAAuDuH,EAAE,EAAzD,EAA6D;AACzD,kBAAIR,KAAK,GAAGS,OAAO,CAACD,EAAD,CAAnB;;AACA,kBAAI,OAAOR,KAAP,KAAiB,QAArB,EAA+B;AAC3BnE,gBAAAA,MAAM,CAAC1E,IAAP,CAAY6I,KAAZ;AACH;AACJ;AACJ;AACJ;AACJ,OAhBD;;AAiBA,UAAIU,SAAS,GAAG,UAAUxH,IAAV,EAAgB;AAC5B,YAAIyH,QAAQ,GAAG,EAAf;;AACA,eAAOzH,IAAI,CAAC0H,IAAZ,EAAkB;AACd,cAAIC,GAAG,GAAG3H,IAAI,CAAC0H,IAAf;AACA,cAAIE,QAAQ,GAAGD,GAAG,CAAC/C,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAf;AACA,iBAAO5E,IAAI,CAAC0H,IAAZ;;AACA,cAAIE,QAAQ,CAAC,CAAD,CAAR,CAAY7H,MAAZ,GAAqB,CAAzB,EAA4B;AACxB0G,YAAAA,YAAY,CAACxI,IAAb,CAAkB6H,mBAAmB,CAAC9F,IAAD,EAAO4H,QAAQ,CAAC,CAAD,CAAf,EAAoBA,QAAQ,CAAC,CAAD,CAA5B,EAAiC3B,eAAjC,EAAkDC,wBAAlD,CAArC;AACA;AACH,WAHD,MAIK;AACD,gBAAIuB,QAAQ,CAACI,OAAT,CAAiBF,GAAjB,MAA0B,CAAC,CAA/B,EAAkC;AAC9BnC,cAAAA,KAAK,CAACxF,IAAD,EAAOuG,YAAP,EAAqBN,eAArB,EAAsC2B,QAAQ,CAAC,CAAD,CAA9C,CAAL,CAD8B,CAC2B;;AACzDH,cAAAA,QAAQ,CAACxJ,IAAT,CAAc0J,GAAd;AACH;AACJ;AACJ;;AACDjB,QAAAA,cAAc,CAAC1G,IAAI,CAACa,KAAN,EAAab,IAAI,CAACS,oBAAlB,EAAwCT,IAAI,CAAC8H,GAA7C,EAAkD9H,IAAI,CAAC+H,QAAvD,EAAiE/H,IAAI,CAACgI,aAAtE,EAAqFhI,IAAI,CAACiI,EAA1F,EAA8FjI,IAAI,CAACZ,IAAnG,EAAyGY,IAAI,CAACkI,IAA9G,CAAd;AACAnB,QAAAA,iBAAiB,CAAC/G,IAAI,CAACmI,WAAN,EAAmBnI,IAAI,CAACE,UAAxB,EAAoCF,IAAI,CAACG,iBAAzC,EAA4DH,IAAI,CAACtB,YAAjE,CAAjB;AACAwI,QAAAA,mBAAmB,CAAClH,IAAI,CAACoI,KAAN,EAAapI,IAAI,CAACqI,KAAlB,EAAyBrI,IAAI,CAACsI,KAA9B,EAAqCtI,IAAI,CAACa,KAA1C,CAAnB;AACH,OApBD;;AAqBA,aAAO8B,MAAM,CAAC5C,MAAd,EAAsB;AAClB,YAAIC,IAAI,GAAG2C,MAAM,CAACL,GAAP,EAAX;;AACA,YAAIkE,IAAI,CAACqB,OAAL,CAAa7H,IAAb,KAAsB,CAA1B,EAA6B;AACzB;AACH;;AACDwG,QAAAA,IAAI,CAACvI,IAAL,CAAU+B,IAAV;AACAwH,QAAAA,SAAS,CAACxH,IAAD,CAAT;AACH;;AACD,aAAOd,KAAK,CAACN,OAAN,CAAcgE,GAAd,CAAkB6D,YAAlB,CAAP;AACH,KAnFD;;AAoFA,WAAOH,WAAW,CAAC9G,MAAD,EAASA,MAAT,EAAiBwF,SAAjB,EAA4BtG,YAA5B,CAAX,CAAqDU,IAArD,CAA0D,UAAUmJ,CAAV,EAAa;AAAE,aAAO,IAAI7I,cAAJ,CAAmBF,MAAnB,EAA2ByF,aAA3B,CAAP;AAAmD,KAA5H,CAAP;AACH,GA9ID;;AA+IAhE,EAAAA,iBAAiB,CAACnD,SAAlB,CAA4B0K,oBAA5B,GAAmD,UAAUC,QAAV,EAAoBC,QAApB,EAA8B;AAC7E;AACA,QAAIA,QAAQ,IAAIA,QAAQ,CAACC,IAArB,IAA6BD,QAAQ,CAACC,IAAT,CAAcC,IAAd,KAAuB,QAAxD,EAAkE;AAC9D,UAAIC,gBAAgB,GAAGH,QAAQ,CAACC,IAAT,CAAczI,UAAd,CAAyB4B,MAAzB,CAAgC,UAAUgH,CAAV,EAAa;AAAE,eAAQA,CAAC,CAACC,OAAF,CAAUC,KAAV,KAAoB,SAArB,IAAmCF,CAAC,CAACG,SAArC,IAAkDH,CAAC,CAACG,SAAF,CAAYL,IAAZ,KAAqB,QAA9E;AAAyF,OAAxI,CAAvB;;AACA,UAAIC,gBAAgB,CAAC9I,MAAjB,GAA0B,CAA9B,EAAiC;AAC7B,YAAImJ,QAAQ,GAAG/L,MAAM,CAACgM,YAAP,CAAoBN,gBAAgB,CAAC,CAAD,CAAhB,CAAoBI,SAAxC,CAAf;;AACA,YAAIC,QAAQ,IAAIhM,OAAO,CAACkM,UAAR,CAAmBF,QAAnB,EAA6B,GAA7B,CAAZ,IAAiD,KAAK/H,cAA1D,EAA0E;AACtE+H,UAAAA,QAAQ,GAAG,KAAK/H,cAAL,CAAoBgF,mBAApB,CAAwC+C,QAAxC,EAAkDT,QAAlD,CAAX;AACH;;AACD,YAAIS,QAAJ,EAAc;AACV,cAAIlL,EAAE,GAAG,KAAK0E,WAAL,CAAiBwG,QAAjB,CAAT;AACA,iBAAO,KAAKnF,oBAAL,CAA0B/F,EAA1B,EAA8BiB,iBAA9B,EAAP;AACH;AACJ;AACJ;;AACD,QAAIuH,IAAI,GAAGlG,MAAM,CAAC+I,MAAP,CAAc,IAAd,CAAX;AACA,QAAIxL,OAAO,GAAG,EAAd;;AACA,SAAK,IAAIuC,EAAE,GAAG,CAAT,EAAYC,EAAE,GAAG,KAAKqB,uBAA3B,EAAoDtB,EAAE,GAAGC,EAAE,CAACN,MAA5D,EAAoEK,EAAE,EAAtE,EAA0E;AACtE,UAAI0G,KAAK,GAAGzG,EAAE,CAACD,EAAD,CAAd;;AACA,UAAI0G,KAAK,CAAC5I,cAAN,CAAqBuK,QAArB,CAAJ,EAAoC;AAChC,aAAK,IAAInB,EAAE,GAAG,CAAT,EAAYgC,EAAE,GAAGxC,KAAK,CAACzI,UAAN,EAAtB,EAA0CiJ,EAAE,GAAGgC,EAAE,CAACvJ,MAAlD,EAA0DuH,EAAE,EAA5D,EAAgE;AAC5D,cAAIzD,QAAQ,GAAGyF,EAAE,CAAChC,EAAD,CAAjB;;AACA,cAAI,CAACd,IAAI,CAAC3C,QAAD,CAAT,EAAqB;AACjBhG,YAAAA,OAAO,CAACI,IAAR,CAAa4F,QAAb;AACA2C,YAAAA,IAAI,CAAC3C,QAAD,CAAJ,GAAiB,IAAjB;AACH;AACJ;AACJ;AACJ;;AACD,QAAIhG,OAAO,CAACkC,MAAR,GAAiB,CAArB,EAAwB;AACpB,aAAO,KAAKwJ,oBAAL,CAA0Bd,QAA1B,EAAoC5K,OAApC,EAA6CoB,iBAA7C,EAAP;AACH;;AACD,WAAO,KAAKL,OAAL,CAAaC,OAAb,CAAqB,IAArB,CAAP;AACH,GAjCD;;AAkCAoC,EAAAA,iBAAiB,CAACnD,SAAlB,CAA4ByL,oBAA5B,GAAmD,UAAUd,QAAV,EAAoBe,SAApB,EAA+B;AAC9E,QAAIA,SAAS,CAACzJ,MAAV,KAAqB,CAAzB,EAA4B;AACxB,aAAO,KAAKgE,oBAAL,CAA0ByF,SAAS,CAAC,CAAD,CAAnC,CAAP;AACH,KAFD,MAGK;AACD,UAAIC,gBAAgB,GAAG,oCAAoCC,kBAAkB,CAACjB,QAAD,CAA7E;AACA,UAAIkB,cAAc,GAAG;AACjBtB,QAAAA,KAAK,EAAEmB,SAAS,CAAC3G,GAAV,CAAc,UAAUgB,QAAV,EAAoB;AAAE,iBAAQ;AAAE6D,YAAAA,IAAI,EAAE7D;AAAR,WAAR;AAA8B,SAAlE;AADU,OAArB;AAGA,aAAO,KAAKN,eAAL,CAAqBkG,gBAArB,EAAuCE,cAAvC,CAAP;AACH;AACJ,GAXD;;AAYA,SAAO1I,iBAAP;AACH,CArWsC,EAAvC;;AAsWA,SAASA,iBAAT;;AACA,SAASoD,eAAT,CAAyB7F,GAAzB,EAA8B;AAC1B,MAAI;AACA,QAAIgE,GAAG,GAAGvF,GAAG,CAAC+E,KAAJ,CAAUxD,GAAV,CAAV;;AACA,QAAIgE,GAAG,CAACT,MAAJ,KAAe,MAAnB,EAA2B;AACvB,aAAOS,GAAG,CAACoH,MAAX;AACH;AACJ,GALD,CAMA,OAAOhM,CAAP,EAAU,CACN;AACH;;AACD,SAAOY,GAAP;AACH","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as Json from './../../jsonc-parser/main.js';\nimport { URI } from './../../vscode-uri/index.js';\nimport * as Strings from '../utils/strings.js';\nimport * as Parser from '../parser/jsonParser.js';\nimport * as nls from './../../../fillers/vscode-nls.js';\nvar localize = nls.loadMessageBundle();\nvar FilePatternAssociation = /** @class */ (function () {\n    function FilePatternAssociation(pattern) {\n        try {\n            this.patternRegExp = new RegExp(Strings.convertSimple2RegExpPattern(pattern) + '$');\n        }\n        catch (e) {\n            // invalid pattern\n            this.patternRegExp = null;\n        }\n        this.schemas = [];\n    }\n    FilePatternAssociation.prototype.addSchema = function (id) {\n        this.schemas.push(id);\n    };\n    FilePatternAssociation.prototype.matchesPattern = function (fileName) {\n        return this.patternRegExp && this.patternRegExp.test(fileName);\n    };\n    FilePatternAssociation.prototype.getSchemas = function () {\n        return this.schemas;\n    };\n    return FilePatternAssociation;\n}());\nvar SchemaHandle = /** @class */ (function () {\n    function SchemaHandle(service, url, unresolvedSchemaContent) {\n        this.service = service;\n        this.url = url;\n        this.dependencies = {};\n        if (unresolvedSchemaContent) {\n            this.unresolvedSchema = this.service.promise.resolve(new UnresolvedSchema(unresolvedSchemaContent));\n        }\n    }\n    SchemaHandle.prototype.getUnresolvedSchema = function () {\n        if (!this.unresolvedSchema) {\n            this.unresolvedSchema = this.service.loadSchema(this.url);\n        }\n        return this.unresolvedSchema;\n    };\n    SchemaHandle.prototype.getResolvedSchema = function () {\n        var _this = this;\n        if (!this.resolvedSchema) {\n            this.resolvedSchema = this.getUnresolvedSchema().then(function (unresolved) {\n                return _this.service.resolveSchemaContent(unresolved, _this.url, _this.dependencies);\n            });\n        }\n        return this.resolvedSchema;\n    };\n    SchemaHandle.prototype.clearSchema = function () {\n        this.resolvedSchema = null;\n        this.unresolvedSchema = null;\n        this.dependencies = {};\n    };\n    return SchemaHandle;\n}());\nvar UnresolvedSchema = /** @class */ (function () {\n    function UnresolvedSchema(schema, errors) {\n        if (errors === void 0) { errors = []; }\n        this.schema = schema;\n        this.errors = errors;\n    }\n    return UnresolvedSchema;\n}());\nexport { UnresolvedSchema };\nvar ResolvedSchema = /** @class */ (function () {\n    function ResolvedSchema(schema, errors) {\n        if (errors === void 0) { errors = []; }\n        this.schema = schema;\n        this.errors = errors;\n    }\n    ResolvedSchema.prototype.getSection = function (path) {\n        return Parser.asSchema(this.getSectionRecursive(path, this.schema));\n    };\n    ResolvedSchema.prototype.getSectionRecursive = function (path, schema) {\n        if (!schema || typeof schema === 'boolean' || path.length === 0) {\n            return schema;\n        }\n        var next = path.shift();\n        if (schema.properties && typeof schema.properties[next]) {\n            return this.getSectionRecursive(path, schema.properties[next]);\n        }\n        else if (schema.patternProperties) {\n            for (var _i = 0, _a = Object.keys(schema.patternProperties); _i < _a.length; _i++) {\n                var pattern = _a[_i];\n                var regex = new RegExp(pattern);\n                if (regex.test(next)) {\n                    return this.getSectionRecursive(path, schema.patternProperties[pattern]);\n                }\n            }\n        }\n        else if (typeof schema.additionalProperties === 'object') {\n            return this.getSectionRecursive(path, schema.additionalProperties);\n        }\n        else if (next.match('[0-9]+')) {\n            if (Array.isArray(schema.items)) {\n                var index = parseInt(next, 10);\n                if (!isNaN(index) && schema.items[index]) {\n                    return this.getSectionRecursive(path, schema.items[index]);\n                }\n            }\n            else if (schema.items) {\n                return this.getSectionRecursive(path, schema.items);\n            }\n        }\n        return null;\n    };\n    return ResolvedSchema;\n}());\nexport { ResolvedSchema };\nvar JSONSchemaService = /** @class */ (function () {\n    function JSONSchemaService(requestService, contextService, promiseConstructor) {\n        this.contextService = contextService;\n        this.requestService = requestService;\n        this.promiseConstructor = promiseConstructor || Promise;\n        this.callOnDispose = [];\n        this.contributionSchemas = {};\n        this.contributionAssociations = {};\n        this.schemasById = {};\n        this.filePatternAssociations = [];\n        this.filePatternAssociationById = {};\n        this.registeredSchemasIds = {};\n    }\n    JSONSchemaService.prototype.getRegisteredSchemaIds = function (filter) {\n        return Object.keys(this.registeredSchemasIds).filter(function (id) {\n            var scheme = URI.parse(id).scheme;\n            return scheme !== 'schemaservice' && (!filter || filter(scheme));\n        });\n    };\n    Object.defineProperty(JSONSchemaService.prototype, \"promise\", {\n        get: function () {\n            return this.promiseConstructor;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    JSONSchemaService.prototype.dispose = function () {\n        while (this.callOnDispose.length > 0) {\n            this.callOnDispose.pop()();\n        }\n    };\n    JSONSchemaService.prototype.onResourceChange = function (uri) {\n        var _this = this;\n        var hasChanges = false;\n        uri = this.normalizeId(uri);\n        var toWalk = [uri];\n        var all = Object.keys(this.schemasById).map(function (key) { return _this.schemasById[key]; });\n        while (toWalk.length) {\n            var curr = toWalk.pop();\n            for (var i = 0; i < all.length; i++) {\n                var handle = all[i];\n                if (handle && (handle.url === curr || handle.dependencies[curr])) {\n                    if (handle.url !== curr) {\n                        toWalk.push(handle.url);\n                    }\n                    handle.clearSchema();\n                    all[i] = undefined;\n                    hasChanges = true;\n                }\n            }\n        }\n        return hasChanges;\n    };\n    JSONSchemaService.prototype.normalizeId = function (id) {\n        // remove trailing '#', normalize drive capitalization\n        try {\n            return URI.parse(id).toString();\n        }\n        catch (e) {\n            return id;\n        }\n    };\n    JSONSchemaService.prototype.setSchemaContributions = function (schemaContributions) {\n        if (schemaContributions.schemas) {\n            var schemas = schemaContributions.schemas;\n            for (var id in schemas) {\n                var normalizedId = this.normalizeId(id);\n                this.contributionSchemas[normalizedId] = this.addSchemaHandle(normalizedId, schemas[id]);\n            }\n        }\n        if (schemaContributions.schemaAssociations) {\n            var schemaAssociations = schemaContributions.schemaAssociations;\n            for (var pattern in schemaAssociations) {\n                var associations = schemaAssociations[pattern];\n                this.contributionAssociations[pattern] = associations;\n                var fpa = this.getOrAddFilePatternAssociation(pattern);\n                for (var _i = 0, associations_1 = associations; _i < associations_1.length; _i++) {\n                    var schemaId = associations_1[_i];\n                    var id = this.normalizeId(schemaId);\n                    fpa.addSchema(id);\n                }\n            }\n        }\n    };\n    JSONSchemaService.prototype.addSchemaHandle = function (id, unresolvedSchemaContent) {\n        var schemaHandle = new SchemaHandle(this, id, unresolvedSchemaContent);\n        this.schemasById[id] = schemaHandle;\n        return schemaHandle;\n    };\n    JSONSchemaService.prototype.getOrAddSchemaHandle = function (id, unresolvedSchemaContent) {\n        return this.schemasById[id] || this.addSchemaHandle(id, unresolvedSchemaContent);\n    };\n    JSONSchemaService.prototype.getOrAddFilePatternAssociation = function (pattern) {\n        var fpa = this.filePatternAssociationById[pattern];\n        if (!fpa) {\n            fpa = new FilePatternAssociation(pattern);\n            this.filePatternAssociationById[pattern] = fpa;\n            this.filePatternAssociations.push(fpa);\n        }\n        return fpa;\n    };\n    JSONSchemaService.prototype.registerExternalSchema = function (uri, filePatterns, unresolvedSchemaContent) {\n        if (filePatterns === void 0) { filePatterns = null; }\n        var id = this.normalizeId(uri);\n        this.registeredSchemasIds[id] = true;\n        if (filePatterns) {\n            for (var _i = 0, filePatterns_1 = filePatterns; _i < filePatterns_1.length; _i++) {\n                var pattern = filePatterns_1[_i];\n                this.getOrAddFilePatternAssociation(pattern).addSchema(id);\n            }\n        }\n        return unresolvedSchemaContent ? this.addSchemaHandle(id, unresolvedSchemaContent) : this.getOrAddSchemaHandle(id);\n    };\n    JSONSchemaService.prototype.clearExternalSchemas = function () {\n        this.schemasById = {};\n        this.filePatternAssociations = [];\n        this.filePatternAssociationById = {};\n        this.registeredSchemasIds = {};\n        for (var id in this.contributionSchemas) {\n            this.schemasById[id] = this.contributionSchemas[id];\n            this.registeredSchemasIds[id] = true;\n        }\n        for (var pattern in this.contributionAssociations) {\n            var fpa = this.getOrAddFilePatternAssociation(pattern);\n            for (var _i = 0, _a = this.contributionAssociations[pattern]; _i < _a.length; _i++) {\n                var schemaId = _a[_i];\n                var id = this.normalizeId(schemaId);\n                fpa.addSchema(id);\n            }\n        }\n    };\n    JSONSchemaService.prototype.getResolvedSchema = function (schemaId) {\n        var id = this.normalizeId(schemaId);\n        var schemaHandle = this.schemasById[id];\n        if (schemaHandle) {\n            return schemaHandle.getResolvedSchema();\n        }\n        return this.promise.resolve(null);\n    };\n    JSONSchemaService.prototype.loadSchema = function (url) {\n        if (!this.requestService) {\n            var errorMessage = localize('json.schema.norequestservice', 'Unable to load schema from \\'{0}\\'. No schema request service available', toDisplayString(url));\n            return this.promise.resolve(new UnresolvedSchema({}, [errorMessage]));\n        }\n        return this.requestService(url).then(function (content) {\n            if (!content) {\n                var errorMessage = localize('json.schema.nocontent', 'Unable to load schema from \\'{0}\\': No content.', toDisplayString(url));\n                return new UnresolvedSchema({}, [errorMessage]);\n            }\n            var schemaContent = {};\n            var jsonErrors = [];\n            schemaContent = Json.parse(content, jsonErrors);\n            var errors = jsonErrors.length ? [localize('json.schema.invalidFormat', 'Unable to parse content from \\'{0}\\': Parse error at offset {1}.', toDisplayString(url), jsonErrors[0].offset)] : [];\n            return new UnresolvedSchema(schemaContent, errors);\n        }, function (error) {\n            var errorMessage = error.toString();\n            var errorSplit = error.toString().split('Error: ');\n            if (errorSplit.length > 1) {\n                // more concise error message, URL and context are attached by caller anyways\n                errorMessage = errorSplit[1];\n            }\n            if (Strings.endsWith(errorMessage, '.')) {\n                errorMessage = errorMessage.substr(0, errorMessage.length - 1);\n            }\n            return new UnresolvedSchema({}, [localize('json.schema.nocontent', 'Unable to load schema from \\'{0}\\': {1}.', toDisplayString(url), errorMessage)]);\n        });\n    };\n    JSONSchemaService.prototype.resolveSchemaContent = function (schemaToResolve, schemaURL, dependencies) {\n        var _this = this;\n        var resolveErrors = schemaToResolve.errors.slice(0);\n        var schema = schemaToResolve.schema;\n        if (schema.$schema) {\n            var id = this.normalizeId(schema.$schema);\n            if (id === 'http://json-schema.org/draft-03/schema') {\n                return this.promise.resolve(new ResolvedSchema({}, [localize('json.schema.draft03.notsupported', \"Draft-03 schemas are not supported.\")]));\n            }\n            else if (id === 'https://json-schema.org/draft/2019-09/schema') {\n                schemaToResolve.errors.push(localize('json.schema.draft201909.notsupported', \"Draft 2019-09 schemas are not yet fully supported.\"));\n            }\n        }\n        var contextService = this.contextService;\n        var findSection = function (schema, path) {\n            if (!path) {\n                return schema;\n            }\n            var current = schema;\n            if (path[0] === '/') {\n                path = path.substr(1);\n            }\n            path.split('/').some(function (part) {\n                current = current[part];\n                return !current;\n            });\n            return current;\n        };\n        var merge = function (target, sourceRoot, sourceURI, path) {\n            var section = findSection(sourceRoot, path);\n            if (section) {\n                for (var key in section) {\n                    if (section.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                        target[key] = section[key];\n                    }\n                }\n            }\n            else {\n                resolveErrors.push(localize('json.schema.invalidref', '$ref \\'{0}\\' in \\'{1}\\' can not be resolved.', path, sourceURI));\n            }\n        };\n        var resolveExternalLink = function (node, uri, linkPath, parentSchemaURL, parentSchemaDependencies) {\n            if (contextService && !/^\\w+:\\/\\/.*/.test(uri)) {\n                uri = contextService.resolveRelativePath(uri, parentSchemaURL);\n            }\n            uri = _this.normalizeId(uri);\n            var referencedHandle = _this.getOrAddSchemaHandle(uri);\n            return referencedHandle.getUnresolvedSchema().then(function (unresolvedSchema) {\n                parentSchemaDependencies[uri] = true;\n                if (unresolvedSchema.errors.length) {\n                    var loc = linkPath ? uri + '#' + linkPath : uri;\n                    resolveErrors.push(localize('json.schema.problemloadingref', 'Problems loading reference \\'{0}\\': {1}', loc, unresolvedSchema.errors[0]));\n                }\n                merge(node, unresolvedSchema.schema, uri, linkPath);\n                return resolveRefs(node, unresolvedSchema.schema, uri, referencedHandle.dependencies);\n            });\n        };\n        var resolveRefs = function (node, parentSchema, parentSchemaURL, parentSchemaDependencies) {\n            if (!node || typeof node !== 'object') {\n                return Promise.resolve(null);\n            }\n            var toWalk = [node];\n            var seen = [];\n            var openPromises = [];\n            var collectEntries = function () {\n                var entries = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    entries[_i] = arguments[_i];\n                }\n                for (var _a = 0, entries_1 = entries; _a < entries_1.length; _a++) {\n                    var entry = entries_1[_a];\n                    if (typeof entry === 'object') {\n                        toWalk.push(entry);\n                    }\n                }\n            };\n            var collectMapEntries = function () {\n                var maps = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    maps[_i] = arguments[_i];\n                }\n                for (var _a = 0, maps_1 = maps; _a < maps_1.length; _a++) {\n                    var map = maps_1[_a];\n                    if (typeof map === 'object') {\n                        for (var key in map) {\n                            var entry = map[key];\n                            if (typeof entry === 'object') {\n                                toWalk.push(entry);\n                            }\n                        }\n                    }\n                }\n            };\n            var collectArrayEntries = function () {\n                var arrays = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    arrays[_i] = arguments[_i];\n                }\n                for (var _a = 0, arrays_1 = arrays; _a < arrays_1.length; _a++) {\n                    var array = arrays_1[_a];\n                    if (Array.isArray(array)) {\n                        for (var _b = 0, array_1 = array; _b < array_1.length; _b++) {\n                            var entry = array_1[_b];\n                            if (typeof entry === 'object') {\n                                toWalk.push(entry);\n                            }\n                        }\n                    }\n                }\n            };\n            var handleRef = function (next) {\n                var seenRefs = [];\n                while (next.$ref) {\n                    var ref = next.$ref;\n                    var segments = ref.split('#', 2);\n                    delete next.$ref;\n                    if (segments[0].length > 0) {\n                        openPromises.push(resolveExternalLink(next, segments[0], segments[1], parentSchemaURL, parentSchemaDependencies));\n                        return;\n                    }\n                    else {\n                        if (seenRefs.indexOf(ref) === -1) {\n                            merge(next, parentSchema, parentSchemaURL, segments[1]); // can set next.$ref again, use seenRefs to avoid circle\n                            seenRefs.push(ref);\n                        }\n                    }\n                }\n                collectEntries(next.items, next.additionalProperties, next.not, next.contains, next.propertyNames, next.if, next.then, next.else);\n                collectMapEntries(next.definitions, next.properties, next.patternProperties, next.dependencies);\n                collectArrayEntries(next.anyOf, next.allOf, next.oneOf, next.items);\n            };\n            while (toWalk.length) {\n                var next = toWalk.pop();\n                if (seen.indexOf(next) >= 0) {\n                    continue;\n                }\n                seen.push(next);\n                handleRef(next);\n            }\n            return _this.promise.all(openPromises);\n        };\n        return resolveRefs(schema, schema, schemaURL, dependencies).then(function (_) { return new ResolvedSchema(schema, resolveErrors); });\n    };\n    JSONSchemaService.prototype.getSchemaForResource = function (resource, document) {\n        // first use $schema if present\n        if (document && document.root && document.root.type === 'object') {\n            var schemaProperties = document.root.properties.filter(function (p) { return (p.keyNode.value === '$schema') && p.valueNode && p.valueNode.type === 'string'; });\n            if (schemaProperties.length > 0) {\n                var schemeId = Parser.getNodeValue(schemaProperties[0].valueNode);\n                if (schemeId && Strings.startsWith(schemeId, '.') && this.contextService) {\n                    schemeId = this.contextService.resolveRelativePath(schemeId, resource);\n                }\n                if (schemeId) {\n                    var id = this.normalizeId(schemeId);\n                    return this.getOrAddSchemaHandle(id).getResolvedSchema();\n                }\n            }\n        }\n        var seen = Object.create(null);\n        var schemas = [];\n        for (var _i = 0, _a = this.filePatternAssociations; _i < _a.length; _i++) {\n            var entry = _a[_i];\n            if (entry.matchesPattern(resource)) {\n                for (var _b = 0, _c = entry.getSchemas(); _b < _c.length; _b++) {\n                    var schemaId = _c[_b];\n                    if (!seen[schemaId]) {\n                        schemas.push(schemaId);\n                        seen[schemaId] = true;\n                    }\n                }\n            }\n        }\n        if (schemas.length > 0) {\n            return this.createCombinedSchema(resource, schemas).getResolvedSchema();\n        }\n        return this.promise.resolve(null);\n    };\n    JSONSchemaService.prototype.createCombinedSchema = function (resource, schemaIds) {\n        if (schemaIds.length === 1) {\n            return this.getOrAddSchemaHandle(schemaIds[0]);\n        }\n        else {\n            var combinedSchemaId = 'schemaservice://combinedSchema/' + encodeURIComponent(resource);\n            var combinedSchema = {\n                allOf: schemaIds.map(function (schemaId) { return ({ $ref: schemaId }); })\n            };\n            return this.addSchemaHandle(combinedSchemaId, combinedSchema);\n        }\n    };\n    return JSONSchemaService;\n}());\nexport { JSONSchemaService };\nfunction toDisplayString(url) {\n    try {\n        var uri = URI.parse(url);\n        if (uri.scheme === 'file') {\n            return uri.fsPath;\n        }\n    }\n    catch (e) {\n        // ignore\n    }\n    return url;\n}\n"]},"metadata":{},"sourceType":"module"}