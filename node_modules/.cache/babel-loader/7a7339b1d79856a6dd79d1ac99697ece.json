{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar hasDifferentOriginAncestorFlag = false;\nvar sameOriginWindowChainCache = null;\n\nfunction getParentWindowIfSameOrigin(w) {\n  if (!w.parent || w.parent === w) {\n    return null;\n  } // Cannot really tell if we have access to the parent window unless we try to access something in it\n\n\n  try {\n    var location_1 = w.location;\n    var parentLocation = w.parent.location;\n\n    if (location_1.protocol !== parentLocation.protocol || location_1.hostname !== parentLocation.hostname || location_1.port !== parentLocation.port) {\n      hasDifferentOriginAncestorFlag = true;\n      return null;\n    }\n  } catch (e) {\n    hasDifferentOriginAncestorFlag = true;\n    return null;\n  }\n\n  return w.parent;\n}\n\nfunction findIframeElementInParentWindow(parentWindow, childWindow) {\n  var parentWindowIframes = parentWindow.document.getElementsByTagName('iframe');\n  var iframe;\n\n  for (var i = 0, len = parentWindowIframes.length; i < len; i++) {\n    iframe = parentWindowIframes[i];\n\n    if (iframe.contentWindow === childWindow) {\n      return iframe;\n    }\n  }\n\n  return null;\n}\n\nvar IframeUtils =\n/** @class */\nfunction () {\n  function IframeUtils() {}\n  /**\r\n   * Returns a chain of embedded windows with the same origin (which can be accessed programmatically).\r\n   * Having a chain of length 1 might mean that the current execution environment is running outside of an iframe or inside an iframe embedded in a window with a different origin.\r\n   * To distinguish if at one point the current execution environment is running inside a window with a different origin, see hasDifferentOriginAncestor()\r\n   */\n\n\n  IframeUtils.getSameOriginWindowChain = function () {\n    if (!sameOriginWindowChainCache) {\n      sameOriginWindowChainCache = [];\n      var w = window;\n      var parent_1;\n\n      do {\n        parent_1 = getParentWindowIfSameOrigin(w);\n\n        if (parent_1) {\n          sameOriginWindowChainCache.push({\n            window: w,\n            iframeElement: findIframeElementInParentWindow(parent_1, w)\n          });\n        } else {\n          sameOriginWindowChainCache.push({\n            window: w,\n            iframeElement: null\n          });\n        }\n\n        w = parent_1;\n      } while (w);\n    }\n\n    return sameOriginWindowChainCache.slice(0);\n  };\n  /**\r\n   * Returns true if the current execution environment is chained in a list of iframes which at one point ends in a window with a different origin.\r\n   * Returns false if the current execution environment is not running inside an iframe or if the entire chain of iframes have the same origin.\r\n   */\n\n\n  IframeUtils.hasDifferentOriginAncestor = function () {\n    if (!sameOriginWindowChainCache) {\n      this.getSameOriginWindowChain();\n    }\n\n    return hasDifferentOriginAncestorFlag;\n  };\n  /**\r\n   * Returns the position of `childWindow` relative to `ancestorWindow`\r\n   */\n\n\n  IframeUtils.getPositionOfChildWindowRelativeToAncestorWindow = function (childWindow, ancestorWindow) {\n    if (!ancestorWindow || childWindow === ancestorWindow) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n\n    var top = 0,\n        left = 0;\n    var windowChain = this.getSameOriginWindowChain();\n\n    for (var _i = 0, windowChain_1 = windowChain; _i < windowChain_1.length; _i++) {\n      var windowChainEl = windowChain_1[_i];\n\n      if (windowChainEl.window === ancestorWindow) {\n        break;\n      }\n\n      if (!windowChainEl.iframeElement) {\n        break;\n      }\n\n      var boundingRect = windowChainEl.iframeElement.getBoundingClientRect();\n      top += boundingRect.top;\n      left += boundingRect.left;\n    }\n\n    return {\n      top: top,\n      left: left\n    };\n  };\n\n  return IframeUtils;\n}();\n\nexport { IframeUtils };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/base/browser/iframe.js"],"names":["hasDifferentOriginAncestorFlag","sameOriginWindowChainCache","getParentWindowIfSameOrigin","w","parent","location_1","location","parentLocation","protocol","hostname","port","e","findIframeElementInParentWindow","parentWindow","childWindow","parentWindowIframes","document","getElementsByTagName","iframe","i","len","length","contentWindow","IframeUtils","getSameOriginWindowChain","window","parent_1","push","iframeElement","slice","hasDifferentOriginAncestor","getPositionOfChildWindowRelativeToAncestorWindow","ancestorWindow","top","left","windowChain","_i","windowChain_1","windowChainEl","boundingRect","getBoundingClientRect"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar hasDifferentOriginAncestorFlag = false;\r\nvar sameOriginWindowChainCache = null;\r\nfunction getParentWindowIfSameOrigin(w) {\r\n    if (!w.parent || w.parent === w) {\r\n        return null;\r\n    }\r\n    // Cannot really tell if we have access to the parent window unless we try to access something in it\r\n    try {\r\n        var location_1 = w.location;\r\n        var parentLocation = w.parent.location;\r\n        if (location_1.protocol !== parentLocation.protocol || location_1.hostname !== parentLocation.hostname || location_1.port !== parentLocation.port) {\r\n            hasDifferentOriginAncestorFlag = true;\r\n            return null;\r\n        }\r\n    }\r\n    catch (e) {\r\n        hasDifferentOriginAncestorFlag = true;\r\n        return null;\r\n    }\r\n    return w.parent;\r\n}\r\nfunction findIframeElementInParentWindow(parentWindow, childWindow) {\r\n    var parentWindowIframes = parentWindow.document.getElementsByTagName('iframe');\r\n    var iframe;\r\n    for (var i = 0, len = parentWindowIframes.length; i < len; i++) {\r\n        iframe = parentWindowIframes[i];\r\n        if (iframe.contentWindow === childWindow) {\r\n            return iframe;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nvar IframeUtils = /** @class */ (function () {\r\n    function IframeUtils() {\r\n    }\r\n    /**\r\n     * Returns a chain of embedded windows with the same origin (which can be accessed programmatically).\r\n     * Having a chain of length 1 might mean that the current execution environment is running outside of an iframe or inside an iframe embedded in a window with a different origin.\r\n     * To distinguish if at one point the current execution environment is running inside a window with a different origin, see hasDifferentOriginAncestor()\r\n     */\r\n    IframeUtils.getSameOriginWindowChain = function () {\r\n        if (!sameOriginWindowChainCache) {\r\n            sameOriginWindowChainCache = [];\r\n            var w = window;\r\n            var parent_1;\r\n            do {\r\n                parent_1 = getParentWindowIfSameOrigin(w);\r\n                if (parent_1) {\r\n                    sameOriginWindowChainCache.push({\r\n                        window: w,\r\n                        iframeElement: findIframeElementInParentWindow(parent_1, w)\r\n                    });\r\n                }\r\n                else {\r\n                    sameOriginWindowChainCache.push({\r\n                        window: w,\r\n                        iframeElement: null\r\n                    });\r\n                }\r\n                w = parent_1;\r\n            } while (w);\r\n        }\r\n        return sameOriginWindowChainCache.slice(0);\r\n    };\r\n    /**\r\n     * Returns true if the current execution environment is chained in a list of iframes which at one point ends in a window with a different origin.\r\n     * Returns false if the current execution environment is not running inside an iframe or if the entire chain of iframes have the same origin.\r\n     */\r\n    IframeUtils.hasDifferentOriginAncestor = function () {\r\n        if (!sameOriginWindowChainCache) {\r\n            this.getSameOriginWindowChain();\r\n        }\r\n        return hasDifferentOriginAncestorFlag;\r\n    };\r\n    /**\r\n     * Returns the position of `childWindow` relative to `ancestorWindow`\r\n     */\r\n    IframeUtils.getPositionOfChildWindowRelativeToAncestorWindow = function (childWindow, ancestorWindow) {\r\n        if (!ancestorWindow || childWindow === ancestorWindow) {\r\n            return {\r\n                top: 0,\r\n                left: 0\r\n            };\r\n        }\r\n        var top = 0, left = 0;\r\n        var windowChain = this.getSameOriginWindowChain();\r\n        for (var _i = 0, windowChain_1 = windowChain; _i < windowChain_1.length; _i++) {\r\n            var windowChainEl = windowChain_1[_i];\r\n            if (windowChainEl.window === ancestorWindow) {\r\n                break;\r\n            }\r\n            if (!windowChainEl.iframeElement) {\r\n                break;\r\n            }\r\n            var boundingRect = windowChainEl.iframeElement.getBoundingClientRect();\r\n            top += boundingRect.top;\r\n            left += boundingRect.left;\r\n        }\r\n        return {\r\n            top: top,\r\n            left: left\r\n        };\r\n    };\r\n    return IframeUtils;\r\n}());\r\nexport { IframeUtils };\r\n"]},"metadata":{},"sourceType":"module"}