{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nexport var MAX_FOLDING_REGIONS = 0xFFFF;\nexport var MAX_LINE_NUMBER = 0xFFFFFF;\nvar MASK_INDENT = 0xFF000000;\n\nvar FoldingRegions =\n/** @class */\nfunction () {\n  function FoldingRegions(startIndexes, endIndexes, types) {\n    if (startIndexes.length !== endIndexes.length || startIndexes.length > MAX_FOLDING_REGIONS) {\n      throw new Error('invalid startIndexes or endIndexes size');\n    }\n\n    this._startIndexes = startIndexes;\n    this._endIndexes = endIndexes;\n    this._collapseStates = new Uint32Array(Math.ceil(startIndexes.length / 32));\n    this._types = types;\n    this._parentsComputed = false;\n  }\n\n  FoldingRegions.prototype.ensureParentIndices = function () {\n    var _this = this;\n\n    if (!this._parentsComputed) {\n      this._parentsComputed = true;\n      var parentIndexes_1 = [];\n\n      var isInsideLast = function (startLineNumber, endLineNumber) {\n        var index = parentIndexes_1[parentIndexes_1.length - 1];\n        return _this.getStartLineNumber(index) <= startLineNumber && _this.getEndLineNumber(index) >= endLineNumber;\n      };\n\n      for (var i = 0, len = this._startIndexes.length; i < len; i++) {\n        var startLineNumber = this._startIndexes[i];\n        var endLineNumber = this._endIndexes[i];\n\n        if (startLineNumber > MAX_LINE_NUMBER || endLineNumber > MAX_LINE_NUMBER) {\n          throw new Error('startLineNumber or endLineNumber must not exceed ' + MAX_LINE_NUMBER);\n        }\n\n        while (parentIndexes_1.length > 0 && !isInsideLast(startLineNumber, endLineNumber)) {\n          parentIndexes_1.pop();\n        }\n\n        var parentIndex = parentIndexes_1.length > 0 ? parentIndexes_1[parentIndexes_1.length - 1] : -1;\n        parentIndexes_1.push(i);\n        this._startIndexes[i] = startLineNumber + ((parentIndex & 0xFF) << 24);\n        this._endIndexes[i] = endLineNumber + ((parentIndex & 0xFF00) << 16);\n      }\n    }\n  };\n\n  Object.defineProperty(FoldingRegions.prototype, \"length\", {\n    get: function () {\n      return this._startIndexes.length;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  FoldingRegions.prototype.getStartLineNumber = function (index) {\n    return this._startIndexes[index] & MAX_LINE_NUMBER;\n  };\n\n  FoldingRegions.prototype.getEndLineNumber = function (index) {\n    return this._endIndexes[index] & MAX_LINE_NUMBER;\n  };\n\n  FoldingRegions.prototype.getType = function (index) {\n    return this._types ? this._types[index] : undefined;\n  };\n\n  FoldingRegions.prototype.hasTypes = function () {\n    return !!this._types;\n  };\n\n  FoldingRegions.prototype.isCollapsed = function (index) {\n    var arrayIndex = index / 32 | 0;\n    var bit = index % 32;\n    return (this._collapseStates[arrayIndex] & 1 << bit) !== 0;\n  };\n\n  FoldingRegions.prototype.setCollapsed = function (index, newState) {\n    var arrayIndex = index / 32 | 0;\n    var bit = index % 32;\n    var value = this._collapseStates[arrayIndex];\n\n    if (newState) {\n      this._collapseStates[arrayIndex] = value | 1 << bit;\n    } else {\n      this._collapseStates[arrayIndex] = value & ~(1 << bit);\n    }\n  };\n\n  FoldingRegions.prototype.toRegion = function (index) {\n    return new FoldingRegion(this, index);\n  };\n\n  FoldingRegions.prototype.getParentIndex = function (index) {\n    this.ensureParentIndices();\n    var parent = ((this._startIndexes[index] & MASK_INDENT) >>> 24) + ((this._endIndexes[index] & MASK_INDENT) >>> 16);\n\n    if (parent === MAX_FOLDING_REGIONS) {\n      return -1;\n    }\n\n    return parent;\n  };\n\n  FoldingRegions.prototype.contains = function (index, line) {\n    return this.getStartLineNumber(index) <= line && this.getEndLineNumber(index) >= line;\n  };\n\n  FoldingRegions.prototype.findIndex = function (line) {\n    var low = 0,\n        high = this._startIndexes.length;\n\n    if (high === 0) {\n      return -1; // no children\n    }\n\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n\n      if (line < this.getStartLineNumber(mid)) {\n        high = mid;\n      } else {\n        low = mid + 1;\n      }\n    }\n\n    return low - 1;\n  };\n\n  FoldingRegions.prototype.findRange = function (line) {\n    var index = this.findIndex(line);\n\n    if (index >= 0) {\n      var endLineNumber = this.getEndLineNumber(index);\n\n      if (endLineNumber >= line) {\n        return index;\n      }\n\n      index = this.getParentIndex(index);\n\n      while (index !== -1) {\n        if (this.contains(index, line)) {\n          return index;\n        }\n\n        index = this.getParentIndex(index);\n      }\n    }\n\n    return -1;\n  };\n\n  FoldingRegions.prototype.toString = function () {\n    var res = [];\n\n    for (var i = 0; i < this.length; i++) {\n      res[i] = \"[\" + (this.isCollapsed(i) ? '+' : '-') + \"] \" + this.getStartLineNumber(i) + \"/\" + this.getEndLineNumber(i);\n    }\n\n    return res.join(', ');\n  };\n\n  return FoldingRegions;\n}();\n\nexport { FoldingRegions };\n\nvar FoldingRegion =\n/** @class */\nfunction () {\n  function FoldingRegion(ranges, index) {\n    this.ranges = ranges;\n    this.index = index;\n  }\n\n  Object.defineProperty(FoldingRegion.prototype, \"startLineNumber\", {\n    get: function () {\n      return this.ranges.getStartLineNumber(this.index);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FoldingRegion.prototype, \"endLineNumber\", {\n    get: function () {\n      return this.ranges.getEndLineNumber(this.index);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FoldingRegion.prototype, \"regionIndex\", {\n    get: function () {\n      return this.index;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FoldingRegion.prototype, \"parentIndex\", {\n    get: function () {\n      return this.ranges.getParentIndex(this.index);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FoldingRegion.prototype, \"isCollapsed\", {\n    get: function () {\n      return this.ranges.isCollapsed(this.index);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  FoldingRegion.prototype.containedBy = function (range) {\n    return range.startLineNumber <= this.startLineNumber && range.endLineNumber >= this.endLineNumber;\n  };\n\n  FoldingRegion.prototype.containsLine = function (lineNumber) {\n    return this.startLineNumber <= lineNumber && lineNumber <= this.endLineNumber;\n  };\n\n  return FoldingRegion;\n}();\n\nexport { FoldingRegion };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/contrib/folding/foldingRanges.js"],"names":["MAX_FOLDING_REGIONS","MAX_LINE_NUMBER","MASK_INDENT","FoldingRegions","startIndexes","endIndexes","types","length","Error","_startIndexes","_endIndexes","_collapseStates","Uint32Array","Math","ceil","_types","_parentsComputed","prototype","ensureParentIndices","_this","parentIndexes_1","isInsideLast","startLineNumber","endLineNumber","index","getStartLineNumber","getEndLineNumber","i","len","pop","parentIndex","push","Object","defineProperty","get","enumerable","configurable","getType","undefined","hasTypes","isCollapsed","arrayIndex","bit","setCollapsed","newState","value","toRegion","FoldingRegion","getParentIndex","parent","contains","line","findIndex","low","high","mid","floor","findRange","toString","res","join","ranges","containedBy","range","containsLine","lineNumber"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport var MAX_FOLDING_REGIONS = 0xFFFF;\r\nexport var MAX_LINE_NUMBER = 0xFFFFFF;\r\nvar MASK_INDENT = 0xFF000000;\r\nvar FoldingRegions = /** @class */ (function () {\r\n    function FoldingRegions(startIndexes, endIndexes, types) {\r\n        if (startIndexes.length !== endIndexes.length || startIndexes.length > MAX_FOLDING_REGIONS) {\r\n            throw new Error('invalid startIndexes or endIndexes size');\r\n        }\r\n        this._startIndexes = startIndexes;\r\n        this._endIndexes = endIndexes;\r\n        this._collapseStates = new Uint32Array(Math.ceil(startIndexes.length / 32));\r\n        this._types = types;\r\n        this._parentsComputed = false;\r\n    }\r\n    FoldingRegions.prototype.ensureParentIndices = function () {\r\n        var _this = this;\r\n        if (!this._parentsComputed) {\r\n            this._parentsComputed = true;\r\n            var parentIndexes_1 = [];\r\n            var isInsideLast = function (startLineNumber, endLineNumber) {\r\n                var index = parentIndexes_1[parentIndexes_1.length - 1];\r\n                return _this.getStartLineNumber(index) <= startLineNumber && _this.getEndLineNumber(index) >= endLineNumber;\r\n            };\r\n            for (var i = 0, len = this._startIndexes.length; i < len; i++) {\r\n                var startLineNumber = this._startIndexes[i];\r\n                var endLineNumber = this._endIndexes[i];\r\n                if (startLineNumber > MAX_LINE_NUMBER || endLineNumber > MAX_LINE_NUMBER) {\r\n                    throw new Error('startLineNumber or endLineNumber must not exceed ' + MAX_LINE_NUMBER);\r\n                }\r\n                while (parentIndexes_1.length > 0 && !isInsideLast(startLineNumber, endLineNumber)) {\r\n                    parentIndexes_1.pop();\r\n                }\r\n                var parentIndex = parentIndexes_1.length > 0 ? parentIndexes_1[parentIndexes_1.length - 1] : -1;\r\n                parentIndexes_1.push(i);\r\n                this._startIndexes[i] = startLineNumber + ((parentIndex & 0xFF) << 24);\r\n                this._endIndexes[i] = endLineNumber + ((parentIndex & 0xFF00) << 16);\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(FoldingRegions.prototype, \"length\", {\r\n        get: function () {\r\n            return this._startIndexes.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FoldingRegions.prototype.getStartLineNumber = function (index) {\r\n        return this._startIndexes[index] & MAX_LINE_NUMBER;\r\n    };\r\n    FoldingRegions.prototype.getEndLineNumber = function (index) {\r\n        return this._endIndexes[index] & MAX_LINE_NUMBER;\r\n    };\r\n    FoldingRegions.prototype.getType = function (index) {\r\n        return this._types ? this._types[index] : undefined;\r\n    };\r\n    FoldingRegions.prototype.hasTypes = function () {\r\n        return !!this._types;\r\n    };\r\n    FoldingRegions.prototype.isCollapsed = function (index) {\r\n        var arrayIndex = (index / 32) | 0;\r\n        var bit = index % 32;\r\n        return (this._collapseStates[arrayIndex] & (1 << bit)) !== 0;\r\n    };\r\n    FoldingRegions.prototype.setCollapsed = function (index, newState) {\r\n        var arrayIndex = (index / 32) | 0;\r\n        var bit = index % 32;\r\n        var value = this._collapseStates[arrayIndex];\r\n        if (newState) {\r\n            this._collapseStates[arrayIndex] = value | (1 << bit);\r\n        }\r\n        else {\r\n            this._collapseStates[arrayIndex] = value & ~(1 << bit);\r\n        }\r\n    };\r\n    FoldingRegions.prototype.toRegion = function (index) {\r\n        return new FoldingRegion(this, index);\r\n    };\r\n    FoldingRegions.prototype.getParentIndex = function (index) {\r\n        this.ensureParentIndices();\r\n        var parent = ((this._startIndexes[index] & MASK_INDENT) >>> 24) + ((this._endIndexes[index] & MASK_INDENT) >>> 16);\r\n        if (parent === MAX_FOLDING_REGIONS) {\r\n            return -1;\r\n        }\r\n        return parent;\r\n    };\r\n    FoldingRegions.prototype.contains = function (index, line) {\r\n        return this.getStartLineNumber(index) <= line && this.getEndLineNumber(index) >= line;\r\n    };\r\n    FoldingRegions.prototype.findIndex = function (line) {\r\n        var low = 0, high = this._startIndexes.length;\r\n        if (high === 0) {\r\n            return -1; // no children\r\n        }\r\n        while (low < high) {\r\n            var mid = Math.floor((low + high) / 2);\r\n            if (line < this.getStartLineNumber(mid)) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        return low - 1;\r\n    };\r\n    FoldingRegions.prototype.findRange = function (line) {\r\n        var index = this.findIndex(line);\r\n        if (index >= 0) {\r\n            var endLineNumber = this.getEndLineNumber(index);\r\n            if (endLineNumber >= line) {\r\n                return index;\r\n            }\r\n            index = this.getParentIndex(index);\r\n            while (index !== -1) {\r\n                if (this.contains(index, line)) {\r\n                    return index;\r\n                }\r\n                index = this.getParentIndex(index);\r\n            }\r\n        }\r\n        return -1;\r\n    };\r\n    FoldingRegions.prototype.toString = function () {\r\n        var res = [];\r\n        for (var i = 0; i < this.length; i++) {\r\n            res[i] = \"[\" + (this.isCollapsed(i) ? '+' : '-') + \"] \" + this.getStartLineNumber(i) + \"/\" + this.getEndLineNumber(i);\r\n        }\r\n        return res.join(', ');\r\n    };\r\n    return FoldingRegions;\r\n}());\r\nexport { FoldingRegions };\r\nvar FoldingRegion = /** @class */ (function () {\r\n    function FoldingRegion(ranges, index) {\r\n        this.ranges = ranges;\r\n        this.index = index;\r\n    }\r\n    Object.defineProperty(FoldingRegion.prototype, \"startLineNumber\", {\r\n        get: function () {\r\n            return this.ranges.getStartLineNumber(this.index);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FoldingRegion.prototype, \"endLineNumber\", {\r\n        get: function () {\r\n            return this.ranges.getEndLineNumber(this.index);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FoldingRegion.prototype, \"regionIndex\", {\r\n        get: function () {\r\n            return this.index;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FoldingRegion.prototype, \"parentIndex\", {\r\n        get: function () {\r\n            return this.ranges.getParentIndex(this.index);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FoldingRegion.prototype, \"isCollapsed\", {\r\n        get: function () {\r\n            return this.ranges.isCollapsed(this.index);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FoldingRegion.prototype.containedBy = function (range) {\r\n        return range.startLineNumber <= this.startLineNumber && range.endLineNumber >= this.endLineNumber;\r\n    };\r\n    FoldingRegion.prototype.containsLine = function (lineNumber) {\r\n        return this.startLineNumber <= lineNumber && lineNumber <= this.endLineNumber;\r\n    };\r\n    return FoldingRegion;\r\n}());\r\nexport { FoldingRegion };\r\n"]},"metadata":{},"sourceType":"module"}