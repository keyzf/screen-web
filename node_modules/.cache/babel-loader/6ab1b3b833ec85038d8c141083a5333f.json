{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nvar _a;\n\nvar Scanner =\n/** @class */\nfunction () {\n  function Scanner() {\n    this.value = '';\n    this.pos = 0;\n  }\n\n  Scanner.isDigitCharacter = function (ch) {\n    return ch >= 48\n    /* Digit0 */\n    && ch <= 57\n    /* Digit9 */\n    ;\n  };\n\n  Scanner.isVariableCharacter = function (ch) {\n    return ch === 95\n    /* Underline */\n    || ch >= 97\n    /* a */\n    && ch <= 122\n    /* z */\n    || ch >= 65\n    /* A */\n    && ch <= 90\n    /* Z */\n    ;\n  };\n\n  Scanner.prototype.text = function (value) {\n    this.value = value;\n    this.pos = 0;\n  };\n\n  Scanner.prototype.tokenText = function (token) {\n    return this.value.substr(token.pos, token.len);\n  };\n\n  Scanner.prototype.next = function () {\n    if (this.pos >= this.value.length) {\n      return {\n        type: 14\n        /* EOF */\n        ,\n        pos: this.pos,\n        len: 0\n      };\n    }\n\n    var pos = this.pos;\n    var len = 0;\n    var ch = this.value.charCodeAt(pos);\n    var type; // static types\n\n    type = Scanner._table[ch];\n\n    if (typeof type === 'number') {\n      this.pos += 1;\n      return {\n        type: type,\n        pos: pos,\n        len: 1\n      };\n    } // number\n\n\n    if (Scanner.isDigitCharacter(ch)) {\n      type = 8\n      /* Int */\n      ;\n\n      do {\n        len += 1;\n        ch = this.value.charCodeAt(pos + len);\n      } while (Scanner.isDigitCharacter(ch));\n\n      this.pos += len;\n      return {\n        type: type,\n        pos: pos,\n        len: len\n      };\n    } // variable name\n\n\n    if (Scanner.isVariableCharacter(ch)) {\n      type = 9\n      /* VariableName */\n      ;\n\n      do {\n        ch = this.value.charCodeAt(pos + ++len);\n      } while (Scanner.isVariableCharacter(ch) || Scanner.isDigitCharacter(ch));\n\n      this.pos += len;\n      return {\n        type: type,\n        pos: pos,\n        len: len\n      };\n    } // format\n\n\n    type = 10\n    /* Format */\n    ;\n\n    do {\n      len += 1;\n      ch = this.value.charCodeAt(pos + len);\n    } while (!isNaN(ch) && typeof Scanner._table[ch] === 'undefined' // not static token\n    && !Scanner.isDigitCharacter(ch) // not number\n    && !Scanner.isVariableCharacter(ch) // not variable\n    );\n\n    this.pos += len;\n    return {\n      type: type,\n      pos: pos,\n      len: len\n    };\n  };\n\n  Scanner._table = (_a = {}, _a[36\n  /* DollarSign */\n  ] = 0\n  /* Dollar */\n  , _a[58\n  /* Colon */\n  ] = 1\n  /* Colon */\n  , _a[44\n  /* Comma */\n  ] = 2\n  /* Comma */\n  , _a[123\n  /* OpenCurlyBrace */\n  ] = 3\n  /* CurlyOpen */\n  , _a[125\n  /* CloseCurlyBrace */\n  ] = 4\n  /* CurlyClose */\n  , _a[92\n  /* Backslash */\n  ] = 5\n  /* Backslash */\n  , _a[47\n  /* Slash */\n  ] = 6\n  /* Forwardslash */\n  , _a[124\n  /* Pipe */\n  ] = 7\n  /* Pipe */\n  , _a[43\n  /* Plus */\n  ] = 11\n  /* Plus */\n  , _a[45\n  /* Dash */\n  ] = 12\n  /* Dash */\n  , _a[63\n  /* QuestionMark */\n  ] = 13\n  /* QuestionMark */\n  , _a);\n  return Scanner;\n}();\n\nexport { Scanner };\n\nvar Marker =\n/** @class */\nfunction () {\n  function Marker() {\n    this._children = [];\n  }\n\n  Marker.prototype.appendChild = function (child) {\n    if (child instanceof Text && this._children[this._children.length - 1] instanceof Text) {\n      // this and previous child are text -> merge them\n      this._children[this._children.length - 1].value += child.value;\n    } else {\n      // normal adoption of child\n      child.parent = this;\n\n      this._children.push(child);\n    }\n\n    return this;\n  };\n\n  Marker.prototype.replace = function (child, others) {\n    var parent = child.parent;\n    var idx = parent.children.indexOf(child);\n    var newChildren = parent.children.slice(0);\n    newChildren.splice.apply(newChildren, __spreadArrays([idx, 1], others));\n    parent._children = newChildren;\n\n    (function _fixParent(children, parent) {\n      for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n        var child_1 = children_1[_i];\n        child_1.parent = parent;\n\n        _fixParent(child_1.children, child_1);\n      }\n    })(others, parent);\n  };\n\n  Object.defineProperty(Marker.prototype, \"children\", {\n    get: function () {\n      return this._children;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Marker.prototype, \"snippet\", {\n    get: function () {\n      var candidate = this;\n\n      while (true) {\n        if (!candidate) {\n          return undefined;\n        }\n\n        if (candidate instanceof TextmateSnippet) {\n          return candidate;\n        }\n\n        candidate = candidate.parent;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Marker.prototype.toString = function () {\n    return this.children.reduce(function (prev, cur) {\n      return prev + cur.toString();\n    }, '');\n  };\n\n  Marker.prototype.len = function () {\n    return 0;\n  };\n\n  return Marker;\n}();\n\nexport { Marker };\n\nvar Text =\n/** @class */\nfunction (_super) {\n  __extends(Text, _super);\n\n  function Text(value) {\n    var _this_1 = _super.call(this) || this;\n\n    _this_1.value = value;\n    return _this_1;\n  }\n\n  Text.prototype.toString = function () {\n    return this.value;\n  };\n\n  Text.prototype.len = function () {\n    return this.value.length;\n  };\n\n  Text.prototype.clone = function () {\n    return new Text(this.value);\n  };\n\n  return Text;\n}(Marker);\n\nexport { Text };\n\nvar TransformableMarker =\n/** @class */\nfunction (_super) {\n  __extends(TransformableMarker, _super);\n\n  function TransformableMarker() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return TransformableMarker;\n}(Marker);\n\nexport { TransformableMarker };\n\nvar Placeholder =\n/** @class */\nfunction (_super) {\n  __extends(Placeholder, _super);\n\n  function Placeholder(index) {\n    var _this_1 = _super.call(this) || this;\n\n    _this_1.index = index;\n    return _this_1;\n  }\n\n  Placeholder.compareByIndex = function (a, b) {\n    if (a.index === b.index) {\n      return 0;\n    } else if (a.isFinalTabstop) {\n      return 1;\n    } else if (b.isFinalTabstop) {\n      return -1;\n    } else if (a.index < b.index) {\n      return -1;\n    } else if (a.index > b.index) {\n      return 1;\n    } else {\n      return 0;\n    }\n  };\n\n  Object.defineProperty(Placeholder.prototype, \"isFinalTabstop\", {\n    get: function () {\n      return this.index === 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Placeholder.prototype, \"choice\", {\n    get: function () {\n      return this._children.length === 1 && this._children[0] instanceof Choice ? this._children[0] : undefined;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Placeholder.prototype.clone = function () {\n    var ret = new Placeholder(this.index);\n\n    if (this.transform) {\n      ret.transform = this.transform.clone();\n    }\n\n    ret._children = this.children.map(function (child) {\n      return child.clone();\n    });\n    return ret;\n  };\n\n  return Placeholder;\n}(TransformableMarker);\n\nexport { Placeholder };\n\nvar Choice =\n/** @class */\nfunction (_super) {\n  __extends(Choice, _super);\n\n  function Choice() {\n    var _this_1 = _super !== null && _super.apply(this, arguments) || this;\n\n    _this_1.options = [];\n    return _this_1;\n  }\n\n  Choice.prototype.appendChild = function (marker) {\n    if (marker instanceof Text) {\n      marker.parent = this;\n      this.options.push(marker);\n    }\n\n    return this;\n  };\n\n  Choice.prototype.toString = function () {\n    return this.options[0].value;\n  };\n\n  Choice.prototype.len = function () {\n    return this.options[0].len();\n  };\n\n  Choice.prototype.clone = function () {\n    var ret = new Choice();\n    this.options.forEach(ret.appendChild, ret);\n    return ret;\n  };\n\n  return Choice;\n}(Marker);\n\nexport { Choice };\n\nvar Transform =\n/** @class */\nfunction (_super) {\n  __extends(Transform, _super);\n\n  function Transform() {\n    var _this_1 = _super !== null && _super.apply(this, arguments) || this;\n\n    _this_1.regexp = new RegExp('');\n    return _this_1;\n  }\n\n  Transform.prototype.resolve = function (value) {\n    var _this = this;\n\n    var didMatch = false;\n    var ret = value.replace(this.regexp, function () {\n      didMatch = true;\n      return _this._replace(Array.prototype.slice.call(arguments, 0, -2));\n    }); // when the regex didn't match and when the transform has\n    // else branches, then run those\n\n    if (!didMatch && this._children.some(function (child) {\n      return child instanceof FormatString && Boolean(child.elseValue);\n    })) {\n      ret = this._replace([]);\n    }\n\n    return ret;\n  };\n\n  Transform.prototype._replace = function (groups) {\n    var ret = '';\n\n    for (var _i = 0, _a = this._children; _i < _a.length; _i++) {\n      var marker = _a[_i];\n\n      if (marker instanceof FormatString) {\n        var value = groups[marker.index] || '';\n        value = marker.resolve(value);\n        ret += value;\n      } else {\n        ret += marker.toString();\n      }\n    }\n\n    return ret;\n  };\n\n  Transform.prototype.toString = function () {\n    return '';\n  };\n\n  Transform.prototype.clone = function () {\n    var ret = new Transform();\n    ret.regexp = new RegExp(this.regexp.source, '' + (this.regexp.ignoreCase ? 'i' : '') + (this.regexp.global ? 'g' : ''));\n    ret._children = this.children.map(function (child) {\n      return child.clone();\n    });\n    return ret;\n  };\n\n  return Transform;\n}(Marker);\n\nexport { Transform };\n\nvar FormatString =\n/** @class */\nfunction (_super) {\n  __extends(FormatString, _super);\n\n  function FormatString(index, shorthandName, ifValue, elseValue) {\n    var _this_1 = _super.call(this) || this;\n\n    _this_1.index = index;\n    _this_1.shorthandName = shorthandName;\n    _this_1.ifValue = ifValue;\n    _this_1.elseValue = elseValue;\n    return _this_1;\n  }\n\n  FormatString.prototype.resolve = function (value) {\n    if (this.shorthandName === 'upcase') {\n      return !value ? '' : value.toLocaleUpperCase();\n    } else if (this.shorthandName === 'downcase') {\n      return !value ? '' : value.toLocaleLowerCase();\n    } else if (this.shorthandName === 'capitalize') {\n      return !value ? '' : value[0].toLocaleUpperCase() + value.substr(1);\n    } else if (this.shorthandName === 'pascalcase') {\n      return !value ? '' : this._toPascalCase(value);\n    } else if (Boolean(value) && typeof this.ifValue === 'string') {\n      return this.ifValue;\n    } else if (!Boolean(value) && typeof this.elseValue === 'string') {\n      return this.elseValue;\n    } else {\n      return value || '';\n    }\n  };\n\n  FormatString.prototype._toPascalCase = function (value) {\n    var match = value.match(/[a-z]+/gi);\n\n    if (!match) {\n      return value;\n    }\n\n    return match.map(function (word) {\n      return word.charAt(0).toUpperCase() + word.substr(1).toLowerCase();\n    }).join('');\n  };\n\n  FormatString.prototype.clone = function () {\n    var ret = new FormatString(this.index, this.shorthandName, this.ifValue, this.elseValue);\n    return ret;\n  };\n\n  return FormatString;\n}(Marker);\n\nexport { FormatString };\n\nvar Variable =\n/** @class */\nfunction (_super) {\n  __extends(Variable, _super);\n\n  function Variable(name) {\n    var _this_1 = _super.call(this) || this;\n\n    _this_1.name = name;\n    return _this_1;\n  }\n\n  Variable.prototype.resolve = function (resolver) {\n    var value = resolver.resolve(this);\n\n    if (this.transform) {\n      value = this.transform.resolve(value || '');\n    }\n\n    if (value !== undefined) {\n      this._children = [new Text(value)];\n      return true;\n    }\n\n    return false;\n  };\n\n  Variable.prototype.clone = function () {\n    var ret = new Variable(this.name);\n\n    if (this.transform) {\n      ret.transform = this.transform.clone();\n    }\n\n    ret._children = this.children.map(function (child) {\n      return child.clone();\n    });\n    return ret;\n  };\n\n  return Variable;\n}(TransformableMarker);\n\nexport { Variable };\n\nfunction walk(marker, visitor) {\n  var stack = __spreadArrays(marker);\n\n  while (stack.length > 0) {\n    var marker_1 = stack.shift();\n    var recurse = visitor(marker_1);\n\n    if (!recurse) {\n      break;\n    }\n\n    stack.unshift.apply(stack, marker_1.children);\n  }\n}\n\nvar TextmateSnippet =\n/** @class */\nfunction (_super) {\n  __extends(TextmateSnippet, _super);\n\n  function TextmateSnippet() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(TextmateSnippet.prototype, \"placeholderInfo\", {\n    get: function () {\n      if (!this._placeholders) {\n        // fill in placeholders\n        var all_1 = [];\n        var last_1;\n        this.walk(function (candidate) {\n          if (candidate instanceof Placeholder) {\n            all_1.push(candidate);\n            last_1 = !last_1 || last_1.index < candidate.index ? candidate : last_1;\n          }\n\n          return true;\n        });\n        this._placeholders = {\n          all: all_1,\n          last: last_1\n        };\n      }\n\n      return this._placeholders;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TextmateSnippet.prototype, \"placeholders\", {\n    get: function () {\n      var all = this.placeholderInfo.all;\n      return all;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  TextmateSnippet.prototype.offset = function (marker) {\n    var pos = 0;\n    var found = false;\n    this.walk(function (candidate) {\n      if (candidate === marker) {\n        found = true;\n        return false;\n      }\n\n      pos += candidate.len();\n      return true;\n    });\n\n    if (!found) {\n      return -1;\n    }\n\n    return pos;\n  };\n\n  TextmateSnippet.prototype.fullLen = function (marker) {\n    var ret = 0;\n    walk([marker], function (marker) {\n      ret += marker.len();\n      return true;\n    });\n    return ret;\n  };\n\n  TextmateSnippet.prototype.enclosingPlaceholders = function (placeholder) {\n    var ret = [];\n    var parent = placeholder.parent;\n\n    while (parent) {\n      if (parent instanceof Placeholder) {\n        ret.push(parent);\n      }\n\n      parent = parent.parent;\n    }\n\n    return ret;\n  };\n\n  TextmateSnippet.prototype.resolveVariables = function (resolver) {\n    var _this_1 = this;\n\n    this.walk(function (candidate) {\n      if (candidate instanceof Variable) {\n        if (candidate.resolve(resolver)) {\n          _this_1._placeholders = undefined;\n        }\n      }\n\n      return true;\n    });\n    return this;\n  };\n\n  TextmateSnippet.prototype.appendChild = function (child) {\n    this._placeholders = undefined;\n    return _super.prototype.appendChild.call(this, child);\n  };\n\n  TextmateSnippet.prototype.replace = function (child, others) {\n    this._placeholders = undefined;\n    return _super.prototype.replace.call(this, child, others);\n  };\n\n  TextmateSnippet.prototype.clone = function () {\n    var ret = new TextmateSnippet();\n    this._children = this.children.map(function (child) {\n      return child.clone();\n    });\n    return ret;\n  };\n\n  TextmateSnippet.prototype.walk = function (visitor) {\n    walk(this.children, visitor);\n  };\n\n  return TextmateSnippet;\n}(Marker);\n\nexport { TextmateSnippet };\n\nvar SnippetParser =\n/** @class */\nfunction () {\n  function SnippetParser() {\n    this._scanner = new Scanner();\n    this._token = {\n      type: 14\n      /* EOF */\n      ,\n      pos: 0,\n      len: 0\n    };\n  }\n\n  SnippetParser.escape = function (value) {\n    return value.replace(/\\$|}|\\\\/g, '\\\\$&');\n  };\n\n  SnippetParser.prototype.parse = function (value, insertFinalTabstop, enforceFinalTabstop) {\n    this._scanner.text(value);\n\n    this._token = this._scanner.next();\n    var snippet = new TextmateSnippet();\n\n    while (this._parse(snippet)) {} // nothing\n    // fill in values for placeholders. the first placeholder of an index\n    // that has a value defines the value for all placeholders with that index\n\n\n    var placeholderDefaultValues = new Map();\n    var incompletePlaceholders = [];\n    var placeholderCount = 0;\n    snippet.walk(function (marker) {\n      if (marker instanceof Placeholder) {\n        placeholderCount += 1;\n\n        if (marker.isFinalTabstop) {\n          placeholderDefaultValues.set(0, undefined);\n        } else if (!placeholderDefaultValues.has(marker.index) && marker.children.length > 0) {\n          placeholderDefaultValues.set(marker.index, marker.children);\n        } else {\n          incompletePlaceholders.push(marker);\n        }\n      }\n\n      return true;\n    });\n\n    for (var _i = 0, incompletePlaceholders_1 = incompletePlaceholders; _i < incompletePlaceholders_1.length; _i++) {\n      var placeholder = incompletePlaceholders_1[_i];\n      var defaultValues = placeholderDefaultValues.get(placeholder.index);\n\n      if (defaultValues) {\n        var clone = new Placeholder(placeholder.index);\n        clone.transform = placeholder.transform;\n\n        for (var _a = 0, defaultValues_1 = defaultValues; _a < defaultValues_1.length; _a++) {\n          var child = defaultValues_1[_a];\n          clone.appendChild(child.clone());\n        }\n\n        snippet.replace(placeholder, [clone]);\n      }\n    }\n\n    if (!enforceFinalTabstop) {\n      enforceFinalTabstop = placeholderCount > 0 && insertFinalTabstop;\n    }\n\n    if (!placeholderDefaultValues.has(0) && enforceFinalTabstop) {\n      // the snippet uses placeholders but has no\n      // final tabstop defined -> insert at the end\n      snippet.appendChild(new Placeholder(0));\n    }\n\n    return snippet;\n  };\n\n  SnippetParser.prototype._accept = function (type, value) {\n    if (type === undefined || this._token.type === type) {\n      var ret = !value ? true : this._scanner.tokenText(this._token);\n      this._token = this._scanner.next();\n      return ret;\n    }\n\n    return false;\n  };\n\n  SnippetParser.prototype._backTo = function (token) {\n    this._scanner.pos = token.pos + token.len;\n    this._token = token;\n    return false;\n  };\n\n  SnippetParser.prototype._until = function (type) {\n    var start = this._token;\n\n    while (this._token.type !== type) {\n      if (this._token.type === 14\n      /* EOF */\n      ) {\n          return false;\n        } else if (this._token.type === 5\n      /* Backslash */\n      ) {\n          var nextToken = this._scanner.next();\n\n          if (nextToken.type !== 0\n          /* Dollar */\n          && nextToken.type !== 4\n          /* CurlyClose */\n          && nextToken.type !== 5\n          /* Backslash */\n          ) {\n              return false;\n            }\n        }\n\n      this._token = this._scanner.next();\n    }\n\n    var value = this._scanner.value.substring(start.pos, this._token.pos).replace(/\\\\(\\$|}|\\\\)/g, '$1');\n\n    this._token = this._scanner.next();\n    return value;\n  };\n\n  SnippetParser.prototype._parse = function (marker) {\n    return this._parseEscaped(marker) || this._parseTabstopOrVariableName(marker) || this._parseComplexPlaceholder(marker) || this._parseComplexVariable(marker) || this._parseAnything(marker);\n  }; // \\$, \\\\, \\} -> just text\n\n\n  SnippetParser.prototype._parseEscaped = function (marker) {\n    var value;\n\n    if (value = this._accept(5\n    /* Backslash */\n    , true)) {\n      // saw a backslash, append escaped token or that backslash\n      value = this._accept(0\n      /* Dollar */\n      , true) || this._accept(4\n      /* CurlyClose */\n      , true) || this._accept(5\n      /* Backslash */\n      , true) || value;\n      marker.appendChild(new Text(value));\n      return true;\n    }\n\n    return false;\n  }; // $foo -> variable, $1 -> tabstop\n\n\n  SnippetParser.prototype._parseTabstopOrVariableName = function (parent) {\n    var value;\n    var token = this._token;\n\n    var match = this._accept(0\n    /* Dollar */\n    ) && (value = this._accept(9\n    /* VariableName */\n    , true) || this._accept(8\n    /* Int */\n    , true));\n\n    if (!match) {\n      return this._backTo(token);\n    }\n\n    parent.appendChild(/^\\d+$/.test(value) ? new Placeholder(Number(value)) : new Variable(value));\n    return true;\n  }; // ${1:<children>}, ${1} -> placeholder\n\n\n  SnippetParser.prototype._parseComplexPlaceholder = function (parent) {\n    var index;\n    var token = this._token;\n\n    var match = this._accept(0\n    /* Dollar */\n    ) && this._accept(3\n    /* CurlyOpen */\n    ) && (index = this._accept(8\n    /* Int */\n    , true));\n\n    if (!match) {\n      return this._backTo(token);\n    }\n\n    var placeholder = new Placeholder(Number(index));\n\n    if (this._accept(1\n    /* Colon */\n    )) {\n      // ${1:<children>}\n      while (true) {\n        // ...} -> done\n        if (this._accept(4\n        /* CurlyClose */\n        )) {\n          parent.appendChild(placeholder);\n          return true;\n        }\n\n        if (this._parse(placeholder)) {\n          continue;\n        } // fallback\n\n\n        parent.appendChild(new Text('${' + index + ':'));\n        placeholder.children.forEach(parent.appendChild, parent);\n        return true;\n      }\n    } else if (placeholder.index > 0 && this._accept(7\n    /* Pipe */\n    )) {\n      // ${1|one,two,three|}\n      var choice = new Choice();\n\n      while (true) {\n        if (this._parseChoiceElement(choice)) {\n          if (this._accept(2\n          /* Comma */\n          )) {\n            // opt, -> more\n            continue;\n          }\n\n          if (this._accept(7\n          /* Pipe */\n          )) {\n            placeholder.appendChild(choice);\n\n            if (this._accept(4\n            /* CurlyClose */\n            )) {\n              // ..|} -> done\n              parent.appendChild(placeholder);\n              return true;\n            }\n          }\n        }\n\n        this._backTo(token);\n\n        return false;\n      }\n    } else if (this._accept(6\n    /* Forwardslash */\n    )) {\n      // ${1/<regex>/<format>/<options>}\n      if (this._parseTransform(placeholder)) {\n        parent.appendChild(placeholder);\n        return true;\n      }\n\n      this._backTo(token);\n\n      return false;\n    } else if (this._accept(4\n    /* CurlyClose */\n    )) {\n      // ${1}\n      parent.appendChild(placeholder);\n      return true;\n    } else {\n      // ${1 <- missing curly or colon\n      return this._backTo(token);\n    }\n  };\n\n  SnippetParser.prototype._parseChoiceElement = function (parent) {\n    var token = this._token;\n    var values = [];\n\n    while (true) {\n      if (this._token.type === 2\n      /* Comma */\n      || this._token.type === 7\n      /* Pipe */\n      ) {\n          break;\n        }\n\n      var value = void 0;\n\n      if (value = this._accept(5\n      /* Backslash */\n      , true)) {\n        // \\, \\|, or \\\\\n        value = this._accept(2\n        /* Comma */\n        , true) || this._accept(7\n        /* Pipe */\n        , true) || this._accept(5\n        /* Backslash */\n        , true) || value;\n      } else {\n        value = this._accept(undefined, true);\n      }\n\n      if (!value) {\n        // EOF\n        this._backTo(token);\n\n        return false;\n      }\n\n      values.push(value);\n    }\n\n    if (values.length === 0) {\n      this._backTo(token);\n\n      return false;\n    }\n\n    parent.appendChild(new Text(values.join('')));\n    return true;\n  }; // ${foo:<children>}, ${foo} -> variable\n\n\n  SnippetParser.prototype._parseComplexVariable = function (parent) {\n    var name;\n    var token = this._token;\n\n    var match = this._accept(0\n    /* Dollar */\n    ) && this._accept(3\n    /* CurlyOpen */\n    ) && (name = this._accept(9\n    /* VariableName */\n    , true));\n\n    if (!match) {\n      return this._backTo(token);\n    }\n\n    var variable = new Variable(name);\n\n    if (this._accept(1\n    /* Colon */\n    )) {\n      // ${foo:<children>}\n      while (true) {\n        // ...} -> done\n        if (this._accept(4\n        /* CurlyClose */\n        )) {\n          parent.appendChild(variable);\n          return true;\n        }\n\n        if (this._parse(variable)) {\n          continue;\n        } // fallback\n\n\n        parent.appendChild(new Text('${' + name + ':'));\n        variable.children.forEach(parent.appendChild, parent);\n        return true;\n      }\n    } else if (this._accept(6\n    /* Forwardslash */\n    )) {\n      // ${foo/<regex>/<format>/<options>}\n      if (this._parseTransform(variable)) {\n        parent.appendChild(variable);\n        return true;\n      }\n\n      this._backTo(token);\n\n      return false;\n    } else if (this._accept(4\n    /* CurlyClose */\n    )) {\n      // ${foo}\n      parent.appendChild(variable);\n      return true;\n    } else {\n      // ${foo <- missing curly or colon\n      return this._backTo(token);\n    }\n  };\n\n  SnippetParser.prototype._parseTransform = function (parent) {\n    // ...<regex>/<format>/<options>}\n    var transform = new Transform();\n    var regexValue = '';\n    var regexOptions = ''; // (1) /regex\n\n    while (true) {\n      if (this._accept(6\n      /* Forwardslash */\n      )) {\n        break;\n      }\n\n      var escaped = void 0;\n\n      if (escaped = this._accept(5\n      /* Backslash */\n      , true)) {\n        escaped = this._accept(6\n        /* Forwardslash */\n        , true) || escaped;\n        regexValue += escaped;\n        continue;\n      }\n\n      if (this._token.type !== 14\n      /* EOF */\n      ) {\n          regexValue += this._accept(undefined, true);\n          continue;\n        }\n\n      return false;\n    } // (2) /format\n\n\n    while (true) {\n      if (this._accept(6\n      /* Forwardslash */\n      )) {\n        break;\n      }\n\n      var escaped = void 0;\n\n      if (escaped = this._accept(5\n      /* Backslash */\n      , true)) {\n        escaped = this._accept(5\n        /* Backslash */\n        , true) || this._accept(6\n        /* Forwardslash */\n        , true) || escaped;\n        transform.appendChild(new Text(escaped));\n        continue;\n      }\n\n      if (this._parseFormatString(transform) || this._parseAnything(transform)) {\n        continue;\n      }\n\n      return false;\n    } // (3) /option\n\n\n    while (true) {\n      if (this._accept(4\n      /* CurlyClose */\n      )) {\n        break;\n      }\n\n      if (this._token.type !== 14\n      /* EOF */\n      ) {\n          regexOptions += this._accept(undefined, true);\n          continue;\n        }\n\n      return false;\n    }\n\n    try {\n      transform.regexp = new RegExp(regexValue, regexOptions);\n    } catch (e) {\n      // invalid regexp\n      return false;\n    }\n\n    parent.transform = transform;\n    return true;\n  };\n\n  SnippetParser.prototype._parseFormatString = function (parent) {\n    var token = this._token;\n\n    if (!this._accept(0\n    /* Dollar */\n    )) {\n      return false;\n    }\n\n    var complex = false;\n\n    if (this._accept(3\n    /* CurlyOpen */\n    )) {\n      complex = true;\n    }\n\n    var index = this._accept(8\n    /* Int */\n    , true);\n\n    if (!index) {\n      this._backTo(token);\n\n      return false;\n    } else if (!complex) {\n      // $1\n      parent.appendChild(new FormatString(Number(index)));\n      return true;\n    } else if (this._accept(4\n    /* CurlyClose */\n    )) {\n      // ${1}\n      parent.appendChild(new FormatString(Number(index)));\n      return true;\n    } else if (!this._accept(1\n    /* Colon */\n    )) {\n      this._backTo(token);\n\n      return false;\n    }\n\n    if (this._accept(6\n    /* Forwardslash */\n    )) {\n      // ${1:/upcase}\n      var shorthand = this._accept(9\n      /* VariableName */\n      , true);\n\n      if (!shorthand || !this._accept(4\n      /* CurlyClose */\n      )) {\n        this._backTo(token);\n\n        return false;\n      } else {\n        parent.appendChild(new FormatString(Number(index), shorthand));\n        return true;\n      }\n    } else if (this._accept(11\n    /* Plus */\n    )) {\n      // ${1:+<if>}\n      var ifValue = this._until(4\n      /* CurlyClose */\n      );\n\n      if (ifValue) {\n        parent.appendChild(new FormatString(Number(index), undefined, ifValue, undefined));\n        return true;\n      }\n    } else if (this._accept(12\n    /* Dash */\n    )) {\n      // ${2:-<else>}\n      var elseValue = this._until(4\n      /* CurlyClose */\n      );\n\n      if (elseValue) {\n        parent.appendChild(new FormatString(Number(index), undefined, undefined, elseValue));\n        return true;\n      }\n    } else if (this._accept(13\n    /* QuestionMark */\n    )) {\n      // ${2:?<if>:<else>}\n      var ifValue = this._until(1\n      /* Colon */\n      );\n\n      if (ifValue) {\n        var elseValue = this._until(4\n        /* CurlyClose */\n        );\n\n        if (elseValue) {\n          parent.appendChild(new FormatString(Number(index), undefined, ifValue, elseValue));\n          return true;\n        }\n      }\n    } else {\n      // ${1:<else>}\n      var elseValue = this._until(4\n      /* CurlyClose */\n      );\n\n      if (elseValue) {\n        parent.appendChild(new FormatString(Number(index), undefined, undefined, elseValue));\n        return true;\n      }\n    }\n\n    this._backTo(token);\n\n    return false;\n  };\n\n  SnippetParser.prototype._parseAnything = function (marker) {\n    if (this._token.type !== 14\n    /* EOF */\n    ) {\n        marker.appendChild(new Text(this._scanner.tokenText(this._token)));\n\n        this._accept(undefined);\n\n        return true;\n      }\n\n    return false;\n  };\n\n  return SnippetParser;\n}();\n\nexport { SnippetParser };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/contrib/snippet/snippetParser.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__spreadArrays","s","i","il","arguments","length","r","k","a","j","jl","_a","Scanner","value","pos","isDigitCharacter","ch","isVariableCharacter","text","tokenText","token","substr","len","next","type","charCodeAt","_table","isNaN","Marker","_children","appendChild","child","Text","parent","push","replace","others","idx","children","indexOf","newChildren","slice","splice","apply","_fixParent","_i","children_1","child_1","defineProperty","get","enumerable","configurable","candidate","undefined","TextmateSnippet","toString","reduce","prev","cur","_super","_this_1","call","clone","TransformableMarker","Placeholder","index","compareByIndex","isFinalTabstop","Choice","ret","transform","map","options","marker","forEach","Transform","regexp","RegExp","resolve","_this","didMatch","_replace","some","FormatString","Boolean","elseValue","groups","source","ignoreCase","global","shorthandName","ifValue","toLocaleUpperCase","toLocaleLowerCase","_toPascalCase","match","word","charAt","toUpperCase","toLowerCase","join","Variable","name","resolver","walk","visitor","stack","marker_1","shift","recurse","unshift","_placeholders","all_1","last_1","all","last","placeholderInfo","offset","found","fullLen","enclosingPlaceholders","placeholder","resolveVariables","SnippetParser","_scanner","_token","escape","parse","insertFinalTabstop","enforceFinalTabstop","snippet","_parse","placeholderDefaultValues","Map","incompletePlaceholders","placeholderCount","set","has","incompletePlaceholders_1","defaultValues","defaultValues_1","_accept","_backTo","_until","start","nextToken","substring","_parseEscaped","_parseTabstopOrVariableName","_parseComplexPlaceholder","_parseComplexVariable","_parseAnything","test","Number","choice","_parseChoiceElement","_parseTransform","values","variable","regexValue","regexOptions","escaped","_parseFormatString","e","complex","shorthand"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\nvar _a;\r\nvar Scanner = /** @class */ (function () {\r\n    function Scanner() {\r\n        this.value = '';\r\n        this.pos = 0;\r\n    }\r\n    Scanner.isDigitCharacter = function (ch) {\r\n        return ch >= 48 /* Digit0 */ && ch <= 57 /* Digit9 */;\r\n    };\r\n    Scanner.isVariableCharacter = function (ch) {\r\n        return ch === 95 /* Underline */\r\n            || (ch >= 97 /* a */ && ch <= 122 /* z */)\r\n            || (ch >= 65 /* A */ && ch <= 90 /* Z */);\r\n    };\r\n    Scanner.prototype.text = function (value) {\r\n        this.value = value;\r\n        this.pos = 0;\r\n    };\r\n    Scanner.prototype.tokenText = function (token) {\r\n        return this.value.substr(token.pos, token.len);\r\n    };\r\n    Scanner.prototype.next = function () {\r\n        if (this.pos >= this.value.length) {\r\n            return { type: 14 /* EOF */, pos: this.pos, len: 0 };\r\n        }\r\n        var pos = this.pos;\r\n        var len = 0;\r\n        var ch = this.value.charCodeAt(pos);\r\n        var type;\r\n        // static types\r\n        type = Scanner._table[ch];\r\n        if (typeof type === 'number') {\r\n            this.pos += 1;\r\n            return { type: type, pos: pos, len: 1 };\r\n        }\r\n        // number\r\n        if (Scanner.isDigitCharacter(ch)) {\r\n            type = 8 /* Int */;\r\n            do {\r\n                len += 1;\r\n                ch = this.value.charCodeAt(pos + len);\r\n            } while (Scanner.isDigitCharacter(ch));\r\n            this.pos += len;\r\n            return { type: type, pos: pos, len: len };\r\n        }\r\n        // variable name\r\n        if (Scanner.isVariableCharacter(ch)) {\r\n            type = 9 /* VariableName */;\r\n            do {\r\n                ch = this.value.charCodeAt(pos + (++len));\r\n            } while (Scanner.isVariableCharacter(ch) || Scanner.isDigitCharacter(ch));\r\n            this.pos += len;\r\n            return { type: type, pos: pos, len: len };\r\n        }\r\n        // format\r\n        type = 10 /* Format */;\r\n        do {\r\n            len += 1;\r\n            ch = this.value.charCodeAt(pos + len);\r\n        } while (!isNaN(ch)\r\n            && typeof Scanner._table[ch] === 'undefined' // not static token\r\n            && !Scanner.isDigitCharacter(ch) // not number\r\n            && !Scanner.isVariableCharacter(ch) // not variable\r\n        );\r\n        this.pos += len;\r\n        return { type: type, pos: pos, len: len };\r\n    };\r\n    Scanner._table = (_a = {},\r\n        _a[36 /* DollarSign */] = 0 /* Dollar */,\r\n        _a[58 /* Colon */] = 1 /* Colon */,\r\n        _a[44 /* Comma */] = 2 /* Comma */,\r\n        _a[123 /* OpenCurlyBrace */] = 3 /* CurlyOpen */,\r\n        _a[125 /* CloseCurlyBrace */] = 4 /* CurlyClose */,\r\n        _a[92 /* Backslash */] = 5 /* Backslash */,\r\n        _a[47 /* Slash */] = 6 /* Forwardslash */,\r\n        _a[124 /* Pipe */] = 7 /* Pipe */,\r\n        _a[43 /* Plus */] = 11 /* Plus */,\r\n        _a[45 /* Dash */] = 12 /* Dash */,\r\n        _a[63 /* QuestionMark */] = 13 /* QuestionMark */,\r\n        _a);\r\n    return Scanner;\r\n}());\r\nexport { Scanner };\r\nvar Marker = /** @class */ (function () {\r\n    function Marker() {\r\n        this._children = [];\r\n    }\r\n    Marker.prototype.appendChild = function (child) {\r\n        if (child instanceof Text && this._children[this._children.length - 1] instanceof Text) {\r\n            // this and previous child are text -> merge them\r\n            this._children[this._children.length - 1].value += child.value;\r\n        }\r\n        else {\r\n            // normal adoption of child\r\n            child.parent = this;\r\n            this._children.push(child);\r\n        }\r\n        return this;\r\n    };\r\n    Marker.prototype.replace = function (child, others) {\r\n        var parent = child.parent;\r\n        var idx = parent.children.indexOf(child);\r\n        var newChildren = parent.children.slice(0);\r\n        newChildren.splice.apply(newChildren, __spreadArrays([idx, 1], others));\r\n        parent._children = newChildren;\r\n        (function _fixParent(children, parent) {\r\n            for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\r\n                var child_1 = children_1[_i];\r\n                child_1.parent = parent;\r\n                _fixParent(child_1.children, child_1);\r\n            }\r\n        })(others, parent);\r\n    };\r\n    Object.defineProperty(Marker.prototype, \"children\", {\r\n        get: function () {\r\n            return this._children;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Marker.prototype, \"snippet\", {\r\n        get: function () {\r\n            var candidate = this;\r\n            while (true) {\r\n                if (!candidate) {\r\n                    return undefined;\r\n                }\r\n                if (candidate instanceof TextmateSnippet) {\r\n                    return candidate;\r\n                }\r\n                candidate = candidate.parent;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Marker.prototype.toString = function () {\r\n        return this.children.reduce(function (prev, cur) { return prev + cur.toString(); }, '');\r\n    };\r\n    Marker.prototype.len = function () {\r\n        return 0;\r\n    };\r\n    return Marker;\r\n}());\r\nexport { Marker };\r\nvar Text = /** @class */ (function (_super) {\r\n    __extends(Text, _super);\r\n    function Text(value) {\r\n        var _this_1 = _super.call(this) || this;\r\n        _this_1.value = value;\r\n        return _this_1;\r\n    }\r\n    Text.prototype.toString = function () {\r\n        return this.value;\r\n    };\r\n    Text.prototype.len = function () {\r\n        return this.value.length;\r\n    };\r\n    Text.prototype.clone = function () {\r\n        return new Text(this.value);\r\n    };\r\n    return Text;\r\n}(Marker));\r\nexport { Text };\r\nvar TransformableMarker = /** @class */ (function (_super) {\r\n    __extends(TransformableMarker, _super);\r\n    function TransformableMarker() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return TransformableMarker;\r\n}(Marker));\r\nexport { TransformableMarker };\r\nvar Placeholder = /** @class */ (function (_super) {\r\n    __extends(Placeholder, _super);\r\n    function Placeholder(index) {\r\n        var _this_1 = _super.call(this) || this;\r\n        _this_1.index = index;\r\n        return _this_1;\r\n    }\r\n    Placeholder.compareByIndex = function (a, b) {\r\n        if (a.index === b.index) {\r\n            return 0;\r\n        }\r\n        else if (a.isFinalTabstop) {\r\n            return 1;\r\n        }\r\n        else if (b.isFinalTabstop) {\r\n            return -1;\r\n        }\r\n        else if (a.index < b.index) {\r\n            return -1;\r\n        }\r\n        else if (a.index > b.index) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    };\r\n    Object.defineProperty(Placeholder.prototype, \"isFinalTabstop\", {\r\n        get: function () {\r\n            return this.index === 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Placeholder.prototype, \"choice\", {\r\n        get: function () {\r\n            return this._children.length === 1 && this._children[0] instanceof Choice\r\n                ? this._children[0]\r\n                : undefined;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Placeholder.prototype.clone = function () {\r\n        var ret = new Placeholder(this.index);\r\n        if (this.transform) {\r\n            ret.transform = this.transform.clone();\r\n        }\r\n        ret._children = this.children.map(function (child) { return child.clone(); });\r\n        return ret;\r\n    };\r\n    return Placeholder;\r\n}(TransformableMarker));\r\nexport { Placeholder };\r\nvar Choice = /** @class */ (function (_super) {\r\n    __extends(Choice, _super);\r\n    function Choice() {\r\n        var _this_1 = _super !== null && _super.apply(this, arguments) || this;\r\n        _this_1.options = [];\r\n        return _this_1;\r\n    }\r\n    Choice.prototype.appendChild = function (marker) {\r\n        if (marker instanceof Text) {\r\n            marker.parent = this;\r\n            this.options.push(marker);\r\n        }\r\n        return this;\r\n    };\r\n    Choice.prototype.toString = function () {\r\n        return this.options[0].value;\r\n    };\r\n    Choice.prototype.len = function () {\r\n        return this.options[0].len();\r\n    };\r\n    Choice.prototype.clone = function () {\r\n        var ret = new Choice();\r\n        this.options.forEach(ret.appendChild, ret);\r\n        return ret;\r\n    };\r\n    return Choice;\r\n}(Marker));\r\nexport { Choice };\r\nvar Transform = /** @class */ (function (_super) {\r\n    __extends(Transform, _super);\r\n    function Transform() {\r\n        var _this_1 = _super !== null && _super.apply(this, arguments) || this;\r\n        _this_1.regexp = new RegExp('');\r\n        return _this_1;\r\n    }\r\n    Transform.prototype.resolve = function (value) {\r\n        var _this = this;\r\n        var didMatch = false;\r\n        var ret = value.replace(this.regexp, function () {\r\n            didMatch = true;\r\n            return _this._replace(Array.prototype.slice.call(arguments, 0, -2));\r\n        });\r\n        // when the regex didn't match and when the transform has\r\n        // else branches, then run those\r\n        if (!didMatch && this._children.some(function (child) { return child instanceof FormatString && Boolean(child.elseValue); })) {\r\n            ret = this._replace([]);\r\n        }\r\n        return ret;\r\n    };\r\n    Transform.prototype._replace = function (groups) {\r\n        var ret = '';\r\n        for (var _i = 0, _a = this._children; _i < _a.length; _i++) {\r\n            var marker = _a[_i];\r\n            if (marker instanceof FormatString) {\r\n                var value = groups[marker.index] || '';\r\n                value = marker.resolve(value);\r\n                ret += value;\r\n            }\r\n            else {\r\n                ret += marker.toString();\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    Transform.prototype.toString = function () {\r\n        return '';\r\n    };\r\n    Transform.prototype.clone = function () {\r\n        var ret = new Transform();\r\n        ret.regexp = new RegExp(this.regexp.source, '' + (this.regexp.ignoreCase ? 'i' : '') + (this.regexp.global ? 'g' : ''));\r\n        ret._children = this.children.map(function (child) { return child.clone(); });\r\n        return ret;\r\n    };\r\n    return Transform;\r\n}(Marker));\r\nexport { Transform };\r\nvar FormatString = /** @class */ (function (_super) {\r\n    __extends(FormatString, _super);\r\n    function FormatString(index, shorthandName, ifValue, elseValue) {\r\n        var _this_1 = _super.call(this) || this;\r\n        _this_1.index = index;\r\n        _this_1.shorthandName = shorthandName;\r\n        _this_1.ifValue = ifValue;\r\n        _this_1.elseValue = elseValue;\r\n        return _this_1;\r\n    }\r\n    FormatString.prototype.resolve = function (value) {\r\n        if (this.shorthandName === 'upcase') {\r\n            return !value ? '' : value.toLocaleUpperCase();\r\n        }\r\n        else if (this.shorthandName === 'downcase') {\r\n            return !value ? '' : value.toLocaleLowerCase();\r\n        }\r\n        else if (this.shorthandName === 'capitalize') {\r\n            return !value ? '' : (value[0].toLocaleUpperCase() + value.substr(1));\r\n        }\r\n        else if (this.shorthandName === 'pascalcase') {\r\n            return !value ? '' : this._toPascalCase(value);\r\n        }\r\n        else if (Boolean(value) && typeof this.ifValue === 'string') {\r\n            return this.ifValue;\r\n        }\r\n        else if (!Boolean(value) && typeof this.elseValue === 'string') {\r\n            return this.elseValue;\r\n        }\r\n        else {\r\n            return value || '';\r\n        }\r\n    };\r\n    FormatString.prototype._toPascalCase = function (value) {\r\n        var match = value.match(/[a-z]+/gi);\r\n        if (!match) {\r\n            return value;\r\n        }\r\n        return match.map(function (word) {\r\n            return word.charAt(0).toUpperCase()\r\n                + word.substr(1).toLowerCase();\r\n        })\r\n            .join('');\r\n    };\r\n    FormatString.prototype.clone = function () {\r\n        var ret = new FormatString(this.index, this.shorthandName, this.ifValue, this.elseValue);\r\n        return ret;\r\n    };\r\n    return FormatString;\r\n}(Marker));\r\nexport { FormatString };\r\nvar Variable = /** @class */ (function (_super) {\r\n    __extends(Variable, _super);\r\n    function Variable(name) {\r\n        var _this_1 = _super.call(this) || this;\r\n        _this_1.name = name;\r\n        return _this_1;\r\n    }\r\n    Variable.prototype.resolve = function (resolver) {\r\n        var value = resolver.resolve(this);\r\n        if (this.transform) {\r\n            value = this.transform.resolve(value || '');\r\n        }\r\n        if (value !== undefined) {\r\n            this._children = [new Text(value)];\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    Variable.prototype.clone = function () {\r\n        var ret = new Variable(this.name);\r\n        if (this.transform) {\r\n            ret.transform = this.transform.clone();\r\n        }\r\n        ret._children = this.children.map(function (child) { return child.clone(); });\r\n        return ret;\r\n    };\r\n    return Variable;\r\n}(TransformableMarker));\r\nexport { Variable };\r\nfunction walk(marker, visitor) {\r\n    var stack = __spreadArrays(marker);\r\n    while (stack.length > 0) {\r\n        var marker_1 = stack.shift();\r\n        var recurse = visitor(marker_1);\r\n        if (!recurse) {\r\n            break;\r\n        }\r\n        stack.unshift.apply(stack, marker_1.children);\r\n    }\r\n}\r\nvar TextmateSnippet = /** @class */ (function (_super) {\r\n    __extends(TextmateSnippet, _super);\r\n    function TextmateSnippet() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(TextmateSnippet.prototype, \"placeholderInfo\", {\r\n        get: function () {\r\n            if (!this._placeholders) {\r\n                // fill in placeholders\r\n                var all_1 = [];\r\n                var last_1;\r\n                this.walk(function (candidate) {\r\n                    if (candidate instanceof Placeholder) {\r\n                        all_1.push(candidate);\r\n                        last_1 = !last_1 || last_1.index < candidate.index ? candidate : last_1;\r\n                    }\r\n                    return true;\r\n                });\r\n                this._placeholders = { all: all_1, last: last_1 };\r\n            }\r\n            return this._placeholders;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TextmateSnippet.prototype, \"placeholders\", {\r\n        get: function () {\r\n            var all = this.placeholderInfo.all;\r\n            return all;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    TextmateSnippet.prototype.offset = function (marker) {\r\n        var pos = 0;\r\n        var found = false;\r\n        this.walk(function (candidate) {\r\n            if (candidate === marker) {\r\n                found = true;\r\n                return false;\r\n            }\r\n            pos += candidate.len();\r\n            return true;\r\n        });\r\n        if (!found) {\r\n            return -1;\r\n        }\r\n        return pos;\r\n    };\r\n    TextmateSnippet.prototype.fullLen = function (marker) {\r\n        var ret = 0;\r\n        walk([marker], function (marker) {\r\n            ret += marker.len();\r\n            return true;\r\n        });\r\n        return ret;\r\n    };\r\n    TextmateSnippet.prototype.enclosingPlaceholders = function (placeholder) {\r\n        var ret = [];\r\n        var parent = placeholder.parent;\r\n        while (parent) {\r\n            if (parent instanceof Placeholder) {\r\n                ret.push(parent);\r\n            }\r\n            parent = parent.parent;\r\n        }\r\n        return ret;\r\n    };\r\n    TextmateSnippet.prototype.resolveVariables = function (resolver) {\r\n        var _this_1 = this;\r\n        this.walk(function (candidate) {\r\n            if (candidate instanceof Variable) {\r\n                if (candidate.resolve(resolver)) {\r\n                    _this_1._placeholders = undefined;\r\n                }\r\n            }\r\n            return true;\r\n        });\r\n        return this;\r\n    };\r\n    TextmateSnippet.prototype.appendChild = function (child) {\r\n        this._placeholders = undefined;\r\n        return _super.prototype.appendChild.call(this, child);\r\n    };\r\n    TextmateSnippet.prototype.replace = function (child, others) {\r\n        this._placeholders = undefined;\r\n        return _super.prototype.replace.call(this, child, others);\r\n    };\r\n    TextmateSnippet.prototype.clone = function () {\r\n        var ret = new TextmateSnippet();\r\n        this._children = this.children.map(function (child) { return child.clone(); });\r\n        return ret;\r\n    };\r\n    TextmateSnippet.prototype.walk = function (visitor) {\r\n        walk(this.children, visitor);\r\n    };\r\n    return TextmateSnippet;\r\n}(Marker));\r\nexport { TextmateSnippet };\r\nvar SnippetParser = /** @class */ (function () {\r\n    function SnippetParser() {\r\n        this._scanner = new Scanner();\r\n        this._token = { type: 14 /* EOF */, pos: 0, len: 0 };\r\n    }\r\n    SnippetParser.escape = function (value) {\r\n        return value.replace(/\\$|}|\\\\/g, '\\\\$&');\r\n    };\r\n    SnippetParser.prototype.parse = function (value, insertFinalTabstop, enforceFinalTabstop) {\r\n        this._scanner.text(value);\r\n        this._token = this._scanner.next();\r\n        var snippet = new TextmateSnippet();\r\n        while (this._parse(snippet)) {\r\n            // nothing\r\n        }\r\n        // fill in values for placeholders. the first placeholder of an index\r\n        // that has a value defines the value for all placeholders with that index\r\n        var placeholderDefaultValues = new Map();\r\n        var incompletePlaceholders = [];\r\n        var placeholderCount = 0;\r\n        snippet.walk(function (marker) {\r\n            if (marker instanceof Placeholder) {\r\n                placeholderCount += 1;\r\n                if (marker.isFinalTabstop) {\r\n                    placeholderDefaultValues.set(0, undefined);\r\n                }\r\n                else if (!placeholderDefaultValues.has(marker.index) && marker.children.length > 0) {\r\n                    placeholderDefaultValues.set(marker.index, marker.children);\r\n                }\r\n                else {\r\n                    incompletePlaceholders.push(marker);\r\n                }\r\n            }\r\n            return true;\r\n        });\r\n        for (var _i = 0, incompletePlaceholders_1 = incompletePlaceholders; _i < incompletePlaceholders_1.length; _i++) {\r\n            var placeholder = incompletePlaceholders_1[_i];\r\n            var defaultValues = placeholderDefaultValues.get(placeholder.index);\r\n            if (defaultValues) {\r\n                var clone = new Placeholder(placeholder.index);\r\n                clone.transform = placeholder.transform;\r\n                for (var _a = 0, defaultValues_1 = defaultValues; _a < defaultValues_1.length; _a++) {\r\n                    var child = defaultValues_1[_a];\r\n                    clone.appendChild(child.clone());\r\n                }\r\n                snippet.replace(placeholder, [clone]);\r\n            }\r\n        }\r\n        if (!enforceFinalTabstop) {\r\n            enforceFinalTabstop = placeholderCount > 0 && insertFinalTabstop;\r\n        }\r\n        if (!placeholderDefaultValues.has(0) && enforceFinalTabstop) {\r\n            // the snippet uses placeholders but has no\r\n            // final tabstop defined -> insert at the end\r\n            snippet.appendChild(new Placeholder(0));\r\n        }\r\n        return snippet;\r\n    };\r\n    SnippetParser.prototype._accept = function (type, value) {\r\n        if (type === undefined || this._token.type === type) {\r\n            var ret = !value ? true : this._scanner.tokenText(this._token);\r\n            this._token = this._scanner.next();\r\n            return ret;\r\n        }\r\n        return false;\r\n    };\r\n    SnippetParser.prototype._backTo = function (token) {\r\n        this._scanner.pos = token.pos + token.len;\r\n        this._token = token;\r\n        return false;\r\n    };\r\n    SnippetParser.prototype._until = function (type) {\r\n        var start = this._token;\r\n        while (this._token.type !== type) {\r\n            if (this._token.type === 14 /* EOF */) {\r\n                return false;\r\n            }\r\n            else if (this._token.type === 5 /* Backslash */) {\r\n                var nextToken = this._scanner.next();\r\n                if (nextToken.type !== 0 /* Dollar */\r\n                    && nextToken.type !== 4 /* CurlyClose */\r\n                    && nextToken.type !== 5 /* Backslash */) {\r\n                    return false;\r\n                }\r\n            }\r\n            this._token = this._scanner.next();\r\n        }\r\n        var value = this._scanner.value.substring(start.pos, this._token.pos).replace(/\\\\(\\$|}|\\\\)/g, '$1');\r\n        this._token = this._scanner.next();\r\n        return value;\r\n    };\r\n    SnippetParser.prototype._parse = function (marker) {\r\n        return this._parseEscaped(marker)\r\n            || this._parseTabstopOrVariableName(marker)\r\n            || this._parseComplexPlaceholder(marker)\r\n            || this._parseComplexVariable(marker)\r\n            || this._parseAnything(marker);\r\n    };\r\n    // \\$, \\\\, \\} -> just text\r\n    SnippetParser.prototype._parseEscaped = function (marker) {\r\n        var value;\r\n        if (value = this._accept(5 /* Backslash */, true)) {\r\n            // saw a backslash, append escaped token or that backslash\r\n            value = this._accept(0 /* Dollar */, true)\r\n                || this._accept(4 /* CurlyClose */, true)\r\n                || this._accept(5 /* Backslash */, true)\r\n                || value;\r\n            marker.appendChild(new Text(value));\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    // $foo -> variable, $1 -> tabstop\r\n    SnippetParser.prototype._parseTabstopOrVariableName = function (parent) {\r\n        var value;\r\n        var token = this._token;\r\n        var match = this._accept(0 /* Dollar */)\r\n            && (value = this._accept(9 /* VariableName */, true) || this._accept(8 /* Int */, true));\r\n        if (!match) {\r\n            return this._backTo(token);\r\n        }\r\n        parent.appendChild(/^\\d+$/.test(value)\r\n            ? new Placeholder(Number(value))\r\n            : new Variable(value));\r\n        return true;\r\n    };\r\n    // ${1:<children>}, ${1} -> placeholder\r\n    SnippetParser.prototype._parseComplexPlaceholder = function (parent) {\r\n        var index;\r\n        var token = this._token;\r\n        var match = this._accept(0 /* Dollar */)\r\n            && this._accept(3 /* CurlyOpen */)\r\n            && (index = this._accept(8 /* Int */, true));\r\n        if (!match) {\r\n            return this._backTo(token);\r\n        }\r\n        var placeholder = new Placeholder(Number(index));\r\n        if (this._accept(1 /* Colon */)) {\r\n            // ${1:<children>}\r\n            while (true) {\r\n                // ...} -> done\r\n                if (this._accept(4 /* CurlyClose */)) {\r\n                    parent.appendChild(placeholder);\r\n                    return true;\r\n                }\r\n                if (this._parse(placeholder)) {\r\n                    continue;\r\n                }\r\n                // fallback\r\n                parent.appendChild(new Text('${' + index + ':'));\r\n                placeholder.children.forEach(parent.appendChild, parent);\r\n                return true;\r\n            }\r\n        }\r\n        else if (placeholder.index > 0 && this._accept(7 /* Pipe */)) {\r\n            // ${1|one,two,three|}\r\n            var choice = new Choice();\r\n            while (true) {\r\n                if (this._parseChoiceElement(choice)) {\r\n                    if (this._accept(2 /* Comma */)) {\r\n                        // opt, -> more\r\n                        continue;\r\n                    }\r\n                    if (this._accept(7 /* Pipe */)) {\r\n                        placeholder.appendChild(choice);\r\n                        if (this._accept(4 /* CurlyClose */)) {\r\n                            // ..|} -> done\r\n                            parent.appendChild(placeholder);\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n                this._backTo(token);\r\n                return false;\r\n            }\r\n        }\r\n        else if (this._accept(6 /* Forwardslash */)) {\r\n            // ${1/<regex>/<format>/<options>}\r\n            if (this._parseTransform(placeholder)) {\r\n                parent.appendChild(placeholder);\r\n                return true;\r\n            }\r\n            this._backTo(token);\r\n            return false;\r\n        }\r\n        else if (this._accept(4 /* CurlyClose */)) {\r\n            // ${1}\r\n            parent.appendChild(placeholder);\r\n            return true;\r\n        }\r\n        else {\r\n            // ${1 <- missing curly or colon\r\n            return this._backTo(token);\r\n        }\r\n    };\r\n    SnippetParser.prototype._parseChoiceElement = function (parent) {\r\n        var token = this._token;\r\n        var values = [];\r\n        while (true) {\r\n            if (this._token.type === 2 /* Comma */ || this._token.type === 7 /* Pipe */) {\r\n                break;\r\n            }\r\n            var value = void 0;\r\n            if (value = this._accept(5 /* Backslash */, true)) {\r\n                // \\, \\|, or \\\\\r\n                value = this._accept(2 /* Comma */, true)\r\n                    || this._accept(7 /* Pipe */, true)\r\n                    || this._accept(5 /* Backslash */, true)\r\n                    || value;\r\n            }\r\n            else {\r\n                value = this._accept(undefined, true);\r\n            }\r\n            if (!value) {\r\n                // EOF\r\n                this._backTo(token);\r\n                return false;\r\n            }\r\n            values.push(value);\r\n        }\r\n        if (values.length === 0) {\r\n            this._backTo(token);\r\n            return false;\r\n        }\r\n        parent.appendChild(new Text(values.join('')));\r\n        return true;\r\n    };\r\n    // ${foo:<children>}, ${foo} -> variable\r\n    SnippetParser.prototype._parseComplexVariable = function (parent) {\r\n        var name;\r\n        var token = this._token;\r\n        var match = this._accept(0 /* Dollar */)\r\n            && this._accept(3 /* CurlyOpen */)\r\n            && (name = this._accept(9 /* VariableName */, true));\r\n        if (!match) {\r\n            return this._backTo(token);\r\n        }\r\n        var variable = new Variable(name);\r\n        if (this._accept(1 /* Colon */)) {\r\n            // ${foo:<children>}\r\n            while (true) {\r\n                // ...} -> done\r\n                if (this._accept(4 /* CurlyClose */)) {\r\n                    parent.appendChild(variable);\r\n                    return true;\r\n                }\r\n                if (this._parse(variable)) {\r\n                    continue;\r\n                }\r\n                // fallback\r\n                parent.appendChild(new Text('${' + name + ':'));\r\n                variable.children.forEach(parent.appendChild, parent);\r\n                return true;\r\n            }\r\n        }\r\n        else if (this._accept(6 /* Forwardslash */)) {\r\n            // ${foo/<regex>/<format>/<options>}\r\n            if (this._parseTransform(variable)) {\r\n                parent.appendChild(variable);\r\n                return true;\r\n            }\r\n            this._backTo(token);\r\n            return false;\r\n        }\r\n        else if (this._accept(4 /* CurlyClose */)) {\r\n            // ${foo}\r\n            parent.appendChild(variable);\r\n            return true;\r\n        }\r\n        else {\r\n            // ${foo <- missing curly or colon\r\n            return this._backTo(token);\r\n        }\r\n    };\r\n    SnippetParser.prototype._parseTransform = function (parent) {\r\n        // ...<regex>/<format>/<options>}\r\n        var transform = new Transform();\r\n        var regexValue = '';\r\n        var regexOptions = '';\r\n        // (1) /regex\r\n        while (true) {\r\n            if (this._accept(6 /* Forwardslash */)) {\r\n                break;\r\n            }\r\n            var escaped = void 0;\r\n            if (escaped = this._accept(5 /* Backslash */, true)) {\r\n                escaped = this._accept(6 /* Forwardslash */, true) || escaped;\r\n                regexValue += escaped;\r\n                continue;\r\n            }\r\n            if (this._token.type !== 14 /* EOF */) {\r\n                regexValue += this._accept(undefined, true);\r\n                continue;\r\n            }\r\n            return false;\r\n        }\r\n        // (2) /format\r\n        while (true) {\r\n            if (this._accept(6 /* Forwardslash */)) {\r\n                break;\r\n            }\r\n            var escaped = void 0;\r\n            if (escaped = this._accept(5 /* Backslash */, true)) {\r\n                escaped = this._accept(5 /* Backslash */, true) || this._accept(6 /* Forwardslash */, true) || escaped;\r\n                transform.appendChild(new Text(escaped));\r\n                continue;\r\n            }\r\n            if (this._parseFormatString(transform) || this._parseAnything(transform)) {\r\n                continue;\r\n            }\r\n            return false;\r\n        }\r\n        // (3) /option\r\n        while (true) {\r\n            if (this._accept(4 /* CurlyClose */)) {\r\n                break;\r\n            }\r\n            if (this._token.type !== 14 /* EOF */) {\r\n                regexOptions += this._accept(undefined, true);\r\n                continue;\r\n            }\r\n            return false;\r\n        }\r\n        try {\r\n            transform.regexp = new RegExp(regexValue, regexOptions);\r\n        }\r\n        catch (e) {\r\n            // invalid regexp\r\n            return false;\r\n        }\r\n        parent.transform = transform;\r\n        return true;\r\n    };\r\n    SnippetParser.prototype._parseFormatString = function (parent) {\r\n        var token = this._token;\r\n        if (!this._accept(0 /* Dollar */)) {\r\n            return false;\r\n        }\r\n        var complex = false;\r\n        if (this._accept(3 /* CurlyOpen */)) {\r\n            complex = true;\r\n        }\r\n        var index = this._accept(8 /* Int */, true);\r\n        if (!index) {\r\n            this._backTo(token);\r\n            return false;\r\n        }\r\n        else if (!complex) {\r\n            // $1\r\n            parent.appendChild(new FormatString(Number(index)));\r\n            return true;\r\n        }\r\n        else if (this._accept(4 /* CurlyClose */)) {\r\n            // ${1}\r\n            parent.appendChild(new FormatString(Number(index)));\r\n            return true;\r\n        }\r\n        else if (!this._accept(1 /* Colon */)) {\r\n            this._backTo(token);\r\n            return false;\r\n        }\r\n        if (this._accept(6 /* Forwardslash */)) {\r\n            // ${1:/upcase}\r\n            var shorthand = this._accept(9 /* VariableName */, true);\r\n            if (!shorthand || !this._accept(4 /* CurlyClose */)) {\r\n                this._backTo(token);\r\n                return false;\r\n            }\r\n            else {\r\n                parent.appendChild(new FormatString(Number(index), shorthand));\r\n                return true;\r\n            }\r\n        }\r\n        else if (this._accept(11 /* Plus */)) {\r\n            // ${1:+<if>}\r\n            var ifValue = this._until(4 /* CurlyClose */);\r\n            if (ifValue) {\r\n                parent.appendChild(new FormatString(Number(index), undefined, ifValue, undefined));\r\n                return true;\r\n            }\r\n        }\r\n        else if (this._accept(12 /* Dash */)) {\r\n            // ${2:-<else>}\r\n            var elseValue = this._until(4 /* CurlyClose */);\r\n            if (elseValue) {\r\n                parent.appendChild(new FormatString(Number(index), undefined, undefined, elseValue));\r\n                return true;\r\n            }\r\n        }\r\n        else if (this._accept(13 /* QuestionMark */)) {\r\n            // ${2:?<if>:<else>}\r\n            var ifValue = this._until(1 /* Colon */);\r\n            if (ifValue) {\r\n                var elseValue = this._until(4 /* CurlyClose */);\r\n                if (elseValue) {\r\n                    parent.appendChild(new FormatString(Number(index), undefined, ifValue, elseValue));\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // ${1:<else>}\r\n            var elseValue = this._until(4 /* CurlyClose */);\r\n            if (elseValue) {\r\n                parent.appendChild(new FormatString(Number(index), undefined, undefined, elseValue));\r\n                return true;\r\n            }\r\n        }\r\n        this._backTo(token);\r\n        return false;\r\n    };\r\n    SnippetParser.prototype._parseAnything = function (marker) {\r\n        if (this._token.type !== 14 /* EOF */) {\r\n            marker.appendChild(new Text(this._scanner.tokenText(this._token)));\r\n            this._accept(undefined);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    return SnippetParser;\r\n}());\r\nexport { SnippetParser };\r\n"]},"metadata":{},"sourceType":"module"}