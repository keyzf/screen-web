{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as dom from '../../../base/browser/dom.js';\nimport * as platform from '../../../base/common/platform.js';\nimport { EventType, Gesture } from '../../../base/browser/touch.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { MouseHandler, createMouseMoveEventMerger } from './mouseHandler.js';\nimport { EditorMouseEvent, EditorPointerEventFactory } from '../editorDom.js';\nimport { BrowserFeatures } from '../../../base/browser/canIUse.js';\n\nfunction gestureChangeEventMerger(lastEvent, currentEvent) {\n  var r = {\n    translationY: currentEvent.translationY,\n    translationX: currentEvent.translationX\n  };\n\n  if (lastEvent) {\n    r.translationY += lastEvent.translationY;\n    r.translationX += lastEvent.translationX;\n  }\n\n  return r;\n}\n/**\r\n * Basically IE10 and IE11\r\n */\n\n\nvar MsPointerHandler =\n/** @class */\nfunction (_super) {\n  __extends(MsPointerHandler, _super);\n\n  function MsPointerHandler(context, viewController, viewHelper) {\n    var _this = _super.call(this, context, viewController, viewHelper) || this;\n\n    _this.viewHelper.linesContentDomNode.style.msTouchAction = 'none';\n    _this.viewHelper.linesContentDomNode.style.msContentZooming = 'none'; // TODO@Alex -> this expects that the view is added in 100 ms, might not be the case\n    // This handler should be added when the dom node is in the dom tree\n\n    _this._installGestureHandlerTimeout = window.setTimeout(function () {\n      _this._installGestureHandlerTimeout = -1;\n\n      if (window.MSGesture) {\n        var touchGesture_1 = new MSGesture();\n        var penGesture_1 = new MSGesture();\n        touchGesture_1.target = _this.viewHelper.linesContentDomNode;\n        penGesture_1.target = _this.viewHelper.linesContentDomNode;\n\n        _this.viewHelper.linesContentDomNode.addEventListener('MSPointerDown', function (e) {\n          // Circumvent IE11 breaking change in e.pointerType & TypeScript's stale definitions\n          var pointerType = e.pointerType;\n\n          if (pointerType === (e.MSPOINTER_TYPE_MOUSE || 'mouse')) {\n            _this._lastPointerType = 'mouse';\n            return;\n          } else if (pointerType === (e.MSPOINTER_TYPE_TOUCH || 'touch')) {\n            _this._lastPointerType = 'touch';\n            touchGesture_1.addPointer(e.pointerId);\n          } else {\n            _this._lastPointerType = 'pen';\n            penGesture_1.addPointer(e.pointerId);\n          }\n        });\n\n        _this._register(dom.addDisposableThrottledListener(_this.viewHelper.linesContentDomNode, 'MSGestureChange', function (e) {\n          return _this._onGestureChange(e);\n        }, gestureChangeEventMerger));\n\n        _this._register(dom.addDisposableListener(_this.viewHelper.linesContentDomNode, 'MSGestureTap', function (e) {\n          return _this._onCaptureGestureTap(e);\n        }, true));\n      }\n    }, 100);\n    _this._lastPointerType = 'mouse';\n    return _this;\n  }\n\n  MsPointerHandler.prototype._onMouseDown = function (e) {\n    if (this._lastPointerType === 'mouse') {\n      _super.prototype._onMouseDown.call(this, e);\n    }\n  };\n\n  MsPointerHandler.prototype._onCaptureGestureTap = function (rawEvent) {\n    var _this = this;\n\n    var e = new EditorMouseEvent(rawEvent, this.viewHelper.viewDomNode);\n\n    var t = this._createMouseTarget(e, false);\n\n    if (t.position) {\n      this.viewController.moveTo(t.position);\n    } // IE does not want to focus when coming in from the browser's address bar\n\n\n    if (e.browserEvent.fromElement) {\n      e.preventDefault();\n      this.viewHelper.focusTextArea();\n    } else {\n      // TODO@Alex -> cancel this is focus is lost\n      setTimeout(function () {\n        _this.viewHelper.focusTextArea();\n      });\n    }\n  };\n\n  MsPointerHandler.prototype._onGestureChange = function (e) {\n    this._context.viewLayout.deltaScrollNow(-e.translationX, -e.translationY);\n  };\n\n  MsPointerHandler.prototype.dispose = function () {\n    window.clearTimeout(this._installGestureHandlerTimeout);\n\n    _super.prototype.dispose.call(this);\n  };\n\n  return MsPointerHandler;\n}(MouseHandler);\n/**\r\n * Basically Edge but should be modified to handle any pointerEnabled, even without support of MSGesture\r\n */\n\n\nvar StandardPointerHandler =\n/** @class */\nfunction (_super) {\n  __extends(StandardPointerHandler, _super);\n\n  function StandardPointerHandler(context, viewController, viewHelper) {\n    var _this = _super.call(this, context, viewController, viewHelper) || this;\n\n    _this.viewHelper.linesContentDomNode.style.touchAction = 'none'; // TODO@Alex -> this expects that the view is added in 100 ms, might not be the case\n    // This handler should be added when the dom node is in the dom tree\n\n    _this._installGestureHandlerTimeout = window.setTimeout(function () {\n      _this._installGestureHandlerTimeout = -1; // TODO@Alex: replace the usage of MSGesture here with something that works across all browsers\n\n      if (window.MSGesture) {\n        var touchGesture_2 = new MSGesture();\n        var penGesture_2 = new MSGesture();\n        touchGesture_2.target = _this.viewHelper.linesContentDomNode;\n        penGesture_2.target = _this.viewHelper.linesContentDomNode;\n\n        _this.viewHelper.linesContentDomNode.addEventListener('pointerdown', function (e) {\n          var pointerType = e.pointerType;\n\n          if (pointerType === 'mouse') {\n            _this._lastPointerType = 'mouse';\n            return;\n          } else if (pointerType === 'touch') {\n            _this._lastPointerType = 'touch';\n            touchGesture_2.addPointer(e.pointerId);\n          } else {\n            _this._lastPointerType = 'pen';\n            penGesture_2.addPointer(e.pointerId);\n          }\n        });\n\n        _this._register(dom.addDisposableThrottledListener(_this.viewHelper.linesContentDomNode, 'MSGestureChange', function (e) {\n          return _this._onGestureChange(e);\n        }, gestureChangeEventMerger));\n\n        _this._register(dom.addDisposableListener(_this.viewHelper.linesContentDomNode, 'MSGestureTap', function (e) {\n          return _this._onCaptureGestureTap(e);\n        }, true));\n      }\n    }, 100);\n    _this._lastPointerType = 'mouse';\n    return _this;\n  }\n\n  StandardPointerHandler.prototype._onMouseDown = function (e) {\n    if (this._lastPointerType === 'mouse') {\n      _super.prototype._onMouseDown.call(this, e);\n    }\n  };\n\n  StandardPointerHandler.prototype._onCaptureGestureTap = function (rawEvent) {\n    var _this = this;\n\n    var e = new EditorMouseEvent(rawEvent, this.viewHelper.viewDomNode);\n\n    var t = this._createMouseTarget(e, false);\n\n    if (t.position) {\n      this.viewController.moveTo(t.position);\n    } // IE does not want to focus when coming in from the browser's address bar\n\n\n    if (e.browserEvent.fromElement) {\n      e.preventDefault();\n      this.viewHelper.focusTextArea();\n    } else {\n      // TODO@Alex -> cancel this is focus is lost\n      setTimeout(function () {\n        _this.viewHelper.focusTextArea();\n      });\n    }\n  };\n\n  StandardPointerHandler.prototype._onGestureChange = function (e) {\n    this._context.viewLayout.deltaScrollNow(-e.translationX, -e.translationY);\n  };\n\n  StandardPointerHandler.prototype.dispose = function () {\n    window.clearTimeout(this._installGestureHandlerTimeout);\n\n    _super.prototype.dispose.call(this);\n  };\n\n  return StandardPointerHandler;\n}(MouseHandler);\n/**\r\n * Currently only tested on iOS 13/ iPadOS.\r\n */\n\n\nvar PointerEventHandler =\n/** @class */\nfunction (_super) {\n  __extends(PointerEventHandler, _super);\n\n  function PointerEventHandler(context, viewController, viewHelper) {\n    var _this = _super.call(this, context, viewController, viewHelper) || this;\n\n    _this._register(Gesture.addTarget(_this.viewHelper.linesContentDomNode));\n\n    _this._register(dom.addDisposableListener(_this.viewHelper.linesContentDomNode, EventType.Tap, function (e) {\n      return _this.onTap(e);\n    }));\n\n    _this._register(dom.addDisposableListener(_this.viewHelper.linesContentDomNode, EventType.Change, function (e) {\n      return _this.onChange(e);\n    }));\n\n    _this._register(dom.addDisposableListener(_this.viewHelper.linesContentDomNode, EventType.Contextmenu, function (e) {\n      return _this._onContextMenu(new EditorMouseEvent(e, _this.viewHelper.viewDomNode), false);\n    }));\n\n    _this._lastPointerType = 'mouse';\n\n    _this._register(dom.addDisposableListener(_this.viewHelper.linesContentDomNode, 'pointerdown', function (e) {\n      var pointerType = e.pointerType;\n\n      if (pointerType === 'mouse') {\n        _this._lastPointerType = 'mouse';\n        return;\n      } else if (pointerType === 'touch') {\n        _this._lastPointerType = 'touch';\n      } else {\n        _this._lastPointerType = 'pen';\n      }\n    })); // PonterEvents\n\n\n    var pointerEvents = new EditorPointerEventFactory(_this.viewHelper.viewDomNode);\n\n    _this._register(pointerEvents.onPointerMoveThrottled(_this.viewHelper.viewDomNode, function (e) {\n      return _this._onMouseMove(e);\n    }, createMouseMoveEventMerger(_this.mouseTargetFactory), MouseHandler.MOUSE_MOVE_MINIMUM_TIME));\n\n    _this._register(pointerEvents.onPointerUp(_this.viewHelper.viewDomNode, function (e) {\n      return _this._onMouseUp(e);\n    }));\n\n    _this._register(pointerEvents.onPointerLeave(_this.viewHelper.viewDomNode, function (e) {\n      return _this._onMouseLeave(e);\n    }));\n\n    _this._register(pointerEvents.onPointerDown(_this.viewHelper.viewDomNode, function (e) {\n      return _this._onMouseDown(e);\n    }));\n\n    return _this;\n  }\n\n  PointerEventHandler.prototype.onTap = function (event) {\n    if (!event.initialTarget || !this.viewHelper.linesContentDomNode.contains(event.initialTarget)) {\n      return;\n    }\n\n    event.preventDefault();\n    this.viewHelper.focusTextArea();\n\n    var target = this._createMouseTarget(new EditorMouseEvent(event, this.viewHelper.viewDomNode), false);\n\n    if (target.position) {\n      // this.viewController.moveTo(target.position);\n      this.viewController.dispatchMouse({\n        position: target.position,\n        mouseColumn: target.position.column,\n        startedOnLineNumbers: false,\n        mouseDownCount: event.tapCount,\n        inSelectionMode: false,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        leftButton: false,\n        middleButton: false\n      });\n    }\n  };\n\n  PointerEventHandler.prototype.onChange = function (e) {\n    if (this._lastPointerType === 'touch') {\n      this._context.viewLayout.deltaScrollNow(-e.translationX, -e.translationY);\n    }\n  };\n\n  PointerEventHandler.prototype._onMouseDown = function (e) {\n    if (e.target && this.viewHelper.linesContentDomNode.contains(e.target) && this._lastPointerType === 'touch') {\n      return;\n    }\n\n    _super.prototype._onMouseDown.call(this, e);\n  };\n\n  return PointerEventHandler;\n}(MouseHandler);\n\nexport { PointerEventHandler };\n\nvar TouchHandler =\n/** @class */\nfunction (_super) {\n  __extends(TouchHandler, _super);\n\n  function TouchHandler(context, viewController, viewHelper) {\n    var _this = _super.call(this, context, viewController, viewHelper) || this;\n\n    _this._register(Gesture.addTarget(_this.viewHelper.linesContentDomNode));\n\n    _this._register(dom.addDisposableListener(_this.viewHelper.linesContentDomNode, EventType.Tap, function (e) {\n      return _this.onTap(e);\n    }));\n\n    _this._register(dom.addDisposableListener(_this.viewHelper.linesContentDomNode, EventType.Change, function (e) {\n      return _this.onChange(e);\n    }));\n\n    _this._register(dom.addDisposableListener(_this.viewHelper.linesContentDomNode, EventType.Contextmenu, function (e) {\n      return _this._onContextMenu(new EditorMouseEvent(e, _this.viewHelper.viewDomNode), false);\n    }));\n\n    return _this;\n  }\n\n  TouchHandler.prototype.onTap = function (event) {\n    event.preventDefault();\n    this.viewHelper.focusTextArea();\n\n    var target = this._createMouseTarget(new EditorMouseEvent(event, this.viewHelper.viewDomNode), false);\n\n    if (target.position) {\n      this.viewController.moveTo(target.position);\n    }\n  };\n\n  TouchHandler.prototype.onChange = function (e) {\n    this._context.viewLayout.deltaScrollNow(-e.translationX, -e.translationY);\n  };\n\n  return TouchHandler;\n}(MouseHandler);\n\nvar PointerHandler =\n/** @class */\nfunction (_super) {\n  __extends(PointerHandler, _super);\n\n  function PointerHandler(context, viewController, viewHelper) {\n    var _this = _super.call(this) || this;\n\n    if (window.navigator.msPointerEnabled) {\n      _this.handler = _this._register(new MsPointerHandler(context, viewController, viewHelper));\n    } else if (platform.isIOS && BrowserFeatures.pointerEvents) {\n      _this.handler = _this._register(new PointerEventHandler(context, viewController, viewHelper));\n    } else if (window.TouchEvent) {\n      _this.handler = _this._register(new TouchHandler(context, viewController, viewHelper));\n    } else if (window.navigator.pointerEnabled || window.PointerEvent) {\n      _this.handler = _this._register(new StandardPointerHandler(context, viewController, viewHelper));\n    } else {\n      _this.handler = _this._register(new MouseHandler(context, viewController, viewHelper));\n    }\n\n    return _this;\n  }\n\n  PointerHandler.prototype.getTargetAtClientPoint = function (clientX, clientY) {\n    return this.handler.getTargetAtClientPoint(clientX, clientY);\n  };\n\n  return PointerHandler;\n}(Disposable);\n\nexport { PointerHandler };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/browser/controller/pointerHandler.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","dom","platform","EventType","Gesture","Disposable","MouseHandler","createMouseMoveEventMerger","EditorMouseEvent","EditorPointerEventFactory","BrowserFeatures","gestureChangeEventMerger","lastEvent","currentEvent","r","translationY","translationX","MsPointerHandler","_super","context","viewController","viewHelper","_this","call","linesContentDomNode","style","msTouchAction","msContentZooming","_installGestureHandlerTimeout","window","setTimeout","MSGesture","touchGesture_1","penGesture_1","target","addEventListener","e","pointerType","MSPOINTER_TYPE_MOUSE","_lastPointerType","MSPOINTER_TYPE_TOUCH","addPointer","pointerId","_register","addDisposableThrottledListener","_onGestureChange","addDisposableListener","_onCaptureGestureTap","_onMouseDown","rawEvent","viewDomNode","t","_createMouseTarget","position","moveTo","browserEvent","fromElement","preventDefault","focusTextArea","_context","viewLayout","deltaScrollNow","dispose","clearTimeout","StandardPointerHandler","touchAction","touchGesture_2","penGesture_2","PointerEventHandler","addTarget","Tap","onTap","Change","onChange","Contextmenu","_onContextMenu","pointerEvents","onPointerMoveThrottled","_onMouseMove","mouseTargetFactory","MOUSE_MOVE_MINIMUM_TIME","onPointerUp","_onMouseUp","onPointerLeave","_onMouseLeave","onPointerDown","event","initialTarget","contains","dispatchMouse","mouseColumn","column","startedOnLineNumbers","mouseDownCount","tapCount","inSelectionMode","altKey","ctrlKey","metaKey","shiftKey","leftButton","middleButton","TouchHandler","PointerHandler","navigator","msPointerEnabled","handler","isIOS","TouchEvent","pointerEnabled","PointerEvent","getTargetAtClientPoint","clientX","clientY"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport * as platform from '../../../base/common/platform.js';\r\nimport { EventType, Gesture } from '../../../base/browser/touch.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { MouseHandler, createMouseMoveEventMerger } from './mouseHandler.js';\r\nimport { EditorMouseEvent, EditorPointerEventFactory } from '../editorDom.js';\r\nimport { BrowserFeatures } from '../../../base/browser/canIUse.js';\r\nfunction gestureChangeEventMerger(lastEvent, currentEvent) {\r\n    var r = {\r\n        translationY: currentEvent.translationY,\r\n        translationX: currentEvent.translationX\r\n    };\r\n    if (lastEvent) {\r\n        r.translationY += lastEvent.translationY;\r\n        r.translationX += lastEvent.translationX;\r\n    }\r\n    return r;\r\n}\r\n/**\r\n * Basically IE10 and IE11\r\n */\r\nvar MsPointerHandler = /** @class */ (function (_super) {\r\n    __extends(MsPointerHandler, _super);\r\n    function MsPointerHandler(context, viewController, viewHelper) {\r\n        var _this = _super.call(this, context, viewController, viewHelper) || this;\r\n        _this.viewHelper.linesContentDomNode.style.msTouchAction = 'none';\r\n        _this.viewHelper.linesContentDomNode.style.msContentZooming = 'none';\r\n        // TODO@Alex -> this expects that the view is added in 100 ms, might not be the case\r\n        // This handler should be added when the dom node is in the dom tree\r\n        _this._installGestureHandlerTimeout = window.setTimeout(function () {\r\n            _this._installGestureHandlerTimeout = -1;\r\n            if (window.MSGesture) {\r\n                var touchGesture_1 = new MSGesture();\r\n                var penGesture_1 = new MSGesture();\r\n                touchGesture_1.target = _this.viewHelper.linesContentDomNode;\r\n                penGesture_1.target = _this.viewHelper.linesContentDomNode;\r\n                _this.viewHelper.linesContentDomNode.addEventListener('MSPointerDown', function (e) {\r\n                    // Circumvent IE11 breaking change in e.pointerType & TypeScript's stale definitions\r\n                    var pointerType = e.pointerType;\r\n                    if (pointerType === (e.MSPOINTER_TYPE_MOUSE || 'mouse')) {\r\n                        _this._lastPointerType = 'mouse';\r\n                        return;\r\n                    }\r\n                    else if (pointerType === (e.MSPOINTER_TYPE_TOUCH || 'touch')) {\r\n                        _this._lastPointerType = 'touch';\r\n                        touchGesture_1.addPointer(e.pointerId);\r\n                    }\r\n                    else {\r\n                        _this._lastPointerType = 'pen';\r\n                        penGesture_1.addPointer(e.pointerId);\r\n                    }\r\n                });\r\n                _this._register(dom.addDisposableThrottledListener(_this.viewHelper.linesContentDomNode, 'MSGestureChange', function (e) { return _this._onGestureChange(e); }, gestureChangeEventMerger));\r\n                _this._register(dom.addDisposableListener(_this.viewHelper.linesContentDomNode, 'MSGestureTap', function (e) { return _this._onCaptureGestureTap(e); }, true));\r\n            }\r\n        }, 100);\r\n        _this._lastPointerType = 'mouse';\r\n        return _this;\r\n    }\r\n    MsPointerHandler.prototype._onMouseDown = function (e) {\r\n        if (this._lastPointerType === 'mouse') {\r\n            _super.prototype._onMouseDown.call(this, e);\r\n        }\r\n    };\r\n    MsPointerHandler.prototype._onCaptureGestureTap = function (rawEvent) {\r\n        var _this = this;\r\n        var e = new EditorMouseEvent(rawEvent, this.viewHelper.viewDomNode);\r\n        var t = this._createMouseTarget(e, false);\r\n        if (t.position) {\r\n            this.viewController.moveTo(t.position);\r\n        }\r\n        // IE does not want to focus when coming in from the browser's address bar\r\n        if (e.browserEvent.fromElement) {\r\n            e.preventDefault();\r\n            this.viewHelper.focusTextArea();\r\n        }\r\n        else {\r\n            // TODO@Alex -> cancel this is focus is lost\r\n            setTimeout(function () {\r\n                _this.viewHelper.focusTextArea();\r\n            });\r\n        }\r\n    };\r\n    MsPointerHandler.prototype._onGestureChange = function (e) {\r\n        this._context.viewLayout.deltaScrollNow(-e.translationX, -e.translationY);\r\n    };\r\n    MsPointerHandler.prototype.dispose = function () {\r\n        window.clearTimeout(this._installGestureHandlerTimeout);\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    return MsPointerHandler;\r\n}(MouseHandler));\r\n/**\r\n * Basically Edge but should be modified to handle any pointerEnabled, even without support of MSGesture\r\n */\r\nvar StandardPointerHandler = /** @class */ (function (_super) {\r\n    __extends(StandardPointerHandler, _super);\r\n    function StandardPointerHandler(context, viewController, viewHelper) {\r\n        var _this = _super.call(this, context, viewController, viewHelper) || this;\r\n        _this.viewHelper.linesContentDomNode.style.touchAction = 'none';\r\n        // TODO@Alex -> this expects that the view is added in 100 ms, might not be the case\r\n        // This handler should be added when the dom node is in the dom tree\r\n        _this._installGestureHandlerTimeout = window.setTimeout(function () {\r\n            _this._installGestureHandlerTimeout = -1;\r\n            // TODO@Alex: replace the usage of MSGesture here with something that works across all browsers\r\n            if (window.MSGesture) {\r\n                var touchGesture_2 = new MSGesture();\r\n                var penGesture_2 = new MSGesture();\r\n                touchGesture_2.target = _this.viewHelper.linesContentDomNode;\r\n                penGesture_2.target = _this.viewHelper.linesContentDomNode;\r\n                _this.viewHelper.linesContentDomNode.addEventListener('pointerdown', function (e) {\r\n                    var pointerType = e.pointerType;\r\n                    if (pointerType === 'mouse') {\r\n                        _this._lastPointerType = 'mouse';\r\n                        return;\r\n                    }\r\n                    else if (pointerType === 'touch') {\r\n                        _this._lastPointerType = 'touch';\r\n                        touchGesture_2.addPointer(e.pointerId);\r\n                    }\r\n                    else {\r\n                        _this._lastPointerType = 'pen';\r\n                        penGesture_2.addPointer(e.pointerId);\r\n                    }\r\n                });\r\n                _this._register(dom.addDisposableThrottledListener(_this.viewHelper.linesContentDomNode, 'MSGestureChange', function (e) { return _this._onGestureChange(e); }, gestureChangeEventMerger));\r\n                _this._register(dom.addDisposableListener(_this.viewHelper.linesContentDomNode, 'MSGestureTap', function (e) { return _this._onCaptureGestureTap(e); }, true));\r\n            }\r\n        }, 100);\r\n        _this._lastPointerType = 'mouse';\r\n        return _this;\r\n    }\r\n    StandardPointerHandler.prototype._onMouseDown = function (e) {\r\n        if (this._lastPointerType === 'mouse') {\r\n            _super.prototype._onMouseDown.call(this, e);\r\n        }\r\n    };\r\n    StandardPointerHandler.prototype._onCaptureGestureTap = function (rawEvent) {\r\n        var _this = this;\r\n        var e = new EditorMouseEvent(rawEvent, this.viewHelper.viewDomNode);\r\n        var t = this._createMouseTarget(e, false);\r\n        if (t.position) {\r\n            this.viewController.moveTo(t.position);\r\n        }\r\n        // IE does not want to focus when coming in from the browser's address bar\r\n        if (e.browserEvent.fromElement) {\r\n            e.preventDefault();\r\n            this.viewHelper.focusTextArea();\r\n        }\r\n        else {\r\n            // TODO@Alex -> cancel this is focus is lost\r\n            setTimeout(function () {\r\n                _this.viewHelper.focusTextArea();\r\n            });\r\n        }\r\n    };\r\n    StandardPointerHandler.prototype._onGestureChange = function (e) {\r\n        this._context.viewLayout.deltaScrollNow(-e.translationX, -e.translationY);\r\n    };\r\n    StandardPointerHandler.prototype.dispose = function () {\r\n        window.clearTimeout(this._installGestureHandlerTimeout);\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    return StandardPointerHandler;\r\n}(MouseHandler));\r\n/**\r\n * Currently only tested on iOS 13/ iPadOS.\r\n */\r\nvar PointerEventHandler = /** @class */ (function (_super) {\r\n    __extends(PointerEventHandler, _super);\r\n    function PointerEventHandler(context, viewController, viewHelper) {\r\n        var _this = _super.call(this, context, viewController, viewHelper) || this;\r\n        _this._register(Gesture.addTarget(_this.viewHelper.linesContentDomNode));\r\n        _this._register(dom.addDisposableListener(_this.viewHelper.linesContentDomNode, EventType.Tap, function (e) { return _this.onTap(e); }));\r\n        _this._register(dom.addDisposableListener(_this.viewHelper.linesContentDomNode, EventType.Change, function (e) { return _this.onChange(e); }));\r\n        _this._register(dom.addDisposableListener(_this.viewHelper.linesContentDomNode, EventType.Contextmenu, function (e) { return _this._onContextMenu(new EditorMouseEvent(e, _this.viewHelper.viewDomNode), false); }));\r\n        _this._lastPointerType = 'mouse';\r\n        _this._register(dom.addDisposableListener(_this.viewHelper.linesContentDomNode, 'pointerdown', function (e) {\r\n            var pointerType = e.pointerType;\r\n            if (pointerType === 'mouse') {\r\n                _this._lastPointerType = 'mouse';\r\n                return;\r\n            }\r\n            else if (pointerType === 'touch') {\r\n                _this._lastPointerType = 'touch';\r\n            }\r\n            else {\r\n                _this._lastPointerType = 'pen';\r\n            }\r\n        }));\r\n        // PonterEvents\r\n        var pointerEvents = new EditorPointerEventFactory(_this.viewHelper.viewDomNode);\r\n        _this._register(pointerEvents.onPointerMoveThrottled(_this.viewHelper.viewDomNode, function (e) { return _this._onMouseMove(e); }, createMouseMoveEventMerger(_this.mouseTargetFactory), MouseHandler.MOUSE_MOVE_MINIMUM_TIME));\r\n        _this._register(pointerEvents.onPointerUp(_this.viewHelper.viewDomNode, function (e) { return _this._onMouseUp(e); }));\r\n        _this._register(pointerEvents.onPointerLeave(_this.viewHelper.viewDomNode, function (e) { return _this._onMouseLeave(e); }));\r\n        _this._register(pointerEvents.onPointerDown(_this.viewHelper.viewDomNode, function (e) { return _this._onMouseDown(e); }));\r\n        return _this;\r\n    }\r\n    PointerEventHandler.prototype.onTap = function (event) {\r\n        if (!event.initialTarget || !this.viewHelper.linesContentDomNode.contains(event.initialTarget)) {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        this.viewHelper.focusTextArea();\r\n        var target = this._createMouseTarget(new EditorMouseEvent(event, this.viewHelper.viewDomNode), false);\r\n        if (target.position) {\r\n            // this.viewController.moveTo(target.position);\r\n            this.viewController.dispatchMouse({\r\n                position: target.position,\r\n                mouseColumn: target.position.column,\r\n                startedOnLineNumbers: false,\r\n                mouseDownCount: event.tapCount,\r\n                inSelectionMode: false,\r\n                altKey: false,\r\n                ctrlKey: false,\r\n                metaKey: false,\r\n                shiftKey: false,\r\n                leftButton: false,\r\n                middleButton: false,\r\n            });\r\n        }\r\n    };\r\n    PointerEventHandler.prototype.onChange = function (e) {\r\n        if (this._lastPointerType === 'touch') {\r\n            this._context.viewLayout.deltaScrollNow(-e.translationX, -e.translationY);\r\n        }\r\n    };\r\n    PointerEventHandler.prototype._onMouseDown = function (e) {\r\n        if (e.target && this.viewHelper.linesContentDomNode.contains(e.target) && this._lastPointerType === 'touch') {\r\n            return;\r\n        }\r\n        _super.prototype._onMouseDown.call(this, e);\r\n    };\r\n    return PointerEventHandler;\r\n}(MouseHandler));\r\nexport { PointerEventHandler };\r\nvar TouchHandler = /** @class */ (function (_super) {\r\n    __extends(TouchHandler, _super);\r\n    function TouchHandler(context, viewController, viewHelper) {\r\n        var _this = _super.call(this, context, viewController, viewHelper) || this;\r\n        _this._register(Gesture.addTarget(_this.viewHelper.linesContentDomNode));\r\n        _this._register(dom.addDisposableListener(_this.viewHelper.linesContentDomNode, EventType.Tap, function (e) { return _this.onTap(e); }));\r\n        _this._register(dom.addDisposableListener(_this.viewHelper.linesContentDomNode, EventType.Change, function (e) { return _this.onChange(e); }));\r\n        _this._register(dom.addDisposableListener(_this.viewHelper.linesContentDomNode, EventType.Contextmenu, function (e) { return _this._onContextMenu(new EditorMouseEvent(e, _this.viewHelper.viewDomNode), false); }));\r\n        return _this;\r\n    }\r\n    TouchHandler.prototype.onTap = function (event) {\r\n        event.preventDefault();\r\n        this.viewHelper.focusTextArea();\r\n        var target = this._createMouseTarget(new EditorMouseEvent(event, this.viewHelper.viewDomNode), false);\r\n        if (target.position) {\r\n            this.viewController.moveTo(target.position);\r\n        }\r\n    };\r\n    TouchHandler.prototype.onChange = function (e) {\r\n        this._context.viewLayout.deltaScrollNow(-e.translationX, -e.translationY);\r\n    };\r\n    return TouchHandler;\r\n}(MouseHandler));\r\nvar PointerHandler = /** @class */ (function (_super) {\r\n    __extends(PointerHandler, _super);\r\n    function PointerHandler(context, viewController, viewHelper) {\r\n        var _this = _super.call(this) || this;\r\n        if (window.navigator.msPointerEnabled) {\r\n            _this.handler = _this._register(new MsPointerHandler(context, viewController, viewHelper));\r\n        }\r\n        else if ((platform.isIOS && BrowserFeatures.pointerEvents)) {\r\n            _this.handler = _this._register(new PointerEventHandler(context, viewController, viewHelper));\r\n        }\r\n        else if (window.TouchEvent) {\r\n            _this.handler = _this._register(new TouchHandler(context, viewController, viewHelper));\r\n        }\r\n        else if (window.navigator.pointerEnabled || window.PointerEvent) {\r\n            _this.handler = _this._register(new StandardPointerHandler(context, viewController, viewHelper));\r\n        }\r\n        else {\r\n            _this.handler = _this._register(new MouseHandler(context, viewController, viewHelper));\r\n        }\r\n        return _this;\r\n    }\r\n    PointerHandler.prototype.getTargetAtClientPoint = function (clientX, clientY) {\r\n        return this.handler.getTargetAtClientPoint(clientX, clientY);\r\n    };\r\n    return PointerHandler;\r\n}(Disposable));\r\nexport { PointerHandler };\r\n"]},"metadata":{},"sourceType":"module"}