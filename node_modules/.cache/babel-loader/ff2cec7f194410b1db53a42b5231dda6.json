{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { KeyCodeUtils } from '../../../base/common/keyCodes.js';\nimport { BaseResolvedKeybinding } from './baseResolvedKeybinding.js';\n/**\r\n * Do not instantiate. Use KeybindingService to get a ResolvedKeybinding seeded with information about the current kb layout.\r\n */\n\nvar USLayoutResolvedKeybinding =\n/** @class */\nfunction (_super) {\n  __extends(USLayoutResolvedKeybinding, _super);\n\n  function USLayoutResolvedKeybinding(actual, os) {\n    return _super.call(this, os, actual.parts) || this;\n  }\n\n  USLayoutResolvedKeybinding.prototype._keyCodeToUILabel = function (keyCode) {\n    if (this._os === 2\n    /* Macintosh */\n    ) {\n        switch (keyCode) {\n          case 15\n          /* LeftArrow */\n          :\n            return '←';\n\n          case 16\n          /* UpArrow */\n          :\n            return '↑';\n\n          case 17\n          /* RightArrow */\n          :\n            return '→';\n\n          case 18\n          /* DownArrow */\n          :\n            return '↓';\n        }\n      }\n\n    return KeyCodeUtils.toString(keyCode);\n  };\n\n  USLayoutResolvedKeybinding.prototype._getLabel = function (keybinding) {\n    if (keybinding.isDuplicateModifierCase()) {\n      return '';\n    }\n\n    return this._keyCodeToUILabel(keybinding.keyCode);\n  };\n\n  USLayoutResolvedKeybinding.prototype._getAriaLabel = function (keybinding) {\n    if (keybinding.isDuplicateModifierCase()) {\n      return '';\n    }\n\n    return KeyCodeUtils.toString(keybinding.keyCode);\n  };\n\n  USLayoutResolvedKeybinding.prototype._getDispatchPart = function (keybinding) {\n    return USLayoutResolvedKeybinding.getDispatchStr(keybinding);\n  };\n\n  USLayoutResolvedKeybinding.getDispatchStr = function (keybinding) {\n    if (keybinding.isModifierKey()) {\n      return null;\n    }\n\n    var result = '';\n\n    if (keybinding.ctrlKey) {\n      result += 'ctrl+';\n    }\n\n    if (keybinding.shiftKey) {\n      result += 'shift+';\n    }\n\n    if (keybinding.altKey) {\n      result += 'alt+';\n    }\n\n    if (keybinding.metaKey) {\n      result += 'meta+';\n    }\n\n    result += KeyCodeUtils.toString(keybinding.keyCode);\n    return result;\n  };\n\n  return USLayoutResolvedKeybinding;\n}(BaseResolvedKeybinding);\n\nexport { USLayoutResolvedKeybinding };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/platform/keybinding/common/usLayoutResolvedKeybinding.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","KeyCodeUtils","BaseResolvedKeybinding","USLayoutResolvedKeybinding","_super","actual","os","call","parts","_keyCodeToUILabel","keyCode","_os","toString","_getLabel","keybinding","isDuplicateModifierCase","_getAriaLabel","_getDispatchPart","getDispatchStr","isModifierKey","result","ctrlKey","shiftKey","altKey","metaKey"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { KeyCodeUtils } from '../../../base/common/keyCodes.js';\r\nimport { BaseResolvedKeybinding } from './baseResolvedKeybinding.js';\r\n/**\r\n * Do not instantiate. Use KeybindingService to get a ResolvedKeybinding seeded with information about the current kb layout.\r\n */\r\nvar USLayoutResolvedKeybinding = /** @class */ (function (_super) {\r\n    __extends(USLayoutResolvedKeybinding, _super);\r\n    function USLayoutResolvedKeybinding(actual, os) {\r\n        return _super.call(this, os, actual.parts) || this;\r\n    }\r\n    USLayoutResolvedKeybinding.prototype._keyCodeToUILabel = function (keyCode) {\r\n        if (this._os === 2 /* Macintosh */) {\r\n            switch (keyCode) {\r\n                case 15 /* LeftArrow */:\r\n                    return '←';\r\n                case 16 /* UpArrow */:\r\n                    return '↑';\r\n                case 17 /* RightArrow */:\r\n                    return '→';\r\n                case 18 /* DownArrow */:\r\n                    return '↓';\r\n            }\r\n        }\r\n        return KeyCodeUtils.toString(keyCode);\r\n    };\r\n    USLayoutResolvedKeybinding.prototype._getLabel = function (keybinding) {\r\n        if (keybinding.isDuplicateModifierCase()) {\r\n            return '';\r\n        }\r\n        return this._keyCodeToUILabel(keybinding.keyCode);\r\n    };\r\n    USLayoutResolvedKeybinding.prototype._getAriaLabel = function (keybinding) {\r\n        if (keybinding.isDuplicateModifierCase()) {\r\n            return '';\r\n        }\r\n        return KeyCodeUtils.toString(keybinding.keyCode);\r\n    };\r\n    USLayoutResolvedKeybinding.prototype._getDispatchPart = function (keybinding) {\r\n        return USLayoutResolvedKeybinding.getDispatchStr(keybinding);\r\n    };\r\n    USLayoutResolvedKeybinding.getDispatchStr = function (keybinding) {\r\n        if (keybinding.isModifierKey()) {\r\n            return null;\r\n        }\r\n        var result = '';\r\n        if (keybinding.ctrlKey) {\r\n            result += 'ctrl+';\r\n        }\r\n        if (keybinding.shiftKey) {\r\n            result += 'shift+';\r\n        }\r\n        if (keybinding.altKey) {\r\n            result += 'alt+';\r\n        }\r\n        if (keybinding.metaKey) {\r\n            result += 'meta+';\r\n        }\r\n        result += KeyCodeUtils.toString(keybinding.keyCode);\r\n        return result;\r\n    };\r\n    return USLayoutResolvedKeybinding;\r\n}(BaseResolvedKeybinding));\r\nexport { USLayoutResolvedKeybinding };\r\n"]},"metadata":{},"sourceType":"module"}