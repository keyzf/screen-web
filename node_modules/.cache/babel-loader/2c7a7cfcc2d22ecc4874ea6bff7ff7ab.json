{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar ViewEventDispatcher =\n/** @class */\nfunction () {\n  function ViewEventDispatcher(eventHandlerGateKeeper) {\n    this._eventHandlerGateKeeper = eventHandlerGateKeeper;\n    this._eventHandlers = [];\n    this._eventQueue = null;\n    this._isConsumingQueue = false;\n  }\n\n  ViewEventDispatcher.prototype.addEventHandler = function (eventHandler) {\n    for (var i = 0, len = this._eventHandlers.length; i < len; i++) {\n      if (this._eventHandlers[i] === eventHandler) {\n        console.warn('Detected duplicate listener in ViewEventDispatcher', eventHandler);\n      }\n    }\n\n    this._eventHandlers.push(eventHandler);\n  };\n\n  ViewEventDispatcher.prototype.removeEventHandler = function (eventHandler) {\n    for (var i = 0; i < this._eventHandlers.length; i++) {\n      if (this._eventHandlers[i] === eventHandler) {\n        this._eventHandlers.splice(i, 1);\n\n        break;\n      }\n    }\n  };\n\n  ViewEventDispatcher.prototype.emit = function (event) {\n    if (this._eventQueue) {\n      this._eventQueue.push(event);\n    } else {\n      this._eventQueue = [event];\n    }\n\n    if (!this._isConsumingQueue) {\n      this.consumeQueue();\n    }\n  };\n\n  ViewEventDispatcher.prototype.emitMany = function (events) {\n    if (this._eventQueue) {\n      this._eventQueue = this._eventQueue.concat(events);\n    } else {\n      this._eventQueue = events;\n    }\n\n    if (!this._isConsumingQueue) {\n      this.consumeQueue();\n    }\n  };\n\n  ViewEventDispatcher.prototype.consumeQueue = function () {\n    var _this = this;\n\n    this._eventHandlerGateKeeper(function () {\n      try {\n        _this._isConsumingQueue = true;\n\n        _this._doConsumeQueue();\n      } finally {\n        _this._isConsumingQueue = false;\n      }\n    });\n  };\n\n  ViewEventDispatcher.prototype._doConsumeQueue = function () {\n    while (this._eventQueue) {\n      // Empty event queue, as events might come in while sending these off\n      var events = this._eventQueue;\n      this._eventQueue = null; // Use a clone of the event handlers list, as they might remove themselves\n\n      var eventHandlers = this._eventHandlers.slice(0);\n\n      for (var i = 0, len = eventHandlers.length; i < len; i++) {\n        eventHandlers[i].handleEvents(events);\n      }\n    }\n  };\n\n  return ViewEventDispatcher;\n}();\n\nexport { ViewEventDispatcher };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/common/view/viewEventDispatcher.js"],"names":["ViewEventDispatcher","eventHandlerGateKeeper","_eventHandlerGateKeeper","_eventHandlers","_eventQueue","_isConsumingQueue","prototype","addEventHandler","eventHandler","i","len","length","console","warn","push","removeEventHandler","splice","emit","event","consumeQueue","emitMany","events","concat","_this","_doConsumeQueue","eventHandlers","slice","handleEvents"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar ViewEventDispatcher = /** @class */ (function () {\r\n    function ViewEventDispatcher(eventHandlerGateKeeper) {\r\n        this._eventHandlerGateKeeper = eventHandlerGateKeeper;\r\n        this._eventHandlers = [];\r\n        this._eventQueue = null;\r\n        this._isConsumingQueue = false;\r\n    }\r\n    ViewEventDispatcher.prototype.addEventHandler = function (eventHandler) {\r\n        for (var i = 0, len = this._eventHandlers.length; i < len; i++) {\r\n            if (this._eventHandlers[i] === eventHandler) {\r\n                console.warn('Detected duplicate listener in ViewEventDispatcher', eventHandler);\r\n            }\r\n        }\r\n        this._eventHandlers.push(eventHandler);\r\n    };\r\n    ViewEventDispatcher.prototype.removeEventHandler = function (eventHandler) {\r\n        for (var i = 0; i < this._eventHandlers.length; i++) {\r\n            if (this._eventHandlers[i] === eventHandler) {\r\n                this._eventHandlers.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    };\r\n    ViewEventDispatcher.prototype.emit = function (event) {\r\n        if (this._eventQueue) {\r\n            this._eventQueue.push(event);\r\n        }\r\n        else {\r\n            this._eventQueue = [event];\r\n        }\r\n        if (!this._isConsumingQueue) {\r\n            this.consumeQueue();\r\n        }\r\n    };\r\n    ViewEventDispatcher.prototype.emitMany = function (events) {\r\n        if (this._eventQueue) {\r\n            this._eventQueue = this._eventQueue.concat(events);\r\n        }\r\n        else {\r\n            this._eventQueue = events;\r\n        }\r\n        if (!this._isConsumingQueue) {\r\n            this.consumeQueue();\r\n        }\r\n    };\r\n    ViewEventDispatcher.prototype.consumeQueue = function () {\r\n        var _this = this;\r\n        this._eventHandlerGateKeeper(function () {\r\n            try {\r\n                _this._isConsumingQueue = true;\r\n                _this._doConsumeQueue();\r\n            }\r\n            finally {\r\n                _this._isConsumingQueue = false;\r\n            }\r\n        });\r\n    };\r\n    ViewEventDispatcher.prototype._doConsumeQueue = function () {\r\n        while (this._eventQueue) {\r\n            // Empty event queue, as events might come in while sending these off\r\n            var events = this._eventQueue;\r\n            this._eventQueue = null;\r\n            // Use a clone of the event handlers list, as they might remove themselves\r\n            var eventHandlers = this._eventHandlers.slice(0);\r\n            for (var i = 0, len = eventHandlers.length; i < len; i++) {\r\n                eventHandlers[i].handleEvents(events);\r\n            }\r\n        }\r\n    };\r\n    return ViewEventDispatcher;\r\n}());\r\nexport { ViewEventDispatcher };\r\n"]},"metadata":{},"sourceType":"module"}