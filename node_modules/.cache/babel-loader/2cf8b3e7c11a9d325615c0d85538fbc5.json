{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { isNonEmptyArray } from '../../../base/common/arrays.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { CharacterSet } from '../../common/core/characterClassifier.js';\n\nvar CommitCharacterController =\n/** @class */\nfunction () {\n  function CommitCharacterController(editor, widget, accept) {\n    var _this = this;\n\n    this._disposables = new DisposableStore();\n\n    this._disposables.add(widget.onDidShow(function () {\n      return _this._onItem(widget.getFocusedItem());\n    }));\n\n    this._disposables.add(widget.onDidFocus(this._onItem, this));\n\n    this._disposables.add(widget.onDidHide(this.reset, this));\n\n    this._disposables.add(editor.onWillType(function (text) {\n      if (_this._active && !widget.isFrozen()) {\n        var ch = text.charCodeAt(text.length - 1);\n\n        if (_this._active.acceptCharacters.has(ch) && editor.getOption(0\n        /* acceptSuggestionOnCommitCharacter */\n        )) {\n          accept(_this._active.item);\n        }\n      }\n    }));\n  }\n\n  CommitCharacterController.prototype._onItem = function (selected) {\n    if (!selected || !isNonEmptyArray(selected.item.completion.commitCharacters)) {\n      // no item or no commit characters\n      this.reset();\n      return;\n    }\n\n    if (this._active && this._active.item.item === selected.item) {\n      // still the same item\n      return;\n    } // keep item and its commit characters\n\n\n    var acceptCharacters = new CharacterSet();\n\n    for (var _i = 0, _a = selected.item.completion.commitCharacters; _i < _a.length; _i++) {\n      var ch = _a[_i];\n\n      if (ch.length > 0) {\n        acceptCharacters.add(ch.charCodeAt(0));\n      }\n    }\n\n    this._active = {\n      acceptCharacters: acceptCharacters,\n      item: selected\n    };\n  };\n\n  CommitCharacterController.prototype.reset = function () {\n    this._active = undefined;\n  };\n\n  CommitCharacterController.prototype.dispose = function () {\n    this._disposables.dispose();\n  };\n\n  return CommitCharacterController;\n}();\n\nexport { CommitCharacterController };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/contrib/suggest/suggestCommitCharacters.js"],"names":["isNonEmptyArray","DisposableStore","CharacterSet","CommitCharacterController","editor","widget","accept","_this","_disposables","add","onDidShow","_onItem","getFocusedItem","onDidFocus","onDidHide","reset","onWillType","text","_active","isFrozen","ch","charCodeAt","length","acceptCharacters","has","getOption","item","prototype","selected","completion","commitCharacters","_i","_a","undefined","dispose"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { isNonEmptyArray } from '../../../base/common/arrays.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { CharacterSet } from '../../common/core/characterClassifier.js';\r\nvar CommitCharacterController = /** @class */ (function () {\r\n    function CommitCharacterController(editor, widget, accept) {\r\n        var _this = this;\r\n        this._disposables = new DisposableStore();\r\n        this._disposables.add(widget.onDidShow(function () { return _this._onItem(widget.getFocusedItem()); }));\r\n        this._disposables.add(widget.onDidFocus(this._onItem, this));\r\n        this._disposables.add(widget.onDidHide(this.reset, this));\r\n        this._disposables.add(editor.onWillType(function (text) {\r\n            if (_this._active && !widget.isFrozen()) {\r\n                var ch = text.charCodeAt(text.length - 1);\r\n                if (_this._active.acceptCharacters.has(ch) && editor.getOption(0 /* acceptSuggestionOnCommitCharacter */)) {\r\n                    accept(_this._active.item);\r\n                }\r\n            }\r\n        }));\r\n    }\r\n    CommitCharacterController.prototype._onItem = function (selected) {\r\n        if (!selected || !isNonEmptyArray(selected.item.completion.commitCharacters)) {\r\n            // no item or no commit characters\r\n            this.reset();\r\n            return;\r\n        }\r\n        if (this._active && this._active.item.item === selected.item) {\r\n            // still the same item\r\n            return;\r\n        }\r\n        // keep item and its commit characters\r\n        var acceptCharacters = new CharacterSet();\r\n        for (var _i = 0, _a = selected.item.completion.commitCharacters; _i < _a.length; _i++) {\r\n            var ch = _a[_i];\r\n            if (ch.length > 0) {\r\n                acceptCharacters.add(ch.charCodeAt(0));\r\n            }\r\n        }\r\n        this._active = { acceptCharacters: acceptCharacters, item: selected };\r\n    };\r\n    CommitCharacterController.prototype.reset = function () {\r\n        this._active = undefined;\r\n    };\r\n    CommitCharacterController.prototype.dispose = function () {\r\n        this._disposables.dispose();\r\n    };\r\n    return CommitCharacterController;\r\n}());\r\nexport { CommitCharacterController };\r\n"]},"metadata":{},"sourceType":"module"}