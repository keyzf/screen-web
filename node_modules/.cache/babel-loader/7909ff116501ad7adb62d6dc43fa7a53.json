{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { transformErrorForSerialization } from '../errors.js';\nimport { Disposable } from '../lifecycle.js';\nimport { isWeb } from '../platform.js';\nimport * as types from '../types.js';\nvar INITIALIZE = '$initialize';\nvar webWorkerWarningLogged = false;\nexport function logOnceWebWorkerWarning(err) {\n  if (!isWeb) {\n    // running tests\n    return;\n  }\n\n  if (!webWorkerWarningLogged) {\n    webWorkerWarningLogged = true;\n    console.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/Microsoft/monaco-editor#faq');\n  }\n\n  console.warn(err.message);\n}\n\nvar SimpleWorkerProtocol =\n/** @class */\nfunction () {\n  function SimpleWorkerProtocol(handler) {\n    this._workerId = -1;\n    this._handler = handler;\n    this._lastSentReq = 0;\n    this._pendingReplies = Object.create(null);\n  }\n\n  SimpleWorkerProtocol.prototype.setWorkerId = function (workerId) {\n    this._workerId = workerId;\n  };\n\n  SimpleWorkerProtocol.prototype.sendMessage = function (method, args) {\n    var _this = this;\n\n    var req = String(++this._lastSentReq);\n    return new Promise(function (resolve, reject) {\n      _this._pendingReplies[req] = {\n        resolve: resolve,\n        reject: reject\n      };\n\n      _this._send({\n        vsWorker: _this._workerId,\n        req: req,\n        method: method,\n        args: args\n      });\n    });\n  };\n\n  SimpleWorkerProtocol.prototype.handleMessage = function (message) {\n    if (!message || !message.vsWorker) {\n      return;\n    }\n\n    if (this._workerId !== -1 && message.vsWorker !== this._workerId) {\n      return;\n    }\n\n    this._handleMessage(message);\n  };\n\n  SimpleWorkerProtocol.prototype._handleMessage = function (msg) {\n    var _this = this;\n\n    if (msg.seq) {\n      var replyMessage = msg;\n\n      if (!this._pendingReplies[replyMessage.seq]) {\n        console.warn('Got reply to unknown seq');\n        return;\n      }\n\n      var reply = this._pendingReplies[replyMessage.seq];\n      delete this._pendingReplies[replyMessage.seq];\n\n      if (replyMessage.err) {\n        var err = replyMessage.err;\n\n        if (replyMessage.err.$isError) {\n          err = new Error();\n          err.name = replyMessage.err.name;\n          err.message = replyMessage.err.message;\n          err.stack = replyMessage.err.stack;\n        }\n\n        reply.reject(err);\n        return;\n      }\n\n      reply.resolve(replyMessage.res);\n      return;\n    }\n\n    var requestMessage = msg;\n    var req = requestMessage.req;\n\n    var result = this._handler.handleMessage(requestMessage.method, requestMessage.args);\n\n    result.then(function (r) {\n      _this._send({\n        vsWorker: _this._workerId,\n        seq: req,\n        res: r,\n        err: undefined\n      });\n    }, function (e) {\n      if (e.detail instanceof Error) {\n        // Loading errors have a detail property that points to the actual error\n        e.detail = transformErrorForSerialization(e.detail);\n      }\n\n      _this._send({\n        vsWorker: _this._workerId,\n        seq: req,\n        res: undefined,\n        err: transformErrorForSerialization(e)\n      });\n    });\n  };\n\n  SimpleWorkerProtocol.prototype._send = function (msg) {\n    var transfer = [];\n\n    if (msg.req) {\n      var m = msg;\n\n      for (var i = 0; i < m.args.length; i++) {\n        if (m.args[i] instanceof ArrayBuffer) {\n          transfer.push(m.args[i]);\n        }\n      }\n    } else {\n      var m = msg;\n\n      if (m.res instanceof ArrayBuffer) {\n        transfer.push(m.res);\n      }\n    }\n\n    this._handler.sendMessage(msg, transfer);\n  };\n\n  return SimpleWorkerProtocol;\n}();\n/**\r\n * Main thread side\r\n */\n\n\nvar SimpleWorkerClient =\n/** @class */\nfunction (_super) {\n  __extends(SimpleWorkerClient, _super);\n\n  function SimpleWorkerClient(workerFactory, moduleId, host) {\n    var _this = _super.call(this) || this;\n\n    var lazyProxyReject = null;\n    _this._worker = _this._register(workerFactory.create('vs/base/common/worker/simpleWorker', function (msg) {\n      _this._protocol.handleMessage(msg);\n    }, function (err) {\n      // in Firefox, web workers fail lazily :(\n      // we will reject the proxy\n      if (lazyProxyReject) {\n        lazyProxyReject(err);\n      }\n    }));\n    _this._protocol = new SimpleWorkerProtocol({\n      sendMessage: function (msg, transfer) {\n        _this._worker.postMessage(msg, transfer);\n      },\n      handleMessage: function (method, args) {\n        if (typeof host[method] !== 'function') {\n          return Promise.reject(new Error('Missing method ' + method + ' on main thread host.'));\n        }\n\n        try {\n          return Promise.resolve(host[method].apply(host, args));\n        } catch (e) {\n          return Promise.reject(e);\n        }\n      }\n    });\n\n    _this._protocol.setWorkerId(_this._worker.getId()); // Gather loader configuration\n\n\n    var loaderConfiguration = null;\n\n    if (typeof self.require !== 'undefined' && typeof self.require.getConfig === 'function') {\n      // Get the configuration from the Monaco AMD Loader\n      loaderConfiguration = self.require.getConfig();\n    } else if (typeof self.requirejs !== 'undefined') {\n      // Get the configuration from requirejs\n      loaderConfiguration = self.requirejs.s.contexts._.config;\n    }\n\n    var hostMethods = types.getAllMethodNames(host); // Send initialize message\n\n    _this._onModuleLoaded = _this._protocol.sendMessage(INITIALIZE, [_this._worker.getId(), JSON.parse(JSON.stringify(loaderConfiguration)), moduleId, hostMethods]); // Create proxy to loaded code\n\n    var proxyMethodRequest = function (method, args) {\n      return _this._request(method, args);\n    };\n\n    _this._lazyProxy = new Promise(function (resolve, reject) {\n      lazyProxyReject = reject;\n\n      _this._onModuleLoaded.then(function (availableMethods) {\n        resolve(types.createProxyObject(availableMethods, proxyMethodRequest));\n      }, function (e) {\n        reject(e);\n\n        _this._onError('Worker failed to load ' + moduleId, e);\n      });\n    });\n    return _this;\n  }\n\n  SimpleWorkerClient.prototype.getProxyObject = function () {\n    return this._lazyProxy;\n  };\n\n  SimpleWorkerClient.prototype._request = function (method, args) {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      _this._onModuleLoaded.then(function () {\n        _this._protocol.sendMessage(method, args).then(resolve, reject);\n      }, reject);\n    });\n  };\n\n  SimpleWorkerClient.prototype._onError = function (message, error) {\n    console.error(message);\n    console.info(error);\n  };\n\n  return SimpleWorkerClient;\n}(Disposable);\n\nexport { SimpleWorkerClient };\n/**\r\n * Worker side\r\n */\n\nvar SimpleWorkerServer =\n/** @class */\nfunction () {\n  function SimpleWorkerServer(postMessage, requestHandlerFactory) {\n    var _this = this;\n\n    this._requestHandlerFactory = requestHandlerFactory;\n    this._requestHandler = null;\n    this._protocol = new SimpleWorkerProtocol({\n      sendMessage: function (msg, transfer) {\n        postMessage(msg, transfer);\n      },\n      handleMessage: function (method, args) {\n        return _this._handleMessage(method, args);\n      }\n    });\n  }\n\n  SimpleWorkerServer.prototype.onmessage = function (msg) {\n    this._protocol.handleMessage(msg);\n  };\n\n  SimpleWorkerServer.prototype._handleMessage = function (method, args) {\n    if (method === INITIALIZE) {\n      return this.initialize(args[0], args[1], args[2], args[3]);\n    }\n\n    if (!this._requestHandler || typeof this._requestHandler[method] !== 'function') {\n      return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n    }\n\n    try {\n      return Promise.resolve(this._requestHandler[method].apply(this._requestHandler, args));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  SimpleWorkerServer.prototype.initialize = function (workerId, loaderConfig, moduleId, hostMethods) {\n    var _this = this;\n\n    this._protocol.setWorkerId(workerId);\n\n    var proxyMethodRequest = function (method, args) {\n      return _this._protocol.sendMessage(method, args);\n    };\n\n    var hostProxy = types.createProxyObject(hostMethods, proxyMethodRequest);\n\n    if (this._requestHandlerFactory) {\n      // static request handler\n      this._requestHandler = this._requestHandlerFactory(hostProxy);\n      return Promise.resolve(types.getAllMethodNames(this._requestHandler));\n    }\n\n    if (loaderConfig) {\n      // Remove 'baseUrl', handling it is beyond scope for now\n      if (typeof loaderConfig.baseUrl !== 'undefined') {\n        delete loaderConfig['baseUrl'];\n      }\n\n      if (typeof loaderConfig.paths !== 'undefined') {\n        if (typeof loaderConfig.paths.vs !== 'undefined') {\n          delete loaderConfig.paths['vs'];\n        }\n      } // Since this is in a web worker, enable catching errors\n\n\n      loaderConfig.catchError = true;\n\n      self.require.config(loaderConfig);\n    }\n\n    return new Promise(function (resolve, reject) {\n      // Use the global require to be sure to get the global config\n      self.require([moduleId], function (module) {\n        _this._requestHandler = module.create(hostProxy);\n\n        if (!_this._requestHandler) {\n          reject(new Error(\"No RequestHandler!\"));\n          return;\n        }\n\n        resolve(types.getAllMethodNames(_this._requestHandler));\n      }, reject);\n    });\n  };\n\n  return SimpleWorkerServer;\n}();\n\nexport { SimpleWorkerServer };\n/**\r\n * Called on the worker side\r\n */\n\nexport function create(postMessage) {\n  return new SimpleWorkerServer(postMessage, null);\n}","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/base/common/worker/simpleWorker.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","transformErrorForSerialization","Disposable","isWeb","types","INITIALIZE","webWorkerWarningLogged","logOnceWebWorkerWarning","err","console","warn","message","SimpleWorkerProtocol","handler","_workerId","_handler","_lastSentReq","_pendingReplies","setWorkerId","workerId","sendMessage","method","args","_this","req","String","Promise","resolve","reject","_send","vsWorker","handleMessage","_handleMessage","msg","seq","replyMessage","reply","$isError","Error","name","stack","res","requestMessage","result","then","r","undefined","e","detail","transfer","m","i","length","ArrayBuffer","push","SimpleWorkerClient","_super","workerFactory","moduleId","host","call","lazyProxyReject","_worker","_register","_protocol","postMessage","apply","getId","loaderConfiguration","self","require","getConfig","requirejs","s","contexts","_","config","hostMethods","getAllMethodNames","_onModuleLoaded","JSON","parse","stringify","proxyMethodRequest","_request","_lazyProxy","availableMethods","createProxyObject","_onError","getProxyObject","error","info","SimpleWorkerServer","requestHandlerFactory","_requestHandlerFactory","_requestHandler","onmessage","initialize","loaderConfig","hostProxy","baseUrl","paths","vs","catchError","module"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { transformErrorForSerialization } from '../errors.js';\r\nimport { Disposable } from '../lifecycle.js';\r\nimport { isWeb } from '../platform.js';\r\nimport * as types from '../types.js';\r\nvar INITIALIZE = '$initialize';\r\nvar webWorkerWarningLogged = false;\r\nexport function logOnceWebWorkerWarning(err) {\r\n    if (!isWeb) {\r\n        // running tests\r\n        return;\r\n    }\r\n    if (!webWorkerWarningLogged) {\r\n        webWorkerWarningLogged = true;\r\n        console.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/Microsoft/monaco-editor#faq');\r\n    }\r\n    console.warn(err.message);\r\n}\r\nvar SimpleWorkerProtocol = /** @class */ (function () {\r\n    function SimpleWorkerProtocol(handler) {\r\n        this._workerId = -1;\r\n        this._handler = handler;\r\n        this._lastSentReq = 0;\r\n        this._pendingReplies = Object.create(null);\r\n    }\r\n    SimpleWorkerProtocol.prototype.setWorkerId = function (workerId) {\r\n        this._workerId = workerId;\r\n    };\r\n    SimpleWorkerProtocol.prototype.sendMessage = function (method, args) {\r\n        var _this = this;\r\n        var req = String(++this._lastSentReq);\r\n        return new Promise(function (resolve, reject) {\r\n            _this._pendingReplies[req] = {\r\n                resolve: resolve,\r\n                reject: reject\r\n            };\r\n            _this._send({\r\n                vsWorker: _this._workerId,\r\n                req: req,\r\n                method: method,\r\n                args: args\r\n            });\r\n        });\r\n    };\r\n    SimpleWorkerProtocol.prototype.handleMessage = function (message) {\r\n        if (!message || !message.vsWorker) {\r\n            return;\r\n        }\r\n        if (this._workerId !== -1 && message.vsWorker !== this._workerId) {\r\n            return;\r\n        }\r\n        this._handleMessage(message);\r\n    };\r\n    SimpleWorkerProtocol.prototype._handleMessage = function (msg) {\r\n        var _this = this;\r\n        if (msg.seq) {\r\n            var replyMessage = msg;\r\n            if (!this._pendingReplies[replyMessage.seq]) {\r\n                console.warn('Got reply to unknown seq');\r\n                return;\r\n            }\r\n            var reply = this._pendingReplies[replyMessage.seq];\r\n            delete this._pendingReplies[replyMessage.seq];\r\n            if (replyMessage.err) {\r\n                var err = replyMessage.err;\r\n                if (replyMessage.err.$isError) {\r\n                    err = new Error();\r\n                    err.name = replyMessage.err.name;\r\n                    err.message = replyMessage.err.message;\r\n                    err.stack = replyMessage.err.stack;\r\n                }\r\n                reply.reject(err);\r\n                return;\r\n            }\r\n            reply.resolve(replyMessage.res);\r\n            return;\r\n        }\r\n        var requestMessage = msg;\r\n        var req = requestMessage.req;\r\n        var result = this._handler.handleMessage(requestMessage.method, requestMessage.args);\r\n        result.then(function (r) {\r\n            _this._send({\r\n                vsWorker: _this._workerId,\r\n                seq: req,\r\n                res: r,\r\n                err: undefined\r\n            });\r\n        }, function (e) {\r\n            if (e.detail instanceof Error) {\r\n                // Loading errors have a detail property that points to the actual error\r\n                e.detail = transformErrorForSerialization(e.detail);\r\n            }\r\n            _this._send({\r\n                vsWorker: _this._workerId,\r\n                seq: req,\r\n                res: undefined,\r\n                err: transformErrorForSerialization(e)\r\n            });\r\n        });\r\n    };\r\n    SimpleWorkerProtocol.prototype._send = function (msg) {\r\n        var transfer = [];\r\n        if (msg.req) {\r\n            var m = msg;\r\n            for (var i = 0; i < m.args.length; i++) {\r\n                if (m.args[i] instanceof ArrayBuffer) {\r\n                    transfer.push(m.args[i]);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var m = msg;\r\n            if (m.res instanceof ArrayBuffer) {\r\n                transfer.push(m.res);\r\n            }\r\n        }\r\n        this._handler.sendMessage(msg, transfer);\r\n    };\r\n    return SimpleWorkerProtocol;\r\n}());\r\n/**\r\n * Main thread side\r\n */\r\nvar SimpleWorkerClient = /** @class */ (function (_super) {\r\n    __extends(SimpleWorkerClient, _super);\r\n    function SimpleWorkerClient(workerFactory, moduleId, host) {\r\n        var _this = _super.call(this) || this;\r\n        var lazyProxyReject = null;\r\n        _this._worker = _this._register(workerFactory.create('vs/base/common/worker/simpleWorker', function (msg) {\r\n            _this._protocol.handleMessage(msg);\r\n        }, function (err) {\r\n            // in Firefox, web workers fail lazily :(\r\n            // we will reject the proxy\r\n            if (lazyProxyReject) {\r\n                lazyProxyReject(err);\r\n            }\r\n        }));\r\n        _this._protocol = new SimpleWorkerProtocol({\r\n            sendMessage: function (msg, transfer) {\r\n                _this._worker.postMessage(msg, transfer);\r\n            },\r\n            handleMessage: function (method, args) {\r\n                if (typeof host[method] !== 'function') {\r\n                    return Promise.reject(new Error('Missing method ' + method + ' on main thread host.'));\r\n                }\r\n                try {\r\n                    return Promise.resolve(host[method].apply(host, args));\r\n                }\r\n                catch (e) {\r\n                    return Promise.reject(e);\r\n                }\r\n            }\r\n        });\r\n        _this._protocol.setWorkerId(_this._worker.getId());\r\n        // Gather loader configuration\r\n        var loaderConfiguration = null;\r\n        if (typeof self.require !== 'undefined' && typeof self.require.getConfig === 'function') {\r\n            // Get the configuration from the Monaco AMD Loader\r\n            loaderConfiguration = self.require.getConfig();\r\n        }\r\n        else if (typeof self.requirejs !== 'undefined') {\r\n            // Get the configuration from requirejs\r\n            loaderConfiguration = self.requirejs.s.contexts._.config;\r\n        }\r\n        var hostMethods = types.getAllMethodNames(host);\r\n        // Send initialize message\r\n        _this._onModuleLoaded = _this._protocol.sendMessage(INITIALIZE, [\r\n            _this._worker.getId(),\r\n            JSON.parse(JSON.stringify(loaderConfiguration)),\r\n            moduleId,\r\n            hostMethods,\r\n        ]);\r\n        // Create proxy to loaded code\r\n        var proxyMethodRequest = function (method, args) {\r\n            return _this._request(method, args);\r\n        };\r\n        _this._lazyProxy = new Promise(function (resolve, reject) {\r\n            lazyProxyReject = reject;\r\n            _this._onModuleLoaded.then(function (availableMethods) {\r\n                resolve(types.createProxyObject(availableMethods, proxyMethodRequest));\r\n            }, function (e) {\r\n                reject(e);\r\n                _this._onError('Worker failed to load ' + moduleId, e);\r\n            });\r\n        });\r\n        return _this;\r\n    }\r\n    SimpleWorkerClient.prototype.getProxyObject = function () {\r\n        return this._lazyProxy;\r\n    };\r\n    SimpleWorkerClient.prototype._request = function (method, args) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this._onModuleLoaded.then(function () {\r\n                _this._protocol.sendMessage(method, args).then(resolve, reject);\r\n            }, reject);\r\n        });\r\n    };\r\n    SimpleWorkerClient.prototype._onError = function (message, error) {\r\n        console.error(message);\r\n        console.info(error);\r\n    };\r\n    return SimpleWorkerClient;\r\n}(Disposable));\r\nexport { SimpleWorkerClient };\r\n/**\r\n * Worker side\r\n */\r\nvar SimpleWorkerServer = /** @class */ (function () {\r\n    function SimpleWorkerServer(postMessage, requestHandlerFactory) {\r\n        var _this = this;\r\n        this._requestHandlerFactory = requestHandlerFactory;\r\n        this._requestHandler = null;\r\n        this._protocol = new SimpleWorkerProtocol({\r\n            sendMessage: function (msg, transfer) {\r\n                postMessage(msg, transfer);\r\n            },\r\n            handleMessage: function (method, args) { return _this._handleMessage(method, args); }\r\n        });\r\n    }\r\n    SimpleWorkerServer.prototype.onmessage = function (msg) {\r\n        this._protocol.handleMessage(msg);\r\n    };\r\n    SimpleWorkerServer.prototype._handleMessage = function (method, args) {\r\n        if (method === INITIALIZE) {\r\n            return this.initialize(args[0], args[1], args[2], args[3]);\r\n        }\r\n        if (!this._requestHandler || typeof this._requestHandler[method] !== 'function') {\r\n            return Promise.reject(new Error('Missing requestHandler or method: ' + method));\r\n        }\r\n        try {\r\n            return Promise.resolve(this._requestHandler[method].apply(this._requestHandler, args));\r\n        }\r\n        catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    };\r\n    SimpleWorkerServer.prototype.initialize = function (workerId, loaderConfig, moduleId, hostMethods) {\r\n        var _this = this;\r\n        this._protocol.setWorkerId(workerId);\r\n        var proxyMethodRequest = function (method, args) {\r\n            return _this._protocol.sendMessage(method, args);\r\n        };\r\n        var hostProxy = types.createProxyObject(hostMethods, proxyMethodRequest);\r\n        if (this._requestHandlerFactory) {\r\n            // static request handler\r\n            this._requestHandler = this._requestHandlerFactory(hostProxy);\r\n            return Promise.resolve(types.getAllMethodNames(this._requestHandler));\r\n        }\r\n        if (loaderConfig) {\r\n            // Remove 'baseUrl', handling it is beyond scope for now\r\n            if (typeof loaderConfig.baseUrl !== 'undefined') {\r\n                delete loaderConfig['baseUrl'];\r\n            }\r\n            if (typeof loaderConfig.paths !== 'undefined') {\r\n                if (typeof loaderConfig.paths.vs !== 'undefined') {\r\n                    delete loaderConfig.paths['vs'];\r\n                }\r\n            }\r\n            // Since this is in a web worker, enable catching errors\r\n            loaderConfig.catchError = true;\r\n            self.require.config(loaderConfig);\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            // Use the global require to be sure to get the global config\r\n            self.require([moduleId], function (module) {\r\n                _this._requestHandler = module.create(hostProxy);\r\n                if (!_this._requestHandler) {\r\n                    reject(new Error(\"No RequestHandler!\"));\r\n                    return;\r\n                }\r\n                resolve(types.getAllMethodNames(_this._requestHandler));\r\n            }, reject);\r\n        });\r\n    };\r\n    return SimpleWorkerServer;\r\n}());\r\nexport { SimpleWorkerServer };\r\n/**\r\n * Called on the worker side\r\n */\r\nexport function create(postMessage) {\r\n    return new SimpleWorkerServer(postMessage, null);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}