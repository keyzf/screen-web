{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as arrays from '../../../base/common/arrays.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { LineTokens } from '../core/lineTokens.js';\nimport { Position } from '../core/position.js';\nimport { TokenizationRegistry } from '../modes.js';\nimport { nullTokenize2 } from '../modes/nullMode.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\nimport { MultilineTokensBuilder, countEOL } from './tokensStore.js';\nimport * as platform from '../../../base/common/platform.js';\n\nvar TokenizationStateStore =\n/** @class */\nfunction () {\n  function TokenizationStateStore() {\n    this._beginState = [];\n    this._valid = [];\n    this._len = 0;\n    this._invalidLineStartIndex = 0;\n  }\n\n  TokenizationStateStore.prototype._reset = function (initialState) {\n    this._beginState = [];\n    this._valid = [];\n    this._len = 0;\n    this._invalidLineStartIndex = 0;\n\n    if (initialState) {\n      this._setBeginState(0, initialState);\n    }\n  };\n\n  TokenizationStateStore.prototype.flush = function (initialState) {\n    this._reset(initialState);\n  };\n\n  Object.defineProperty(TokenizationStateStore.prototype, \"invalidLineStartIndex\", {\n    get: function () {\n      return this._invalidLineStartIndex;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  TokenizationStateStore.prototype._invalidateLine = function (lineIndex) {\n    if (lineIndex < this._len) {\n      this._valid[lineIndex] = false;\n    }\n\n    if (lineIndex < this._invalidLineStartIndex) {\n      this._invalidLineStartIndex = lineIndex;\n    }\n  };\n\n  TokenizationStateStore.prototype._isValid = function (lineIndex) {\n    if (lineIndex < this._len) {\n      return this._valid[lineIndex];\n    }\n\n    return false;\n  };\n\n  TokenizationStateStore.prototype.getBeginState = function (lineIndex) {\n    if (lineIndex < this._len) {\n      return this._beginState[lineIndex];\n    }\n\n    return null;\n  };\n\n  TokenizationStateStore.prototype._ensureLine = function (lineIndex) {\n    while (lineIndex >= this._len) {\n      this._beginState[this._len] = null;\n      this._valid[this._len] = false;\n      this._len++;\n    }\n  };\n\n  TokenizationStateStore.prototype._deleteLines = function (start, deleteCount) {\n    if (deleteCount === 0) {\n      return;\n    }\n\n    if (start + deleteCount > this._len) {\n      deleteCount = this._len - start;\n    }\n\n    this._beginState.splice(start, deleteCount);\n\n    this._valid.splice(start, deleteCount);\n\n    this._len -= deleteCount;\n  };\n\n  TokenizationStateStore.prototype._insertLines = function (insertIndex, insertCount) {\n    if (insertCount === 0) {\n      return;\n    }\n\n    var beginState = [];\n    var valid = [];\n\n    for (var i = 0; i < insertCount; i++) {\n      beginState[i] = null;\n      valid[i] = false;\n    }\n\n    this._beginState = arrays.arrayInsert(this._beginState, insertIndex, beginState);\n    this._valid = arrays.arrayInsert(this._valid, insertIndex, valid);\n    this._len += insertCount;\n  };\n\n  TokenizationStateStore.prototype._setValid = function (lineIndex, valid) {\n    this._ensureLine(lineIndex);\n\n    this._valid[lineIndex] = valid;\n  };\n\n  TokenizationStateStore.prototype._setBeginState = function (lineIndex, beginState) {\n    this._ensureLine(lineIndex);\n\n    this._beginState[lineIndex] = beginState;\n  };\n\n  TokenizationStateStore.prototype.setEndState = function (linesLength, lineIndex, endState) {\n    this._setValid(lineIndex, true);\n\n    this._invalidLineStartIndex = lineIndex + 1; // Check if this was the last line\n\n    if (lineIndex === linesLength - 1) {\n      return;\n    } // Check if the end state has changed\n\n\n    var previousEndState = this.getBeginState(lineIndex + 1);\n\n    if (previousEndState === null || !endState.equals(previousEndState)) {\n      this._setBeginState(lineIndex + 1, endState);\n\n      this._invalidateLine(lineIndex + 1);\n\n      return;\n    } // Perhaps we can skip tokenizing some lines...\n\n\n    var i = lineIndex + 1;\n\n    while (i < linesLength) {\n      if (!this._isValid(i)) {\n        break;\n      }\n\n      i++;\n    }\n\n    this._invalidLineStartIndex = i;\n  };\n\n  TokenizationStateStore.prototype.setFakeTokens = function (lineIndex) {\n    this._setValid(lineIndex, false);\n  }; //#region Editing\n\n\n  TokenizationStateStore.prototype.applyEdits = function (range, eolCount) {\n    var deletingLinesCnt = range.endLineNumber - range.startLineNumber;\n    var insertingLinesCnt = eolCount;\n    var editingLinesCnt = Math.min(deletingLinesCnt, insertingLinesCnt);\n\n    for (var j = editingLinesCnt; j >= 0; j--) {\n      this._invalidateLine(range.startLineNumber + j - 1);\n    }\n\n    this._acceptDeleteRange(range);\n\n    this._acceptInsertText(new Position(range.startLineNumber, range.startColumn), eolCount);\n  };\n\n  TokenizationStateStore.prototype._acceptDeleteRange = function (range) {\n    var firstLineIndex = range.startLineNumber - 1;\n\n    if (firstLineIndex >= this._len) {\n      return;\n    }\n\n    this._deleteLines(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n  };\n\n  TokenizationStateStore.prototype._acceptInsertText = function (position, eolCount) {\n    var lineIndex = position.lineNumber - 1;\n\n    if (lineIndex >= this._len) {\n      return;\n    }\n\n    this._insertLines(position.lineNumber, eolCount);\n  };\n\n  return TokenizationStateStore;\n}();\n\nexport { TokenizationStateStore };\n\nvar TextModelTokenization =\n/** @class */\nfunction (_super) {\n  __extends(TextModelTokenization, _super);\n\n  function TextModelTokenization(textModel) {\n    var _this = _super.call(this) || this;\n\n    _this._isDisposed = false;\n    _this._textModel = textModel;\n    _this._tokenizationStateStore = new TokenizationStateStore();\n    _this._tokenizationSupport = null;\n\n    _this._register(TokenizationRegistry.onDidChange(function (e) {\n      var languageIdentifier = _this._textModel.getLanguageIdentifier();\n\n      if (e.changedLanguages.indexOf(languageIdentifier.language) === -1) {\n        return;\n      }\n\n      _this._resetTokenizationState();\n\n      _this._textModel.clearTokens();\n    }));\n\n    _this._register(_this._textModel.onDidChangeRawContentFast(function (e) {\n      if (e.containsEvent(1\n      /* Flush */\n      )) {\n        _this._resetTokenizationState();\n\n        return;\n      }\n    }));\n\n    _this._register(_this._textModel.onDidChangeContentFast(function (e) {\n      for (var i = 0, len = e.changes.length; i < len; i++) {\n        var change = e.changes[i];\n        var eolCount = countEOL(change.text)[0];\n\n        _this._tokenizationStateStore.applyEdits(change.range, eolCount);\n      }\n\n      _this._beginBackgroundTokenization();\n    }));\n\n    _this._register(_this._textModel.onDidChangeAttached(function () {\n      _this._beginBackgroundTokenization();\n    }));\n\n    _this._register(_this._textModel.onDidChangeLanguage(function () {\n      _this._resetTokenizationState();\n\n      _this._textModel.clearTokens();\n    }));\n\n    _this._resetTokenizationState();\n\n    return _this;\n  }\n\n  TextModelTokenization.prototype.dispose = function () {\n    this._isDisposed = true;\n\n    _super.prototype.dispose.call(this);\n  };\n\n  TextModelTokenization.prototype._resetTokenizationState = function () {\n    var _a = initializeTokenization(this._textModel),\n        tokenizationSupport = _a[0],\n        initialState = _a[1];\n\n    this._tokenizationSupport = tokenizationSupport;\n\n    this._tokenizationStateStore.flush(initialState);\n\n    this._beginBackgroundTokenization();\n  };\n\n  TextModelTokenization.prototype._beginBackgroundTokenization = function () {\n    var _this = this;\n\n    if (this._textModel.isAttachedToEditor() && this._hasLinesToTokenize()) {\n      platform.setImmediate(function () {\n        if (_this._isDisposed) {\n          // disposed in the meantime\n          return;\n        }\n\n        _this._revalidateTokensNow();\n      });\n    }\n  };\n\n  TextModelTokenization.prototype._revalidateTokensNow = function (toLineNumber) {\n    if (toLineNumber === void 0) {\n      toLineNumber = this._textModel.getLineCount();\n    }\n\n    var MAX_ALLOWED_TIME = 1;\n    var builder = new MultilineTokensBuilder();\n    var sw = StopWatch.create(false);\n\n    while (this._hasLinesToTokenize()) {\n      if (sw.elapsed() > MAX_ALLOWED_TIME) {\n        // Stop if MAX_ALLOWED_TIME is reached\n        break;\n      }\n\n      var tokenizedLineNumber = this._tokenizeOneInvalidLine(builder);\n\n      if (tokenizedLineNumber >= toLineNumber) {\n        break;\n      }\n    }\n\n    this._beginBackgroundTokenization();\n\n    this._textModel.setTokens(builder.tokens);\n  };\n\n  TextModelTokenization.prototype.tokenizeViewport = function (startLineNumber, endLineNumber) {\n    var builder = new MultilineTokensBuilder();\n\n    this._tokenizeViewport(builder, startLineNumber, endLineNumber);\n\n    this._textModel.setTokens(builder.tokens);\n  };\n\n  TextModelTokenization.prototype.reset = function () {\n    this._resetTokenizationState();\n\n    this._textModel.clearTokens();\n  };\n\n  TextModelTokenization.prototype.forceTokenization = function (lineNumber) {\n    var builder = new MultilineTokensBuilder();\n\n    this._updateTokensUntilLine(builder, lineNumber);\n\n    this._textModel.setTokens(builder.tokens);\n  };\n\n  TextModelTokenization.prototype.isCheapToTokenize = function (lineNumber) {\n    if (!this._tokenizationSupport) {\n      return true;\n    }\n\n    var firstInvalidLineNumber = this._tokenizationStateStore.invalidLineStartIndex + 1;\n\n    if (lineNumber > firstInvalidLineNumber) {\n      return false;\n    }\n\n    if (lineNumber < firstInvalidLineNumber) {\n      return true;\n    }\n\n    if (this._textModel.getLineLength(lineNumber) < 2048\n    /* CHEAP_TOKENIZATION_LENGTH_LIMIT */\n    ) {\n        return true;\n      }\n\n    return false;\n  };\n\n  TextModelTokenization.prototype._hasLinesToTokenize = function () {\n    if (!this._tokenizationSupport) {\n      return false;\n    }\n\n    return this._tokenizationStateStore.invalidLineStartIndex < this._textModel.getLineCount();\n  };\n\n  TextModelTokenization.prototype._tokenizeOneInvalidLine = function (builder) {\n    if (!this._hasLinesToTokenize()) {\n      return this._textModel.getLineCount() + 1;\n    }\n\n    var lineNumber = this._tokenizationStateStore.invalidLineStartIndex + 1;\n\n    this._updateTokensUntilLine(builder, lineNumber);\n\n    return lineNumber;\n  };\n\n  TextModelTokenization.prototype._updateTokensUntilLine = function (builder, lineNumber) {\n    if (!this._tokenizationSupport) {\n      return;\n    }\n\n    var languageIdentifier = this._textModel.getLanguageIdentifier();\n\n    var linesLength = this._textModel.getLineCount();\n\n    var endLineIndex = lineNumber - 1; // Validate all states up to and including endLineIndex\n\n    for (var lineIndex = this._tokenizationStateStore.invalidLineStartIndex; lineIndex <= endLineIndex; lineIndex++) {\n      var text = this._textModel.getLineContent(lineIndex + 1);\n\n      var lineStartState = this._tokenizationStateStore.getBeginState(lineIndex);\n\n      var r = safeTokenize(languageIdentifier, this._tokenizationSupport, text, lineStartState);\n      builder.add(lineIndex + 1, r.tokens);\n\n      this._tokenizationStateStore.setEndState(linesLength, lineIndex, r.endState);\n\n      lineIndex = this._tokenizationStateStore.invalidLineStartIndex - 1; // -1 because the outer loop increments it\n    }\n  };\n\n  TextModelTokenization.prototype._tokenizeViewport = function (builder, startLineNumber, endLineNumber) {\n    if (!this._tokenizationSupport) {\n      // nothing to do\n      return;\n    }\n\n    if (endLineNumber <= this._tokenizationStateStore.invalidLineStartIndex) {\n      // nothing to do\n      return;\n    }\n\n    if (startLineNumber <= this._tokenizationStateStore.invalidLineStartIndex) {\n      // tokenization has reached the viewport start...\n      this._updateTokensUntilLine(builder, endLineNumber);\n\n      return;\n    }\n\n    var nonWhitespaceColumn = this._textModel.getLineFirstNonWhitespaceColumn(startLineNumber);\n\n    var fakeLines = [];\n    var initialState = null;\n\n    for (var i = startLineNumber - 1; nonWhitespaceColumn > 0 && i >= 1; i--) {\n      var newNonWhitespaceIndex = this._textModel.getLineFirstNonWhitespaceColumn(i);\n\n      if (newNonWhitespaceIndex === 0) {\n        continue;\n      }\n\n      if (newNonWhitespaceIndex < nonWhitespaceColumn) {\n        initialState = this._tokenizationStateStore.getBeginState(i - 1);\n\n        if (initialState) {\n          break;\n        }\n\n        fakeLines.push(this._textModel.getLineContent(i));\n        nonWhitespaceColumn = newNonWhitespaceIndex;\n      }\n    }\n\n    if (!initialState) {\n      initialState = this._tokenizationSupport.getInitialState();\n    }\n\n    var languageIdentifier = this._textModel.getLanguageIdentifier();\n\n    var state = initialState;\n\n    for (var i = fakeLines.length - 1; i >= 0; i--) {\n      var r = safeTokenize(languageIdentifier, this._tokenizationSupport, fakeLines[i], state);\n      state = r.endState;\n    }\n\n    for (var lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n      var text = this._textModel.getLineContent(lineNumber);\n\n      var r = safeTokenize(languageIdentifier, this._tokenizationSupport, text, state);\n      builder.add(lineNumber, r.tokens);\n\n      this._tokenizationStateStore.setFakeTokens(lineNumber - 1);\n\n      state = r.endState;\n    }\n  };\n\n  return TextModelTokenization;\n}(Disposable);\n\nexport { TextModelTokenization };\n\nfunction initializeTokenization(textModel) {\n  var languageIdentifier = textModel.getLanguageIdentifier();\n  var tokenizationSupport = textModel.isTooLargeForTokenization() ? null : TokenizationRegistry.get(languageIdentifier.language);\n  var initialState = null;\n\n  if (tokenizationSupport) {\n    try {\n      initialState = tokenizationSupport.getInitialState();\n    } catch (e) {\n      onUnexpectedError(e);\n      tokenizationSupport = null;\n    }\n  }\n\n  return [tokenizationSupport, initialState];\n}\n\nfunction safeTokenize(languageIdentifier, tokenizationSupport, text, state) {\n  var r = null;\n\n  if (tokenizationSupport) {\n    try {\n      r = tokenizationSupport.tokenize2(text, state.clone(), 0);\n    } catch (e) {\n      onUnexpectedError(e);\n    }\n  }\n\n  if (!r) {\n    r = nullTokenize2(languageIdentifier.id, text, state, 0);\n  }\n\n  LineTokens.convertToEndOffset(r.tokens, text.length);\n  return r;\n}","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/common/model/textModelTokens.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","arrays","onUnexpectedError","LineTokens","Position","TokenizationRegistry","nullTokenize2","Disposable","StopWatch","MultilineTokensBuilder","countEOL","platform","TokenizationStateStore","_beginState","_valid","_len","_invalidLineStartIndex","_reset","initialState","_setBeginState","flush","defineProperty","get","enumerable","configurable","_invalidateLine","lineIndex","_isValid","getBeginState","_ensureLine","_deleteLines","start","deleteCount","splice","_insertLines","insertIndex","insertCount","beginState","valid","i","arrayInsert","_setValid","setEndState","linesLength","endState","previousEndState","equals","setFakeTokens","applyEdits","range","eolCount","deletingLinesCnt","endLineNumber","startLineNumber","insertingLinesCnt","editingLinesCnt","Math","min","j","_acceptDeleteRange","_acceptInsertText","startColumn","firstLineIndex","position","lineNumber","TextModelTokenization","_super","textModel","_this","call","_isDisposed","_textModel","_tokenizationStateStore","_tokenizationSupport","_register","onDidChange","e","languageIdentifier","getLanguageIdentifier","changedLanguages","indexOf","language","_resetTokenizationState","clearTokens","onDidChangeRawContentFast","containsEvent","onDidChangeContentFast","len","changes","length","change","text","_beginBackgroundTokenization","onDidChangeAttached","onDidChangeLanguage","dispose","_a","initializeTokenization","tokenizationSupport","isAttachedToEditor","_hasLinesToTokenize","setImmediate","_revalidateTokensNow","toLineNumber","getLineCount","MAX_ALLOWED_TIME","builder","sw","elapsed","tokenizedLineNumber","_tokenizeOneInvalidLine","setTokens","tokens","tokenizeViewport","_tokenizeViewport","reset","forceTokenization","_updateTokensUntilLine","isCheapToTokenize","firstInvalidLineNumber","invalidLineStartIndex","getLineLength","endLineIndex","getLineContent","lineStartState","r","safeTokenize","add","nonWhitespaceColumn","getLineFirstNonWhitespaceColumn","fakeLines","newNonWhitespaceIndex","push","getInitialState","state","isTooLargeForTokenization","tokenize2","clone","id","convertToEndOffset"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport * as arrays from '../../../base/common/arrays.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { LineTokens } from '../core/lineTokens.js';\r\nimport { Position } from '../core/position.js';\r\nimport { TokenizationRegistry } from '../modes.js';\r\nimport { nullTokenize2 } from '../modes/nullMode.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { StopWatch } from '../../../base/common/stopwatch.js';\r\nimport { MultilineTokensBuilder, countEOL } from './tokensStore.js';\r\nimport * as platform from '../../../base/common/platform.js';\r\nvar TokenizationStateStore = /** @class */ (function () {\r\n    function TokenizationStateStore() {\r\n        this._beginState = [];\r\n        this._valid = [];\r\n        this._len = 0;\r\n        this._invalidLineStartIndex = 0;\r\n    }\r\n    TokenizationStateStore.prototype._reset = function (initialState) {\r\n        this._beginState = [];\r\n        this._valid = [];\r\n        this._len = 0;\r\n        this._invalidLineStartIndex = 0;\r\n        if (initialState) {\r\n            this._setBeginState(0, initialState);\r\n        }\r\n    };\r\n    TokenizationStateStore.prototype.flush = function (initialState) {\r\n        this._reset(initialState);\r\n    };\r\n    Object.defineProperty(TokenizationStateStore.prototype, \"invalidLineStartIndex\", {\r\n        get: function () {\r\n            return this._invalidLineStartIndex;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    TokenizationStateStore.prototype._invalidateLine = function (lineIndex) {\r\n        if (lineIndex < this._len) {\r\n            this._valid[lineIndex] = false;\r\n        }\r\n        if (lineIndex < this._invalidLineStartIndex) {\r\n            this._invalidLineStartIndex = lineIndex;\r\n        }\r\n    };\r\n    TokenizationStateStore.prototype._isValid = function (lineIndex) {\r\n        if (lineIndex < this._len) {\r\n            return this._valid[lineIndex];\r\n        }\r\n        return false;\r\n    };\r\n    TokenizationStateStore.prototype.getBeginState = function (lineIndex) {\r\n        if (lineIndex < this._len) {\r\n            return this._beginState[lineIndex];\r\n        }\r\n        return null;\r\n    };\r\n    TokenizationStateStore.prototype._ensureLine = function (lineIndex) {\r\n        while (lineIndex >= this._len) {\r\n            this._beginState[this._len] = null;\r\n            this._valid[this._len] = false;\r\n            this._len++;\r\n        }\r\n    };\r\n    TokenizationStateStore.prototype._deleteLines = function (start, deleteCount) {\r\n        if (deleteCount === 0) {\r\n            return;\r\n        }\r\n        if (start + deleteCount > this._len) {\r\n            deleteCount = this._len - start;\r\n        }\r\n        this._beginState.splice(start, deleteCount);\r\n        this._valid.splice(start, deleteCount);\r\n        this._len -= deleteCount;\r\n    };\r\n    TokenizationStateStore.prototype._insertLines = function (insertIndex, insertCount) {\r\n        if (insertCount === 0) {\r\n            return;\r\n        }\r\n        var beginState = [];\r\n        var valid = [];\r\n        for (var i = 0; i < insertCount; i++) {\r\n            beginState[i] = null;\r\n            valid[i] = false;\r\n        }\r\n        this._beginState = arrays.arrayInsert(this._beginState, insertIndex, beginState);\r\n        this._valid = arrays.arrayInsert(this._valid, insertIndex, valid);\r\n        this._len += insertCount;\r\n    };\r\n    TokenizationStateStore.prototype._setValid = function (lineIndex, valid) {\r\n        this._ensureLine(lineIndex);\r\n        this._valid[lineIndex] = valid;\r\n    };\r\n    TokenizationStateStore.prototype._setBeginState = function (lineIndex, beginState) {\r\n        this._ensureLine(lineIndex);\r\n        this._beginState[lineIndex] = beginState;\r\n    };\r\n    TokenizationStateStore.prototype.setEndState = function (linesLength, lineIndex, endState) {\r\n        this._setValid(lineIndex, true);\r\n        this._invalidLineStartIndex = lineIndex + 1;\r\n        // Check if this was the last line\r\n        if (lineIndex === linesLength - 1) {\r\n            return;\r\n        }\r\n        // Check if the end state has changed\r\n        var previousEndState = this.getBeginState(lineIndex + 1);\r\n        if (previousEndState === null || !endState.equals(previousEndState)) {\r\n            this._setBeginState(lineIndex + 1, endState);\r\n            this._invalidateLine(lineIndex + 1);\r\n            return;\r\n        }\r\n        // Perhaps we can skip tokenizing some lines...\r\n        var i = lineIndex + 1;\r\n        while (i < linesLength) {\r\n            if (!this._isValid(i)) {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        this._invalidLineStartIndex = i;\r\n    };\r\n    TokenizationStateStore.prototype.setFakeTokens = function (lineIndex) {\r\n        this._setValid(lineIndex, false);\r\n    };\r\n    //#region Editing\r\n    TokenizationStateStore.prototype.applyEdits = function (range, eolCount) {\r\n        var deletingLinesCnt = range.endLineNumber - range.startLineNumber;\r\n        var insertingLinesCnt = eolCount;\r\n        var editingLinesCnt = Math.min(deletingLinesCnt, insertingLinesCnt);\r\n        for (var j = editingLinesCnt; j >= 0; j--) {\r\n            this._invalidateLine(range.startLineNumber + j - 1);\r\n        }\r\n        this._acceptDeleteRange(range);\r\n        this._acceptInsertText(new Position(range.startLineNumber, range.startColumn), eolCount);\r\n    };\r\n    TokenizationStateStore.prototype._acceptDeleteRange = function (range) {\r\n        var firstLineIndex = range.startLineNumber - 1;\r\n        if (firstLineIndex >= this._len) {\r\n            return;\r\n        }\r\n        this._deleteLines(range.startLineNumber, range.endLineNumber - range.startLineNumber);\r\n    };\r\n    TokenizationStateStore.prototype._acceptInsertText = function (position, eolCount) {\r\n        var lineIndex = position.lineNumber - 1;\r\n        if (lineIndex >= this._len) {\r\n            return;\r\n        }\r\n        this._insertLines(position.lineNumber, eolCount);\r\n    };\r\n    return TokenizationStateStore;\r\n}());\r\nexport { TokenizationStateStore };\r\nvar TextModelTokenization = /** @class */ (function (_super) {\r\n    __extends(TextModelTokenization, _super);\r\n    function TextModelTokenization(textModel) {\r\n        var _this = _super.call(this) || this;\r\n        _this._isDisposed = false;\r\n        _this._textModel = textModel;\r\n        _this._tokenizationStateStore = new TokenizationStateStore();\r\n        _this._tokenizationSupport = null;\r\n        _this._register(TokenizationRegistry.onDidChange(function (e) {\r\n            var languageIdentifier = _this._textModel.getLanguageIdentifier();\r\n            if (e.changedLanguages.indexOf(languageIdentifier.language) === -1) {\r\n                return;\r\n            }\r\n            _this._resetTokenizationState();\r\n            _this._textModel.clearTokens();\r\n        }));\r\n        _this._register(_this._textModel.onDidChangeRawContentFast(function (e) {\r\n            if (e.containsEvent(1 /* Flush */)) {\r\n                _this._resetTokenizationState();\r\n                return;\r\n            }\r\n        }));\r\n        _this._register(_this._textModel.onDidChangeContentFast(function (e) {\r\n            for (var i = 0, len = e.changes.length; i < len; i++) {\r\n                var change = e.changes[i];\r\n                var eolCount = countEOL(change.text)[0];\r\n                _this._tokenizationStateStore.applyEdits(change.range, eolCount);\r\n            }\r\n            _this._beginBackgroundTokenization();\r\n        }));\r\n        _this._register(_this._textModel.onDidChangeAttached(function () {\r\n            _this._beginBackgroundTokenization();\r\n        }));\r\n        _this._register(_this._textModel.onDidChangeLanguage(function () {\r\n            _this._resetTokenizationState();\r\n            _this._textModel.clearTokens();\r\n        }));\r\n        _this._resetTokenizationState();\r\n        return _this;\r\n    }\r\n    TextModelTokenization.prototype.dispose = function () {\r\n        this._isDisposed = true;\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    TextModelTokenization.prototype._resetTokenizationState = function () {\r\n        var _a = initializeTokenization(this._textModel), tokenizationSupport = _a[0], initialState = _a[1];\r\n        this._tokenizationSupport = tokenizationSupport;\r\n        this._tokenizationStateStore.flush(initialState);\r\n        this._beginBackgroundTokenization();\r\n    };\r\n    TextModelTokenization.prototype._beginBackgroundTokenization = function () {\r\n        var _this = this;\r\n        if (this._textModel.isAttachedToEditor() && this._hasLinesToTokenize()) {\r\n            platform.setImmediate(function () {\r\n                if (_this._isDisposed) {\r\n                    // disposed in the meantime\r\n                    return;\r\n                }\r\n                _this._revalidateTokensNow();\r\n            });\r\n        }\r\n    };\r\n    TextModelTokenization.prototype._revalidateTokensNow = function (toLineNumber) {\r\n        if (toLineNumber === void 0) { toLineNumber = this._textModel.getLineCount(); }\r\n        var MAX_ALLOWED_TIME = 1;\r\n        var builder = new MultilineTokensBuilder();\r\n        var sw = StopWatch.create(false);\r\n        while (this._hasLinesToTokenize()) {\r\n            if (sw.elapsed() > MAX_ALLOWED_TIME) {\r\n                // Stop if MAX_ALLOWED_TIME is reached\r\n                break;\r\n            }\r\n            var tokenizedLineNumber = this._tokenizeOneInvalidLine(builder);\r\n            if (tokenizedLineNumber >= toLineNumber) {\r\n                break;\r\n            }\r\n        }\r\n        this._beginBackgroundTokenization();\r\n        this._textModel.setTokens(builder.tokens);\r\n    };\r\n    TextModelTokenization.prototype.tokenizeViewport = function (startLineNumber, endLineNumber) {\r\n        var builder = new MultilineTokensBuilder();\r\n        this._tokenizeViewport(builder, startLineNumber, endLineNumber);\r\n        this._textModel.setTokens(builder.tokens);\r\n    };\r\n    TextModelTokenization.prototype.reset = function () {\r\n        this._resetTokenizationState();\r\n        this._textModel.clearTokens();\r\n    };\r\n    TextModelTokenization.prototype.forceTokenization = function (lineNumber) {\r\n        var builder = new MultilineTokensBuilder();\r\n        this._updateTokensUntilLine(builder, lineNumber);\r\n        this._textModel.setTokens(builder.tokens);\r\n    };\r\n    TextModelTokenization.prototype.isCheapToTokenize = function (lineNumber) {\r\n        if (!this._tokenizationSupport) {\r\n            return true;\r\n        }\r\n        var firstInvalidLineNumber = this._tokenizationStateStore.invalidLineStartIndex + 1;\r\n        if (lineNumber > firstInvalidLineNumber) {\r\n            return false;\r\n        }\r\n        if (lineNumber < firstInvalidLineNumber) {\r\n            return true;\r\n        }\r\n        if (this._textModel.getLineLength(lineNumber) < 2048 /* CHEAP_TOKENIZATION_LENGTH_LIMIT */) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    TextModelTokenization.prototype._hasLinesToTokenize = function () {\r\n        if (!this._tokenizationSupport) {\r\n            return false;\r\n        }\r\n        return (this._tokenizationStateStore.invalidLineStartIndex < this._textModel.getLineCount());\r\n    };\r\n    TextModelTokenization.prototype._tokenizeOneInvalidLine = function (builder) {\r\n        if (!this._hasLinesToTokenize()) {\r\n            return this._textModel.getLineCount() + 1;\r\n        }\r\n        var lineNumber = this._tokenizationStateStore.invalidLineStartIndex + 1;\r\n        this._updateTokensUntilLine(builder, lineNumber);\r\n        return lineNumber;\r\n    };\r\n    TextModelTokenization.prototype._updateTokensUntilLine = function (builder, lineNumber) {\r\n        if (!this._tokenizationSupport) {\r\n            return;\r\n        }\r\n        var languageIdentifier = this._textModel.getLanguageIdentifier();\r\n        var linesLength = this._textModel.getLineCount();\r\n        var endLineIndex = lineNumber - 1;\r\n        // Validate all states up to and including endLineIndex\r\n        for (var lineIndex = this._tokenizationStateStore.invalidLineStartIndex; lineIndex <= endLineIndex; lineIndex++) {\r\n            var text = this._textModel.getLineContent(lineIndex + 1);\r\n            var lineStartState = this._tokenizationStateStore.getBeginState(lineIndex);\r\n            var r = safeTokenize(languageIdentifier, this._tokenizationSupport, text, lineStartState);\r\n            builder.add(lineIndex + 1, r.tokens);\r\n            this._tokenizationStateStore.setEndState(linesLength, lineIndex, r.endState);\r\n            lineIndex = this._tokenizationStateStore.invalidLineStartIndex - 1; // -1 because the outer loop increments it\r\n        }\r\n    };\r\n    TextModelTokenization.prototype._tokenizeViewport = function (builder, startLineNumber, endLineNumber) {\r\n        if (!this._tokenizationSupport) {\r\n            // nothing to do\r\n            return;\r\n        }\r\n        if (endLineNumber <= this._tokenizationStateStore.invalidLineStartIndex) {\r\n            // nothing to do\r\n            return;\r\n        }\r\n        if (startLineNumber <= this._tokenizationStateStore.invalidLineStartIndex) {\r\n            // tokenization has reached the viewport start...\r\n            this._updateTokensUntilLine(builder, endLineNumber);\r\n            return;\r\n        }\r\n        var nonWhitespaceColumn = this._textModel.getLineFirstNonWhitespaceColumn(startLineNumber);\r\n        var fakeLines = [];\r\n        var initialState = null;\r\n        for (var i = startLineNumber - 1; nonWhitespaceColumn > 0 && i >= 1; i--) {\r\n            var newNonWhitespaceIndex = this._textModel.getLineFirstNonWhitespaceColumn(i);\r\n            if (newNonWhitespaceIndex === 0) {\r\n                continue;\r\n            }\r\n            if (newNonWhitespaceIndex < nonWhitespaceColumn) {\r\n                initialState = this._tokenizationStateStore.getBeginState(i - 1);\r\n                if (initialState) {\r\n                    break;\r\n                }\r\n                fakeLines.push(this._textModel.getLineContent(i));\r\n                nonWhitespaceColumn = newNonWhitespaceIndex;\r\n            }\r\n        }\r\n        if (!initialState) {\r\n            initialState = this._tokenizationSupport.getInitialState();\r\n        }\r\n        var languageIdentifier = this._textModel.getLanguageIdentifier();\r\n        var state = initialState;\r\n        for (var i = fakeLines.length - 1; i >= 0; i--) {\r\n            var r = safeTokenize(languageIdentifier, this._tokenizationSupport, fakeLines[i], state);\r\n            state = r.endState;\r\n        }\r\n        for (var lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\r\n            var text = this._textModel.getLineContent(lineNumber);\r\n            var r = safeTokenize(languageIdentifier, this._tokenizationSupport, text, state);\r\n            builder.add(lineNumber, r.tokens);\r\n            this._tokenizationStateStore.setFakeTokens(lineNumber - 1);\r\n            state = r.endState;\r\n        }\r\n    };\r\n    return TextModelTokenization;\r\n}(Disposable));\r\nexport { TextModelTokenization };\r\nfunction initializeTokenization(textModel) {\r\n    var languageIdentifier = textModel.getLanguageIdentifier();\r\n    var tokenizationSupport = (textModel.isTooLargeForTokenization()\r\n        ? null\r\n        : TokenizationRegistry.get(languageIdentifier.language));\r\n    var initialState = null;\r\n    if (tokenizationSupport) {\r\n        try {\r\n            initialState = tokenizationSupport.getInitialState();\r\n        }\r\n        catch (e) {\r\n            onUnexpectedError(e);\r\n            tokenizationSupport = null;\r\n        }\r\n    }\r\n    return [tokenizationSupport, initialState];\r\n}\r\nfunction safeTokenize(languageIdentifier, tokenizationSupport, text, state) {\r\n    var r = null;\r\n    if (tokenizationSupport) {\r\n        try {\r\n            r = tokenizationSupport.tokenize2(text, state.clone(), 0);\r\n        }\r\n        catch (e) {\r\n            onUnexpectedError(e);\r\n        }\r\n    }\r\n    if (!r) {\r\n        r = nullTokenize2(languageIdentifier.id, text, state, 0);\r\n    }\r\n    LineTokens.convertToEndOffset(r.tokens, text.length);\r\n    return r;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}