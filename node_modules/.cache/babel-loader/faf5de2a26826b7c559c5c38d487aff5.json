{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../base/common/strings.js';\nimport { EditOperation } from '../core/editOperation.js';\nimport { Range } from '../core/range.js';\n\nvar TrimTrailingWhitespaceCommand =\n/** @class */\nfunction () {\n  function TrimTrailingWhitespaceCommand(selection, cursors) {\n    this._selection = selection;\n    this._cursors = cursors;\n    this._selectionId = null;\n  }\n\n  TrimTrailingWhitespaceCommand.prototype.getEditOperations = function (model, builder) {\n    var ops = trimTrailingWhitespace(model, this._cursors);\n\n    for (var i = 0, len = ops.length; i < len; i++) {\n      var op = ops[i];\n      builder.addEditOperation(op.range, op.text);\n    }\n\n    this._selectionId = builder.trackSelection(this._selection);\n  };\n\n  TrimTrailingWhitespaceCommand.prototype.computeCursorState = function (model, helper) {\n    return helper.getTrackedSelection(this._selectionId);\n  };\n\n  return TrimTrailingWhitespaceCommand;\n}();\n\nexport { TrimTrailingWhitespaceCommand };\n/**\r\n * Generate commands for trimming trailing whitespace on a model and ignore lines on which cursors are sitting.\r\n */\n\nexport function trimTrailingWhitespace(model, cursors) {\n  // Sort cursors ascending\n  cursors.sort(function (a, b) {\n    if (a.lineNumber === b.lineNumber) {\n      return a.column - b.column;\n    }\n\n    return a.lineNumber - b.lineNumber;\n  }); // Reduce multiple cursors on the same line and only keep the last one on the line\n\n  for (var i = cursors.length - 2; i >= 0; i--) {\n    if (cursors[i].lineNumber === cursors[i + 1].lineNumber) {\n      // Remove cursor at `i`\n      cursors.splice(i, 1);\n    }\n  }\n\n  var r = [];\n  var rLen = 0;\n  var cursorIndex = 0;\n  var cursorLen = cursors.length;\n\n  for (var lineNumber = 1, lineCount = model.getLineCount(); lineNumber <= lineCount; lineNumber++) {\n    var lineContent = model.getLineContent(lineNumber);\n    var maxLineColumn = lineContent.length + 1;\n    var minEditColumn = 0;\n\n    if (cursorIndex < cursorLen && cursors[cursorIndex].lineNumber === lineNumber) {\n      minEditColumn = cursors[cursorIndex].column;\n      cursorIndex++;\n\n      if (minEditColumn === maxLineColumn) {\n        // The cursor is at the end of the line => no edits for sure on this line\n        continue;\n      }\n    }\n\n    if (lineContent.length === 0) {\n      continue;\n    }\n\n    var lastNonWhitespaceIndex = strings.lastNonWhitespaceIndex(lineContent);\n    var fromColumn = 0;\n\n    if (lastNonWhitespaceIndex === -1) {\n      // Entire line is whitespace\n      fromColumn = 1;\n    } else if (lastNonWhitespaceIndex !== lineContent.length - 1) {\n      // There is trailing whitespace\n      fromColumn = lastNonWhitespaceIndex + 2;\n    } else {\n      // There is no trailing whitespace\n      continue;\n    }\n\n    fromColumn = Math.max(minEditColumn, fromColumn);\n    r[rLen++] = EditOperation.delete(new Range(lineNumber, fromColumn, lineNumber, maxLineColumn));\n  }\n\n  return r;\n}","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/common/commands/trimTrailingWhitespaceCommand.js"],"names":["strings","EditOperation","Range","TrimTrailingWhitespaceCommand","selection","cursors","_selection","_cursors","_selectionId","prototype","getEditOperations","model","builder","ops","trimTrailingWhitespace","i","len","length","op","addEditOperation","range","text","trackSelection","computeCursorState","helper","getTrackedSelection","sort","a","b","lineNumber","column","splice","r","rLen","cursorIndex","cursorLen","lineCount","getLineCount","lineContent","getLineContent","maxLineColumn","minEditColumn","lastNonWhitespaceIndex","fromColumn","Math","max","delete"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { EditOperation } from '../core/editOperation.js';\r\nimport { Range } from '../core/range.js';\r\nvar TrimTrailingWhitespaceCommand = /** @class */ (function () {\r\n    function TrimTrailingWhitespaceCommand(selection, cursors) {\r\n        this._selection = selection;\r\n        this._cursors = cursors;\r\n        this._selectionId = null;\r\n    }\r\n    TrimTrailingWhitespaceCommand.prototype.getEditOperations = function (model, builder) {\r\n        var ops = trimTrailingWhitespace(model, this._cursors);\r\n        for (var i = 0, len = ops.length; i < len; i++) {\r\n            var op = ops[i];\r\n            builder.addEditOperation(op.range, op.text);\r\n        }\r\n        this._selectionId = builder.trackSelection(this._selection);\r\n    };\r\n    TrimTrailingWhitespaceCommand.prototype.computeCursorState = function (model, helper) {\r\n        return helper.getTrackedSelection(this._selectionId);\r\n    };\r\n    return TrimTrailingWhitespaceCommand;\r\n}());\r\nexport { TrimTrailingWhitespaceCommand };\r\n/**\r\n * Generate commands for trimming trailing whitespace on a model and ignore lines on which cursors are sitting.\r\n */\r\nexport function trimTrailingWhitespace(model, cursors) {\r\n    // Sort cursors ascending\r\n    cursors.sort(function (a, b) {\r\n        if (a.lineNumber === b.lineNumber) {\r\n            return a.column - b.column;\r\n        }\r\n        return a.lineNumber - b.lineNumber;\r\n    });\r\n    // Reduce multiple cursors on the same line and only keep the last one on the line\r\n    for (var i = cursors.length - 2; i >= 0; i--) {\r\n        if (cursors[i].lineNumber === cursors[i + 1].lineNumber) {\r\n            // Remove cursor at `i`\r\n            cursors.splice(i, 1);\r\n        }\r\n    }\r\n    var r = [];\r\n    var rLen = 0;\r\n    var cursorIndex = 0;\r\n    var cursorLen = cursors.length;\r\n    for (var lineNumber = 1, lineCount = model.getLineCount(); lineNumber <= lineCount; lineNumber++) {\r\n        var lineContent = model.getLineContent(lineNumber);\r\n        var maxLineColumn = lineContent.length + 1;\r\n        var minEditColumn = 0;\r\n        if (cursorIndex < cursorLen && cursors[cursorIndex].lineNumber === lineNumber) {\r\n            minEditColumn = cursors[cursorIndex].column;\r\n            cursorIndex++;\r\n            if (minEditColumn === maxLineColumn) {\r\n                // The cursor is at the end of the line => no edits for sure on this line\r\n                continue;\r\n            }\r\n        }\r\n        if (lineContent.length === 0) {\r\n            continue;\r\n        }\r\n        var lastNonWhitespaceIndex = strings.lastNonWhitespaceIndex(lineContent);\r\n        var fromColumn = 0;\r\n        if (lastNonWhitespaceIndex === -1) {\r\n            // Entire line is whitespace\r\n            fromColumn = 1;\r\n        }\r\n        else if (lastNonWhitespaceIndex !== lineContent.length - 1) {\r\n            // There is trailing whitespace\r\n            fromColumn = lastNonWhitespaceIndex + 2;\r\n        }\r\n        else {\r\n            // There is no trailing whitespace\r\n            continue;\r\n        }\r\n        fromColumn = Math.max(minEditColumn, fromColumn);\r\n        r[rLen++] = EditOperation.delete(new Range(lineNumber, fromColumn, lineNumber, maxLineColumn));\r\n    }\r\n    return r;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}