{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { URI } from '../../../base/common/uri.js';\nimport * as resources from '../../../base/common/resources.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { TernarySearchTree } from '../../../base/common/map.js';\nexport var IWorkspaceContextService = createDecorator('contextService');\nexport var IWorkspace;\n\n(function (IWorkspace) {\n  function isIWorkspace(thing) {\n    return thing && typeof thing === 'object' && typeof thing.id === 'string' && Array.isArray(thing.folders);\n  }\n\n  IWorkspace.isIWorkspace = isIWorkspace;\n})(IWorkspace || (IWorkspace = {}));\n\nexport var IWorkspaceFolder;\n\n(function (IWorkspaceFolder) {\n  function isIWorkspaceFolder(thing) {\n    return thing && typeof thing === 'object' && URI.isUri(thing.uri) && typeof thing.name === 'string' && typeof thing.toResource === 'function';\n  }\n\n  IWorkspaceFolder.isIWorkspaceFolder = isIWorkspaceFolder;\n})(IWorkspaceFolder || (IWorkspaceFolder = {}));\n\nvar Workspace =\n/** @class */\nfunction () {\n  function Workspace(_id, folders, _configuration) {\n    if (folders === void 0) {\n      folders = [];\n    }\n\n    if (_configuration === void 0) {\n      _configuration = null;\n    }\n\n    this._id = _id;\n    this._configuration = _configuration;\n    this._foldersMap = TernarySearchTree.forPaths();\n    this.folders = folders;\n  }\n\n  Object.defineProperty(Workspace.prototype, \"folders\", {\n    get: function () {\n      return this._folders;\n    },\n    set: function (folders) {\n      this._folders = folders;\n      this.updateFoldersMap();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Workspace.prototype, \"id\", {\n    get: function () {\n      return this._id;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Workspace.prototype, \"configuration\", {\n    get: function () {\n      return this._configuration;\n    },\n    set: function (configuration) {\n      this._configuration = configuration;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Workspace.prototype.getFolder = function (resource) {\n    if (!resource) {\n      return null;\n    }\n\n    return this._foldersMap.findSubstr(resource.with({\n      scheme: resource.scheme,\n      authority: resource.authority,\n      path: resource.path\n    }).toString()) || null;\n  };\n\n  Workspace.prototype.updateFoldersMap = function () {\n    this._foldersMap = TernarySearchTree.forPaths();\n\n    for (var _i = 0, _a = this.folders; _i < _a.length; _i++) {\n      var folder = _a[_i];\n\n      this._foldersMap.set(folder.uri.toString(), folder);\n    }\n  };\n\n  Workspace.prototype.toJSON = function () {\n    return {\n      id: this.id,\n      folders: this.folders,\n      configuration: this.configuration\n    };\n  };\n\n  return Workspace;\n}();\n\nexport { Workspace };\n\nvar WorkspaceFolder =\n/** @class */\nfunction () {\n  function WorkspaceFolder(data, raw) {\n    this.raw = raw;\n    this.uri = data.uri;\n    this.index = data.index;\n    this.name = data.name;\n  }\n\n  WorkspaceFolder.prototype.toResource = function (relativePath) {\n    return resources.joinPath(this.uri, relativePath);\n  };\n\n  WorkspaceFolder.prototype.toJSON = function () {\n    return {\n      uri: this.uri,\n      name: this.name,\n      index: this.index\n    };\n  };\n\n  return WorkspaceFolder;\n}();\n\nexport { WorkspaceFolder };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/platform/workspace/common/workspace.js"],"names":["URI","resources","createDecorator","TernarySearchTree","IWorkspaceContextService","IWorkspace","isIWorkspace","thing","id","Array","isArray","folders","IWorkspaceFolder","isIWorkspaceFolder","isUri","uri","name","toResource","Workspace","_id","_configuration","_foldersMap","forPaths","Object","defineProperty","prototype","get","_folders","set","updateFoldersMap","enumerable","configurable","configuration","getFolder","resource","findSubstr","with","scheme","authority","path","toString","_i","_a","length","folder","toJSON","WorkspaceFolder","data","raw","index","relativePath","joinPath"],"mappings":"AAAA;;;;AAIA,SAASA,GAAT,QAAoB,6BAApB;AACA,OAAO,KAAKC,SAAZ,MAA2B,mCAA3B;AACA,SAASC,eAAT,QAAgC,6CAAhC;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AACA,OAAO,IAAIC,wBAAwB,GAAGF,eAAe,CAAC,gBAAD,CAA9C;AACP,OAAO,IAAIG,UAAJ;;AACP,CAAC,UAAUA,UAAV,EAAsB;AACnB,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzB,WAAOA,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA1B,IACA,OAAOA,KAAK,CAACC,EAAb,KAAoB,QADpB,IAEAC,KAAK,CAACC,OAAN,CAAcH,KAAK,CAACI,OAApB,CAFP;AAGH;;AACDN,EAAAA,UAAU,CAACC,YAAX,GAA0BA,YAA1B;AACH,CAPD,EAOGD,UAAU,KAAKA,UAAU,GAAG,EAAlB,CAPb;;AAQA,OAAO,IAAIO,gBAAJ;;AACP,CAAC,UAAUA,gBAAV,EAA4B;AACzB,WAASC,kBAAT,CAA4BN,KAA5B,EAAmC;AAC/B,WAAOA,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA1B,IACAP,GAAG,CAACc,KAAJ,CAAUP,KAAK,CAACQ,GAAhB,CADA,IAEA,OAAOR,KAAK,CAACS,IAAb,KAAsB,QAFtB,IAGA,OAAOT,KAAK,CAACU,UAAb,KAA4B,UAHnC;AAIH;;AACDL,EAAAA,gBAAgB,CAACC,kBAAjB,GAAsCA,kBAAtC;AACH,CARD,EAQGD,gBAAgB,KAAKA,gBAAgB,GAAG,EAAxB,CARnB;;AASA,IAAIM,SAAS;AAAG;AAAe,YAAY;AACvC,WAASA,SAAT,CAAmBC,GAAnB,EAAwBR,OAAxB,EAAiCS,cAAjC,EAAiD;AAC7C,QAAIT,OAAO,KAAK,KAAK,CAArB,EAAwB;AAAEA,MAAAA,OAAO,GAAG,EAAV;AAAe;;AACzC,QAAIS,cAAc,KAAK,KAAK,CAA5B,EAA+B;AAAEA,MAAAA,cAAc,GAAG,IAAjB;AAAwB;;AACzD,SAAKD,GAAL,GAAWA,GAAX;AACA,SAAKC,cAAL,GAAsBA,cAAtB;AACA,SAAKC,WAAL,GAAmBlB,iBAAiB,CAACmB,QAAlB,EAAnB;AACA,SAAKX,OAAL,GAAeA,OAAf;AACH;;AACDY,EAAAA,MAAM,CAACC,cAAP,CAAsBN,SAAS,CAACO,SAAhC,EAA2C,SAA3C,EAAsD;AAClDC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKC,QAAZ;AACH,KAHiD;AAIlDC,IAAAA,GAAG,EAAE,UAAUjB,OAAV,EAAmB;AACpB,WAAKgB,QAAL,GAAgBhB,OAAhB;AACA,WAAKkB,gBAAL;AACH,KAPiD;AAQlDC,IAAAA,UAAU,EAAE,IARsC;AASlDC,IAAAA,YAAY,EAAE;AAToC,GAAtD;AAWAR,EAAAA,MAAM,CAACC,cAAP,CAAsBN,SAAS,CAACO,SAAhC,EAA2C,IAA3C,EAAiD;AAC7CC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKP,GAAZ;AACH,KAH4C;AAI7CW,IAAAA,UAAU,EAAE,IAJiC;AAK7CC,IAAAA,YAAY,EAAE;AAL+B,GAAjD;AAOAR,EAAAA,MAAM,CAACC,cAAP,CAAsBN,SAAS,CAACO,SAAhC,EAA2C,eAA3C,EAA4D;AACxDC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKN,cAAZ;AACH,KAHuD;AAIxDQ,IAAAA,GAAG,EAAE,UAAUI,aAAV,EAAyB;AAC1B,WAAKZ,cAAL,GAAsBY,aAAtB;AACH,KANuD;AAOxDF,IAAAA,UAAU,EAAE,IAP4C;AAQxDC,IAAAA,YAAY,EAAE;AAR0C,GAA5D;;AAUAb,EAAAA,SAAS,CAACO,SAAV,CAAoBQ,SAApB,GAAgC,UAAUC,QAAV,EAAoB;AAChD,QAAI,CAACA,QAAL,EAAe;AACX,aAAO,IAAP;AACH;;AACD,WAAO,KAAKb,WAAL,CAAiBc,UAAjB,CAA4BD,QAAQ,CAACE,IAAT,CAAc;AAC7CC,MAAAA,MAAM,EAAEH,QAAQ,CAACG,MAD4B;AAE7CC,MAAAA,SAAS,EAAEJ,QAAQ,CAACI,SAFyB;AAG7CC,MAAAA,IAAI,EAAEL,QAAQ,CAACK;AAH8B,KAAd,EAIhCC,QAJgC,EAA5B,KAIW,IAJlB;AAKH,GATD;;AAUAtB,EAAAA,SAAS,CAACO,SAAV,CAAoBI,gBAApB,GAAuC,YAAY;AAC/C,SAAKR,WAAL,GAAmBlB,iBAAiB,CAACmB,QAAlB,EAAnB;;AACA,SAAK,IAAImB,EAAE,GAAG,CAAT,EAAYC,EAAE,GAAG,KAAK/B,OAA3B,EAAoC8B,EAAE,GAAGC,EAAE,CAACC,MAA5C,EAAoDF,EAAE,EAAtD,EAA0D;AACtD,UAAIG,MAAM,GAAGF,EAAE,CAACD,EAAD,CAAf;;AACA,WAAKpB,WAAL,CAAiBO,GAAjB,CAAqBgB,MAAM,CAAC7B,GAAP,CAAWyB,QAAX,EAArB,EAA4CI,MAA5C;AACH;AACJ,GAND;;AAOA1B,EAAAA,SAAS,CAACO,SAAV,CAAoBoB,MAApB,GAA6B,YAAY;AACrC,WAAO;AAAErC,MAAAA,EAAE,EAAE,KAAKA,EAAX;AAAeG,MAAAA,OAAO,EAAE,KAAKA,OAA7B;AAAsCqB,MAAAA,aAAa,EAAE,KAAKA;AAA1D,KAAP;AACH,GAFD;;AAGA,SAAOd,SAAP;AACH,CA1D8B,EAA/B;;AA2DA,SAASA,SAAT;;AACA,IAAI4B,eAAe;AAAG;AAAe,YAAY;AAC7C,WAASA,eAAT,CAAyBC,IAAzB,EAA+BC,GAA/B,EAAoC;AAChC,SAAKA,GAAL,GAAWA,GAAX;AACA,SAAKjC,GAAL,GAAWgC,IAAI,CAAChC,GAAhB;AACA,SAAKkC,KAAL,GAAaF,IAAI,CAACE,KAAlB;AACA,SAAKjC,IAAL,GAAY+B,IAAI,CAAC/B,IAAjB;AACH;;AACD8B,EAAAA,eAAe,CAACrB,SAAhB,CAA0BR,UAA1B,GAAuC,UAAUiC,YAAV,EAAwB;AAC3D,WAAOjD,SAAS,CAACkD,QAAV,CAAmB,KAAKpC,GAAxB,EAA6BmC,YAA7B,CAAP;AACH,GAFD;;AAGAJ,EAAAA,eAAe,CAACrB,SAAhB,CAA0BoB,MAA1B,GAAmC,YAAY;AAC3C,WAAO;AAAE9B,MAAAA,GAAG,EAAE,KAAKA,GAAZ;AAAiBC,MAAAA,IAAI,EAAE,KAAKA,IAA5B;AAAkCiC,MAAAA,KAAK,EAAE,KAAKA;AAA9C,KAAP;AACH,GAFD;;AAGA,SAAOH,eAAP;AACH,CAdoC,EAArC;;AAeA,SAASA,eAAT","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport * as resources from '../../../base/common/resources.js';\r\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\r\nimport { TernarySearchTree } from '../../../base/common/map.js';\r\nexport var IWorkspaceContextService = createDecorator('contextService');\r\nexport var IWorkspace;\r\n(function (IWorkspace) {\r\n    function isIWorkspace(thing) {\r\n        return thing && typeof thing === 'object'\r\n            && typeof thing.id === 'string'\r\n            && Array.isArray(thing.folders);\r\n    }\r\n    IWorkspace.isIWorkspace = isIWorkspace;\r\n})(IWorkspace || (IWorkspace = {}));\r\nexport var IWorkspaceFolder;\r\n(function (IWorkspaceFolder) {\r\n    function isIWorkspaceFolder(thing) {\r\n        return thing && typeof thing === 'object'\r\n            && URI.isUri(thing.uri)\r\n            && typeof thing.name === 'string'\r\n            && typeof thing.toResource === 'function';\r\n    }\r\n    IWorkspaceFolder.isIWorkspaceFolder = isIWorkspaceFolder;\r\n})(IWorkspaceFolder || (IWorkspaceFolder = {}));\r\nvar Workspace = /** @class */ (function () {\r\n    function Workspace(_id, folders, _configuration) {\r\n        if (folders === void 0) { folders = []; }\r\n        if (_configuration === void 0) { _configuration = null; }\r\n        this._id = _id;\r\n        this._configuration = _configuration;\r\n        this._foldersMap = TernarySearchTree.forPaths();\r\n        this.folders = folders;\r\n    }\r\n    Object.defineProperty(Workspace.prototype, \"folders\", {\r\n        get: function () {\r\n            return this._folders;\r\n        },\r\n        set: function (folders) {\r\n            this._folders = folders;\r\n            this.updateFoldersMap();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Workspace.prototype, \"id\", {\r\n        get: function () {\r\n            return this._id;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Workspace.prototype, \"configuration\", {\r\n        get: function () {\r\n            return this._configuration;\r\n        },\r\n        set: function (configuration) {\r\n            this._configuration = configuration;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Workspace.prototype.getFolder = function (resource) {\r\n        if (!resource) {\r\n            return null;\r\n        }\r\n        return this._foldersMap.findSubstr(resource.with({\r\n            scheme: resource.scheme,\r\n            authority: resource.authority,\r\n            path: resource.path\r\n        }).toString()) || null;\r\n    };\r\n    Workspace.prototype.updateFoldersMap = function () {\r\n        this._foldersMap = TernarySearchTree.forPaths();\r\n        for (var _i = 0, _a = this.folders; _i < _a.length; _i++) {\r\n            var folder = _a[_i];\r\n            this._foldersMap.set(folder.uri.toString(), folder);\r\n        }\r\n    };\r\n    Workspace.prototype.toJSON = function () {\r\n        return { id: this.id, folders: this.folders, configuration: this.configuration };\r\n    };\r\n    return Workspace;\r\n}());\r\nexport { Workspace };\r\nvar WorkspaceFolder = /** @class */ (function () {\r\n    function WorkspaceFolder(data, raw) {\r\n        this.raw = raw;\r\n        this.uri = data.uri;\r\n        this.index = data.index;\r\n        this.name = data.name;\r\n    }\r\n    WorkspaceFolder.prototype.toResource = function (relativePath) {\r\n        return resources.joinPath(this.uri, relativePath);\r\n    };\r\n    WorkspaceFolder.prototype.toJSON = function () {\r\n        return { uri: this.uri, name: this.name, index: this.index };\r\n    };\r\n    return WorkspaceFolder;\r\n}());\r\nexport { WorkspaceFolder };\r\n"]},"metadata":{},"sourceType":"module"}