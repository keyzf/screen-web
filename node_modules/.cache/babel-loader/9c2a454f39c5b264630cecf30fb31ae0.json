{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { getCharIndex } from './minimapCharSheet.js';\n\nvar MinimapCharRenderer =\n/** @class */\nfunction () {\n  function MinimapCharRenderer(charData, scale) {\n    this.scale = scale;\n    this.charDataNormal = MinimapCharRenderer.soften(charData, 12 / 15);\n    this.charDataLight = MinimapCharRenderer.soften(charData, 50 / 60);\n  }\n\n  MinimapCharRenderer.soften = function (input, ratio) {\n    var result = new Uint8ClampedArray(input.length);\n\n    for (var i = 0, len = input.length; i < len; i++) {\n      result[i] = input[i] * ratio;\n    }\n\n    return result;\n  };\n\n  MinimapCharRenderer.prototype.renderChar = function (target, dx, dy, chCode, color, backgroundColor, fontScale, useLighterFont) {\n    var charWidth = 1\n    /* BASE_CHAR_WIDTH */\n    * this.scale;\n    var charHeight = 2\n    /* BASE_CHAR_HEIGHT */\n    * this.scale;\n\n    if (dx + charWidth > target.width || dy + charHeight > target.height) {\n      console.warn('bad render request outside image data');\n      return;\n    }\n\n    var charData = useLighterFont ? this.charDataLight : this.charDataNormal;\n    var charIndex = getCharIndex(chCode, fontScale);\n    var destWidth = target.width * 4\n    /* RGBA_CHANNELS_CNT */\n    ;\n    var backgroundR = backgroundColor.r;\n    var backgroundG = backgroundColor.g;\n    var backgroundB = backgroundColor.b;\n    var deltaR = color.r - backgroundR;\n    var deltaG = color.g - backgroundG;\n    var deltaB = color.b - backgroundB;\n    var dest = target.data;\n    var sourceOffset = charIndex * charWidth * charHeight;\n    var row = dy * destWidth + dx * 4\n    /* RGBA_CHANNELS_CNT */\n    ;\n\n    for (var y = 0; y < charHeight; y++) {\n      var column = row;\n\n      for (var x = 0; x < charWidth; x++) {\n        var c = charData[sourceOffset++] / 255;\n        dest[column++] = backgroundR + deltaR * c;\n        dest[column++] = backgroundG + deltaG * c;\n        dest[column++] = backgroundB + deltaB * c;\n        column++;\n      }\n\n      row += destWidth;\n    }\n  };\n\n  MinimapCharRenderer.prototype.blockRenderChar = function (target, dx, dy, color, backgroundColor, useLighterFont) {\n    var charWidth = 1\n    /* BASE_CHAR_WIDTH */\n    * this.scale;\n    var charHeight = 2\n    /* BASE_CHAR_HEIGHT */\n    * this.scale;\n\n    if (dx + charWidth > target.width || dy + charHeight > target.height) {\n      console.warn('bad render request outside image data');\n      return;\n    }\n\n    var destWidth = target.width * 4\n    /* RGBA_CHANNELS_CNT */\n    ;\n    var c = 0.5;\n    var backgroundR = backgroundColor.r;\n    var backgroundG = backgroundColor.g;\n    var backgroundB = backgroundColor.b;\n    var deltaR = color.r - backgroundR;\n    var deltaG = color.g - backgroundG;\n    var deltaB = color.b - backgroundB;\n    var colorR = backgroundR + deltaR * c;\n    var colorG = backgroundG + deltaG * c;\n    var colorB = backgroundB + deltaB * c;\n    var dest = target.data;\n    var row = dy * destWidth + dx * 4\n    /* RGBA_CHANNELS_CNT */\n    ;\n\n    for (var y = 0; y < charHeight; y++) {\n      var column = row;\n\n      for (var x = 0; x < charWidth; x++) {\n        dest[column++] = colorR;\n        dest[column++] = colorG;\n        dest[column++] = colorB;\n        column++;\n      }\n\n      row += destWidth;\n    }\n  };\n\n  return MinimapCharRenderer;\n}();\n\nexport { MinimapCharRenderer };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimapCharRenderer.js"],"names":["getCharIndex","MinimapCharRenderer","charData","scale","charDataNormal","soften","charDataLight","input","ratio","result","Uint8ClampedArray","length","i","len","prototype","renderChar","target","dx","dy","chCode","color","backgroundColor","fontScale","useLighterFont","charWidth","charHeight","width","height","console","warn","charIndex","destWidth","backgroundR","r","backgroundG","g","backgroundB","b","deltaR","deltaG","deltaB","dest","data","sourceOffset","row","y","column","x","c","blockRenderChar","colorR","colorG","colorB"],"mappings":"AAAA;;;;AAIA,SAASA,YAAT,QAA6B,uBAA7B;;AACA,IAAIC,mBAAmB;AAAG;AAAe,YAAY;AACjD,WAASA,mBAAT,CAA6BC,QAA7B,EAAuCC,KAAvC,EAA8C;AAC1C,SAAKA,KAAL,GAAaA,KAAb;AACA,SAAKC,cAAL,GAAsBH,mBAAmB,CAACI,MAApB,CAA2BH,QAA3B,EAAqC,KAAK,EAA1C,CAAtB;AACA,SAAKI,aAAL,GAAqBL,mBAAmB,CAACI,MAApB,CAA2BH,QAA3B,EAAqC,KAAK,EAA1C,CAArB;AACH;;AACDD,EAAAA,mBAAmB,CAACI,MAApB,GAA6B,UAAUE,KAAV,EAAiBC,KAAjB,EAAwB;AACjD,QAAIC,MAAM,GAAG,IAAIC,iBAAJ,CAAsBH,KAAK,CAACI,MAA5B,CAAb;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGN,KAAK,CAACI,MAA5B,EAAoCC,CAAC,GAAGC,GAAxC,EAA6CD,CAAC,EAA9C,EAAkD;AAC9CH,MAAAA,MAAM,CAACG,CAAD,CAAN,GAAYL,KAAK,CAACK,CAAD,CAAL,GAAWJ,KAAvB;AACH;;AACD,WAAOC,MAAP;AACH,GAND;;AAOAR,EAAAA,mBAAmB,CAACa,SAApB,CAA8BC,UAA9B,GAA2C,UAAUC,MAAV,EAAkBC,EAAlB,EAAsBC,EAAtB,EAA0BC,MAA1B,EAAkCC,KAAlC,EAAyCC,eAAzC,EAA0DC,SAA1D,EAAqEC,cAArE,EAAqF;AAC5H,QAAIC,SAAS,GAAG;AAAE;AAAF,MAA0B,KAAKrB,KAA/C;AACA,QAAIsB,UAAU,GAAG;AAAE;AAAF,MAA2B,KAAKtB,KAAjD;;AACA,QAAIc,EAAE,GAAGO,SAAL,GAAiBR,MAAM,CAACU,KAAxB,IAAiCR,EAAE,GAAGO,UAAL,GAAkBT,MAAM,CAACW,MAA9D,EAAsE;AAClEC,MAAAA,OAAO,CAACC,IAAR,CAAa,uCAAb;AACA;AACH;;AACD,QAAI3B,QAAQ,GAAGqB,cAAc,GAAG,KAAKjB,aAAR,GAAwB,KAAKF,cAA1D;AACA,QAAI0B,SAAS,GAAG9B,YAAY,CAACmB,MAAD,EAASG,SAAT,CAA5B;AACA,QAAIS,SAAS,GAAGf,MAAM,CAACU,KAAP,GAAe;AAAE;AAAjC;AACA,QAAIM,WAAW,GAAGX,eAAe,CAACY,CAAlC;AACA,QAAIC,WAAW,GAAGb,eAAe,CAACc,CAAlC;AACA,QAAIC,WAAW,GAAGf,eAAe,CAACgB,CAAlC;AACA,QAAIC,MAAM,GAAGlB,KAAK,CAACa,CAAN,GAAUD,WAAvB;AACA,QAAIO,MAAM,GAAGnB,KAAK,CAACe,CAAN,GAAUD,WAAvB;AACA,QAAIM,MAAM,GAAGpB,KAAK,CAACiB,CAAN,GAAUD,WAAvB;AACA,QAAIK,IAAI,GAAGzB,MAAM,CAAC0B,IAAlB;AACA,QAAIC,YAAY,GAAGb,SAAS,GAAGN,SAAZ,GAAwBC,UAA3C;AACA,QAAImB,GAAG,GAAG1B,EAAE,GAAGa,SAAL,GAAiBd,EAAE,GAAG;AAAE;AAAlC;;AACA,SAAK,IAAI4B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGpB,UAApB,EAAgCoB,CAAC,EAAjC,EAAqC;AACjC,UAAIC,MAAM,GAAGF,GAAb;;AACA,WAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGvB,SAApB,EAA+BuB,CAAC,EAAhC,EAAoC;AAChC,YAAIC,CAAC,GAAG9C,QAAQ,CAACyC,YAAY,EAAb,CAAR,GAA2B,GAAnC;AACAF,QAAAA,IAAI,CAACK,MAAM,EAAP,CAAJ,GAAiBd,WAAW,GAAGM,MAAM,GAAGU,CAAxC;AACAP,QAAAA,IAAI,CAACK,MAAM,EAAP,CAAJ,GAAiBZ,WAAW,GAAGK,MAAM,GAAGS,CAAxC;AACAP,QAAAA,IAAI,CAACK,MAAM,EAAP,CAAJ,GAAiBV,WAAW,GAAGI,MAAM,GAAGQ,CAAxC;AACAF,QAAAA,MAAM;AACT;;AACDF,MAAAA,GAAG,IAAIb,SAAP;AACH;AACJ,GA9BD;;AA+BA9B,EAAAA,mBAAmB,CAACa,SAApB,CAA8BmC,eAA9B,GAAgD,UAAUjC,MAAV,EAAkBC,EAAlB,EAAsBC,EAAtB,EAA0BE,KAA1B,EAAiCC,eAAjC,EAAkDE,cAAlD,EAAkE;AAC9G,QAAIC,SAAS,GAAG;AAAE;AAAF,MAA0B,KAAKrB,KAA/C;AACA,QAAIsB,UAAU,GAAG;AAAE;AAAF,MAA2B,KAAKtB,KAAjD;;AACA,QAAIc,EAAE,GAAGO,SAAL,GAAiBR,MAAM,CAACU,KAAxB,IAAiCR,EAAE,GAAGO,UAAL,GAAkBT,MAAM,CAACW,MAA9D,EAAsE;AAClEC,MAAAA,OAAO,CAACC,IAAR,CAAa,uCAAb;AACA;AACH;;AACD,QAAIE,SAAS,GAAGf,MAAM,CAACU,KAAP,GAAe;AAAE;AAAjC;AACA,QAAIsB,CAAC,GAAG,GAAR;AACA,QAAIhB,WAAW,GAAGX,eAAe,CAACY,CAAlC;AACA,QAAIC,WAAW,GAAGb,eAAe,CAACc,CAAlC;AACA,QAAIC,WAAW,GAAGf,eAAe,CAACgB,CAAlC;AACA,QAAIC,MAAM,GAAGlB,KAAK,CAACa,CAAN,GAAUD,WAAvB;AACA,QAAIO,MAAM,GAAGnB,KAAK,CAACe,CAAN,GAAUD,WAAvB;AACA,QAAIM,MAAM,GAAGpB,KAAK,CAACiB,CAAN,GAAUD,WAAvB;AACA,QAAIc,MAAM,GAAGlB,WAAW,GAAGM,MAAM,GAAGU,CAApC;AACA,QAAIG,MAAM,GAAGjB,WAAW,GAAGK,MAAM,GAAGS,CAApC;AACA,QAAII,MAAM,GAAGhB,WAAW,GAAGI,MAAM,GAAGQ,CAApC;AACA,QAAIP,IAAI,GAAGzB,MAAM,CAAC0B,IAAlB;AACA,QAAIE,GAAG,GAAG1B,EAAE,GAAGa,SAAL,GAAiBd,EAAE,GAAG;AAAE;AAAlC;;AACA,SAAK,IAAI4B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGpB,UAApB,EAAgCoB,CAAC,EAAjC,EAAqC;AACjC,UAAIC,MAAM,GAAGF,GAAb;;AACA,WAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGvB,SAApB,EAA+BuB,CAAC,EAAhC,EAAoC;AAChCN,QAAAA,IAAI,CAACK,MAAM,EAAP,CAAJ,GAAiBI,MAAjB;AACAT,QAAAA,IAAI,CAACK,MAAM,EAAP,CAAJ,GAAiBK,MAAjB;AACAV,QAAAA,IAAI,CAACK,MAAM,EAAP,CAAJ,GAAiBM,MAAjB;AACAN,QAAAA,MAAM;AACT;;AACDF,MAAAA,GAAG,IAAIb,SAAP;AACH;AACJ,GA9BD;;AA+BA,SAAO9B,mBAAP;AACH,CA5EwC,EAAzC;;AA6EA,SAASA,mBAAT","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { getCharIndex } from './minimapCharSheet.js';\r\nvar MinimapCharRenderer = /** @class */ (function () {\r\n    function MinimapCharRenderer(charData, scale) {\r\n        this.scale = scale;\r\n        this.charDataNormal = MinimapCharRenderer.soften(charData, 12 / 15);\r\n        this.charDataLight = MinimapCharRenderer.soften(charData, 50 / 60);\r\n    }\r\n    MinimapCharRenderer.soften = function (input, ratio) {\r\n        var result = new Uint8ClampedArray(input.length);\r\n        for (var i = 0, len = input.length; i < len; i++) {\r\n            result[i] = input[i] * ratio;\r\n        }\r\n        return result;\r\n    };\r\n    MinimapCharRenderer.prototype.renderChar = function (target, dx, dy, chCode, color, backgroundColor, fontScale, useLighterFont) {\r\n        var charWidth = 1 /* BASE_CHAR_WIDTH */ * this.scale;\r\n        var charHeight = 2 /* BASE_CHAR_HEIGHT */ * this.scale;\r\n        if (dx + charWidth > target.width || dy + charHeight > target.height) {\r\n            console.warn('bad render request outside image data');\r\n            return;\r\n        }\r\n        var charData = useLighterFont ? this.charDataLight : this.charDataNormal;\r\n        var charIndex = getCharIndex(chCode, fontScale);\r\n        var destWidth = target.width * 4 /* RGBA_CHANNELS_CNT */;\r\n        var backgroundR = backgroundColor.r;\r\n        var backgroundG = backgroundColor.g;\r\n        var backgroundB = backgroundColor.b;\r\n        var deltaR = color.r - backgroundR;\r\n        var deltaG = color.g - backgroundG;\r\n        var deltaB = color.b - backgroundB;\r\n        var dest = target.data;\r\n        var sourceOffset = charIndex * charWidth * charHeight;\r\n        var row = dy * destWidth + dx * 4 /* RGBA_CHANNELS_CNT */;\r\n        for (var y = 0; y < charHeight; y++) {\r\n            var column = row;\r\n            for (var x = 0; x < charWidth; x++) {\r\n                var c = charData[sourceOffset++] / 255;\r\n                dest[column++] = backgroundR + deltaR * c;\r\n                dest[column++] = backgroundG + deltaG * c;\r\n                dest[column++] = backgroundB + deltaB * c;\r\n                column++;\r\n            }\r\n            row += destWidth;\r\n        }\r\n    };\r\n    MinimapCharRenderer.prototype.blockRenderChar = function (target, dx, dy, color, backgroundColor, useLighterFont) {\r\n        var charWidth = 1 /* BASE_CHAR_WIDTH */ * this.scale;\r\n        var charHeight = 2 /* BASE_CHAR_HEIGHT */ * this.scale;\r\n        if (dx + charWidth > target.width || dy + charHeight > target.height) {\r\n            console.warn('bad render request outside image data');\r\n            return;\r\n        }\r\n        var destWidth = target.width * 4 /* RGBA_CHANNELS_CNT */;\r\n        var c = 0.5;\r\n        var backgroundR = backgroundColor.r;\r\n        var backgroundG = backgroundColor.g;\r\n        var backgroundB = backgroundColor.b;\r\n        var deltaR = color.r - backgroundR;\r\n        var deltaG = color.g - backgroundG;\r\n        var deltaB = color.b - backgroundB;\r\n        var colorR = backgroundR + deltaR * c;\r\n        var colorG = backgroundG + deltaG * c;\r\n        var colorB = backgroundB + deltaB * c;\r\n        var dest = target.data;\r\n        var row = dy * destWidth + dx * 4 /* RGBA_CHANNELS_CNT */;\r\n        for (var y = 0; y < charHeight; y++) {\r\n            var column = row;\r\n            for (var x = 0; x < charWidth; x++) {\r\n                dest[column++] = colorR;\r\n                dest[column++] = colorG;\r\n                dest[column++] = colorB;\r\n                column++;\r\n            }\r\n            row += destWidth;\r\n        }\r\n    };\r\n    return MinimapCharRenderer;\r\n}());\r\nexport { MinimapCharRenderer };\r\n"]},"metadata":{},"sourceType":"module"}