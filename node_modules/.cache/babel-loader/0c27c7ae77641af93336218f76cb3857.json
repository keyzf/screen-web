{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport * as platform from '../../registry/common/platform.js';\nimport { Color, RGBA } from '../../../base/common/color.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport * as nls from '../../../nls.js';\nimport { Extensions as JSONExtensions } from '../../jsonschemas/common/jsonContributionRegistry.js';\nimport { RunOnceScheduler } from '../../../base/common/async.js'; // color registry\n\nexport var Extensions = {\n  ColorContribution: 'base.contributions.colors'\n};\n\nvar ColorRegistry =\n/** @class */\nfunction () {\n  function ColorRegistry() {\n    this._onDidChangeSchema = new Emitter();\n    this.onDidChangeSchema = this._onDidChangeSchema.event;\n    this.colorSchema = {\n      type: 'object',\n      properties: {}\n    };\n    this.colorReferenceSchema = {\n      type: 'string',\n      enum: [],\n      enumDescriptions: []\n    };\n    this.colorsById = {};\n  }\n\n  ColorRegistry.prototype.registerColor = function (id, defaults, description, needsTransparency, deprecationMessage) {\n    if (needsTransparency === void 0) {\n      needsTransparency = false;\n    }\n\n    var colorContribution = {\n      id: id,\n      description: description,\n      defaults: defaults,\n      needsTransparency: needsTransparency,\n      deprecationMessage: deprecationMessage\n    };\n    this.colorsById[id] = colorContribution;\n    var propertySchema = {\n      type: 'string',\n      description: description,\n      format: 'color-hex',\n      defaultSnippets: [{\n        body: '${1:#ff0000}'\n      }]\n    };\n\n    if (deprecationMessage) {\n      propertySchema.deprecationMessage = deprecationMessage;\n    }\n\n    this.colorSchema.properties[id] = propertySchema;\n    this.colorReferenceSchema.enum.push(id);\n    this.colorReferenceSchema.enumDescriptions.push(description);\n\n    this._onDidChangeSchema.fire();\n\n    return id;\n  };\n\n  ColorRegistry.prototype.resolveDefaultColor = function (id, theme) {\n    var colorDesc = this.colorsById[id];\n\n    if (colorDesc && colorDesc.defaults) {\n      var colorValue = colorDesc.defaults[theme.type];\n      return resolveColorValue(colorValue, theme);\n    }\n\n    return undefined;\n  };\n\n  ColorRegistry.prototype.getColorSchema = function () {\n    return this.colorSchema;\n  };\n\n  ColorRegistry.prototype.toString = function () {\n    var _this = this;\n\n    var sorter = function (a, b) {\n      var cat1 = a.indexOf('.') === -1 ? 0 : 1;\n      var cat2 = b.indexOf('.') === -1 ? 0 : 1;\n\n      if (cat1 !== cat2) {\n        return cat1 - cat2;\n      }\n\n      return a.localeCompare(b);\n    };\n\n    return Object.keys(this.colorsById).sort(sorter).map(function (k) {\n      return \"- `\" + k + \"`: \" + _this.colorsById[k].description;\n    }).join('\\n');\n  };\n\n  return ColorRegistry;\n}();\n\nvar colorRegistry = new ColorRegistry();\nplatform.Registry.add(Extensions.ColorContribution, colorRegistry);\nexport function registerColor(id, defaults, description, needsTransparency, deprecationMessage) {\n  return colorRegistry.registerColor(id, defaults, description, needsTransparency, deprecationMessage);\n} // ----- base colors\n\nexport var foreground = registerColor('foreground', {\n  dark: '#CCCCCC',\n  light: '#616161',\n  hc: '#FFFFFF'\n}, nls.localize('foreground', \"Overall foreground color. This color is only used if not overridden by a component.\"));\nexport var errorForeground = registerColor('errorForeground', {\n  dark: '#F48771',\n  light: '#A1260D',\n  hc: '#F48771'\n}, nls.localize('errorForeground', \"Overall foreground color for error messages. This color is only used if not overridden by a component.\"));\nexport var focusBorder = registerColor('focusBorder', {\n  dark: Color.fromHex('#0E639C').transparent(0.8),\n  light: Color.fromHex('#007ACC').transparent(0.4),\n  hc: '#F38518'\n}, nls.localize('focusBorder', \"Overall border color for focused elements. This color is only used if not overridden by a component.\"));\nexport var contrastBorder = registerColor('contrastBorder', {\n  light: null,\n  dark: null,\n  hc: '#6FC3DF'\n}, nls.localize('contrastBorder', \"An extra border around elements to separate them from others for greater contrast.\"));\nexport var activeContrastBorder = registerColor('contrastActiveBorder', {\n  light: null,\n  dark: null,\n  hc: focusBorder\n}, nls.localize('activeContrastBorder', \"An extra border around active elements to separate them from others for greater contrast.\"));\nexport var textLinkForeground = registerColor('textLink.foreground', {\n  light: '#006AB1',\n  dark: '#3794FF',\n  hc: '#3794FF'\n}, nls.localize('textLinkForeground', \"Foreground color for links in text.\"));\nexport var textCodeBlockBackground = registerColor('textCodeBlock.background', {\n  light: '#dcdcdc66',\n  dark: '#0a0a0a66',\n  hc: Color.black\n}, nls.localize('textCodeBlockBackground', \"Background color for code blocks in text.\")); // ----- widgets\n\nexport var widgetShadow = registerColor('widget.shadow', {\n  dark: '#000000',\n  light: '#A8A8A8',\n  hc: null\n}, nls.localize('widgetShadow', 'Shadow color of widgets such as find/replace inside the editor.'));\nexport var inputBackground = registerColor('input.background', {\n  dark: '#3C3C3C',\n  light: Color.white,\n  hc: Color.black\n}, nls.localize('inputBoxBackground', \"Input box background.\"));\nexport var inputForeground = registerColor('input.foreground', {\n  dark: foreground,\n  light: foreground,\n  hc: foreground\n}, nls.localize('inputBoxForeground', \"Input box foreground.\"));\nexport var inputBorder = registerColor('input.border', {\n  dark: null,\n  light: null,\n  hc: contrastBorder\n}, nls.localize('inputBoxBorder', \"Input box border.\"));\nexport var inputActiveOptionBorder = registerColor('inputOption.activeBorder', {\n  dark: '#007ACC00',\n  light: '#007ACC00',\n  hc: contrastBorder\n}, nls.localize('inputBoxActiveOptionBorder', \"Border color of activated options in input fields.\"));\nexport var inputActiveOptionBackground = registerColor('inputOption.activeBackground', {\n  dark: transparent(focusBorder, 0.5),\n  light: transparent(focusBorder, 0.3),\n  hc: null\n}, nls.localize('inputOption.activeBackground', \"Background color of activated options in input fields.\"));\nexport var inputValidationInfoBackground = registerColor('inputValidation.infoBackground', {\n  dark: '#063B49',\n  light: '#D6ECF2',\n  hc: Color.black\n}, nls.localize('inputValidationInfoBackground', \"Input validation background color for information severity.\"));\nexport var inputValidationInfoForeground = registerColor('inputValidation.infoForeground', {\n  dark: null,\n  light: null,\n  hc: null\n}, nls.localize('inputValidationInfoForeground', \"Input validation foreground color for information severity.\"));\nexport var inputValidationInfoBorder = registerColor('inputValidation.infoBorder', {\n  dark: '#007acc',\n  light: '#007acc',\n  hc: contrastBorder\n}, nls.localize('inputValidationInfoBorder', \"Input validation border color for information severity.\"));\nexport var inputValidationWarningBackground = registerColor('inputValidation.warningBackground', {\n  dark: '#352A05',\n  light: '#F6F5D2',\n  hc: Color.black\n}, nls.localize('inputValidationWarningBackground', \"Input validation background color for warning severity.\"));\nexport var inputValidationWarningForeground = registerColor('inputValidation.warningForeground', {\n  dark: null,\n  light: null,\n  hc: null\n}, nls.localize('inputValidationWarningForeground', \"Input validation foreground color for warning severity.\"));\nexport var inputValidationWarningBorder = registerColor('inputValidation.warningBorder', {\n  dark: '#B89500',\n  light: '#B89500',\n  hc: contrastBorder\n}, nls.localize('inputValidationWarningBorder', \"Input validation border color for warning severity.\"));\nexport var inputValidationErrorBackground = registerColor('inputValidation.errorBackground', {\n  dark: '#5A1D1D',\n  light: '#F2DEDE',\n  hc: Color.black\n}, nls.localize('inputValidationErrorBackground', \"Input validation background color for error severity.\"));\nexport var inputValidationErrorForeground = registerColor('inputValidation.errorForeground', {\n  dark: null,\n  light: null,\n  hc: null\n}, nls.localize('inputValidationErrorForeground', \"Input validation foreground color for error severity.\"));\nexport var inputValidationErrorBorder = registerColor('inputValidation.errorBorder', {\n  dark: '#BE1100',\n  light: '#BE1100',\n  hc: contrastBorder\n}, nls.localize('inputValidationErrorBorder', \"Input validation border color for error severity.\"));\nexport var selectBackground = registerColor('dropdown.background', {\n  dark: '#3C3C3C',\n  light: Color.white,\n  hc: Color.black\n}, nls.localize('dropdownBackground', \"Dropdown background.\"));\nexport var selectForeground = registerColor('dropdown.foreground', {\n  dark: '#F0F0F0',\n  light: null,\n  hc: Color.white\n}, nls.localize('dropdownForeground', \"Dropdown foreground.\"));\nexport var pickerGroupForeground = registerColor('pickerGroup.foreground', {\n  dark: '#3794FF',\n  light: '#0066BF',\n  hc: Color.white\n}, nls.localize('pickerGroupForeground', \"Quick picker color for grouping labels.\"));\nexport var pickerGroupBorder = registerColor('pickerGroup.border', {\n  dark: '#3F3F46',\n  light: '#CCCEDB',\n  hc: Color.white\n}, nls.localize('pickerGroupBorder', \"Quick picker color for grouping borders.\"));\nexport var badgeBackground = registerColor('badge.background', {\n  dark: '#4D4D4D',\n  light: '#C4C4C4',\n  hc: Color.black\n}, nls.localize('badgeBackground', \"Badge background color. Badges are small information labels, e.g. for search results count.\"));\nexport var badgeForeground = registerColor('badge.foreground', {\n  dark: Color.white,\n  light: '#333',\n  hc: Color.white\n}, nls.localize('badgeForeground', \"Badge foreground color. Badges are small information labels, e.g. for search results count.\"));\nexport var scrollbarShadow = registerColor('scrollbar.shadow', {\n  dark: '#000000',\n  light: '#DDDDDD',\n  hc: null\n}, nls.localize('scrollbarShadow', \"Scrollbar shadow to indicate that the view is scrolled.\"));\nexport var scrollbarSliderBackground = registerColor('scrollbarSlider.background', {\n  dark: Color.fromHex('#797979').transparent(0.4),\n  light: Color.fromHex('#646464').transparent(0.4),\n  hc: transparent(contrastBorder, 0.6)\n}, nls.localize('scrollbarSliderBackground', \"Scrollbar slider background color.\"));\nexport var scrollbarSliderHoverBackground = registerColor('scrollbarSlider.hoverBackground', {\n  dark: Color.fromHex('#646464').transparent(0.7),\n  light: Color.fromHex('#646464').transparent(0.7),\n  hc: transparent(contrastBorder, 0.8)\n}, nls.localize('scrollbarSliderHoverBackground', \"Scrollbar slider background color when hovering.\"));\nexport var scrollbarSliderActiveBackground = registerColor('scrollbarSlider.activeBackground', {\n  dark: Color.fromHex('#BFBFBF').transparent(0.4),\n  light: Color.fromHex('#000000').transparent(0.6),\n  hc: contrastBorder\n}, nls.localize('scrollbarSliderActiveBackground', \"Scrollbar slider background color when clicked on.\"));\nexport var progressBarBackground = registerColor('progressBar.background', {\n  dark: Color.fromHex('#0E70C0'),\n  light: Color.fromHex('#0E70C0'),\n  hc: contrastBorder\n}, nls.localize('progressBarBackground', \"Background color of the progress bar that can show for long running operations.\"));\nexport var editorErrorForeground = registerColor('editorError.foreground', {\n  dark: '#F48771',\n  light: '#E51400',\n  hc: null\n}, nls.localize('editorError.foreground', 'Foreground color of error squigglies in the editor.'));\nexport var editorErrorBorder = registerColor('editorError.border', {\n  dark: null,\n  light: null,\n  hc: Color.fromHex('#E47777').transparent(0.8)\n}, nls.localize('errorBorder', 'Border color of error boxes in the editor.'));\nexport var editorWarningForeground = registerColor('editorWarning.foreground', {\n  dark: '#CCA700',\n  light: '#E9A700',\n  hc: null\n}, nls.localize('editorWarning.foreground', 'Foreground color of warning squigglies in the editor.'));\nexport var editorWarningBorder = registerColor('editorWarning.border', {\n  dark: null,\n  light: null,\n  hc: Color.fromHex('#FFCC00').transparent(0.8)\n}, nls.localize('warningBorder', 'Border color of warning boxes in the editor.'));\nexport var editorInfoForeground = registerColor('editorInfo.foreground', {\n  dark: '#75BEFF',\n  light: '#75BEFF',\n  hc: null\n}, nls.localize('editorInfo.foreground', 'Foreground color of info squigglies in the editor.'));\nexport var editorInfoBorder = registerColor('editorInfo.border', {\n  dark: null,\n  light: null,\n  hc: Color.fromHex('#75BEFF').transparent(0.8)\n}, nls.localize('infoBorder', 'Border color of info boxes in the editor.'));\nexport var editorHintForeground = registerColor('editorHint.foreground', {\n  dark: Color.fromHex('#eeeeee').transparent(0.7),\n  light: '#6c6c6c',\n  hc: null\n}, nls.localize('editorHint.foreground', 'Foreground color of hint squigglies in the editor.'));\nexport var editorHintBorder = registerColor('editorHint.border', {\n  dark: null,\n  light: null,\n  hc: Color.fromHex('#eeeeee').transparent(0.8)\n}, nls.localize('hintBorder', 'Border color of hint boxes in the editor.'));\n/**\r\n * Editor background color.\r\n * Because of bug https://monacotools.visualstudio.com/DefaultCollection/Monaco/_workitems/edit/13254\r\n * we are *not* using the color white (or #ffffff, rgba(255,255,255)) but something very close to white.\r\n */\n\nexport var editorBackground = registerColor('editor.background', {\n  light: '#fffffe',\n  dark: '#1E1E1E',\n  hc: Color.black\n}, nls.localize('editorBackground', \"Editor background color.\"));\n/**\r\n * Editor foreground color.\r\n */\n\nexport var editorForeground = registerColor('editor.foreground', {\n  light: '#333333',\n  dark: '#BBBBBB',\n  hc: Color.white\n}, nls.localize('editorForeground', \"Editor default foreground color.\"));\n/**\r\n * Editor widgets\r\n */\n\nexport var editorWidgetBackground = registerColor('editorWidget.background', {\n  dark: '#252526',\n  light: '#F3F3F3',\n  hc: '#0C141F'\n}, nls.localize('editorWidgetBackground', 'Background color of editor widgets, such as find/replace.'));\nexport var editorWidgetForeground = registerColor('editorWidget.foreground', {\n  dark: foreground,\n  light: foreground,\n  hc: foreground\n}, nls.localize('editorWidgetForeground', 'Foreground color of editor widgets, such as find/replace.'));\nexport var editorWidgetBorder = registerColor('editorWidget.border', {\n  dark: '#454545',\n  light: '#C8C8C8',\n  hc: contrastBorder\n}, nls.localize('editorWidgetBorder', 'Border color of editor widgets. The color is only used if the widget chooses to have a border and if the color is not overridden by a widget.'));\nexport var editorWidgetResizeBorder = registerColor('editorWidget.resizeBorder', {\n  light: null,\n  dark: null,\n  hc: null\n}, nls.localize('editorWidgetResizeBorder', \"Border color of the resize bar of editor widgets. The color is only used if the widget chooses to have a resize border and if the color is not overridden by a widget.\"));\n/**\r\n * Editor selection colors.\r\n */\n\nexport var editorSelectionBackground = registerColor('editor.selectionBackground', {\n  light: '#ADD6FF',\n  dark: '#264F78',\n  hc: '#f3f518'\n}, nls.localize('editorSelectionBackground', \"Color of the editor selection.\"));\nexport var editorSelectionForeground = registerColor('editor.selectionForeground', {\n  light: null,\n  dark: null,\n  hc: '#000000'\n}, nls.localize('editorSelectionForeground', \"Color of the selected text for high contrast.\"));\nexport var editorInactiveSelection = registerColor('editor.inactiveSelectionBackground', {\n  light: transparent(editorSelectionBackground, 0.5),\n  dark: transparent(editorSelectionBackground, 0.5),\n  hc: transparent(editorSelectionBackground, 0.5)\n}, nls.localize('editorInactiveSelection', \"Color of the selection in an inactive editor. The color must not be opaque so as not to hide underlying decorations.\"), true);\nexport var editorSelectionHighlight = registerColor('editor.selectionHighlightBackground', {\n  light: lessProminent(editorSelectionBackground, editorBackground, 0.3, 0.6),\n  dark: lessProminent(editorSelectionBackground, editorBackground, 0.3, 0.6),\n  hc: null\n}, nls.localize('editorSelectionHighlight', 'Color for regions with the same content as the selection. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport var editorSelectionHighlightBorder = registerColor('editor.selectionHighlightBorder', {\n  light: null,\n  dark: null,\n  hc: activeContrastBorder\n}, nls.localize('editorSelectionHighlightBorder', \"Border color for regions with the same content as the selection.\"));\n/**\r\n * Editor find match colors.\r\n */\n\nexport var editorFindMatch = registerColor('editor.findMatchBackground', {\n  light: '#A8AC94',\n  dark: '#515C6A',\n  hc: null\n}, nls.localize('editorFindMatch', \"Color of the current search match.\"));\nexport var editorFindMatchHighlight = registerColor('editor.findMatchHighlightBackground', {\n  light: '#EA5C0055',\n  dark: '#EA5C0055',\n  hc: null\n}, nls.localize('findMatchHighlight', \"Color of the other search matches. The color must not be opaque so as not to hide underlying decorations.\"), true);\nexport var editorFindRangeHighlight = registerColor('editor.findRangeHighlightBackground', {\n  dark: '#3a3d4166',\n  light: '#b4b4b44d',\n  hc: null\n}, nls.localize('findRangeHighlight', \"Color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations.\"), true);\nexport var editorFindMatchBorder = registerColor('editor.findMatchBorder', {\n  light: null,\n  dark: null,\n  hc: activeContrastBorder\n}, nls.localize('editorFindMatchBorder', \"Border color of the current search match.\"));\nexport var editorFindMatchHighlightBorder = registerColor('editor.findMatchHighlightBorder', {\n  light: null,\n  dark: null,\n  hc: activeContrastBorder\n}, nls.localize('findMatchHighlightBorder', \"Border color of the other search matches.\"));\nexport var editorFindRangeHighlightBorder = registerColor('editor.findRangeHighlightBorder', {\n  dark: null,\n  light: null,\n  hc: transparent(activeContrastBorder, 0.4)\n}, nls.localize('findRangeHighlightBorder', \"Border color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations.\"), true);\n/**\r\n * Editor hover\r\n */\n\nexport var editorHoverHighlight = registerColor('editor.hoverHighlightBackground', {\n  light: '#ADD6FF26',\n  dark: '#264f7840',\n  hc: '#ADD6FF26'\n}, nls.localize('hoverHighlight', 'Highlight below the word for which a hover is shown. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport var editorHoverBackground = registerColor('editorHoverWidget.background', {\n  light: editorWidgetBackground,\n  dark: editorWidgetBackground,\n  hc: editorWidgetBackground\n}, nls.localize('hoverBackground', 'Background color of the editor hover.'));\nexport var editorHoverForeground = registerColor('editorHoverWidget.foreground', {\n  light: editorWidgetForeground,\n  dark: editorWidgetForeground,\n  hc: editorWidgetForeground\n}, nls.localize('hoverForeground', 'Foreground color of the editor hover.'));\nexport var editorHoverBorder = registerColor('editorHoverWidget.border', {\n  light: editorWidgetBorder,\n  dark: editorWidgetBorder,\n  hc: editorWidgetBorder\n}, nls.localize('hoverBorder', 'Border color of the editor hover.'));\nexport var editorHoverStatusBarBackground = registerColor('editorHoverWidget.statusBarBackground', {\n  dark: lighten(editorHoverBackground, 0.2),\n  light: darken(editorHoverBackground, 0.05),\n  hc: editorWidgetBackground\n}, nls.localize('statusBarBackground', \"Background color of the editor hover status bar.\"));\n/**\r\n * Editor link colors\r\n */\n\nexport var editorActiveLinkForeground = registerColor('editorLink.activeForeground', {\n  dark: '#4E94CE',\n  light: Color.blue,\n  hc: Color.cyan\n}, nls.localize('activeLinkForeground', 'Color of active links.'));\n/**\r\n * Editor lighbulb icon colors\r\n */\n\nexport var editorLightBulbForeground = registerColor('editorLightBulb.foreground', {\n  dark: '#FFCC00',\n  light: '#DDB100',\n  hc: '#FFCC00'\n}, nls.localize('editorLightBulbForeground', \"The color used for the lightbulb actions icon.\"));\nexport var editorLightBulbAutoFixForeground = registerColor('editorLightBulbAutoFix.foreground', {\n  dark: '#75BEFF',\n  light: '#007ACC',\n  hc: '#75BEFF'\n}, nls.localize('editorLightBulbAutoFixForeground', \"The color used for the lightbulb auto fix actions icon.\"));\n/**\r\n * Diff Editor Colors\r\n */\n\nexport var defaultInsertColor = new Color(new RGBA(155, 185, 85, 0.2));\nexport var defaultRemoveColor = new Color(new RGBA(255, 0, 0, 0.2));\nexport var diffInserted = registerColor('diffEditor.insertedTextBackground', {\n  dark: defaultInsertColor,\n  light: defaultInsertColor,\n  hc: null\n}, nls.localize('diffEditorInserted', 'Background color for text that got inserted. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport var diffRemoved = registerColor('diffEditor.removedTextBackground', {\n  dark: defaultRemoveColor,\n  light: defaultRemoveColor,\n  hc: null\n}, nls.localize('diffEditorRemoved', 'Background color for text that got removed. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport var diffInsertedOutline = registerColor('diffEditor.insertedTextBorder', {\n  dark: null,\n  light: null,\n  hc: '#33ff2eff'\n}, nls.localize('diffEditorInsertedOutline', 'Outline color for the text that got inserted.'));\nexport var diffRemovedOutline = registerColor('diffEditor.removedTextBorder', {\n  dark: null,\n  light: null,\n  hc: '#FF008F'\n}, nls.localize('diffEditorRemovedOutline', 'Outline color for text that got removed.'));\nexport var diffBorder = registerColor('diffEditor.border', {\n  dark: null,\n  light: null,\n  hc: contrastBorder\n}, nls.localize('diffEditorBorder', 'Border color between the two text editors.'));\n/**\r\n * List and tree colors\r\n */\n\nexport var listFocusBackground = registerColor('list.focusBackground', {\n  dark: '#062F4A',\n  light: '#D6EBFF',\n  hc: null\n}, nls.localize('listFocusBackground', \"List/Tree background color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport var listFocusForeground = registerColor('list.focusForeground', {\n  dark: null,\n  light: null,\n  hc: null\n}, nls.localize('listFocusForeground', \"List/Tree foreground color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport var listActiveSelectionBackground = registerColor('list.activeSelectionBackground', {\n  dark: '#094771',\n  light: '#0074E8',\n  hc: null\n}, nls.localize('listActiveSelectionBackground', \"List/Tree background color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport var listActiveSelectionForeground = registerColor('list.activeSelectionForeground', {\n  dark: Color.white,\n  light: Color.white,\n  hc: null\n}, nls.localize('listActiveSelectionForeground', \"List/Tree foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport var listInactiveSelectionBackground = registerColor('list.inactiveSelectionBackground', {\n  dark: '#37373D',\n  light: '#E4E6F1',\n  hc: null\n}, nls.localize('listInactiveSelectionBackground', \"List/Tree background color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport var listInactiveSelectionForeground = registerColor('list.inactiveSelectionForeground', {\n  dark: null,\n  light: null,\n  hc: null\n}, nls.localize('listInactiveSelectionForeground', \"List/Tree foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport var listInactiveFocusBackground = registerColor('list.inactiveFocusBackground', {\n  dark: null,\n  light: null,\n  hc: null\n}, nls.localize('listInactiveFocusBackground', \"List/Tree background color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport var listHoverBackground = registerColor('list.hoverBackground', {\n  dark: '#2A2D2E',\n  light: '#F0F0F0',\n  hc: null\n}, nls.localize('listHoverBackground', \"List/Tree background when hovering over items using the mouse.\"));\nexport var listHoverForeground = registerColor('list.hoverForeground', {\n  dark: null,\n  light: null,\n  hc: null\n}, nls.localize('listHoverForeground', \"List/Tree foreground when hovering over items using the mouse.\"));\nexport var listDropBackground = registerColor('list.dropBackground', {\n  dark: listFocusBackground,\n  light: listFocusBackground,\n  hc: null\n}, nls.localize('listDropBackground', \"List/Tree drag and drop background when moving items around using the mouse.\"));\nexport var listHighlightForeground = registerColor('list.highlightForeground', {\n  dark: '#0097fb',\n  light: '#0066BF',\n  hc: focusBorder\n}, nls.localize('highlight', 'List/Tree foreground color of the match highlights when searching inside the list/tree.'));\nexport var listFilterWidgetBackground = registerColor('listFilterWidget.background', {\n  light: '#efc1ad',\n  dark: '#653723',\n  hc: Color.black\n}, nls.localize('listFilterWidgetBackground', 'Background color of the type filter widget in lists and trees.'));\nexport var listFilterWidgetOutline = registerColor('listFilterWidget.outline', {\n  dark: Color.transparent,\n  light: Color.transparent,\n  hc: '#f38518'\n}, nls.localize('listFilterWidgetOutline', 'Outline color of the type filter widget in lists and trees.'));\nexport var listFilterWidgetNoMatchesOutline = registerColor('listFilterWidget.noMatchesOutline', {\n  dark: '#BE1100',\n  light: '#BE1100',\n  hc: contrastBorder\n}, nls.localize('listFilterWidgetNoMatchesOutline', 'Outline color of the type filter widget in lists and trees, when there are no matches.'));\nexport var treeIndentGuidesStroke = registerColor('tree.indentGuidesStroke', {\n  dark: '#585858',\n  light: '#a9a9a9',\n  hc: '#a9a9a9'\n}, nls.localize('treeIndentGuidesStroke', \"Tree stroke color for the indentation guides.\"));\n/**\r\n * Menu colors\r\n */\n\nexport var menuBorder = registerColor('menu.border', {\n  dark: null,\n  light: null,\n  hc: contrastBorder\n}, nls.localize('menuBorder', \"Border color of menus.\"));\nexport var menuForeground = registerColor('menu.foreground', {\n  dark: selectForeground,\n  light: foreground,\n  hc: selectForeground\n}, nls.localize('menuForeground', \"Foreground color of menu items.\"));\nexport var menuBackground = registerColor('menu.background', {\n  dark: selectBackground,\n  light: selectBackground,\n  hc: selectBackground\n}, nls.localize('menuBackground', \"Background color of menu items.\"));\nexport var menuSelectionForeground = registerColor('menu.selectionForeground', {\n  dark: listActiveSelectionForeground,\n  light: listActiveSelectionForeground,\n  hc: listActiveSelectionForeground\n}, nls.localize('menuSelectionForeground', \"Foreground color of the selected menu item in menus.\"));\nexport var menuSelectionBackground = registerColor('menu.selectionBackground', {\n  dark: listActiveSelectionBackground,\n  light: listActiveSelectionBackground,\n  hc: listActiveSelectionBackground\n}, nls.localize('menuSelectionBackground', \"Background color of the selected menu item in menus.\"));\nexport var menuSelectionBorder = registerColor('menu.selectionBorder', {\n  dark: null,\n  light: null,\n  hc: activeContrastBorder\n}, nls.localize('menuSelectionBorder', \"Border color of the selected menu item in menus.\"));\nexport var menuSeparatorBackground = registerColor('menu.separatorBackground', {\n  dark: '#BBBBBB',\n  light: '#888888',\n  hc: contrastBorder\n}, nls.localize('menuSeparatorBackground', \"Color of a separator menu item in menus.\"));\n/**\r\n * Snippet placeholder colors\r\n */\n\nexport var snippetTabstopHighlightBackground = registerColor('editor.snippetTabstopHighlightBackground', {\n  dark: new Color(new RGBA(124, 124, 124, 0.3)),\n  light: new Color(new RGBA(10, 50, 100, 0.2)),\n  hc: new Color(new RGBA(124, 124, 124, 0.3))\n}, nls.localize('snippetTabstopHighlightBackground', \"Highlight background color of a snippet tabstop.\"));\nexport var snippetTabstopHighlightBorder = registerColor('editor.snippetTabstopHighlightBorder', {\n  dark: null,\n  light: null,\n  hc: null\n}, nls.localize('snippetTabstopHighlightBorder', \"Highlight border color of a snippet tabstop.\"));\nexport var snippetFinalTabstopHighlightBackground = registerColor('editor.snippetFinalTabstopHighlightBackground', {\n  dark: null,\n  light: null,\n  hc: null\n}, nls.localize('snippetFinalTabstopHighlightBackground', \"Highlight background color of the final tabstop of a snippet.\"));\nexport var snippetFinalTabstopHighlightBorder = registerColor('editor.snippetFinalTabstopHighlightBorder', {\n  dark: '#525252',\n  light: new Color(new RGBA(10, 50, 100, 0.5)),\n  hc: '#525252'\n}, nls.localize('snippetFinalTabstopHighlightBorder', \"Highlight border color of the final stabstop of a snippet.\"));\nexport var overviewRulerFindMatchForeground = registerColor('editorOverviewRuler.findMatchForeground', {\n  dark: '#d186167e',\n  light: '#d186167e',\n  hc: '#AB5A00'\n}, nls.localize('overviewRulerFindMatchForeground', 'Overview ruler marker color for find matches. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport var overviewRulerSelectionHighlightForeground = registerColor('editorOverviewRuler.selectionHighlightForeground', {\n  dark: '#A0A0A0CC',\n  light: '#A0A0A0CC',\n  hc: '#A0A0A0CC'\n}, nls.localize('overviewRulerSelectionHighlightForeground', 'Overview ruler marker color for selection highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport var minimapFindMatch = registerColor('minimap.findMatchHighlight', {\n  light: '#d18616',\n  dark: '#d18616',\n  hc: '#AB5A00'\n}, nls.localize('minimapFindMatchHighlight', 'Minimap marker color for find matches.'), true);\nexport var minimapSelection = registerColor('minimap.selectionHighlight', {\n  light: '#ADD6FF',\n  dark: '#264F78',\n  hc: '#ffffff'\n}, nls.localize('minimapSelectionHighlight', 'Minimap marker color for the editor selection.'), true);\nexport var minimapError = registerColor('minimap.errorHighlight', {\n  dark: new Color(new RGBA(255, 18, 18, 0.7)),\n  light: new Color(new RGBA(255, 18, 18, 0.7)),\n  hc: new Color(new RGBA(255, 50, 50, 1))\n}, nls.localize('minimapError', 'Minimap marker color for errors.'));\nexport var minimapWarning = registerColor('minimap.warningHighlight', {\n  dark: editorWarningForeground,\n  light: editorWarningForeground,\n  hc: editorWarningBorder\n}, nls.localize('overviewRuleWarning', 'Minimap marker color for warnings.'));\nexport var problemsErrorIconForeground = registerColor('problemsErrorIcon.foreground', {\n  dark: editorErrorForeground,\n  light: editorErrorForeground,\n  hc: editorErrorForeground\n}, nls.localize('problemsErrorIconForeground', \"The color used for the problems error icon.\"));\nexport var problemsWarningIconForeground = registerColor('problemsWarningIcon.foreground', {\n  dark: editorWarningForeground,\n  light: editorWarningForeground,\n  hc: editorWarningForeground\n}, nls.localize('problemsWarningIconForeground', \"The color used for the problems warning icon.\"));\nexport var problemsInfoIconForeground = registerColor('problemsInfoIcon.foreground', {\n  dark: editorInfoForeground,\n  light: editorInfoForeground,\n  hc: editorInfoForeground\n}, nls.localize('problemsInfoIconForeground', \"The color used for the problems info icon.\")); // ----- color functions\n\nexport function darken(colorValue, factor) {\n  return function (theme) {\n    var color = resolveColorValue(colorValue, theme);\n\n    if (color) {\n      return color.darken(factor);\n    }\n\n    return undefined;\n  };\n}\nexport function lighten(colorValue, factor) {\n  return function (theme) {\n    var color = resolveColorValue(colorValue, theme);\n\n    if (color) {\n      return color.lighten(factor);\n    }\n\n    return undefined;\n  };\n}\nexport function transparent(colorValue, factor) {\n  return function (theme) {\n    var color = resolveColorValue(colorValue, theme);\n\n    if (color) {\n      return color.transparent(factor);\n    }\n\n    return undefined;\n  };\n}\nexport function oneOf() {\n  var colorValues = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    colorValues[_i] = arguments[_i];\n  }\n\n  return function (theme) {\n    for (var _i = 0, colorValues_1 = colorValues; _i < colorValues_1.length; _i++) {\n      var colorValue = colorValues_1[_i];\n      var color = resolveColorValue(colorValue, theme);\n\n      if (color) {\n        return color;\n      }\n    }\n\n    return undefined;\n  };\n}\n\nfunction lessProminent(colorValue, backgroundColorValue, factor, transparency) {\n  return function (theme) {\n    var from = resolveColorValue(colorValue, theme);\n\n    if (from) {\n      var backgroundColor = resolveColorValue(backgroundColorValue, theme);\n\n      if (backgroundColor) {\n        if (from.isDarkerThan(backgroundColor)) {\n          return Color.getLighterColor(from, backgroundColor, factor).transparent(transparency);\n        }\n\n        return Color.getDarkerColor(from, backgroundColor, factor).transparent(transparency);\n      }\n\n      return from.transparent(factor * transparency);\n    }\n\n    return undefined;\n  };\n} // ----- implementation\n\n/**\r\n * @param colorValue Resolve a color value in the context of a theme\r\n */\n\n\nexport function resolveColorValue(colorValue, theme) {\n  if (colorValue === null) {\n    return undefined;\n  } else if (typeof colorValue === 'string') {\n    if (colorValue[0] === '#') {\n      return Color.fromHex(colorValue);\n    }\n\n    return theme.getColor(colorValue);\n  } else if (colorValue instanceof Color) {\n    return colorValue;\n  } else if (typeof colorValue === 'function') {\n    return colorValue(theme);\n  }\n\n  return undefined;\n}\nexport var workbenchColorsSchemaId = 'vscode://schemas/workbench-colors';\nvar schemaRegistry = platform.Registry.as(JSONExtensions.JSONContribution);\nschemaRegistry.registerSchema(workbenchColorsSchemaId, colorRegistry.getColorSchema());\nvar delayer = new RunOnceScheduler(function () {\n  return schemaRegistry.notifySchemaChanged(workbenchColorsSchemaId);\n}, 200);\ncolorRegistry.onDidChangeSchema(function () {\n  if (!delayer.isScheduled()) {\n    delayer.schedule();\n  }\n}); // setTimeout(_ => console.log(colorRegistry.toString()), 5000);","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/platform/theme/common/colorRegistry.js"],"names":["platform","Color","RGBA","Emitter","nls","Extensions","JSONExtensions","RunOnceScheduler","ColorContribution","ColorRegistry","_onDidChangeSchema","onDidChangeSchema","event","colorSchema","type","properties","colorReferenceSchema","enum","enumDescriptions","colorsById","prototype","registerColor","id","defaults","description","needsTransparency","deprecationMessage","colorContribution","propertySchema","format","defaultSnippets","body","push","fire","resolveDefaultColor","theme","colorDesc","colorValue","resolveColorValue","undefined","getColorSchema","toString","_this","sorter","a","b","cat1","indexOf","cat2","localeCompare","Object","keys","sort","map","k","join","colorRegistry","Registry","add","foreground","dark","light","hc","localize","errorForeground","focusBorder","fromHex","transparent","contrastBorder","activeContrastBorder","textLinkForeground","textCodeBlockBackground","black","widgetShadow","inputBackground","white","inputForeground","inputBorder","inputActiveOptionBorder","inputActiveOptionBackground","inputValidationInfoBackground","inputValidationInfoForeground","inputValidationInfoBorder","inputValidationWarningBackground","inputValidationWarningForeground","inputValidationWarningBorder","inputValidationErrorBackground","inputValidationErrorForeground","inputValidationErrorBorder","selectBackground","selectForeground","pickerGroupForeground","pickerGroupBorder","badgeBackground","badgeForeground","scrollbarShadow","scrollbarSliderBackground","scrollbarSliderHoverBackground","scrollbarSliderActiveBackground","progressBarBackground","editorErrorForeground","editorErrorBorder","editorWarningForeground","editorWarningBorder","editorInfoForeground","editorInfoBorder","editorHintForeground","editorHintBorder","editorBackground","editorForeground","editorWidgetBackground","editorWidgetForeground","editorWidgetBorder","editorWidgetResizeBorder","editorSelectionBackground","editorSelectionForeground","editorInactiveSelection","editorSelectionHighlight","lessProminent","editorSelectionHighlightBorder","editorFindMatch","editorFindMatchHighlight","editorFindRangeHighlight","editorFindMatchBorder","editorFindMatchHighlightBorder","editorFindRangeHighlightBorder","editorHoverHighlight","editorHoverBackground","editorHoverForeground","editorHoverBorder","editorHoverStatusBarBackground","lighten","darken","editorActiveLinkForeground","blue","cyan","editorLightBulbForeground","editorLightBulbAutoFixForeground","defaultInsertColor","defaultRemoveColor","diffInserted","diffRemoved","diffInsertedOutline","diffRemovedOutline","diffBorder","listFocusBackground","listFocusForeground","listActiveSelectionBackground","listActiveSelectionForeground","listInactiveSelectionBackground","listInactiveSelectionForeground","listInactiveFocusBackground","listHoverBackground","listHoverForeground","listDropBackground","listHighlightForeground","listFilterWidgetBackground","listFilterWidgetOutline","listFilterWidgetNoMatchesOutline","treeIndentGuidesStroke","menuBorder","menuForeground","menuBackground","menuSelectionForeground","menuSelectionBackground","menuSelectionBorder","menuSeparatorBackground","snippetTabstopHighlightBackground","snippetTabstopHighlightBorder","snippetFinalTabstopHighlightBackground","snippetFinalTabstopHighlightBorder","overviewRulerFindMatchForeground","overviewRulerSelectionHighlightForeground","minimapFindMatch","minimapSelection","minimapError","minimapWarning","problemsErrorIconForeground","problemsWarningIconForeground","problemsInfoIconForeground","factor","color","oneOf","colorValues","_i","arguments","length","colorValues_1","backgroundColorValue","transparency","from","backgroundColor","isDarkerThan","getLighterColor","getDarkerColor","getColor","workbenchColorsSchemaId","schemaRegistry","as","JSONContribution","registerSchema","delayer","notifySchemaChanged","isScheduled","schedule"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as platform from '../../registry/common/platform.js';\r\nimport { Color, RGBA } from '../../../base/common/color.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport * as nls from '../../../nls.js';\r\nimport { Extensions as JSONExtensions } from '../../jsonschemas/common/jsonContributionRegistry.js';\r\nimport { RunOnceScheduler } from '../../../base/common/async.js';\r\n// color registry\r\nexport var Extensions = {\r\n    ColorContribution: 'base.contributions.colors'\r\n};\r\nvar ColorRegistry = /** @class */ (function () {\r\n    function ColorRegistry() {\r\n        this._onDidChangeSchema = new Emitter();\r\n        this.onDidChangeSchema = this._onDidChangeSchema.event;\r\n        this.colorSchema = { type: 'object', properties: {} };\r\n        this.colorReferenceSchema = { type: 'string', enum: [], enumDescriptions: [] };\r\n        this.colorsById = {};\r\n    }\r\n    ColorRegistry.prototype.registerColor = function (id, defaults, description, needsTransparency, deprecationMessage) {\r\n        if (needsTransparency === void 0) { needsTransparency = false; }\r\n        var colorContribution = { id: id, description: description, defaults: defaults, needsTransparency: needsTransparency, deprecationMessage: deprecationMessage };\r\n        this.colorsById[id] = colorContribution;\r\n        var propertySchema = { type: 'string', description: description, format: 'color-hex', defaultSnippets: [{ body: '${1:#ff0000}' }] };\r\n        if (deprecationMessage) {\r\n            propertySchema.deprecationMessage = deprecationMessage;\r\n        }\r\n        this.colorSchema.properties[id] = propertySchema;\r\n        this.colorReferenceSchema.enum.push(id);\r\n        this.colorReferenceSchema.enumDescriptions.push(description);\r\n        this._onDidChangeSchema.fire();\r\n        return id;\r\n    };\r\n    ColorRegistry.prototype.resolveDefaultColor = function (id, theme) {\r\n        var colorDesc = this.colorsById[id];\r\n        if (colorDesc && colorDesc.defaults) {\r\n            var colorValue = colorDesc.defaults[theme.type];\r\n            return resolveColorValue(colorValue, theme);\r\n        }\r\n        return undefined;\r\n    };\r\n    ColorRegistry.prototype.getColorSchema = function () {\r\n        return this.colorSchema;\r\n    };\r\n    ColorRegistry.prototype.toString = function () {\r\n        var _this = this;\r\n        var sorter = function (a, b) {\r\n            var cat1 = a.indexOf('.') === -1 ? 0 : 1;\r\n            var cat2 = b.indexOf('.') === -1 ? 0 : 1;\r\n            if (cat1 !== cat2) {\r\n                return cat1 - cat2;\r\n            }\r\n            return a.localeCompare(b);\r\n        };\r\n        return Object.keys(this.colorsById).sort(sorter).map(function (k) { return \"- `\" + k + \"`: \" + _this.colorsById[k].description; }).join('\\n');\r\n    };\r\n    return ColorRegistry;\r\n}());\r\nvar colorRegistry = new ColorRegistry();\r\nplatform.Registry.add(Extensions.ColorContribution, colorRegistry);\r\nexport function registerColor(id, defaults, description, needsTransparency, deprecationMessage) {\r\n    return colorRegistry.registerColor(id, defaults, description, needsTransparency, deprecationMessage);\r\n}\r\n// ----- base colors\r\nexport var foreground = registerColor('foreground', { dark: '#CCCCCC', light: '#616161', hc: '#FFFFFF' }, nls.localize('foreground', \"Overall foreground color. This color is only used if not overridden by a component.\"));\r\nexport var errorForeground = registerColor('errorForeground', { dark: '#F48771', light: '#A1260D', hc: '#F48771' }, nls.localize('errorForeground', \"Overall foreground color for error messages. This color is only used if not overridden by a component.\"));\r\nexport var focusBorder = registerColor('focusBorder', { dark: Color.fromHex('#0E639C').transparent(0.8), light: Color.fromHex('#007ACC').transparent(0.4), hc: '#F38518' }, nls.localize('focusBorder', \"Overall border color for focused elements. This color is only used if not overridden by a component.\"));\r\nexport var contrastBorder = registerColor('contrastBorder', { light: null, dark: null, hc: '#6FC3DF' }, nls.localize('contrastBorder', \"An extra border around elements to separate them from others for greater contrast.\"));\r\nexport var activeContrastBorder = registerColor('contrastActiveBorder', { light: null, dark: null, hc: focusBorder }, nls.localize('activeContrastBorder', \"An extra border around active elements to separate them from others for greater contrast.\"));\r\nexport var textLinkForeground = registerColor('textLink.foreground', { light: '#006AB1', dark: '#3794FF', hc: '#3794FF' }, nls.localize('textLinkForeground', \"Foreground color for links in text.\"));\r\nexport var textCodeBlockBackground = registerColor('textCodeBlock.background', { light: '#dcdcdc66', dark: '#0a0a0a66', hc: Color.black }, nls.localize('textCodeBlockBackground', \"Background color for code blocks in text.\"));\r\n// ----- widgets\r\nexport var widgetShadow = registerColor('widget.shadow', { dark: '#000000', light: '#A8A8A8', hc: null }, nls.localize('widgetShadow', 'Shadow color of widgets such as find/replace inside the editor.'));\r\nexport var inputBackground = registerColor('input.background', { dark: '#3C3C3C', light: Color.white, hc: Color.black }, nls.localize('inputBoxBackground', \"Input box background.\"));\r\nexport var inputForeground = registerColor('input.foreground', { dark: foreground, light: foreground, hc: foreground }, nls.localize('inputBoxForeground', \"Input box foreground.\"));\r\nexport var inputBorder = registerColor('input.border', { dark: null, light: null, hc: contrastBorder }, nls.localize('inputBoxBorder', \"Input box border.\"));\r\nexport var inputActiveOptionBorder = registerColor('inputOption.activeBorder', { dark: '#007ACC00', light: '#007ACC00', hc: contrastBorder }, nls.localize('inputBoxActiveOptionBorder', \"Border color of activated options in input fields.\"));\r\nexport var inputActiveOptionBackground = registerColor('inputOption.activeBackground', { dark: transparent(focusBorder, 0.5), light: transparent(focusBorder, 0.3), hc: null }, nls.localize('inputOption.activeBackground', \"Background color of activated options in input fields.\"));\r\nexport var inputValidationInfoBackground = registerColor('inputValidation.infoBackground', { dark: '#063B49', light: '#D6ECF2', hc: Color.black }, nls.localize('inputValidationInfoBackground', \"Input validation background color for information severity.\"));\r\nexport var inputValidationInfoForeground = registerColor('inputValidation.infoForeground', { dark: null, light: null, hc: null }, nls.localize('inputValidationInfoForeground', \"Input validation foreground color for information severity.\"));\r\nexport var inputValidationInfoBorder = registerColor('inputValidation.infoBorder', { dark: '#007acc', light: '#007acc', hc: contrastBorder }, nls.localize('inputValidationInfoBorder', \"Input validation border color for information severity.\"));\r\nexport var inputValidationWarningBackground = registerColor('inputValidation.warningBackground', { dark: '#352A05', light: '#F6F5D2', hc: Color.black }, nls.localize('inputValidationWarningBackground', \"Input validation background color for warning severity.\"));\r\nexport var inputValidationWarningForeground = registerColor('inputValidation.warningForeground', { dark: null, light: null, hc: null }, nls.localize('inputValidationWarningForeground', \"Input validation foreground color for warning severity.\"));\r\nexport var inputValidationWarningBorder = registerColor('inputValidation.warningBorder', { dark: '#B89500', light: '#B89500', hc: contrastBorder }, nls.localize('inputValidationWarningBorder', \"Input validation border color for warning severity.\"));\r\nexport var inputValidationErrorBackground = registerColor('inputValidation.errorBackground', { dark: '#5A1D1D', light: '#F2DEDE', hc: Color.black }, nls.localize('inputValidationErrorBackground', \"Input validation background color for error severity.\"));\r\nexport var inputValidationErrorForeground = registerColor('inputValidation.errorForeground', { dark: null, light: null, hc: null }, nls.localize('inputValidationErrorForeground', \"Input validation foreground color for error severity.\"));\r\nexport var inputValidationErrorBorder = registerColor('inputValidation.errorBorder', { dark: '#BE1100', light: '#BE1100', hc: contrastBorder }, nls.localize('inputValidationErrorBorder', \"Input validation border color for error severity.\"));\r\nexport var selectBackground = registerColor('dropdown.background', { dark: '#3C3C3C', light: Color.white, hc: Color.black }, nls.localize('dropdownBackground', \"Dropdown background.\"));\r\nexport var selectForeground = registerColor('dropdown.foreground', { dark: '#F0F0F0', light: null, hc: Color.white }, nls.localize('dropdownForeground', \"Dropdown foreground.\"));\r\nexport var pickerGroupForeground = registerColor('pickerGroup.foreground', { dark: '#3794FF', light: '#0066BF', hc: Color.white }, nls.localize('pickerGroupForeground', \"Quick picker color for grouping labels.\"));\r\nexport var pickerGroupBorder = registerColor('pickerGroup.border', { dark: '#3F3F46', light: '#CCCEDB', hc: Color.white }, nls.localize('pickerGroupBorder', \"Quick picker color for grouping borders.\"));\r\nexport var badgeBackground = registerColor('badge.background', { dark: '#4D4D4D', light: '#C4C4C4', hc: Color.black }, nls.localize('badgeBackground', \"Badge background color. Badges are small information labels, e.g. for search results count.\"));\r\nexport var badgeForeground = registerColor('badge.foreground', { dark: Color.white, light: '#333', hc: Color.white }, nls.localize('badgeForeground', \"Badge foreground color. Badges are small information labels, e.g. for search results count.\"));\r\nexport var scrollbarShadow = registerColor('scrollbar.shadow', { dark: '#000000', light: '#DDDDDD', hc: null }, nls.localize('scrollbarShadow', \"Scrollbar shadow to indicate that the view is scrolled.\"));\r\nexport var scrollbarSliderBackground = registerColor('scrollbarSlider.background', { dark: Color.fromHex('#797979').transparent(0.4), light: Color.fromHex('#646464').transparent(0.4), hc: transparent(contrastBorder, 0.6) }, nls.localize('scrollbarSliderBackground', \"Scrollbar slider background color.\"));\r\nexport var scrollbarSliderHoverBackground = registerColor('scrollbarSlider.hoverBackground', { dark: Color.fromHex('#646464').transparent(0.7), light: Color.fromHex('#646464').transparent(0.7), hc: transparent(contrastBorder, 0.8) }, nls.localize('scrollbarSliderHoverBackground', \"Scrollbar slider background color when hovering.\"));\r\nexport var scrollbarSliderActiveBackground = registerColor('scrollbarSlider.activeBackground', { dark: Color.fromHex('#BFBFBF').transparent(0.4), light: Color.fromHex('#000000').transparent(0.6), hc: contrastBorder }, nls.localize('scrollbarSliderActiveBackground', \"Scrollbar slider background color when clicked on.\"));\r\nexport var progressBarBackground = registerColor('progressBar.background', { dark: Color.fromHex('#0E70C0'), light: Color.fromHex('#0E70C0'), hc: contrastBorder }, nls.localize('progressBarBackground', \"Background color of the progress bar that can show for long running operations.\"));\r\nexport var editorErrorForeground = registerColor('editorError.foreground', { dark: '#F48771', light: '#E51400', hc: null }, nls.localize('editorError.foreground', 'Foreground color of error squigglies in the editor.'));\r\nexport var editorErrorBorder = registerColor('editorError.border', { dark: null, light: null, hc: Color.fromHex('#E47777').transparent(0.8) }, nls.localize('errorBorder', 'Border color of error boxes in the editor.'));\r\nexport var editorWarningForeground = registerColor('editorWarning.foreground', { dark: '#CCA700', light: '#E9A700', hc: null }, nls.localize('editorWarning.foreground', 'Foreground color of warning squigglies in the editor.'));\r\nexport var editorWarningBorder = registerColor('editorWarning.border', { dark: null, light: null, hc: Color.fromHex('#FFCC00').transparent(0.8) }, nls.localize('warningBorder', 'Border color of warning boxes in the editor.'));\r\nexport var editorInfoForeground = registerColor('editorInfo.foreground', { dark: '#75BEFF', light: '#75BEFF', hc: null }, nls.localize('editorInfo.foreground', 'Foreground color of info squigglies in the editor.'));\r\nexport var editorInfoBorder = registerColor('editorInfo.border', { dark: null, light: null, hc: Color.fromHex('#75BEFF').transparent(0.8) }, nls.localize('infoBorder', 'Border color of info boxes in the editor.'));\r\nexport var editorHintForeground = registerColor('editorHint.foreground', { dark: Color.fromHex('#eeeeee').transparent(0.7), light: '#6c6c6c', hc: null }, nls.localize('editorHint.foreground', 'Foreground color of hint squigglies in the editor.'));\r\nexport var editorHintBorder = registerColor('editorHint.border', { dark: null, light: null, hc: Color.fromHex('#eeeeee').transparent(0.8) }, nls.localize('hintBorder', 'Border color of hint boxes in the editor.'));\r\n/**\r\n * Editor background color.\r\n * Because of bug https://monacotools.visualstudio.com/DefaultCollection/Monaco/_workitems/edit/13254\r\n * we are *not* using the color white (or #ffffff, rgba(255,255,255)) but something very close to white.\r\n */\r\nexport var editorBackground = registerColor('editor.background', { light: '#fffffe', dark: '#1E1E1E', hc: Color.black }, nls.localize('editorBackground', \"Editor background color.\"));\r\n/**\r\n * Editor foreground color.\r\n */\r\nexport var editorForeground = registerColor('editor.foreground', { light: '#333333', dark: '#BBBBBB', hc: Color.white }, nls.localize('editorForeground', \"Editor default foreground color.\"));\r\n/**\r\n * Editor widgets\r\n */\r\nexport var editorWidgetBackground = registerColor('editorWidget.background', { dark: '#252526', light: '#F3F3F3', hc: '#0C141F' }, nls.localize('editorWidgetBackground', 'Background color of editor widgets, such as find/replace.'));\r\nexport var editorWidgetForeground = registerColor('editorWidget.foreground', { dark: foreground, light: foreground, hc: foreground }, nls.localize('editorWidgetForeground', 'Foreground color of editor widgets, such as find/replace.'));\r\nexport var editorWidgetBorder = registerColor('editorWidget.border', { dark: '#454545', light: '#C8C8C8', hc: contrastBorder }, nls.localize('editorWidgetBorder', 'Border color of editor widgets. The color is only used if the widget chooses to have a border and if the color is not overridden by a widget.'));\r\nexport var editorWidgetResizeBorder = registerColor('editorWidget.resizeBorder', { light: null, dark: null, hc: null }, nls.localize('editorWidgetResizeBorder', \"Border color of the resize bar of editor widgets. The color is only used if the widget chooses to have a resize border and if the color is not overridden by a widget.\"));\r\n/**\r\n * Editor selection colors.\r\n */\r\nexport var editorSelectionBackground = registerColor('editor.selectionBackground', { light: '#ADD6FF', dark: '#264F78', hc: '#f3f518' }, nls.localize('editorSelectionBackground', \"Color of the editor selection.\"));\r\nexport var editorSelectionForeground = registerColor('editor.selectionForeground', { light: null, dark: null, hc: '#000000' }, nls.localize('editorSelectionForeground', \"Color of the selected text for high contrast.\"));\r\nexport var editorInactiveSelection = registerColor('editor.inactiveSelectionBackground', { light: transparent(editorSelectionBackground, 0.5), dark: transparent(editorSelectionBackground, 0.5), hc: transparent(editorSelectionBackground, 0.5) }, nls.localize('editorInactiveSelection', \"Color of the selection in an inactive editor. The color must not be opaque so as not to hide underlying decorations.\"), true);\r\nexport var editorSelectionHighlight = registerColor('editor.selectionHighlightBackground', { light: lessProminent(editorSelectionBackground, editorBackground, 0.3, 0.6), dark: lessProminent(editorSelectionBackground, editorBackground, 0.3, 0.6), hc: null }, nls.localize('editorSelectionHighlight', 'Color for regions with the same content as the selection. The color must not be opaque so as not to hide underlying decorations.'), true);\r\nexport var editorSelectionHighlightBorder = registerColor('editor.selectionHighlightBorder', { light: null, dark: null, hc: activeContrastBorder }, nls.localize('editorSelectionHighlightBorder', \"Border color for regions with the same content as the selection.\"));\r\n/**\r\n * Editor find match colors.\r\n */\r\nexport var editorFindMatch = registerColor('editor.findMatchBackground', { light: '#A8AC94', dark: '#515C6A', hc: null }, nls.localize('editorFindMatch', \"Color of the current search match.\"));\r\nexport var editorFindMatchHighlight = registerColor('editor.findMatchHighlightBackground', { light: '#EA5C0055', dark: '#EA5C0055', hc: null }, nls.localize('findMatchHighlight', \"Color of the other search matches. The color must not be opaque so as not to hide underlying decorations.\"), true);\r\nexport var editorFindRangeHighlight = registerColor('editor.findRangeHighlightBackground', { dark: '#3a3d4166', light: '#b4b4b44d', hc: null }, nls.localize('findRangeHighlight', \"Color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations.\"), true);\r\nexport var editorFindMatchBorder = registerColor('editor.findMatchBorder', { light: null, dark: null, hc: activeContrastBorder }, nls.localize('editorFindMatchBorder', \"Border color of the current search match.\"));\r\nexport var editorFindMatchHighlightBorder = registerColor('editor.findMatchHighlightBorder', { light: null, dark: null, hc: activeContrastBorder }, nls.localize('findMatchHighlightBorder', \"Border color of the other search matches.\"));\r\nexport var editorFindRangeHighlightBorder = registerColor('editor.findRangeHighlightBorder', { dark: null, light: null, hc: transparent(activeContrastBorder, 0.4) }, nls.localize('findRangeHighlightBorder', \"Border color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations.\"), true);\r\n/**\r\n * Editor hover\r\n */\r\nexport var editorHoverHighlight = registerColor('editor.hoverHighlightBackground', { light: '#ADD6FF26', dark: '#264f7840', hc: '#ADD6FF26' }, nls.localize('hoverHighlight', 'Highlight below the word for which a hover is shown. The color must not be opaque so as not to hide underlying decorations.'), true);\r\nexport var editorHoverBackground = registerColor('editorHoverWidget.background', { light: editorWidgetBackground, dark: editorWidgetBackground, hc: editorWidgetBackground }, nls.localize('hoverBackground', 'Background color of the editor hover.'));\r\nexport var editorHoverForeground = registerColor('editorHoverWidget.foreground', { light: editorWidgetForeground, dark: editorWidgetForeground, hc: editorWidgetForeground }, nls.localize('hoverForeground', 'Foreground color of the editor hover.'));\r\nexport var editorHoverBorder = registerColor('editorHoverWidget.border', { light: editorWidgetBorder, dark: editorWidgetBorder, hc: editorWidgetBorder }, nls.localize('hoverBorder', 'Border color of the editor hover.'));\r\nexport var editorHoverStatusBarBackground = registerColor('editorHoverWidget.statusBarBackground', { dark: lighten(editorHoverBackground, 0.2), light: darken(editorHoverBackground, 0.05), hc: editorWidgetBackground }, nls.localize('statusBarBackground', \"Background color of the editor hover status bar.\"));\r\n/**\r\n * Editor link colors\r\n */\r\nexport var editorActiveLinkForeground = registerColor('editorLink.activeForeground', { dark: '#4E94CE', light: Color.blue, hc: Color.cyan }, nls.localize('activeLinkForeground', 'Color of active links.'));\r\n/**\r\n * Editor lighbulb icon colors\r\n */\r\nexport var editorLightBulbForeground = registerColor('editorLightBulb.foreground', { dark: '#FFCC00', light: '#DDB100', hc: '#FFCC00' }, nls.localize('editorLightBulbForeground', \"The color used for the lightbulb actions icon.\"));\r\nexport var editorLightBulbAutoFixForeground = registerColor('editorLightBulbAutoFix.foreground', { dark: '#75BEFF', light: '#007ACC', hc: '#75BEFF' }, nls.localize('editorLightBulbAutoFixForeground', \"The color used for the lightbulb auto fix actions icon.\"));\r\n/**\r\n * Diff Editor Colors\r\n */\r\nexport var defaultInsertColor = new Color(new RGBA(155, 185, 85, 0.2));\r\nexport var defaultRemoveColor = new Color(new RGBA(255, 0, 0, 0.2));\r\nexport var diffInserted = registerColor('diffEditor.insertedTextBackground', { dark: defaultInsertColor, light: defaultInsertColor, hc: null }, nls.localize('diffEditorInserted', 'Background color for text that got inserted. The color must not be opaque so as not to hide underlying decorations.'), true);\r\nexport var diffRemoved = registerColor('diffEditor.removedTextBackground', { dark: defaultRemoveColor, light: defaultRemoveColor, hc: null }, nls.localize('diffEditorRemoved', 'Background color for text that got removed. The color must not be opaque so as not to hide underlying decorations.'), true);\r\nexport var diffInsertedOutline = registerColor('diffEditor.insertedTextBorder', { dark: null, light: null, hc: '#33ff2eff' }, nls.localize('diffEditorInsertedOutline', 'Outline color for the text that got inserted.'));\r\nexport var diffRemovedOutline = registerColor('diffEditor.removedTextBorder', { dark: null, light: null, hc: '#FF008F' }, nls.localize('diffEditorRemovedOutline', 'Outline color for text that got removed.'));\r\nexport var diffBorder = registerColor('diffEditor.border', { dark: null, light: null, hc: contrastBorder }, nls.localize('diffEditorBorder', 'Border color between the two text editors.'));\r\n/**\r\n * List and tree colors\r\n */\r\nexport var listFocusBackground = registerColor('list.focusBackground', { dark: '#062F4A', light: '#D6EBFF', hc: null }, nls.localize('listFocusBackground', \"List/Tree background color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\r\nexport var listFocusForeground = registerColor('list.focusForeground', { dark: null, light: null, hc: null }, nls.localize('listFocusForeground', \"List/Tree foreground color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\r\nexport var listActiveSelectionBackground = registerColor('list.activeSelectionBackground', { dark: '#094771', light: '#0074E8', hc: null }, nls.localize('listActiveSelectionBackground', \"List/Tree background color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\r\nexport var listActiveSelectionForeground = registerColor('list.activeSelectionForeground', { dark: Color.white, light: Color.white, hc: null }, nls.localize('listActiveSelectionForeground', \"List/Tree foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\r\nexport var listInactiveSelectionBackground = registerColor('list.inactiveSelectionBackground', { dark: '#37373D', light: '#E4E6F1', hc: null }, nls.localize('listInactiveSelectionBackground', \"List/Tree background color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\r\nexport var listInactiveSelectionForeground = registerColor('list.inactiveSelectionForeground', { dark: null, light: null, hc: null }, nls.localize('listInactiveSelectionForeground', \"List/Tree foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\r\nexport var listInactiveFocusBackground = registerColor('list.inactiveFocusBackground', { dark: null, light: null, hc: null }, nls.localize('listInactiveFocusBackground', \"List/Tree background color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\r\nexport var listHoverBackground = registerColor('list.hoverBackground', { dark: '#2A2D2E', light: '#F0F0F0', hc: null }, nls.localize('listHoverBackground', \"List/Tree background when hovering over items using the mouse.\"));\r\nexport var listHoverForeground = registerColor('list.hoverForeground', { dark: null, light: null, hc: null }, nls.localize('listHoverForeground', \"List/Tree foreground when hovering over items using the mouse.\"));\r\nexport var listDropBackground = registerColor('list.dropBackground', { dark: listFocusBackground, light: listFocusBackground, hc: null }, nls.localize('listDropBackground', \"List/Tree drag and drop background when moving items around using the mouse.\"));\r\nexport var listHighlightForeground = registerColor('list.highlightForeground', { dark: '#0097fb', light: '#0066BF', hc: focusBorder }, nls.localize('highlight', 'List/Tree foreground color of the match highlights when searching inside the list/tree.'));\r\nexport var listFilterWidgetBackground = registerColor('listFilterWidget.background', { light: '#efc1ad', dark: '#653723', hc: Color.black }, nls.localize('listFilterWidgetBackground', 'Background color of the type filter widget in lists and trees.'));\r\nexport var listFilterWidgetOutline = registerColor('listFilterWidget.outline', { dark: Color.transparent, light: Color.transparent, hc: '#f38518' }, nls.localize('listFilterWidgetOutline', 'Outline color of the type filter widget in lists and trees.'));\r\nexport var listFilterWidgetNoMatchesOutline = registerColor('listFilterWidget.noMatchesOutline', { dark: '#BE1100', light: '#BE1100', hc: contrastBorder }, nls.localize('listFilterWidgetNoMatchesOutline', 'Outline color of the type filter widget in lists and trees, when there are no matches.'));\r\nexport var treeIndentGuidesStroke = registerColor('tree.indentGuidesStroke', { dark: '#585858', light: '#a9a9a9', hc: '#a9a9a9' }, nls.localize('treeIndentGuidesStroke', \"Tree stroke color for the indentation guides.\"));\r\n/**\r\n * Menu colors\r\n */\r\nexport var menuBorder = registerColor('menu.border', { dark: null, light: null, hc: contrastBorder }, nls.localize('menuBorder', \"Border color of menus.\"));\r\nexport var menuForeground = registerColor('menu.foreground', { dark: selectForeground, light: foreground, hc: selectForeground }, nls.localize('menuForeground', \"Foreground color of menu items.\"));\r\nexport var menuBackground = registerColor('menu.background', { dark: selectBackground, light: selectBackground, hc: selectBackground }, nls.localize('menuBackground', \"Background color of menu items.\"));\r\nexport var menuSelectionForeground = registerColor('menu.selectionForeground', { dark: listActiveSelectionForeground, light: listActiveSelectionForeground, hc: listActiveSelectionForeground }, nls.localize('menuSelectionForeground', \"Foreground color of the selected menu item in menus.\"));\r\nexport var menuSelectionBackground = registerColor('menu.selectionBackground', { dark: listActiveSelectionBackground, light: listActiveSelectionBackground, hc: listActiveSelectionBackground }, nls.localize('menuSelectionBackground', \"Background color of the selected menu item in menus.\"));\r\nexport var menuSelectionBorder = registerColor('menu.selectionBorder', { dark: null, light: null, hc: activeContrastBorder }, nls.localize('menuSelectionBorder', \"Border color of the selected menu item in menus.\"));\r\nexport var menuSeparatorBackground = registerColor('menu.separatorBackground', { dark: '#BBBBBB', light: '#888888', hc: contrastBorder }, nls.localize('menuSeparatorBackground', \"Color of a separator menu item in menus.\"));\r\n/**\r\n * Snippet placeholder colors\r\n */\r\nexport var snippetTabstopHighlightBackground = registerColor('editor.snippetTabstopHighlightBackground', { dark: new Color(new RGBA(124, 124, 124, 0.3)), light: new Color(new RGBA(10, 50, 100, 0.2)), hc: new Color(new RGBA(124, 124, 124, 0.3)) }, nls.localize('snippetTabstopHighlightBackground', \"Highlight background color of a snippet tabstop.\"));\r\nexport var snippetTabstopHighlightBorder = registerColor('editor.snippetTabstopHighlightBorder', { dark: null, light: null, hc: null }, nls.localize('snippetTabstopHighlightBorder', \"Highlight border color of a snippet tabstop.\"));\r\nexport var snippetFinalTabstopHighlightBackground = registerColor('editor.snippetFinalTabstopHighlightBackground', { dark: null, light: null, hc: null }, nls.localize('snippetFinalTabstopHighlightBackground', \"Highlight background color of the final tabstop of a snippet.\"));\r\nexport var snippetFinalTabstopHighlightBorder = registerColor('editor.snippetFinalTabstopHighlightBorder', { dark: '#525252', light: new Color(new RGBA(10, 50, 100, 0.5)), hc: '#525252' }, nls.localize('snippetFinalTabstopHighlightBorder', \"Highlight border color of the final stabstop of a snippet.\"));\r\nexport var overviewRulerFindMatchForeground = registerColor('editorOverviewRuler.findMatchForeground', { dark: '#d186167e', light: '#d186167e', hc: '#AB5A00' }, nls.localize('overviewRulerFindMatchForeground', 'Overview ruler marker color for find matches. The color must not be opaque so as not to hide underlying decorations.'), true);\r\nexport var overviewRulerSelectionHighlightForeground = registerColor('editorOverviewRuler.selectionHighlightForeground', { dark: '#A0A0A0CC', light: '#A0A0A0CC', hc: '#A0A0A0CC' }, nls.localize('overviewRulerSelectionHighlightForeground', 'Overview ruler marker color for selection highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\r\nexport var minimapFindMatch = registerColor('minimap.findMatchHighlight', { light: '#d18616', dark: '#d18616', hc: '#AB5A00' }, nls.localize('minimapFindMatchHighlight', 'Minimap marker color for find matches.'), true);\r\nexport var minimapSelection = registerColor('minimap.selectionHighlight', { light: '#ADD6FF', dark: '#264F78', hc: '#ffffff' }, nls.localize('minimapSelectionHighlight', 'Minimap marker color for the editor selection.'), true);\r\nexport var minimapError = registerColor('minimap.errorHighlight', { dark: new Color(new RGBA(255, 18, 18, 0.7)), light: new Color(new RGBA(255, 18, 18, 0.7)), hc: new Color(new RGBA(255, 50, 50, 1)) }, nls.localize('minimapError', 'Minimap marker color for errors.'));\r\nexport var minimapWarning = registerColor('minimap.warningHighlight', { dark: editorWarningForeground, light: editorWarningForeground, hc: editorWarningBorder }, nls.localize('overviewRuleWarning', 'Minimap marker color for warnings.'));\r\nexport var problemsErrorIconForeground = registerColor('problemsErrorIcon.foreground', { dark: editorErrorForeground, light: editorErrorForeground, hc: editorErrorForeground }, nls.localize('problemsErrorIconForeground', \"The color used for the problems error icon.\"));\r\nexport var problemsWarningIconForeground = registerColor('problemsWarningIcon.foreground', { dark: editorWarningForeground, light: editorWarningForeground, hc: editorWarningForeground }, nls.localize('problemsWarningIconForeground', \"The color used for the problems warning icon.\"));\r\nexport var problemsInfoIconForeground = registerColor('problemsInfoIcon.foreground', { dark: editorInfoForeground, light: editorInfoForeground, hc: editorInfoForeground }, nls.localize('problemsInfoIconForeground', \"The color used for the problems info icon.\"));\r\n// ----- color functions\r\nexport function darken(colorValue, factor) {\r\n    return function (theme) {\r\n        var color = resolveColorValue(colorValue, theme);\r\n        if (color) {\r\n            return color.darken(factor);\r\n        }\r\n        return undefined;\r\n    };\r\n}\r\nexport function lighten(colorValue, factor) {\r\n    return function (theme) {\r\n        var color = resolveColorValue(colorValue, theme);\r\n        if (color) {\r\n            return color.lighten(factor);\r\n        }\r\n        return undefined;\r\n    };\r\n}\r\nexport function transparent(colorValue, factor) {\r\n    return function (theme) {\r\n        var color = resolveColorValue(colorValue, theme);\r\n        if (color) {\r\n            return color.transparent(factor);\r\n        }\r\n        return undefined;\r\n    };\r\n}\r\nexport function oneOf() {\r\n    var colorValues = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        colorValues[_i] = arguments[_i];\r\n    }\r\n    return function (theme) {\r\n        for (var _i = 0, colorValues_1 = colorValues; _i < colorValues_1.length; _i++) {\r\n            var colorValue = colorValues_1[_i];\r\n            var color = resolveColorValue(colorValue, theme);\r\n            if (color) {\r\n                return color;\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n}\r\nfunction lessProminent(colorValue, backgroundColorValue, factor, transparency) {\r\n    return function (theme) {\r\n        var from = resolveColorValue(colorValue, theme);\r\n        if (from) {\r\n            var backgroundColor = resolveColorValue(backgroundColorValue, theme);\r\n            if (backgroundColor) {\r\n                if (from.isDarkerThan(backgroundColor)) {\r\n                    return Color.getLighterColor(from, backgroundColor, factor).transparent(transparency);\r\n                }\r\n                return Color.getDarkerColor(from, backgroundColor, factor).transparent(transparency);\r\n            }\r\n            return from.transparent(factor * transparency);\r\n        }\r\n        return undefined;\r\n    };\r\n}\r\n// ----- implementation\r\n/**\r\n * @param colorValue Resolve a color value in the context of a theme\r\n */\r\nexport function resolveColorValue(colorValue, theme) {\r\n    if (colorValue === null) {\r\n        return undefined;\r\n    }\r\n    else if (typeof colorValue === 'string') {\r\n        if (colorValue[0] === '#') {\r\n            return Color.fromHex(colorValue);\r\n        }\r\n        return theme.getColor(colorValue);\r\n    }\r\n    else if (colorValue instanceof Color) {\r\n        return colorValue;\r\n    }\r\n    else if (typeof colorValue === 'function') {\r\n        return colorValue(theme);\r\n    }\r\n    return undefined;\r\n}\r\nexport var workbenchColorsSchemaId = 'vscode://schemas/workbench-colors';\r\nvar schemaRegistry = platform.Registry.as(JSONExtensions.JSONContribution);\r\nschemaRegistry.registerSchema(workbenchColorsSchemaId, colorRegistry.getColorSchema());\r\nvar delayer = new RunOnceScheduler(function () { return schemaRegistry.notifySchemaChanged(workbenchColorsSchemaId); }, 200);\r\ncolorRegistry.onDidChangeSchema(function () {\r\n    if (!delayer.isScheduled()) {\r\n        delayer.schedule();\r\n    }\r\n});\r\n// setTimeout(_ => console.log(colorRegistry.toString()), 5000);\r\n"]},"metadata":{},"sourceType":"module"}