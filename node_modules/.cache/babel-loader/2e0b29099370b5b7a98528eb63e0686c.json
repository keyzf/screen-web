{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../common/core/range.js';\nimport { Token, TokenizationResult, TokenizationResult2 } from '../../common/core/token.js';\nimport * as modes from '../../common/modes.js';\nimport { LanguageConfigurationRegistry } from '../../common/modes/languageConfigurationRegistry.js';\nimport { ModesRegistry } from '../../common/modes/modesRegistry.js';\nimport * as standaloneEnums from '../../common/standalone/standaloneEnums.js';\nimport { StaticServices } from './standaloneServices.js';\nimport { compile } from '../common/monarch/monarchCompile.js';\nimport { createTokenizationSupport } from '../common/monarch/monarchLexer.js';\n/**\r\n * Register information about a new language.\r\n */\n\nexport function register(language) {\n  ModesRegistry.registerLanguage(language);\n}\n/**\r\n * Get the information of all the registered languages.\r\n */\n\nexport function getLanguages() {\n  var result = [];\n  result = result.concat(ModesRegistry.getLanguages());\n  return result;\n}\nexport function getEncodedLanguageId(languageId) {\n  var lid = StaticServices.modeService.get().getLanguageIdentifier(languageId);\n  return lid ? lid.id : 0;\n}\n/**\r\n * An event emitted when a language is first time needed (e.g. a model has it set).\r\n * @event\r\n */\n\nexport function onLanguage(languageId, callback) {\n  var disposable = StaticServices.modeService.get().onDidCreateMode(function (mode) {\n    if (mode.getId() === languageId) {\n      // stop listening\n      disposable.dispose(); // invoke actual listener\n\n      callback();\n    }\n  });\n  return disposable;\n}\n/**\r\n * Set the editing configuration for a language.\r\n */\n\nexport function setLanguageConfiguration(languageId, configuration) {\n  var languageIdentifier = StaticServices.modeService.get().getLanguageIdentifier(languageId);\n\n  if (!languageIdentifier) {\n    throw new Error(\"Cannot set configuration for unknown language \" + languageId);\n  }\n\n  return LanguageConfigurationRegistry.register(languageIdentifier, configuration);\n}\n/**\r\n * @internal\r\n */\n\nvar EncodedTokenizationSupport2Adapter =\n/** @class */\nfunction () {\n  function EncodedTokenizationSupport2Adapter(actual) {\n    this._actual = actual;\n  }\n\n  EncodedTokenizationSupport2Adapter.prototype.getInitialState = function () {\n    return this._actual.getInitialState();\n  };\n\n  EncodedTokenizationSupport2Adapter.prototype.tokenize = function (line, state, offsetDelta) {\n    throw new Error('Not supported!');\n  };\n\n  EncodedTokenizationSupport2Adapter.prototype.tokenize2 = function (line, state) {\n    var result = this._actual.tokenizeEncoded(line, state);\n\n    return new TokenizationResult2(result.tokens, result.endState);\n  };\n\n  return EncodedTokenizationSupport2Adapter;\n}();\n\nexport { EncodedTokenizationSupport2Adapter };\n/**\r\n * @internal\r\n */\n\nvar TokenizationSupport2Adapter =\n/** @class */\nfunction () {\n  function TokenizationSupport2Adapter(standaloneThemeService, languageIdentifier, actual) {\n    this._standaloneThemeService = standaloneThemeService;\n    this._languageIdentifier = languageIdentifier;\n    this._actual = actual;\n  }\n\n  TokenizationSupport2Adapter.prototype.getInitialState = function () {\n    return this._actual.getInitialState();\n  };\n\n  TokenizationSupport2Adapter.prototype._toClassicTokens = function (tokens, language, offsetDelta) {\n    var result = [];\n    var previousStartIndex = 0;\n\n    for (var i = 0, len = tokens.length; i < len; i++) {\n      var t = tokens[i];\n      var startIndex = t.startIndex; // Prevent issues stemming from a buggy external tokenizer.\n\n      if (i === 0) {\n        // Force first token to start at first index!\n        startIndex = 0;\n      } else if (startIndex < previousStartIndex) {\n        // Force tokens to be after one another!\n        startIndex = previousStartIndex;\n      }\n\n      result[i] = new Token(startIndex + offsetDelta, t.scopes, language);\n      previousStartIndex = startIndex;\n    }\n\n    return result;\n  };\n\n  TokenizationSupport2Adapter.prototype.tokenize = function (line, state, offsetDelta) {\n    var actualResult = this._actual.tokenize(line, state);\n\n    var tokens = this._toClassicTokens(actualResult.tokens, this._languageIdentifier.language, offsetDelta);\n\n    var endState; // try to save an object if possible\n\n    if (actualResult.endState.equals(state)) {\n      endState = state;\n    } else {\n      endState = actualResult.endState;\n    }\n\n    return new TokenizationResult(tokens, endState);\n  };\n\n  TokenizationSupport2Adapter.prototype._toBinaryTokens = function (tokens, offsetDelta) {\n    var languageId = this._languageIdentifier.id;\n\n    var tokenTheme = this._standaloneThemeService.getTheme().tokenTheme;\n\n    var result = [],\n        resultLen = 0;\n    var previousStartIndex = 0;\n\n    for (var i = 0, len = tokens.length; i < len; i++) {\n      var t = tokens[i];\n      var metadata = tokenTheme.match(languageId, t.scopes);\n\n      if (resultLen > 0 && result[resultLen - 1] === metadata) {\n        // same metadata\n        continue;\n      }\n\n      var startIndex = t.startIndex; // Prevent issues stemming from a buggy external tokenizer.\n\n      if (i === 0) {\n        // Force first token to start at first index!\n        startIndex = 0;\n      } else if (startIndex < previousStartIndex) {\n        // Force tokens to be after one another!\n        startIndex = previousStartIndex;\n      }\n\n      result[resultLen++] = startIndex + offsetDelta;\n      result[resultLen++] = metadata;\n      previousStartIndex = startIndex;\n    }\n\n    var actualResult = new Uint32Array(resultLen);\n\n    for (var i = 0; i < resultLen; i++) {\n      actualResult[i] = result[i];\n    }\n\n    return actualResult;\n  };\n\n  TokenizationSupport2Adapter.prototype.tokenize2 = function (line, state, offsetDelta) {\n    var actualResult = this._actual.tokenize(line, state);\n\n    var tokens = this._toBinaryTokens(actualResult.tokens, offsetDelta);\n\n    var endState; // try to save an object if possible\n\n    if (actualResult.endState.equals(state)) {\n      endState = state;\n    } else {\n      endState = actualResult.endState;\n    }\n\n    return new TokenizationResult2(tokens, endState);\n  };\n\n  return TokenizationSupport2Adapter;\n}();\n\nexport { TokenizationSupport2Adapter };\n\nfunction isEncodedTokensProvider(provider) {\n  return 'tokenizeEncoded' in provider;\n}\n\nfunction isThenable(obj) {\n  return obj && typeof obj.then === 'function';\n}\n/**\r\n * Set the tokens provider for a language (manual implementation).\r\n */\n\n\nexport function setTokensProvider(languageId, provider) {\n  var languageIdentifier = StaticServices.modeService.get().getLanguageIdentifier(languageId);\n\n  if (!languageIdentifier) {\n    throw new Error(\"Cannot set tokens provider for unknown language \" + languageId);\n  }\n\n  var create = function (provider) {\n    if (isEncodedTokensProvider(provider)) {\n      return new EncodedTokenizationSupport2Adapter(provider);\n    } else {\n      return new TokenizationSupport2Adapter(StaticServices.standaloneThemeService.get(), languageIdentifier, provider);\n    }\n  };\n\n  if (isThenable(provider)) {\n    return modes.TokenizationRegistry.registerPromise(languageId, provider.then(function (provider) {\n      return create(provider);\n    }));\n  }\n\n  return modes.TokenizationRegistry.register(languageId, create(provider));\n}\n/**\r\n * Set the tokens provider for a language (monarch implementation).\r\n */\n\nexport function setMonarchTokensProvider(languageId, languageDef) {\n  var create = function (languageDef) {\n    return createTokenizationSupport(StaticServices.modeService.get(), StaticServices.standaloneThemeService.get(), languageId, compile(languageId, languageDef));\n  };\n\n  if (isThenable(languageDef)) {\n    return modes.TokenizationRegistry.registerPromise(languageId, languageDef.then(function (languageDef) {\n      return create(languageDef);\n    }));\n  }\n\n  return modes.TokenizationRegistry.register(languageId, create(languageDef));\n}\n/**\r\n * Register a reference provider (used by e.g. reference search).\r\n */\n\nexport function registerReferenceProvider(languageId, provider) {\n  return modes.ReferenceProviderRegistry.register(languageId, provider);\n}\n/**\r\n * Register a rename provider (used by e.g. rename symbol).\r\n */\n\nexport function registerRenameProvider(languageId, provider) {\n  return modes.RenameProviderRegistry.register(languageId, provider);\n}\n/**\r\n * Register a signature help provider (used by e.g. parameter hints).\r\n */\n\nexport function registerSignatureHelpProvider(languageId, provider) {\n  return modes.SignatureHelpProviderRegistry.register(languageId, provider);\n}\n/**\r\n * Register a hover provider (used by e.g. editor hover).\r\n */\n\nexport function registerHoverProvider(languageId, provider) {\n  return modes.HoverProviderRegistry.register(languageId, {\n    provideHover: function (model, position, token) {\n      var word = model.getWordAtPosition(position);\n      return Promise.resolve(provider.provideHover(model, position, token)).then(function (value) {\n        if (!value) {\n          return undefined;\n        }\n\n        if (!value.range && word) {\n          value.range = new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn);\n        }\n\n        if (!value.range) {\n          value.range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n        }\n\n        return value;\n      });\n    }\n  });\n}\n/**\r\n * Register a document symbol provider (used by e.g. outline).\r\n */\n\nexport function registerDocumentSymbolProvider(languageId, provider) {\n  return modes.DocumentSymbolProviderRegistry.register(languageId, provider);\n}\n/**\r\n * Register a document highlight provider (used by e.g. highlight occurrences).\r\n */\n\nexport function registerDocumentHighlightProvider(languageId, provider) {\n  return modes.DocumentHighlightProviderRegistry.register(languageId, provider);\n}\n/**\r\n * Register a definition provider (used by e.g. go to definition).\r\n */\n\nexport function registerDefinitionProvider(languageId, provider) {\n  return modes.DefinitionProviderRegistry.register(languageId, provider);\n}\n/**\r\n * Register a implementation provider (used by e.g. go to implementation).\r\n */\n\nexport function registerImplementationProvider(languageId, provider) {\n  return modes.ImplementationProviderRegistry.register(languageId, provider);\n}\n/**\r\n * Register a type definition provider (used by e.g. go to type definition).\r\n */\n\nexport function registerTypeDefinitionProvider(languageId, provider) {\n  return modes.TypeDefinitionProviderRegistry.register(languageId, provider);\n}\n/**\r\n * Register a code lens provider (used by e.g. inline code lenses).\r\n */\n\nexport function registerCodeLensProvider(languageId, provider) {\n  return modes.CodeLensProviderRegistry.register(languageId, provider);\n}\n/**\r\n * Register a code action provider (used by e.g. quick fix).\r\n */\n\nexport function registerCodeActionProvider(languageId, provider) {\n  return modes.CodeActionProviderRegistry.register(languageId, {\n    provideCodeActions: function (model, range, context, token) {\n      var markers = StaticServices.markerService.get().read({\n        resource: model.uri\n      }).filter(function (m) {\n        return Range.areIntersectingOrTouching(m, range);\n      });\n      return provider.provideCodeActions(model, range, {\n        markers: markers,\n        only: context.only\n      }, token);\n    }\n  });\n}\n/**\r\n * Register a formatter that can handle only entire models.\r\n */\n\nexport function registerDocumentFormattingEditProvider(languageId, provider) {\n  return modes.DocumentFormattingEditProviderRegistry.register(languageId, provider);\n}\n/**\r\n * Register a formatter that can handle a range inside a model.\r\n */\n\nexport function registerDocumentRangeFormattingEditProvider(languageId, provider) {\n  return modes.DocumentRangeFormattingEditProviderRegistry.register(languageId, provider);\n}\n/**\r\n * Register a formatter than can do formatting as the user types.\r\n */\n\nexport function registerOnTypeFormattingEditProvider(languageId, provider) {\n  return modes.OnTypeFormattingEditProviderRegistry.register(languageId, provider);\n}\n/**\r\n * Register a link provider that can find links in text.\r\n */\n\nexport function registerLinkProvider(languageId, provider) {\n  return modes.LinkProviderRegistry.register(languageId, provider);\n}\n/**\r\n * Register a completion item provider (use by e.g. suggestions).\r\n */\n\nexport function registerCompletionItemProvider(languageId, provider) {\n  return modes.CompletionProviderRegistry.register(languageId, provider);\n}\n/**\r\n * Register a document color provider (used by Color Picker, Color Decorator).\r\n */\n\nexport function registerColorProvider(languageId, provider) {\n  return modes.ColorProviderRegistry.register(languageId, provider);\n}\n/**\r\n * Register a folding range provider\r\n */\n\nexport function registerFoldingRangeProvider(languageId, provider) {\n  return modes.FoldingRangeProviderRegistry.register(languageId, provider);\n}\n/**\r\n * Register a declaration provider\r\n */\n\nexport function registerDeclarationProvider(languageId, provider) {\n  return modes.DeclarationProviderRegistry.register(languageId, provider);\n}\n/**\r\n * Register a selection range provider\r\n */\n\nexport function registerSelectionRangeProvider(languageId, provider) {\n  return modes.SelectionRangeRegistry.register(languageId, provider);\n}\n/**\r\n * Register a document semantic tokens provider\r\n */\n\nexport function registerDocumentSemanticTokensProvider(languageId, provider) {\n  return modes.DocumentSemanticTokensProviderRegistry.register(languageId, provider);\n}\n/**\r\n * Register a document range semantic tokens provider\r\n */\n\nexport function registerDocumentRangeSemanticTokensProvider(languageId, provider) {\n  return modes.DocumentRangeSemanticTokensProviderRegistry.register(languageId, provider);\n}\n/**\r\n * @internal\r\n */\n\nexport function createMonacoLanguagesAPI() {\n  return {\n    register: register,\n    getLanguages: getLanguages,\n    onLanguage: onLanguage,\n    getEncodedLanguageId: getEncodedLanguageId,\n    // provider methods\n    setLanguageConfiguration: setLanguageConfiguration,\n    setTokensProvider: setTokensProvider,\n    setMonarchTokensProvider: setMonarchTokensProvider,\n    registerReferenceProvider: registerReferenceProvider,\n    registerRenameProvider: registerRenameProvider,\n    registerCompletionItemProvider: registerCompletionItemProvider,\n    registerSignatureHelpProvider: registerSignatureHelpProvider,\n    registerHoverProvider: registerHoverProvider,\n    registerDocumentSymbolProvider: registerDocumentSymbolProvider,\n    registerDocumentHighlightProvider: registerDocumentHighlightProvider,\n    registerDefinitionProvider: registerDefinitionProvider,\n    registerImplementationProvider: registerImplementationProvider,\n    registerTypeDefinitionProvider: registerTypeDefinitionProvider,\n    registerCodeLensProvider: registerCodeLensProvider,\n    registerCodeActionProvider: registerCodeActionProvider,\n    registerDocumentFormattingEditProvider: registerDocumentFormattingEditProvider,\n    registerDocumentRangeFormattingEditProvider: registerDocumentRangeFormattingEditProvider,\n    registerOnTypeFormattingEditProvider: registerOnTypeFormattingEditProvider,\n    registerLinkProvider: registerLinkProvider,\n    registerColorProvider: registerColorProvider,\n    registerFoldingRangeProvider: registerFoldingRangeProvider,\n    registerDeclarationProvider: registerDeclarationProvider,\n    registerSelectionRangeProvider: registerSelectionRangeProvider,\n    registerDocumentSemanticTokensProvider: registerDocumentSemanticTokensProvider,\n    registerDocumentRangeSemanticTokensProvider: registerDocumentRangeSemanticTokensProvider,\n    // enums\n    DocumentHighlightKind: standaloneEnums.DocumentHighlightKind,\n    CompletionItemKind: standaloneEnums.CompletionItemKind,\n    CompletionItemTag: standaloneEnums.CompletionItemTag,\n    CompletionItemInsertTextRule: standaloneEnums.CompletionItemInsertTextRule,\n    SymbolKind: standaloneEnums.SymbolKind,\n    SymbolTag: standaloneEnums.SymbolTag,\n    IndentAction: standaloneEnums.IndentAction,\n    CompletionTriggerKind: standaloneEnums.CompletionTriggerKind,\n    SignatureHelpTriggerKind: standaloneEnums.SignatureHelpTriggerKind,\n    // classes\n    FoldingRangeKind: modes.FoldingRangeKind\n  };\n}","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/standalone/browser/standaloneLanguages.js"],"names":["Range","Token","TokenizationResult","TokenizationResult2","modes","LanguageConfigurationRegistry","ModesRegistry","standaloneEnums","StaticServices","compile","createTokenizationSupport","register","language","registerLanguage","getLanguages","result","concat","getEncodedLanguageId","languageId","lid","modeService","get","getLanguageIdentifier","id","onLanguage","callback","disposable","onDidCreateMode","mode","getId","dispose","setLanguageConfiguration","configuration","languageIdentifier","Error","EncodedTokenizationSupport2Adapter","actual","_actual","prototype","getInitialState","tokenize","line","state","offsetDelta","tokenize2","tokenizeEncoded","tokens","endState","TokenizationSupport2Adapter","standaloneThemeService","_standaloneThemeService","_languageIdentifier","_toClassicTokens","previousStartIndex","i","len","length","t","startIndex","scopes","actualResult","equals","_toBinaryTokens","tokenTheme","getTheme","resultLen","metadata","match","Uint32Array","isEncodedTokensProvider","provider","isThenable","obj","then","setTokensProvider","create","TokenizationRegistry","registerPromise","setMonarchTokensProvider","languageDef","registerReferenceProvider","ReferenceProviderRegistry","registerRenameProvider","RenameProviderRegistry","registerSignatureHelpProvider","SignatureHelpProviderRegistry","registerHoverProvider","HoverProviderRegistry","provideHover","model","position","token","word","getWordAtPosition","Promise","resolve","value","undefined","range","lineNumber","startColumn","endColumn","column","registerDocumentSymbolProvider","DocumentSymbolProviderRegistry","registerDocumentHighlightProvider","DocumentHighlightProviderRegistry","registerDefinitionProvider","DefinitionProviderRegistry","registerImplementationProvider","ImplementationProviderRegistry","registerTypeDefinitionProvider","TypeDefinitionProviderRegistry","registerCodeLensProvider","CodeLensProviderRegistry","registerCodeActionProvider","CodeActionProviderRegistry","provideCodeActions","context","markers","markerService","read","resource","uri","filter","m","areIntersectingOrTouching","only","registerDocumentFormattingEditProvider","DocumentFormattingEditProviderRegistry","registerDocumentRangeFormattingEditProvider","DocumentRangeFormattingEditProviderRegistry","registerOnTypeFormattingEditProvider","OnTypeFormattingEditProviderRegistry","registerLinkProvider","LinkProviderRegistry","registerCompletionItemProvider","CompletionProviderRegistry","registerColorProvider","ColorProviderRegistry","registerFoldingRangeProvider","FoldingRangeProviderRegistry","registerDeclarationProvider","DeclarationProviderRegistry","registerSelectionRangeProvider","SelectionRangeRegistry","registerDocumentSemanticTokensProvider","DocumentSemanticTokensProviderRegistry","registerDocumentRangeSemanticTokensProvider","DocumentRangeSemanticTokensProviderRegistry","createMonacoLanguagesAPI","DocumentHighlightKind","CompletionItemKind","CompletionItemTag","CompletionItemInsertTextRule","SymbolKind","SymbolTag","IndentAction","CompletionTriggerKind","SignatureHelpTriggerKind","FoldingRangeKind"],"mappings":"AAAA;;;;AAIA,SAASA,KAAT,QAAsB,4BAAtB;AACA,SAASC,KAAT,EAAgBC,kBAAhB,EAAoCC,mBAApC,QAA+D,4BAA/D;AACA,OAAO,KAAKC,KAAZ,MAAuB,uBAAvB;AACA,SAASC,6BAAT,QAA8C,qDAA9C;AACA,SAASC,aAAT,QAA8B,qCAA9B;AACA,OAAO,KAAKC,eAAZ,MAAiC,4CAAjC;AACA,SAASC,cAAT,QAA+B,yBAA/B;AACA,SAASC,OAAT,QAAwB,qCAAxB;AACA,SAASC,yBAAT,QAA0C,mCAA1C;AACA;;;;AAGA,OAAO,SAASC,QAAT,CAAkBC,QAAlB,EAA4B;AAC/BN,EAAAA,aAAa,CAACO,gBAAd,CAA+BD,QAA/B;AACH;AACD;;;;AAGA,OAAO,SAASE,YAAT,GAAwB;AAC3B,MAAIC,MAAM,GAAG,EAAb;AACAA,EAAAA,MAAM,GAAGA,MAAM,CAACC,MAAP,CAAcV,aAAa,CAACQ,YAAd,EAAd,CAAT;AACA,SAAOC,MAAP;AACH;AACD,OAAO,SAASE,oBAAT,CAA8BC,UAA9B,EAA0C;AAC7C,MAAIC,GAAG,GAAGX,cAAc,CAACY,WAAf,CAA2BC,GAA3B,GAAiCC,qBAAjC,CAAuDJ,UAAvD,CAAV;AACA,SAAOC,GAAG,GAAGA,GAAG,CAACI,EAAP,GAAY,CAAtB;AACH;AACD;;;;;AAIA,OAAO,SAASC,UAAT,CAAoBN,UAApB,EAAgCO,QAAhC,EAA0C;AAC7C,MAAIC,UAAU,GAAGlB,cAAc,CAACY,WAAf,CAA2BC,GAA3B,GAAiCM,eAAjC,CAAiD,UAAUC,IAAV,EAAgB;AAC9E,QAAIA,IAAI,CAACC,KAAL,OAAiBX,UAArB,EAAiC;AAC7B;AACAQ,MAAAA,UAAU,CAACI,OAAX,GAF6B,CAG7B;;AACAL,MAAAA,QAAQ;AACX;AACJ,GAPgB,CAAjB;AAQA,SAAOC,UAAP;AACH;AACD;;;;AAGA,OAAO,SAASK,wBAAT,CAAkCb,UAAlC,EAA8Cc,aAA9C,EAA6D;AAChE,MAAIC,kBAAkB,GAAGzB,cAAc,CAACY,WAAf,CAA2BC,GAA3B,GAAiCC,qBAAjC,CAAuDJ,UAAvD,CAAzB;;AACA,MAAI,CAACe,kBAAL,EAAyB;AACrB,UAAM,IAAIC,KAAJ,CAAU,mDAAmDhB,UAA7D,CAAN;AACH;;AACD,SAAOb,6BAA6B,CAACM,QAA9B,CAAuCsB,kBAAvC,EAA2DD,aAA3D,CAAP;AACH;AACD;;;;AAGA,IAAIG,kCAAkC;AAAG;AAAe,YAAY;AAChE,WAASA,kCAAT,CAA4CC,MAA5C,EAAoD;AAChD,SAAKC,OAAL,GAAeD,MAAf;AACH;;AACDD,EAAAA,kCAAkC,CAACG,SAAnC,CAA6CC,eAA7C,GAA+D,YAAY;AACvE,WAAO,KAAKF,OAAL,CAAaE,eAAb,EAAP;AACH,GAFD;;AAGAJ,EAAAA,kCAAkC,CAACG,SAAnC,CAA6CE,QAA7C,GAAwD,UAAUC,IAAV,EAAgBC,KAAhB,EAAuBC,WAAvB,EAAoC;AACxF,UAAM,IAAIT,KAAJ,CAAU,gBAAV,CAAN;AACH,GAFD;;AAGAC,EAAAA,kCAAkC,CAACG,SAAnC,CAA6CM,SAA7C,GAAyD,UAAUH,IAAV,EAAgBC,KAAhB,EAAuB;AAC5E,QAAI3B,MAAM,GAAG,KAAKsB,OAAL,CAAaQ,eAAb,CAA6BJ,IAA7B,EAAmCC,KAAnC,CAAb;;AACA,WAAO,IAAIvC,mBAAJ,CAAwBY,MAAM,CAAC+B,MAA/B,EAAuC/B,MAAM,CAACgC,QAA9C,CAAP;AACH,GAHD;;AAIA,SAAOZ,kCAAP;AACH,CAfuD,EAAxD;;AAgBA,SAASA,kCAAT;AACA;;;;AAGA,IAAIa,2BAA2B;AAAG;AAAe,YAAY;AACzD,WAASA,2BAAT,CAAqCC,sBAArC,EAA6DhB,kBAA7D,EAAiFG,MAAjF,EAAyF;AACrF,SAAKc,uBAAL,GAA+BD,sBAA/B;AACA,SAAKE,mBAAL,GAA2BlB,kBAA3B;AACA,SAAKI,OAAL,GAAeD,MAAf;AACH;;AACDY,EAAAA,2BAA2B,CAACV,SAA5B,CAAsCC,eAAtC,GAAwD,YAAY;AAChE,WAAO,KAAKF,OAAL,CAAaE,eAAb,EAAP;AACH,GAFD;;AAGAS,EAAAA,2BAA2B,CAACV,SAA5B,CAAsCc,gBAAtC,GAAyD,UAAUN,MAAV,EAAkBlC,QAAlB,EAA4B+B,WAA5B,EAAyC;AAC9F,QAAI5B,MAAM,GAAG,EAAb;AACA,QAAIsC,kBAAkB,GAAG,CAAzB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGT,MAAM,CAACU,MAA7B,EAAqCF,CAAC,GAAGC,GAAzC,EAA8CD,CAAC,EAA/C,EAAmD;AAC/C,UAAIG,CAAC,GAAGX,MAAM,CAACQ,CAAD,CAAd;AACA,UAAII,UAAU,GAAGD,CAAC,CAACC,UAAnB,CAF+C,CAG/C;;AACA,UAAIJ,CAAC,KAAK,CAAV,EAAa;AACT;AACAI,QAAAA,UAAU,GAAG,CAAb;AACH,OAHD,MAIK,IAAIA,UAAU,GAAGL,kBAAjB,EAAqC;AACtC;AACAK,QAAAA,UAAU,GAAGL,kBAAb;AACH;;AACDtC,MAAAA,MAAM,CAACuC,CAAD,CAAN,GAAY,IAAIrD,KAAJ,CAAUyD,UAAU,GAAGf,WAAvB,EAAoCc,CAAC,CAACE,MAAtC,EAA8C/C,QAA9C,CAAZ;AACAyC,MAAAA,kBAAkB,GAAGK,UAArB;AACH;;AACD,WAAO3C,MAAP;AACH,GAnBD;;AAoBAiC,EAAAA,2BAA2B,CAACV,SAA5B,CAAsCE,QAAtC,GAAiD,UAAUC,IAAV,EAAgBC,KAAhB,EAAuBC,WAAvB,EAAoC;AACjF,QAAIiB,YAAY,GAAG,KAAKvB,OAAL,CAAaG,QAAb,CAAsBC,IAAtB,EAA4BC,KAA5B,CAAnB;;AACA,QAAII,MAAM,GAAG,KAAKM,gBAAL,CAAsBQ,YAAY,CAACd,MAAnC,EAA2C,KAAKK,mBAAL,CAAyBvC,QAApE,EAA8E+B,WAA9E,CAAb;;AACA,QAAII,QAAJ,CAHiF,CAIjF;;AACA,QAAIa,YAAY,CAACb,QAAb,CAAsBc,MAAtB,CAA6BnB,KAA7B,CAAJ,EAAyC;AACrCK,MAAAA,QAAQ,GAAGL,KAAX;AACH,KAFD,MAGK;AACDK,MAAAA,QAAQ,GAAGa,YAAY,CAACb,QAAxB;AACH;;AACD,WAAO,IAAI7C,kBAAJ,CAAuB4C,MAAvB,EAA+BC,QAA/B,CAAP;AACH,GAZD;;AAaAC,EAAAA,2BAA2B,CAACV,SAA5B,CAAsCwB,eAAtC,GAAwD,UAAUhB,MAAV,EAAkBH,WAAlB,EAA+B;AACnF,QAAIzB,UAAU,GAAG,KAAKiC,mBAAL,CAAyB5B,EAA1C;;AACA,QAAIwC,UAAU,GAAG,KAAKb,uBAAL,CAA6Bc,QAA7B,GAAwCD,UAAzD;;AACA,QAAIhD,MAAM,GAAG,EAAb;AAAA,QAAiBkD,SAAS,GAAG,CAA7B;AACA,QAAIZ,kBAAkB,GAAG,CAAzB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGT,MAAM,CAACU,MAA7B,EAAqCF,CAAC,GAAGC,GAAzC,EAA8CD,CAAC,EAA/C,EAAmD;AAC/C,UAAIG,CAAC,GAAGX,MAAM,CAACQ,CAAD,CAAd;AACA,UAAIY,QAAQ,GAAGH,UAAU,CAACI,KAAX,CAAiBjD,UAAjB,EAA6BuC,CAAC,CAACE,MAA/B,CAAf;;AACA,UAAIM,SAAS,GAAG,CAAZ,IAAiBlD,MAAM,CAACkD,SAAS,GAAG,CAAb,CAAN,KAA0BC,QAA/C,EAAyD;AACrD;AACA;AACH;;AACD,UAAIR,UAAU,GAAGD,CAAC,CAACC,UAAnB,CAP+C,CAQ/C;;AACA,UAAIJ,CAAC,KAAK,CAAV,EAAa;AACT;AACAI,QAAAA,UAAU,GAAG,CAAb;AACH,OAHD,MAIK,IAAIA,UAAU,GAAGL,kBAAjB,EAAqC;AACtC;AACAK,QAAAA,UAAU,GAAGL,kBAAb;AACH;;AACDtC,MAAAA,MAAM,CAACkD,SAAS,EAAV,CAAN,GAAsBP,UAAU,GAAGf,WAAnC;AACA5B,MAAAA,MAAM,CAACkD,SAAS,EAAV,CAAN,GAAsBC,QAAtB;AACAb,MAAAA,kBAAkB,GAAGK,UAArB;AACH;;AACD,QAAIE,YAAY,GAAG,IAAIQ,WAAJ,CAAgBH,SAAhB,CAAnB;;AACA,SAAK,IAAIX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGW,SAApB,EAA+BX,CAAC,EAAhC,EAAoC;AAChCM,MAAAA,YAAY,CAACN,CAAD,CAAZ,GAAkBvC,MAAM,CAACuC,CAAD,CAAxB;AACH;;AACD,WAAOM,YAAP;AACH,GA/BD;;AAgCAZ,EAAAA,2BAA2B,CAACV,SAA5B,CAAsCM,SAAtC,GAAkD,UAAUH,IAAV,EAAgBC,KAAhB,EAAuBC,WAAvB,EAAoC;AAClF,QAAIiB,YAAY,GAAG,KAAKvB,OAAL,CAAaG,QAAb,CAAsBC,IAAtB,EAA4BC,KAA5B,CAAnB;;AACA,QAAII,MAAM,GAAG,KAAKgB,eAAL,CAAqBF,YAAY,CAACd,MAAlC,EAA0CH,WAA1C,CAAb;;AACA,QAAII,QAAJ,CAHkF,CAIlF;;AACA,QAAIa,YAAY,CAACb,QAAb,CAAsBc,MAAtB,CAA6BnB,KAA7B,CAAJ,EAAyC;AACrCK,MAAAA,QAAQ,GAAGL,KAAX;AACH,KAFD,MAGK;AACDK,MAAAA,QAAQ,GAAGa,YAAY,CAACb,QAAxB;AACH;;AACD,WAAO,IAAI5C,mBAAJ,CAAwB2C,MAAxB,EAAgCC,QAAhC,CAAP;AACH,GAZD;;AAaA,SAAOC,2BAAP;AACH,CAxFgD,EAAjD;;AAyFA,SAASA,2BAAT;;AACA,SAASqB,uBAAT,CAAiCC,QAAjC,EAA2C;AACvC,SAAO,qBAAqBA,QAA5B;AACH;;AACD,SAASC,UAAT,CAAoBC,GAApB,EAAyB;AACrB,SAAOA,GAAG,IAAI,OAAOA,GAAG,CAACC,IAAX,KAAoB,UAAlC;AACH;AACD;;;;;AAGA,OAAO,SAASC,iBAAT,CAA2BxD,UAA3B,EAAuCoD,QAAvC,EAAiD;AACpD,MAAIrC,kBAAkB,GAAGzB,cAAc,CAACY,WAAf,CAA2BC,GAA3B,GAAiCC,qBAAjC,CAAuDJ,UAAvD,CAAzB;;AACA,MAAI,CAACe,kBAAL,EAAyB;AACrB,UAAM,IAAIC,KAAJ,CAAU,qDAAqDhB,UAA/D,CAAN;AACH;;AACD,MAAIyD,MAAM,GAAG,UAAUL,QAAV,EAAoB;AAC7B,QAAID,uBAAuB,CAACC,QAAD,CAA3B,EAAuC;AACnC,aAAO,IAAInC,kCAAJ,CAAuCmC,QAAvC,CAAP;AACH,KAFD,MAGK;AACD,aAAO,IAAItB,2BAAJ,CAAgCxC,cAAc,CAACyC,sBAAf,CAAsC5B,GAAtC,EAAhC,EAA6EY,kBAA7E,EAAiGqC,QAAjG,CAAP;AACH;AACJ,GAPD;;AAQA,MAAIC,UAAU,CAACD,QAAD,CAAd,EAA0B;AACtB,WAAOlE,KAAK,CAACwE,oBAAN,CAA2BC,eAA3B,CAA2C3D,UAA3C,EAAuDoD,QAAQ,CAACG,IAAT,CAAc,UAAUH,QAAV,EAAoB;AAAE,aAAOK,MAAM,CAACL,QAAD,CAAb;AAA0B,KAA9D,CAAvD,CAAP;AACH;;AACD,SAAOlE,KAAK,CAACwE,oBAAN,CAA2BjE,QAA3B,CAAoCO,UAApC,EAAgDyD,MAAM,CAACL,QAAD,CAAtD,CAAP;AACH;AACD;;;;AAGA,OAAO,SAASQ,wBAAT,CAAkC5D,UAAlC,EAA8C6D,WAA9C,EAA2D;AAC9D,MAAIJ,MAAM,GAAG,UAAUI,WAAV,EAAuB;AAChC,WAAOrE,yBAAyB,CAACF,cAAc,CAACY,WAAf,CAA2BC,GAA3B,EAAD,EAAmCb,cAAc,CAACyC,sBAAf,CAAsC5B,GAAtC,EAAnC,EAAgFH,UAAhF,EAA4FT,OAAO,CAACS,UAAD,EAAa6D,WAAb,CAAnG,CAAhC;AACH,GAFD;;AAGA,MAAIR,UAAU,CAACQ,WAAD,CAAd,EAA6B;AACzB,WAAO3E,KAAK,CAACwE,oBAAN,CAA2BC,eAA3B,CAA2C3D,UAA3C,EAAuD6D,WAAW,CAACN,IAAZ,CAAiB,UAAUM,WAAV,EAAuB;AAAE,aAAOJ,MAAM,CAACI,WAAD,CAAb;AAA6B,KAAvE,CAAvD,CAAP;AACH;;AACD,SAAO3E,KAAK,CAACwE,oBAAN,CAA2BjE,QAA3B,CAAoCO,UAApC,EAAgDyD,MAAM,CAACI,WAAD,CAAtD,CAAP;AACH;AACD;;;;AAGA,OAAO,SAASC,yBAAT,CAAmC9D,UAAnC,EAA+CoD,QAA/C,EAAyD;AAC5D,SAAOlE,KAAK,CAAC6E,yBAAN,CAAgCtE,QAAhC,CAAyCO,UAAzC,EAAqDoD,QAArD,CAAP;AACH;AACD;;;;AAGA,OAAO,SAASY,sBAAT,CAAgChE,UAAhC,EAA4CoD,QAA5C,EAAsD;AACzD,SAAOlE,KAAK,CAAC+E,sBAAN,CAA6BxE,QAA7B,CAAsCO,UAAtC,EAAkDoD,QAAlD,CAAP;AACH;AACD;;;;AAGA,OAAO,SAASc,6BAAT,CAAuClE,UAAvC,EAAmDoD,QAAnD,EAA6D;AAChE,SAAOlE,KAAK,CAACiF,6BAAN,CAAoC1E,QAApC,CAA6CO,UAA7C,EAAyDoD,QAAzD,CAAP;AACH;AACD;;;;AAGA,OAAO,SAASgB,qBAAT,CAA+BpE,UAA/B,EAA2CoD,QAA3C,EAAqD;AACxD,SAAOlE,KAAK,CAACmF,qBAAN,CAA4B5E,QAA5B,CAAqCO,UAArC,EAAiD;AACpDsE,IAAAA,YAAY,EAAE,UAAUC,KAAV,EAAiBC,QAAjB,EAA2BC,KAA3B,EAAkC;AAC5C,UAAIC,IAAI,GAAGH,KAAK,CAACI,iBAAN,CAAwBH,QAAxB,CAAX;AACA,aAAOI,OAAO,CAACC,OAAR,CAAgBzB,QAAQ,CAACkB,YAAT,CAAsBC,KAAtB,EAA6BC,QAA7B,EAAuCC,KAAvC,CAAhB,EAA+DlB,IAA/D,CAAoE,UAAUuB,KAAV,EAAiB;AACxF,YAAI,CAACA,KAAL,EAAY;AACR,iBAAOC,SAAP;AACH;;AACD,YAAI,CAACD,KAAK,CAACE,KAAP,IAAgBN,IAApB,EAA0B;AACtBI,UAAAA,KAAK,CAACE,KAAN,GAAc,IAAIlG,KAAJ,CAAU0F,QAAQ,CAACS,UAAnB,EAA+BP,IAAI,CAACQ,WAApC,EAAiDV,QAAQ,CAACS,UAA1D,EAAsEP,IAAI,CAACS,SAA3E,CAAd;AACH;;AACD,YAAI,CAACL,KAAK,CAACE,KAAX,EAAkB;AACdF,UAAAA,KAAK,CAACE,KAAN,GAAc,IAAIlG,KAAJ,CAAU0F,QAAQ,CAACS,UAAnB,EAA+BT,QAAQ,CAACY,MAAxC,EAAgDZ,QAAQ,CAACS,UAAzD,EAAqET,QAAQ,CAACY,MAA9E,CAAd;AACH;;AACD,eAAON,KAAP;AACH,OAXM,CAAP;AAYH;AAfmD,GAAjD,CAAP;AAiBH;AACD;;;;AAGA,OAAO,SAASO,8BAAT,CAAwCrF,UAAxC,EAAoDoD,QAApD,EAA8D;AACjE,SAAOlE,KAAK,CAACoG,8BAAN,CAAqC7F,QAArC,CAA8CO,UAA9C,EAA0DoD,QAA1D,CAAP;AACH;AACD;;;;AAGA,OAAO,SAASmC,iCAAT,CAA2CvF,UAA3C,EAAuDoD,QAAvD,EAAiE;AACpE,SAAOlE,KAAK,CAACsG,iCAAN,CAAwC/F,QAAxC,CAAiDO,UAAjD,EAA6DoD,QAA7D,CAAP;AACH;AACD;;;;AAGA,OAAO,SAASqC,0BAAT,CAAoCzF,UAApC,EAAgDoD,QAAhD,EAA0D;AAC7D,SAAOlE,KAAK,CAACwG,0BAAN,CAAiCjG,QAAjC,CAA0CO,UAA1C,EAAsDoD,QAAtD,CAAP;AACH;AACD;;;;AAGA,OAAO,SAASuC,8BAAT,CAAwC3F,UAAxC,EAAoDoD,QAApD,EAA8D;AACjE,SAAOlE,KAAK,CAAC0G,8BAAN,CAAqCnG,QAArC,CAA8CO,UAA9C,EAA0DoD,QAA1D,CAAP;AACH;AACD;;;;AAGA,OAAO,SAASyC,8BAAT,CAAwC7F,UAAxC,EAAoDoD,QAApD,EAA8D;AACjE,SAAOlE,KAAK,CAAC4G,8BAAN,CAAqCrG,QAArC,CAA8CO,UAA9C,EAA0DoD,QAA1D,CAAP;AACH;AACD;;;;AAGA,OAAO,SAAS2C,wBAAT,CAAkC/F,UAAlC,EAA8CoD,QAA9C,EAAwD;AAC3D,SAAOlE,KAAK,CAAC8G,wBAAN,CAA+BvG,QAA/B,CAAwCO,UAAxC,EAAoDoD,QAApD,CAAP;AACH;AACD;;;;AAGA,OAAO,SAAS6C,0BAAT,CAAoCjG,UAApC,EAAgDoD,QAAhD,EAA0D;AAC7D,SAAOlE,KAAK,CAACgH,0BAAN,CAAiCzG,QAAjC,CAA0CO,UAA1C,EAAsD;AACzDmG,IAAAA,kBAAkB,EAAE,UAAU5B,KAAV,EAAiBS,KAAjB,EAAwBoB,OAAxB,EAAiC3B,KAAjC,EAAwC;AACxD,UAAI4B,OAAO,GAAG/G,cAAc,CAACgH,aAAf,CAA6BnG,GAA7B,GAAmCoG,IAAnC,CAAwC;AAAEC,QAAAA,QAAQ,EAAEjC,KAAK,CAACkC;AAAlB,OAAxC,EAAiEC,MAAjE,CAAwE,UAAUC,CAAV,EAAa;AAC/F,eAAO7H,KAAK,CAAC8H,yBAAN,CAAgCD,CAAhC,EAAmC3B,KAAnC,CAAP;AACH,OAFa,CAAd;AAGA,aAAO5B,QAAQ,CAAC+C,kBAAT,CAA4B5B,KAA5B,EAAmCS,KAAnC,EAA0C;AAAEqB,QAAAA,OAAO,EAAEA,OAAX;AAAoBQ,QAAAA,IAAI,EAAET,OAAO,CAACS;AAAlC,OAA1C,EAAoFpC,KAApF,CAAP;AACH;AANwD,GAAtD,CAAP;AAQH;AACD;;;;AAGA,OAAO,SAASqC,sCAAT,CAAgD9G,UAAhD,EAA4DoD,QAA5D,EAAsE;AACzE,SAAOlE,KAAK,CAAC6H,sCAAN,CAA6CtH,QAA7C,CAAsDO,UAAtD,EAAkEoD,QAAlE,CAAP;AACH;AACD;;;;AAGA,OAAO,SAAS4D,2CAAT,CAAqDhH,UAArD,EAAiEoD,QAAjE,EAA2E;AAC9E,SAAOlE,KAAK,CAAC+H,2CAAN,CAAkDxH,QAAlD,CAA2DO,UAA3D,EAAuEoD,QAAvE,CAAP;AACH;AACD;;;;AAGA,OAAO,SAAS8D,oCAAT,CAA8ClH,UAA9C,EAA0DoD,QAA1D,EAAoE;AACvE,SAAOlE,KAAK,CAACiI,oCAAN,CAA2C1H,QAA3C,CAAoDO,UAApD,EAAgEoD,QAAhE,CAAP;AACH;AACD;;;;AAGA,OAAO,SAASgE,oBAAT,CAA8BpH,UAA9B,EAA0CoD,QAA1C,EAAoD;AACvD,SAAOlE,KAAK,CAACmI,oBAAN,CAA2B5H,QAA3B,CAAoCO,UAApC,EAAgDoD,QAAhD,CAAP;AACH;AACD;;;;AAGA,OAAO,SAASkE,8BAAT,CAAwCtH,UAAxC,EAAoDoD,QAApD,EAA8D;AACjE,SAAOlE,KAAK,CAACqI,0BAAN,CAAiC9H,QAAjC,CAA0CO,UAA1C,EAAsDoD,QAAtD,CAAP;AACH;AACD;;;;AAGA,OAAO,SAASoE,qBAAT,CAA+BxH,UAA/B,EAA2CoD,QAA3C,EAAqD;AACxD,SAAOlE,KAAK,CAACuI,qBAAN,CAA4BhI,QAA5B,CAAqCO,UAArC,EAAiDoD,QAAjD,CAAP;AACH;AACD;;;;AAGA,OAAO,SAASsE,4BAAT,CAAsC1H,UAAtC,EAAkDoD,QAAlD,EAA4D;AAC/D,SAAOlE,KAAK,CAACyI,4BAAN,CAAmClI,QAAnC,CAA4CO,UAA5C,EAAwDoD,QAAxD,CAAP;AACH;AACD;;;;AAGA,OAAO,SAASwE,2BAAT,CAAqC5H,UAArC,EAAiDoD,QAAjD,EAA2D;AAC9D,SAAOlE,KAAK,CAAC2I,2BAAN,CAAkCpI,QAAlC,CAA2CO,UAA3C,EAAuDoD,QAAvD,CAAP;AACH;AACD;;;;AAGA,OAAO,SAAS0E,8BAAT,CAAwC9H,UAAxC,EAAoDoD,QAApD,EAA8D;AACjE,SAAOlE,KAAK,CAAC6I,sBAAN,CAA6BtI,QAA7B,CAAsCO,UAAtC,EAAkDoD,QAAlD,CAAP;AACH;AACD;;;;AAGA,OAAO,SAAS4E,sCAAT,CAAgDhI,UAAhD,EAA4DoD,QAA5D,EAAsE;AACzE,SAAOlE,KAAK,CAAC+I,sCAAN,CAA6CxI,QAA7C,CAAsDO,UAAtD,EAAkEoD,QAAlE,CAAP;AACH;AACD;;;;AAGA,OAAO,SAAS8E,2CAAT,CAAqDlI,UAArD,EAAiEoD,QAAjE,EAA2E;AAC9E,SAAOlE,KAAK,CAACiJ,2CAAN,CAAkD1I,QAAlD,CAA2DO,UAA3D,EAAuEoD,QAAvE,CAAP;AACH;AACD;;;;AAGA,OAAO,SAASgF,wBAAT,GAAoC;AACvC,SAAO;AACH3I,IAAAA,QAAQ,EAAEA,QADP;AAEHG,IAAAA,YAAY,EAAEA,YAFX;AAGHU,IAAAA,UAAU,EAAEA,UAHT;AAIHP,IAAAA,oBAAoB,EAAEA,oBAJnB;AAKH;AACAc,IAAAA,wBAAwB,EAAEA,wBANvB;AAOH2C,IAAAA,iBAAiB,EAAEA,iBAPhB;AAQHI,IAAAA,wBAAwB,EAAEA,wBARvB;AASHE,IAAAA,yBAAyB,EAAEA,yBATxB;AAUHE,IAAAA,sBAAsB,EAAEA,sBAVrB;AAWHsD,IAAAA,8BAA8B,EAAEA,8BAX7B;AAYHpD,IAAAA,6BAA6B,EAAEA,6BAZ5B;AAaHE,IAAAA,qBAAqB,EAAEA,qBAbpB;AAcHiB,IAAAA,8BAA8B,EAAEA,8BAd7B;AAeHE,IAAAA,iCAAiC,EAAEA,iCAfhC;AAgBHE,IAAAA,0BAA0B,EAAEA,0BAhBzB;AAiBHE,IAAAA,8BAA8B,EAAEA,8BAjB7B;AAkBHE,IAAAA,8BAA8B,EAAEA,8BAlB7B;AAmBHE,IAAAA,wBAAwB,EAAEA,wBAnBvB;AAoBHE,IAAAA,0BAA0B,EAAEA,0BApBzB;AAqBHa,IAAAA,sCAAsC,EAAEA,sCArBrC;AAsBHE,IAAAA,2CAA2C,EAAEA,2CAtB1C;AAuBHE,IAAAA,oCAAoC,EAAEA,oCAvBnC;AAwBHE,IAAAA,oBAAoB,EAAEA,oBAxBnB;AAyBHI,IAAAA,qBAAqB,EAAEA,qBAzBpB;AA0BHE,IAAAA,4BAA4B,EAAEA,4BA1B3B;AA2BHE,IAAAA,2BAA2B,EAAEA,2BA3B1B;AA4BHE,IAAAA,8BAA8B,EAAEA,8BA5B7B;AA6BHE,IAAAA,sCAAsC,EAAEA,sCA7BrC;AA8BHE,IAAAA,2CAA2C,EAAEA,2CA9B1C;AA+BH;AACAG,IAAAA,qBAAqB,EAAEhJ,eAAe,CAACgJ,qBAhCpC;AAiCHC,IAAAA,kBAAkB,EAAEjJ,eAAe,CAACiJ,kBAjCjC;AAkCHC,IAAAA,iBAAiB,EAAElJ,eAAe,CAACkJ,iBAlChC;AAmCHC,IAAAA,4BAA4B,EAAEnJ,eAAe,CAACmJ,4BAnC3C;AAoCHC,IAAAA,UAAU,EAAEpJ,eAAe,CAACoJ,UApCzB;AAqCHC,IAAAA,SAAS,EAAErJ,eAAe,CAACqJ,SArCxB;AAsCHC,IAAAA,YAAY,EAAEtJ,eAAe,CAACsJ,YAtC3B;AAuCHC,IAAAA,qBAAqB,EAAEvJ,eAAe,CAACuJ,qBAvCpC;AAwCHC,IAAAA,wBAAwB,EAAExJ,eAAe,CAACwJ,wBAxCvC;AAyCH;AACAC,IAAAA,gBAAgB,EAAE5J,KAAK,CAAC4J;AA1CrB,GAAP;AA4CH","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Token, TokenizationResult, TokenizationResult2 } from '../../common/core/token.js';\r\nimport * as modes from '../../common/modes.js';\r\nimport { LanguageConfigurationRegistry } from '../../common/modes/languageConfigurationRegistry.js';\r\nimport { ModesRegistry } from '../../common/modes/modesRegistry.js';\r\nimport * as standaloneEnums from '../../common/standalone/standaloneEnums.js';\r\nimport { StaticServices } from './standaloneServices.js';\r\nimport { compile } from '../common/monarch/monarchCompile.js';\r\nimport { createTokenizationSupport } from '../common/monarch/monarchLexer.js';\r\n/**\r\n * Register information about a new language.\r\n */\r\nexport function register(language) {\r\n    ModesRegistry.registerLanguage(language);\r\n}\r\n/**\r\n * Get the information of all the registered languages.\r\n */\r\nexport function getLanguages() {\r\n    var result = [];\r\n    result = result.concat(ModesRegistry.getLanguages());\r\n    return result;\r\n}\r\nexport function getEncodedLanguageId(languageId) {\r\n    var lid = StaticServices.modeService.get().getLanguageIdentifier(languageId);\r\n    return lid ? lid.id : 0;\r\n}\r\n/**\r\n * An event emitted when a language is first time needed (e.g. a model has it set).\r\n * @event\r\n */\r\nexport function onLanguage(languageId, callback) {\r\n    var disposable = StaticServices.modeService.get().onDidCreateMode(function (mode) {\r\n        if (mode.getId() === languageId) {\r\n            // stop listening\r\n            disposable.dispose();\r\n            // invoke actual listener\r\n            callback();\r\n        }\r\n    });\r\n    return disposable;\r\n}\r\n/**\r\n * Set the editing configuration for a language.\r\n */\r\nexport function setLanguageConfiguration(languageId, configuration) {\r\n    var languageIdentifier = StaticServices.modeService.get().getLanguageIdentifier(languageId);\r\n    if (!languageIdentifier) {\r\n        throw new Error(\"Cannot set configuration for unknown language \" + languageId);\r\n    }\r\n    return LanguageConfigurationRegistry.register(languageIdentifier, configuration);\r\n}\r\n/**\r\n * @internal\r\n */\r\nvar EncodedTokenizationSupport2Adapter = /** @class */ (function () {\r\n    function EncodedTokenizationSupport2Adapter(actual) {\r\n        this._actual = actual;\r\n    }\r\n    EncodedTokenizationSupport2Adapter.prototype.getInitialState = function () {\r\n        return this._actual.getInitialState();\r\n    };\r\n    EncodedTokenizationSupport2Adapter.prototype.tokenize = function (line, state, offsetDelta) {\r\n        throw new Error('Not supported!');\r\n    };\r\n    EncodedTokenizationSupport2Adapter.prototype.tokenize2 = function (line, state) {\r\n        var result = this._actual.tokenizeEncoded(line, state);\r\n        return new TokenizationResult2(result.tokens, result.endState);\r\n    };\r\n    return EncodedTokenizationSupport2Adapter;\r\n}());\r\nexport { EncodedTokenizationSupport2Adapter };\r\n/**\r\n * @internal\r\n */\r\nvar TokenizationSupport2Adapter = /** @class */ (function () {\r\n    function TokenizationSupport2Adapter(standaloneThemeService, languageIdentifier, actual) {\r\n        this._standaloneThemeService = standaloneThemeService;\r\n        this._languageIdentifier = languageIdentifier;\r\n        this._actual = actual;\r\n    }\r\n    TokenizationSupport2Adapter.prototype.getInitialState = function () {\r\n        return this._actual.getInitialState();\r\n    };\r\n    TokenizationSupport2Adapter.prototype._toClassicTokens = function (tokens, language, offsetDelta) {\r\n        var result = [];\r\n        var previousStartIndex = 0;\r\n        for (var i = 0, len = tokens.length; i < len; i++) {\r\n            var t = tokens[i];\r\n            var startIndex = t.startIndex;\r\n            // Prevent issues stemming from a buggy external tokenizer.\r\n            if (i === 0) {\r\n                // Force first token to start at first index!\r\n                startIndex = 0;\r\n            }\r\n            else if (startIndex < previousStartIndex) {\r\n                // Force tokens to be after one another!\r\n                startIndex = previousStartIndex;\r\n            }\r\n            result[i] = new Token(startIndex + offsetDelta, t.scopes, language);\r\n            previousStartIndex = startIndex;\r\n        }\r\n        return result;\r\n    };\r\n    TokenizationSupport2Adapter.prototype.tokenize = function (line, state, offsetDelta) {\r\n        var actualResult = this._actual.tokenize(line, state);\r\n        var tokens = this._toClassicTokens(actualResult.tokens, this._languageIdentifier.language, offsetDelta);\r\n        var endState;\r\n        // try to save an object if possible\r\n        if (actualResult.endState.equals(state)) {\r\n            endState = state;\r\n        }\r\n        else {\r\n            endState = actualResult.endState;\r\n        }\r\n        return new TokenizationResult(tokens, endState);\r\n    };\r\n    TokenizationSupport2Adapter.prototype._toBinaryTokens = function (tokens, offsetDelta) {\r\n        var languageId = this._languageIdentifier.id;\r\n        var tokenTheme = this._standaloneThemeService.getTheme().tokenTheme;\r\n        var result = [], resultLen = 0;\r\n        var previousStartIndex = 0;\r\n        for (var i = 0, len = tokens.length; i < len; i++) {\r\n            var t = tokens[i];\r\n            var metadata = tokenTheme.match(languageId, t.scopes);\r\n            if (resultLen > 0 && result[resultLen - 1] === metadata) {\r\n                // same metadata\r\n                continue;\r\n            }\r\n            var startIndex = t.startIndex;\r\n            // Prevent issues stemming from a buggy external tokenizer.\r\n            if (i === 0) {\r\n                // Force first token to start at first index!\r\n                startIndex = 0;\r\n            }\r\n            else if (startIndex < previousStartIndex) {\r\n                // Force tokens to be after one another!\r\n                startIndex = previousStartIndex;\r\n            }\r\n            result[resultLen++] = startIndex + offsetDelta;\r\n            result[resultLen++] = metadata;\r\n            previousStartIndex = startIndex;\r\n        }\r\n        var actualResult = new Uint32Array(resultLen);\r\n        for (var i = 0; i < resultLen; i++) {\r\n            actualResult[i] = result[i];\r\n        }\r\n        return actualResult;\r\n    };\r\n    TokenizationSupport2Adapter.prototype.tokenize2 = function (line, state, offsetDelta) {\r\n        var actualResult = this._actual.tokenize(line, state);\r\n        var tokens = this._toBinaryTokens(actualResult.tokens, offsetDelta);\r\n        var endState;\r\n        // try to save an object if possible\r\n        if (actualResult.endState.equals(state)) {\r\n            endState = state;\r\n        }\r\n        else {\r\n            endState = actualResult.endState;\r\n        }\r\n        return new TokenizationResult2(tokens, endState);\r\n    };\r\n    return TokenizationSupport2Adapter;\r\n}());\r\nexport { TokenizationSupport2Adapter };\r\nfunction isEncodedTokensProvider(provider) {\r\n    return 'tokenizeEncoded' in provider;\r\n}\r\nfunction isThenable(obj) {\r\n    return obj && typeof obj.then === 'function';\r\n}\r\n/**\r\n * Set the tokens provider for a language (manual implementation).\r\n */\r\nexport function setTokensProvider(languageId, provider) {\r\n    var languageIdentifier = StaticServices.modeService.get().getLanguageIdentifier(languageId);\r\n    if (!languageIdentifier) {\r\n        throw new Error(\"Cannot set tokens provider for unknown language \" + languageId);\r\n    }\r\n    var create = function (provider) {\r\n        if (isEncodedTokensProvider(provider)) {\r\n            return new EncodedTokenizationSupport2Adapter(provider);\r\n        }\r\n        else {\r\n            return new TokenizationSupport2Adapter(StaticServices.standaloneThemeService.get(), languageIdentifier, provider);\r\n        }\r\n    };\r\n    if (isThenable(provider)) {\r\n        return modes.TokenizationRegistry.registerPromise(languageId, provider.then(function (provider) { return create(provider); }));\r\n    }\r\n    return modes.TokenizationRegistry.register(languageId, create(provider));\r\n}\r\n/**\r\n * Set the tokens provider for a language (monarch implementation).\r\n */\r\nexport function setMonarchTokensProvider(languageId, languageDef) {\r\n    var create = function (languageDef) {\r\n        return createTokenizationSupport(StaticServices.modeService.get(), StaticServices.standaloneThemeService.get(), languageId, compile(languageId, languageDef));\r\n    };\r\n    if (isThenable(languageDef)) {\r\n        return modes.TokenizationRegistry.registerPromise(languageId, languageDef.then(function (languageDef) { return create(languageDef); }));\r\n    }\r\n    return modes.TokenizationRegistry.register(languageId, create(languageDef));\r\n}\r\n/**\r\n * Register a reference provider (used by e.g. reference search).\r\n */\r\nexport function registerReferenceProvider(languageId, provider) {\r\n    return modes.ReferenceProviderRegistry.register(languageId, provider);\r\n}\r\n/**\r\n * Register a rename provider (used by e.g. rename symbol).\r\n */\r\nexport function registerRenameProvider(languageId, provider) {\r\n    return modes.RenameProviderRegistry.register(languageId, provider);\r\n}\r\n/**\r\n * Register a signature help provider (used by e.g. parameter hints).\r\n */\r\nexport function registerSignatureHelpProvider(languageId, provider) {\r\n    return modes.SignatureHelpProviderRegistry.register(languageId, provider);\r\n}\r\n/**\r\n * Register a hover provider (used by e.g. editor hover).\r\n */\r\nexport function registerHoverProvider(languageId, provider) {\r\n    return modes.HoverProviderRegistry.register(languageId, {\r\n        provideHover: function (model, position, token) {\r\n            var word = model.getWordAtPosition(position);\r\n            return Promise.resolve(provider.provideHover(model, position, token)).then(function (value) {\r\n                if (!value) {\r\n                    return undefined;\r\n                }\r\n                if (!value.range && word) {\r\n                    value.range = new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn);\r\n                }\r\n                if (!value.range) {\r\n                    value.range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\r\n                }\r\n                return value;\r\n            });\r\n        }\r\n    });\r\n}\r\n/**\r\n * Register a document symbol provider (used by e.g. outline).\r\n */\r\nexport function registerDocumentSymbolProvider(languageId, provider) {\r\n    return modes.DocumentSymbolProviderRegistry.register(languageId, provider);\r\n}\r\n/**\r\n * Register a document highlight provider (used by e.g. highlight occurrences).\r\n */\r\nexport function registerDocumentHighlightProvider(languageId, provider) {\r\n    return modes.DocumentHighlightProviderRegistry.register(languageId, provider);\r\n}\r\n/**\r\n * Register a definition provider (used by e.g. go to definition).\r\n */\r\nexport function registerDefinitionProvider(languageId, provider) {\r\n    return modes.DefinitionProviderRegistry.register(languageId, provider);\r\n}\r\n/**\r\n * Register a implementation provider (used by e.g. go to implementation).\r\n */\r\nexport function registerImplementationProvider(languageId, provider) {\r\n    return modes.ImplementationProviderRegistry.register(languageId, provider);\r\n}\r\n/**\r\n * Register a type definition provider (used by e.g. go to type definition).\r\n */\r\nexport function registerTypeDefinitionProvider(languageId, provider) {\r\n    return modes.TypeDefinitionProviderRegistry.register(languageId, provider);\r\n}\r\n/**\r\n * Register a code lens provider (used by e.g. inline code lenses).\r\n */\r\nexport function registerCodeLensProvider(languageId, provider) {\r\n    return modes.CodeLensProviderRegistry.register(languageId, provider);\r\n}\r\n/**\r\n * Register a code action provider (used by e.g. quick fix).\r\n */\r\nexport function registerCodeActionProvider(languageId, provider) {\r\n    return modes.CodeActionProviderRegistry.register(languageId, {\r\n        provideCodeActions: function (model, range, context, token) {\r\n            var markers = StaticServices.markerService.get().read({ resource: model.uri }).filter(function (m) {\r\n                return Range.areIntersectingOrTouching(m, range);\r\n            });\r\n            return provider.provideCodeActions(model, range, { markers: markers, only: context.only }, token);\r\n        }\r\n    });\r\n}\r\n/**\r\n * Register a formatter that can handle only entire models.\r\n */\r\nexport function registerDocumentFormattingEditProvider(languageId, provider) {\r\n    return modes.DocumentFormattingEditProviderRegistry.register(languageId, provider);\r\n}\r\n/**\r\n * Register a formatter that can handle a range inside a model.\r\n */\r\nexport function registerDocumentRangeFormattingEditProvider(languageId, provider) {\r\n    return modes.DocumentRangeFormattingEditProviderRegistry.register(languageId, provider);\r\n}\r\n/**\r\n * Register a formatter than can do formatting as the user types.\r\n */\r\nexport function registerOnTypeFormattingEditProvider(languageId, provider) {\r\n    return modes.OnTypeFormattingEditProviderRegistry.register(languageId, provider);\r\n}\r\n/**\r\n * Register a link provider that can find links in text.\r\n */\r\nexport function registerLinkProvider(languageId, provider) {\r\n    return modes.LinkProviderRegistry.register(languageId, provider);\r\n}\r\n/**\r\n * Register a completion item provider (use by e.g. suggestions).\r\n */\r\nexport function registerCompletionItemProvider(languageId, provider) {\r\n    return modes.CompletionProviderRegistry.register(languageId, provider);\r\n}\r\n/**\r\n * Register a document color provider (used by Color Picker, Color Decorator).\r\n */\r\nexport function registerColorProvider(languageId, provider) {\r\n    return modes.ColorProviderRegistry.register(languageId, provider);\r\n}\r\n/**\r\n * Register a folding range provider\r\n */\r\nexport function registerFoldingRangeProvider(languageId, provider) {\r\n    return modes.FoldingRangeProviderRegistry.register(languageId, provider);\r\n}\r\n/**\r\n * Register a declaration provider\r\n */\r\nexport function registerDeclarationProvider(languageId, provider) {\r\n    return modes.DeclarationProviderRegistry.register(languageId, provider);\r\n}\r\n/**\r\n * Register a selection range provider\r\n */\r\nexport function registerSelectionRangeProvider(languageId, provider) {\r\n    return modes.SelectionRangeRegistry.register(languageId, provider);\r\n}\r\n/**\r\n * Register a document semantic tokens provider\r\n */\r\nexport function registerDocumentSemanticTokensProvider(languageId, provider) {\r\n    return modes.DocumentSemanticTokensProviderRegistry.register(languageId, provider);\r\n}\r\n/**\r\n * Register a document range semantic tokens provider\r\n */\r\nexport function registerDocumentRangeSemanticTokensProvider(languageId, provider) {\r\n    return modes.DocumentRangeSemanticTokensProviderRegistry.register(languageId, provider);\r\n}\r\n/**\r\n * @internal\r\n */\r\nexport function createMonacoLanguagesAPI() {\r\n    return {\r\n        register: register,\r\n        getLanguages: getLanguages,\r\n        onLanguage: onLanguage,\r\n        getEncodedLanguageId: getEncodedLanguageId,\r\n        // provider methods\r\n        setLanguageConfiguration: setLanguageConfiguration,\r\n        setTokensProvider: setTokensProvider,\r\n        setMonarchTokensProvider: setMonarchTokensProvider,\r\n        registerReferenceProvider: registerReferenceProvider,\r\n        registerRenameProvider: registerRenameProvider,\r\n        registerCompletionItemProvider: registerCompletionItemProvider,\r\n        registerSignatureHelpProvider: registerSignatureHelpProvider,\r\n        registerHoverProvider: registerHoverProvider,\r\n        registerDocumentSymbolProvider: registerDocumentSymbolProvider,\r\n        registerDocumentHighlightProvider: registerDocumentHighlightProvider,\r\n        registerDefinitionProvider: registerDefinitionProvider,\r\n        registerImplementationProvider: registerImplementationProvider,\r\n        registerTypeDefinitionProvider: registerTypeDefinitionProvider,\r\n        registerCodeLensProvider: registerCodeLensProvider,\r\n        registerCodeActionProvider: registerCodeActionProvider,\r\n        registerDocumentFormattingEditProvider: registerDocumentFormattingEditProvider,\r\n        registerDocumentRangeFormattingEditProvider: registerDocumentRangeFormattingEditProvider,\r\n        registerOnTypeFormattingEditProvider: registerOnTypeFormattingEditProvider,\r\n        registerLinkProvider: registerLinkProvider,\r\n        registerColorProvider: registerColorProvider,\r\n        registerFoldingRangeProvider: registerFoldingRangeProvider,\r\n        registerDeclarationProvider: registerDeclarationProvider,\r\n        registerSelectionRangeProvider: registerSelectionRangeProvider,\r\n        registerDocumentSemanticTokensProvider: registerDocumentSemanticTokensProvider,\r\n        registerDocumentRangeSemanticTokensProvider: registerDocumentRangeSemanticTokensProvider,\r\n        // enums\r\n        DocumentHighlightKind: standaloneEnums.DocumentHighlightKind,\r\n        CompletionItemKind: standaloneEnums.CompletionItemKind,\r\n        CompletionItemTag: standaloneEnums.CompletionItemTag,\r\n        CompletionItemInsertTextRule: standaloneEnums.CompletionItemInsertTextRule,\r\n        SymbolKind: standaloneEnums.SymbolKind,\r\n        SymbolTag: standaloneEnums.SymbolTag,\r\n        IndentAction: standaloneEnums.IndentAction,\r\n        CompletionTriggerKind: standaloneEnums.CompletionTriggerKind,\r\n        SignatureHelpTriggerKind: standaloneEnums.SignatureHelpTriggerKind,\r\n        // classes\r\n        FoldingRangeKind: modes.FoldingRangeKind,\r\n    };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}