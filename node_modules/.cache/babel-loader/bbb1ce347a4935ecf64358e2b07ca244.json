{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport './lineNumbers.css';\nimport * as platform from '../../../../base/common/platform.js';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { Position } from '../../../common/core/position.js';\nimport { editorActiveLineNumber, editorLineNumbers } from '../../../common/view/editorColorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\n\nvar LineNumbersOverlay =\n/** @class */\nfunction (_super) {\n  __extends(LineNumbersOverlay, _super);\n\n  function LineNumbersOverlay(context) {\n    var _this = _super.call(this) || this;\n\n    _this._context = context;\n\n    _this._readConfig();\n\n    _this._lastCursorModelPosition = new Position(1, 1);\n    _this._renderResult = null;\n\n    _this._context.addEventHandler(_this);\n\n    return _this;\n  }\n\n  LineNumbersOverlay.prototype._readConfig = function () {\n    var options = this._context.configuration.options;\n    this._lineHeight = options.get(49\n    /* lineHeight */\n    );\n    var lineNumbers = options.get(50\n    /* lineNumbers */\n    );\n    this._renderLineNumbers = lineNumbers.renderType;\n    this._renderCustomLineNumbers = lineNumbers.renderFn;\n    this._renderFinalNewline = options.get(71\n    /* renderFinalNewline */\n    );\n    var layoutInfo = options.get(107\n    /* layoutInfo */\n    );\n    this._lineNumbersLeft = layoutInfo.lineNumbersLeft;\n    this._lineNumbersWidth = layoutInfo.lineNumbersWidth;\n  };\n\n  LineNumbersOverlay.prototype.dispose = function () {\n    this._context.removeEventHandler(this);\n\n    this._renderResult = null;\n\n    _super.prototype.dispose.call(this);\n  }; // --- begin event handlers\n\n\n  LineNumbersOverlay.prototype.onConfigurationChanged = function (e) {\n    this._readConfig();\n\n    return true;\n  };\n\n  LineNumbersOverlay.prototype.onCursorStateChanged = function (e) {\n    var primaryViewPosition = e.selections[0].getPosition();\n    this._lastCursorModelPosition = this._context.model.coordinatesConverter.convertViewPositionToModelPosition(primaryViewPosition);\n\n    if (this._renderLineNumbers === 2\n    /* Relative */\n    || this._renderLineNumbers === 3\n    /* Interval */\n    ) {\n        return true;\n      }\n\n    return false;\n  };\n\n  LineNumbersOverlay.prototype.onFlushed = function (e) {\n    return true;\n  };\n\n  LineNumbersOverlay.prototype.onLinesChanged = function (e) {\n    return true;\n  };\n\n  LineNumbersOverlay.prototype.onLinesDeleted = function (e) {\n    return true;\n  };\n\n  LineNumbersOverlay.prototype.onLinesInserted = function (e) {\n    return true;\n  };\n\n  LineNumbersOverlay.prototype.onScrollChanged = function (e) {\n    return e.scrollTopChanged;\n  };\n\n  LineNumbersOverlay.prototype.onZonesChanged = function (e) {\n    return true;\n  }; // --- end event handlers\n\n\n  LineNumbersOverlay.prototype._getLineRenderLineNumber = function (viewLineNumber) {\n    var modelPosition = this._context.model.coordinatesConverter.convertViewPositionToModelPosition(new Position(viewLineNumber, 1));\n\n    if (modelPosition.column !== 1) {\n      return '';\n    }\n\n    var modelLineNumber = modelPosition.lineNumber;\n\n    if (this._renderCustomLineNumbers) {\n      return this._renderCustomLineNumbers(modelLineNumber);\n    }\n\n    if (this._renderLineNumbers === 2\n    /* Relative */\n    ) {\n        var diff = Math.abs(this._lastCursorModelPosition.lineNumber - modelLineNumber);\n\n        if (diff === 0) {\n          return '<span class=\"relative-current-line-number\">' + modelLineNumber + '</span>';\n        }\n\n        return String(diff);\n      }\n\n    if (this._renderLineNumbers === 3\n    /* Interval */\n    ) {\n        if (this._lastCursorModelPosition.lineNumber === modelLineNumber) {\n          return String(modelLineNumber);\n        }\n\n        if (modelLineNumber % 10 === 0) {\n          return String(modelLineNumber);\n        }\n\n        return '';\n      }\n\n    return String(modelLineNumber);\n  };\n\n  LineNumbersOverlay.prototype.prepareRender = function (ctx) {\n    if (this._renderLineNumbers === 0\n    /* Off */\n    ) {\n        this._renderResult = null;\n        return;\n      }\n\n    var lineHeightClassName = platform.isLinux ? this._lineHeight % 2 === 0 ? ' lh-even' : ' lh-odd' : '';\n    var visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n    var visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n    var common = '<div class=\"' + LineNumbersOverlay.CLASS_NAME + lineHeightClassName + '\" style=\"left:' + this._lineNumbersLeft.toString() + 'px;width:' + this._lineNumbersWidth.toString() + 'px;\">';\n\n    var lineCount = this._context.model.getLineCount();\n\n    var output = [];\n\n    for (var lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n      var lineIndex = lineNumber - visibleStartLineNumber;\n\n      if (!this._renderFinalNewline) {\n        if (lineNumber === lineCount && this._context.model.getLineLength(lineNumber) === 0) {\n          // Do not render last (empty) line\n          output[lineIndex] = '';\n          continue;\n        }\n      }\n\n      var renderLineNumber = this._getLineRenderLineNumber(lineNumber);\n\n      if (renderLineNumber) {\n        output[lineIndex] = common + renderLineNumber + '</div>';\n      } else {\n        output[lineIndex] = '';\n      }\n    }\n\n    this._renderResult = output;\n  };\n\n  LineNumbersOverlay.prototype.render = function (startLineNumber, lineNumber) {\n    if (!this._renderResult) {\n      return '';\n    }\n\n    var lineIndex = lineNumber - startLineNumber;\n\n    if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n      return '';\n    }\n\n    return this._renderResult[lineIndex];\n  };\n\n  LineNumbersOverlay.CLASS_NAME = 'line-numbers';\n  return LineNumbersOverlay;\n}(DynamicViewOverlay);\n\nexport { LineNumbersOverlay }; // theming\n\nregisterThemingParticipant(function (theme, collector) {\n  var lineNumbers = theme.getColor(editorLineNumbers);\n\n  if (lineNumbers) {\n    collector.addRule(\".monaco-editor .line-numbers { color: \" + lineNumbers + \"; }\");\n  }\n\n  var activeLineNumber = theme.getColor(editorActiveLineNumber);\n\n  if (activeLineNumber) {\n    collector.addRule(\".monaco-editor .current-line ~ .line-numbers { color: \" + activeLineNumber + \"; }\");\n  }\n});","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lineNumbers/lineNumbers.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","platform","DynamicViewOverlay","Position","editorActiveLineNumber","editorLineNumbers","registerThemingParticipant","LineNumbersOverlay","_super","context","_this","call","_context","_readConfig","_lastCursorModelPosition","_renderResult","addEventHandler","options","configuration","_lineHeight","get","lineNumbers","_renderLineNumbers","renderType","_renderCustomLineNumbers","renderFn","_renderFinalNewline","layoutInfo","_lineNumbersLeft","lineNumbersLeft","_lineNumbersWidth","lineNumbersWidth","dispose","removeEventHandler","onConfigurationChanged","e","onCursorStateChanged","primaryViewPosition","selections","getPosition","model","coordinatesConverter","convertViewPositionToModelPosition","onFlushed","onLinesChanged","onLinesDeleted","onLinesInserted","onScrollChanged","scrollTopChanged","onZonesChanged","_getLineRenderLineNumber","viewLineNumber","modelPosition","column","modelLineNumber","lineNumber","diff","Math","abs","String","prepareRender","ctx","lineHeightClassName","isLinux","visibleStartLineNumber","visibleRange","startLineNumber","visibleEndLineNumber","endLineNumber","common","CLASS_NAME","toString","lineCount","getLineCount","output","lineIndex","getLineLength","renderLineNumber","render","length","theme","collector","getColor","addRule","activeLineNumber"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport './lineNumbers.css';\r\nimport * as platform from '../../../../base/common/platform.js';\r\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\r\nimport { Position } from '../../../common/core/position.js';\r\nimport { editorActiveLineNumber, editorLineNumbers } from '../../../common/view/editorColorRegistry.js';\r\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\r\nvar LineNumbersOverlay = /** @class */ (function (_super) {\r\n    __extends(LineNumbersOverlay, _super);\r\n    function LineNumbersOverlay(context) {\r\n        var _this = _super.call(this) || this;\r\n        _this._context = context;\r\n        _this._readConfig();\r\n        _this._lastCursorModelPosition = new Position(1, 1);\r\n        _this._renderResult = null;\r\n        _this._context.addEventHandler(_this);\r\n        return _this;\r\n    }\r\n    LineNumbersOverlay.prototype._readConfig = function () {\r\n        var options = this._context.configuration.options;\r\n        this._lineHeight = options.get(49 /* lineHeight */);\r\n        var lineNumbers = options.get(50 /* lineNumbers */);\r\n        this._renderLineNumbers = lineNumbers.renderType;\r\n        this._renderCustomLineNumbers = lineNumbers.renderFn;\r\n        this._renderFinalNewline = options.get(71 /* renderFinalNewline */);\r\n        var layoutInfo = options.get(107 /* layoutInfo */);\r\n        this._lineNumbersLeft = layoutInfo.lineNumbersLeft;\r\n        this._lineNumbersWidth = layoutInfo.lineNumbersWidth;\r\n    };\r\n    LineNumbersOverlay.prototype.dispose = function () {\r\n        this._context.removeEventHandler(this);\r\n        this._renderResult = null;\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    // --- begin event handlers\r\n    LineNumbersOverlay.prototype.onConfigurationChanged = function (e) {\r\n        this._readConfig();\r\n        return true;\r\n    };\r\n    LineNumbersOverlay.prototype.onCursorStateChanged = function (e) {\r\n        var primaryViewPosition = e.selections[0].getPosition();\r\n        this._lastCursorModelPosition = this._context.model.coordinatesConverter.convertViewPositionToModelPosition(primaryViewPosition);\r\n        if (this._renderLineNumbers === 2 /* Relative */ || this._renderLineNumbers === 3 /* Interval */) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    LineNumbersOverlay.prototype.onFlushed = function (e) {\r\n        return true;\r\n    };\r\n    LineNumbersOverlay.prototype.onLinesChanged = function (e) {\r\n        return true;\r\n    };\r\n    LineNumbersOverlay.prototype.onLinesDeleted = function (e) {\r\n        return true;\r\n    };\r\n    LineNumbersOverlay.prototype.onLinesInserted = function (e) {\r\n        return true;\r\n    };\r\n    LineNumbersOverlay.prototype.onScrollChanged = function (e) {\r\n        return e.scrollTopChanged;\r\n    };\r\n    LineNumbersOverlay.prototype.onZonesChanged = function (e) {\r\n        return true;\r\n    };\r\n    // --- end event handlers\r\n    LineNumbersOverlay.prototype._getLineRenderLineNumber = function (viewLineNumber) {\r\n        var modelPosition = this._context.model.coordinatesConverter.convertViewPositionToModelPosition(new Position(viewLineNumber, 1));\r\n        if (modelPosition.column !== 1) {\r\n            return '';\r\n        }\r\n        var modelLineNumber = modelPosition.lineNumber;\r\n        if (this._renderCustomLineNumbers) {\r\n            return this._renderCustomLineNumbers(modelLineNumber);\r\n        }\r\n        if (this._renderLineNumbers === 2 /* Relative */) {\r\n            var diff = Math.abs(this._lastCursorModelPosition.lineNumber - modelLineNumber);\r\n            if (diff === 0) {\r\n                return '<span class=\"relative-current-line-number\">' + modelLineNumber + '</span>';\r\n            }\r\n            return String(diff);\r\n        }\r\n        if (this._renderLineNumbers === 3 /* Interval */) {\r\n            if (this._lastCursorModelPosition.lineNumber === modelLineNumber) {\r\n                return String(modelLineNumber);\r\n            }\r\n            if (modelLineNumber % 10 === 0) {\r\n                return String(modelLineNumber);\r\n            }\r\n            return '';\r\n        }\r\n        return String(modelLineNumber);\r\n    };\r\n    LineNumbersOverlay.prototype.prepareRender = function (ctx) {\r\n        if (this._renderLineNumbers === 0 /* Off */) {\r\n            this._renderResult = null;\r\n            return;\r\n        }\r\n        var lineHeightClassName = (platform.isLinux ? (this._lineHeight % 2 === 0 ? ' lh-even' : ' lh-odd') : '');\r\n        var visibleStartLineNumber = ctx.visibleRange.startLineNumber;\r\n        var visibleEndLineNumber = ctx.visibleRange.endLineNumber;\r\n        var common = '<div class=\"' + LineNumbersOverlay.CLASS_NAME + lineHeightClassName + '\" style=\"left:' + this._lineNumbersLeft.toString() + 'px;width:' + this._lineNumbersWidth.toString() + 'px;\">';\r\n        var lineCount = this._context.model.getLineCount();\r\n        var output = [];\r\n        for (var lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\r\n            var lineIndex = lineNumber - visibleStartLineNumber;\r\n            if (!this._renderFinalNewline) {\r\n                if (lineNumber === lineCount && this._context.model.getLineLength(lineNumber) === 0) {\r\n                    // Do not render last (empty) line\r\n                    output[lineIndex] = '';\r\n                    continue;\r\n                }\r\n            }\r\n            var renderLineNumber = this._getLineRenderLineNumber(lineNumber);\r\n            if (renderLineNumber) {\r\n                output[lineIndex] = (common\r\n                    + renderLineNumber\r\n                    + '</div>');\r\n            }\r\n            else {\r\n                output[lineIndex] = '';\r\n            }\r\n        }\r\n        this._renderResult = output;\r\n    };\r\n    LineNumbersOverlay.prototype.render = function (startLineNumber, lineNumber) {\r\n        if (!this._renderResult) {\r\n            return '';\r\n        }\r\n        var lineIndex = lineNumber - startLineNumber;\r\n        if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\r\n            return '';\r\n        }\r\n        return this._renderResult[lineIndex];\r\n    };\r\n    LineNumbersOverlay.CLASS_NAME = 'line-numbers';\r\n    return LineNumbersOverlay;\r\n}(DynamicViewOverlay));\r\nexport { LineNumbersOverlay };\r\n// theming\r\nregisterThemingParticipant(function (theme, collector) {\r\n    var lineNumbers = theme.getColor(editorLineNumbers);\r\n    if (lineNumbers) {\r\n        collector.addRule(\".monaco-editor .line-numbers { color: \" + lineNumbers + \"; }\");\r\n    }\r\n    var activeLineNumber = theme.getColor(editorActiveLineNumber);\r\n    if (activeLineNumber) {\r\n        collector.addRule(\".monaco-editor .current-line ~ .line-numbers { color: \" + activeLineNumber + \"; }\");\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}