{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport './decorations.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { Range } from '../../../common/core/range.js';\nimport { HorizontalRange } from '../../../common/view/renderingContext.js';\n\nvar DecorationsOverlay =\n/** @class */\nfunction (_super) {\n  __extends(DecorationsOverlay, _super);\n\n  function DecorationsOverlay(context) {\n    var _this = _super.call(this) || this;\n\n    _this._context = context;\n    var options = _this._context.configuration.options;\n    _this._lineHeight = options.get(49\n    /* lineHeight */\n    );\n    _this._typicalHalfwidthCharacterWidth = options.get(34\n    /* fontInfo */\n    ).typicalHalfwidthCharacterWidth;\n    _this._renderResult = null;\n\n    _this._context.addEventHandler(_this);\n\n    return _this;\n  }\n\n  DecorationsOverlay.prototype.dispose = function () {\n    this._context.removeEventHandler(this);\n\n    this._renderResult = null;\n\n    _super.prototype.dispose.call(this);\n  }; // --- begin event handlers\n\n\n  DecorationsOverlay.prototype.onConfigurationChanged = function (e) {\n    var options = this._context.configuration.options;\n    this._lineHeight = options.get(49\n    /* lineHeight */\n    );\n    this._typicalHalfwidthCharacterWidth = options.get(34\n    /* fontInfo */\n    ).typicalHalfwidthCharacterWidth;\n    return true;\n  };\n\n  DecorationsOverlay.prototype.onDecorationsChanged = function (e) {\n    return true;\n  };\n\n  DecorationsOverlay.prototype.onFlushed = function (e) {\n    return true;\n  };\n\n  DecorationsOverlay.prototype.onLinesChanged = function (e) {\n    return true;\n  };\n\n  DecorationsOverlay.prototype.onLinesDeleted = function (e) {\n    return true;\n  };\n\n  DecorationsOverlay.prototype.onLinesInserted = function (e) {\n    return true;\n  };\n\n  DecorationsOverlay.prototype.onScrollChanged = function (e) {\n    return e.scrollTopChanged || e.scrollWidthChanged;\n  };\n\n  DecorationsOverlay.prototype.onZonesChanged = function (e) {\n    return true;\n  }; // --- end event handlers\n\n\n  DecorationsOverlay.prototype.prepareRender = function (ctx) {\n    var _decorations = ctx.getDecorationsInViewport(); // Keep only decorations with `className`\n\n\n    var decorations = [],\n        decorationsLen = 0;\n\n    for (var i = 0, len = _decorations.length; i < len; i++) {\n      var d = _decorations[i];\n\n      if (d.options.className) {\n        decorations[decorationsLen++] = d;\n      }\n    } // Sort decorations for consistent render output\n\n\n    decorations = decorations.sort(function (a, b) {\n      if (a.options.zIndex < b.options.zIndex) {\n        return -1;\n      }\n\n      if (a.options.zIndex > b.options.zIndex) {\n        return 1;\n      }\n\n      var aClassName = a.options.className;\n      var bClassName = b.options.className;\n\n      if (aClassName < bClassName) {\n        return -1;\n      }\n\n      if (aClassName > bClassName) {\n        return 1;\n      }\n\n      return Range.compareRangesUsingStarts(a.range, b.range);\n    });\n    var visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n    var visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n    var output = [];\n\n    for (var lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n      var lineIndex = lineNumber - visibleStartLineNumber;\n      output[lineIndex] = '';\n    } // Render first whole line decorations and then regular decorations\n\n\n    this._renderWholeLineDecorations(ctx, decorations, output);\n\n    this._renderNormalDecorations(ctx, decorations, output);\n\n    this._renderResult = output;\n  };\n\n  DecorationsOverlay.prototype._renderWholeLineDecorations = function (ctx, decorations, output) {\n    var lineHeight = String(this._lineHeight);\n    var visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n    var visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n\n    for (var i = 0, lenI = decorations.length; i < lenI; i++) {\n      var d = decorations[i];\n\n      if (!d.options.isWholeLine) {\n        continue;\n      }\n\n      var decorationOutput = '<div class=\"cdr ' + d.options.className + '\" style=\"left:0;width:100%;height:' + lineHeight + 'px;\"></div>';\n      var startLineNumber = Math.max(d.range.startLineNumber, visibleStartLineNumber);\n      var endLineNumber = Math.min(d.range.endLineNumber, visibleEndLineNumber);\n\n      for (var j = startLineNumber; j <= endLineNumber; j++) {\n        var lineIndex = j - visibleStartLineNumber;\n        output[lineIndex] += decorationOutput;\n      }\n    }\n  };\n\n  DecorationsOverlay.prototype._renderNormalDecorations = function (ctx, decorations, output) {\n    var lineHeight = String(this._lineHeight);\n    var visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n    var prevClassName = null;\n    var prevShowIfCollapsed = false;\n    var prevRange = null;\n\n    for (var i = 0, lenI = decorations.length; i < lenI; i++) {\n      var d = decorations[i];\n\n      if (d.options.isWholeLine) {\n        continue;\n      }\n\n      var className = d.options.className;\n      var showIfCollapsed = Boolean(d.options.showIfCollapsed);\n      var range = d.range;\n\n      if (showIfCollapsed && range.endColumn === 1 && range.endLineNumber !== range.startLineNumber) {\n        range = new Range(range.startLineNumber, range.startColumn, range.endLineNumber - 1, this._context.model.getLineMaxColumn(range.endLineNumber - 1));\n      }\n\n      if (prevClassName === className && prevShowIfCollapsed === showIfCollapsed && Range.areIntersectingOrTouching(prevRange, range)) {\n        // merge into previous decoration\n        prevRange = Range.plusRange(prevRange, range);\n        continue;\n      } // flush previous decoration\n\n\n      if (prevClassName !== null) {\n        this._renderNormalDecoration(ctx, prevRange, prevClassName, prevShowIfCollapsed, lineHeight, visibleStartLineNumber, output);\n      }\n\n      prevClassName = className;\n      prevShowIfCollapsed = showIfCollapsed;\n      prevRange = range;\n    }\n\n    if (prevClassName !== null) {\n      this._renderNormalDecoration(ctx, prevRange, prevClassName, prevShowIfCollapsed, lineHeight, visibleStartLineNumber, output);\n    }\n  };\n\n  DecorationsOverlay.prototype._renderNormalDecoration = function (ctx, range, className, showIfCollapsed, lineHeight, visibleStartLineNumber, output) {\n    var linesVisibleRanges = ctx.linesVisibleRangesForRange(range,\n    /*TODO@Alex*/\n    className === 'findMatch');\n\n    if (!linesVisibleRanges) {\n      return;\n    }\n\n    for (var j = 0, lenJ = linesVisibleRanges.length; j < lenJ; j++) {\n      var lineVisibleRanges = linesVisibleRanges[j];\n\n      if (lineVisibleRanges.outsideRenderedLine) {\n        continue;\n      }\n\n      var lineIndex = lineVisibleRanges.lineNumber - visibleStartLineNumber;\n\n      if (showIfCollapsed && lineVisibleRanges.ranges.length === 1) {\n        var singleVisibleRange = lineVisibleRanges.ranges[0];\n\n        if (singleVisibleRange.width === 0) {\n          // collapsed range case => make the decoration visible by faking its width\n          lineVisibleRanges.ranges[0] = new HorizontalRange(singleVisibleRange.left, this._typicalHalfwidthCharacterWidth);\n        }\n      }\n\n      for (var k = 0, lenK = lineVisibleRanges.ranges.length; k < lenK; k++) {\n        var visibleRange = lineVisibleRanges.ranges[k];\n        var decorationOutput = '<div class=\"cdr ' + className + '\" style=\"left:' + String(visibleRange.left) + 'px;width:' + String(visibleRange.width) + 'px;height:' + lineHeight + 'px;\"></div>';\n        output[lineIndex] += decorationOutput;\n      }\n    }\n  };\n\n  DecorationsOverlay.prototype.render = function (startLineNumber, lineNumber) {\n    if (!this._renderResult) {\n      return '';\n    }\n\n    var lineIndex = lineNumber - startLineNumber;\n\n    if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n      return '';\n    }\n\n    return this._renderResult[lineIndex];\n  };\n\n  return DecorationsOverlay;\n}(DynamicViewOverlay);\n\nexport { DecorationsOverlay };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/decorations/decorations.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","DynamicViewOverlay","Range","HorizontalRange","DecorationsOverlay","_super","context","_this","call","_context","options","configuration","_lineHeight","get","_typicalHalfwidthCharacterWidth","typicalHalfwidthCharacterWidth","_renderResult","addEventHandler","dispose","removeEventHandler","onConfigurationChanged","e","onDecorationsChanged","onFlushed","onLinesChanged","onLinesDeleted","onLinesInserted","onScrollChanged","scrollTopChanged","scrollWidthChanged","onZonesChanged","prepareRender","ctx","_decorations","getDecorationsInViewport","decorations","decorationsLen","i","len","length","className","sort","a","zIndex","aClassName","bClassName","compareRangesUsingStarts","range","visibleStartLineNumber","visibleRange","startLineNumber","visibleEndLineNumber","endLineNumber","output","lineNumber","lineIndex","_renderWholeLineDecorations","_renderNormalDecorations","lineHeight","String","lenI","isWholeLine","decorationOutput","Math","max","min","j","prevClassName","prevShowIfCollapsed","prevRange","showIfCollapsed","Boolean","endColumn","startColumn","model","getLineMaxColumn","areIntersectingOrTouching","plusRange","_renderNormalDecoration","linesVisibleRanges","linesVisibleRangesForRange","lenJ","lineVisibleRanges","outsideRenderedLine","ranges","singleVisibleRange","width","left","k","lenK","render"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport './decorations.css';\r\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\r\nimport { Range } from '../../../common/core/range.js';\r\nimport { HorizontalRange } from '../../../common/view/renderingContext.js';\r\nvar DecorationsOverlay = /** @class */ (function (_super) {\r\n    __extends(DecorationsOverlay, _super);\r\n    function DecorationsOverlay(context) {\r\n        var _this = _super.call(this) || this;\r\n        _this._context = context;\r\n        var options = _this._context.configuration.options;\r\n        _this._lineHeight = options.get(49 /* lineHeight */);\r\n        _this._typicalHalfwidthCharacterWidth = options.get(34 /* fontInfo */).typicalHalfwidthCharacterWidth;\r\n        _this._renderResult = null;\r\n        _this._context.addEventHandler(_this);\r\n        return _this;\r\n    }\r\n    DecorationsOverlay.prototype.dispose = function () {\r\n        this._context.removeEventHandler(this);\r\n        this._renderResult = null;\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    // --- begin event handlers\r\n    DecorationsOverlay.prototype.onConfigurationChanged = function (e) {\r\n        var options = this._context.configuration.options;\r\n        this._lineHeight = options.get(49 /* lineHeight */);\r\n        this._typicalHalfwidthCharacterWidth = options.get(34 /* fontInfo */).typicalHalfwidthCharacterWidth;\r\n        return true;\r\n    };\r\n    DecorationsOverlay.prototype.onDecorationsChanged = function (e) {\r\n        return true;\r\n    };\r\n    DecorationsOverlay.prototype.onFlushed = function (e) {\r\n        return true;\r\n    };\r\n    DecorationsOverlay.prototype.onLinesChanged = function (e) {\r\n        return true;\r\n    };\r\n    DecorationsOverlay.prototype.onLinesDeleted = function (e) {\r\n        return true;\r\n    };\r\n    DecorationsOverlay.prototype.onLinesInserted = function (e) {\r\n        return true;\r\n    };\r\n    DecorationsOverlay.prototype.onScrollChanged = function (e) {\r\n        return e.scrollTopChanged || e.scrollWidthChanged;\r\n    };\r\n    DecorationsOverlay.prototype.onZonesChanged = function (e) {\r\n        return true;\r\n    };\r\n    // --- end event handlers\r\n    DecorationsOverlay.prototype.prepareRender = function (ctx) {\r\n        var _decorations = ctx.getDecorationsInViewport();\r\n        // Keep only decorations with `className`\r\n        var decorations = [], decorationsLen = 0;\r\n        for (var i = 0, len = _decorations.length; i < len; i++) {\r\n            var d = _decorations[i];\r\n            if (d.options.className) {\r\n                decorations[decorationsLen++] = d;\r\n            }\r\n        }\r\n        // Sort decorations for consistent render output\r\n        decorations = decorations.sort(function (a, b) {\r\n            if (a.options.zIndex < b.options.zIndex) {\r\n                return -1;\r\n            }\r\n            if (a.options.zIndex > b.options.zIndex) {\r\n                return 1;\r\n            }\r\n            var aClassName = a.options.className;\r\n            var bClassName = b.options.className;\r\n            if (aClassName < bClassName) {\r\n                return -1;\r\n            }\r\n            if (aClassName > bClassName) {\r\n                return 1;\r\n            }\r\n            return Range.compareRangesUsingStarts(a.range, b.range);\r\n        });\r\n        var visibleStartLineNumber = ctx.visibleRange.startLineNumber;\r\n        var visibleEndLineNumber = ctx.visibleRange.endLineNumber;\r\n        var output = [];\r\n        for (var lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\r\n            var lineIndex = lineNumber - visibleStartLineNumber;\r\n            output[lineIndex] = '';\r\n        }\r\n        // Render first whole line decorations and then regular decorations\r\n        this._renderWholeLineDecorations(ctx, decorations, output);\r\n        this._renderNormalDecorations(ctx, decorations, output);\r\n        this._renderResult = output;\r\n    };\r\n    DecorationsOverlay.prototype._renderWholeLineDecorations = function (ctx, decorations, output) {\r\n        var lineHeight = String(this._lineHeight);\r\n        var visibleStartLineNumber = ctx.visibleRange.startLineNumber;\r\n        var visibleEndLineNumber = ctx.visibleRange.endLineNumber;\r\n        for (var i = 0, lenI = decorations.length; i < lenI; i++) {\r\n            var d = decorations[i];\r\n            if (!d.options.isWholeLine) {\r\n                continue;\r\n            }\r\n            var decorationOutput = ('<div class=\"cdr '\r\n                + d.options.className\r\n                + '\" style=\"left:0;width:100%;height:'\r\n                + lineHeight\r\n                + 'px;\"></div>');\r\n            var startLineNumber = Math.max(d.range.startLineNumber, visibleStartLineNumber);\r\n            var endLineNumber = Math.min(d.range.endLineNumber, visibleEndLineNumber);\r\n            for (var j = startLineNumber; j <= endLineNumber; j++) {\r\n                var lineIndex = j - visibleStartLineNumber;\r\n                output[lineIndex] += decorationOutput;\r\n            }\r\n        }\r\n    };\r\n    DecorationsOverlay.prototype._renderNormalDecorations = function (ctx, decorations, output) {\r\n        var lineHeight = String(this._lineHeight);\r\n        var visibleStartLineNumber = ctx.visibleRange.startLineNumber;\r\n        var prevClassName = null;\r\n        var prevShowIfCollapsed = false;\r\n        var prevRange = null;\r\n        for (var i = 0, lenI = decorations.length; i < lenI; i++) {\r\n            var d = decorations[i];\r\n            if (d.options.isWholeLine) {\r\n                continue;\r\n            }\r\n            var className = d.options.className;\r\n            var showIfCollapsed = Boolean(d.options.showIfCollapsed);\r\n            var range = d.range;\r\n            if (showIfCollapsed && range.endColumn === 1 && range.endLineNumber !== range.startLineNumber) {\r\n                range = new Range(range.startLineNumber, range.startColumn, range.endLineNumber - 1, this._context.model.getLineMaxColumn(range.endLineNumber - 1));\r\n            }\r\n            if (prevClassName === className && prevShowIfCollapsed === showIfCollapsed && Range.areIntersectingOrTouching(prevRange, range)) {\r\n                // merge into previous decoration\r\n                prevRange = Range.plusRange(prevRange, range);\r\n                continue;\r\n            }\r\n            // flush previous decoration\r\n            if (prevClassName !== null) {\r\n                this._renderNormalDecoration(ctx, prevRange, prevClassName, prevShowIfCollapsed, lineHeight, visibleStartLineNumber, output);\r\n            }\r\n            prevClassName = className;\r\n            prevShowIfCollapsed = showIfCollapsed;\r\n            prevRange = range;\r\n        }\r\n        if (prevClassName !== null) {\r\n            this._renderNormalDecoration(ctx, prevRange, prevClassName, prevShowIfCollapsed, lineHeight, visibleStartLineNumber, output);\r\n        }\r\n    };\r\n    DecorationsOverlay.prototype._renderNormalDecoration = function (ctx, range, className, showIfCollapsed, lineHeight, visibleStartLineNumber, output) {\r\n        var linesVisibleRanges = ctx.linesVisibleRangesForRange(range, /*TODO@Alex*/ className === 'findMatch');\r\n        if (!linesVisibleRanges) {\r\n            return;\r\n        }\r\n        for (var j = 0, lenJ = linesVisibleRanges.length; j < lenJ; j++) {\r\n            var lineVisibleRanges = linesVisibleRanges[j];\r\n            if (lineVisibleRanges.outsideRenderedLine) {\r\n                continue;\r\n            }\r\n            var lineIndex = lineVisibleRanges.lineNumber - visibleStartLineNumber;\r\n            if (showIfCollapsed && lineVisibleRanges.ranges.length === 1) {\r\n                var singleVisibleRange = lineVisibleRanges.ranges[0];\r\n                if (singleVisibleRange.width === 0) {\r\n                    // collapsed range case => make the decoration visible by faking its width\r\n                    lineVisibleRanges.ranges[0] = new HorizontalRange(singleVisibleRange.left, this._typicalHalfwidthCharacterWidth);\r\n                }\r\n            }\r\n            for (var k = 0, lenK = lineVisibleRanges.ranges.length; k < lenK; k++) {\r\n                var visibleRange = lineVisibleRanges.ranges[k];\r\n                var decorationOutput = ('<div class=\"cdr '\r\n                    + className\r\n                    + '\" style=\"left:'\r\n                    + String(visibleRange.left)\r\n                    + 'px;width:'\r\n                    + String(visibleRange.width)\r\n                    + 'px;height:'\r\n                    + lineHeight\r\n                    + 'px;\"></div>');\r\n                output[lineIndex] += decorationOutput;\r\n            }\r\n        }\r\n    };\r\n    DecorationsOverlay.prototype.render = function (startLineNumber, lineNumber) {\r\n        if (!this._renderResult) {\r\n            return '';\r\n        }\r\n        var lineIndex = lineNumber - startLineNumber;\r\n        if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\r\n            return '';\r\n        }\r\n        return this._renderResult[lineIndex];\r\n    };\r\n    return DecorationsOverlay;\r\n}(DynamicViewOverlay));\r\nexport { DecorationsOverlay };\r\n"]},"metadata":{},"sourceType":"module"}