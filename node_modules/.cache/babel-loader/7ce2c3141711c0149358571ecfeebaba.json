{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as nls from '../../../nls.js';\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { KeyChord } from '../../../base/common/keyCodes.js';\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../browser/editorExtensions.js';\nimport { CursorMoveCommands } from '../../common/controller/cursorMoveCommands.js';\nimport { Range } from '../../common/core/range.js';\nimport { Selection } from '../../common/core/selection.js';\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\nimport { OverviewRulerLane } from '../../common/model.js';\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\nimport { DocumentHighlightProviderRegistry } from '../../common/modes.js';\nimport { CommonFindController } from '../find/findController.js';\nimport { overviewRulerSelectionHighlightForeground } from '../../../platform/theme/common/colorRegistry.js';\nimport { themeColorFromId } from '../../../platform/theme/common/themeService.js';\nimport { ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\n\nvar InsertCursorAbove =\n/** @class */\nfunction (_super) {\n  __extends(InsertCursorAbove, _super);\n\n  function InsertCursorAbove() {\n    return _super.call(this, {\n      id: 'editor.action.insertCursorAbove',\n      label: nls.localize('mutlicursor.insertAbove', \"Add Cursor Above\"),\n      alias: 'Add Cursor Above',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 2048\n        /* CtrlCmd */\n        | 512\n        /* Alt */\n        | 16\n        /* UpArrow */\n        ,\n        linux: {\n          primary: 1024\n          /* Shift */\n          | 512\n          /* Alt */\n          | 16\n          /* UpArrow */\n          ,\n          secondary: [2048\n          /* CtrlCmd */\n          | 1024\n          /* Shift */\n          | 16\n          /* UpArrow */\n          ]\n        },\n        weight: 100\n        /* EditorContrib */\n\n      },\n      menuOpts: {\n        menuId: 25\n        /* MenubarSelectionMenu */\n        ,\n        group: '3_multi',\n        title: nls.localize({\n          key: 'miInsertCursorAbove',\n          comment: ['&& denotes a mnemonic']\n        }, \"&&Add Cursor Above\"),\n        order: 2\n      }\n    }) || this;\n  }\n\n  InsertCursorAbove.prototype.run = function (accessor, editor, args) {\n    if (!editor.hasModel()) {\n      return;\n    }\n\n    var useLogicalLine = args && args.logicalLine === true;\n\n    var cursors = editor._getCursors();\n\n    var context = cursors.context;\n\n    if (context.config.readOnly) {\n      return;\n    }\n\n    context.model.pushStackElement();\n    cursors.setStates(args.source, 3\n    /* Explicit */\n    , CursorMoveCommands.addCursorUp(context, cursors.getAll(), useLogicalLine));\n    cursors.reveal(args.source, true, 1\n    /* TopMost */\n    , 0\n    /* Smooth */\n    );\n  };\n\n  return InsertCursorAbove;\n}(EditorAction);\n\nexport { InsertCursorAbove };\n\nvar InsertCursorBelow =\n/** @class */\nfunction (_super) {\n  __extends(InsertCursorBelow, _super);\n\n  function InsertCursorBelow() {\n    return _super.call(this, {\n      id: 'editor.action.insertCursorBelow',\n      label: nls.localize('mutlicursor.insertBelow', \"Add Cursor Below\"),\n      alias: 'Add Cursor Below',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 2048\n        /* CtrlCmd */\n        | 512\n        /* Alt */\n        | 18\n        /* DownArrow */\n        ,\n        linux: {\n          primary: 1024\n          /* Shift */\n          | 512\n          /* Alt */\n          | 18\n          /* DownArrow */\n          ,\n          secondary: [2048\n          /* CtrlCmd */\n          | 1024\n          /* Shift */\n          | 18\n          /* DownArrow */\n          ]\n        },\n        weight: 100\n        /* EditorContrib */\n\n      },\n      menuOpts: {\n        menuId: 25\n        /* MenubarSelectionMenu */\n        ,\n        group: '3_multi',\n        title: nls.localize({\n          key: 'miInsertCursorBelow',\n          comment: ['&& denotes a mnemonic']\n        }, \"A&&dd Cursor Below\"),\n        order: 3\n      }\n    }) || this;\n  }\n\n  InsertCursorBelow.prototype.run = function (accessor, editor, args) {\n    if (!editor.hasModel()) {\n      return;\n    }\n\n    var useLogicalLine = args && args.logicalLine === true;\n\n    var cursors = editor._getCursors();\n\n    var context = cursors.context;\n\n    if (context.config.readOnly) {\n      return;\n    }\n\n    context.model.pushStackElement();\n    cursors.setStates(args.source, 3\n    /* Explicit */\n    , CursorMoveCommands.addCursorDown(context, cursors.getAll(), useLogicalLine));\n    cursors.reveal(args.source, true, 2\n    /* BottomMost */\n    , 0\n    /* Smooth */\n    );\n  };\n\n  return InsertCursorBelow;\n}(EditorAction);\n\nexport { InsertCursorBelow };\n\nvar InsertCursorAtEndOfEachLineSelected =\n/** @class */\nfunction (_super) {\n  __extends(InsertCursorAtEndOfEachLineSelected, _super);\n\n  function InsertCursorAtEndOfEachLineSelected() {\n    return _super.call(this, {\n      id: 'editor.action.insertCursorAtEndOfEachLineSelected',\n      label: nls.localize('mutlicursor.insertAtEndOfEachLineSelected', \"Add Cursors to Line Ends\"),\n      alias: 'Add Cursors to Line Ends',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 1024\n        /* Shift */\n        | 512\n        /* Alt */\n        | 39\n        /* KEY_I */\n        ,\n        weight: 100\n        /* EditorContrib */\n\n      },\n      menuOpts: {\n        menuId: 25\n        /* MenubarSelectionMenu */\n        ,\n        group: '3_multi',\n        title: nls.localize({\n          key: 'miInsertCursorAtEndOfEachLineSelected',\n          comment: ['&& denotes a mnemonic']\n        }, \"Add C&&ursors to Line Ends\"),\n        order: 4\n      }\n    }) || this;\n  }\n\n  InsertCursorAtEndOfEachLineSelected.prototype.getCursorsForSelection = function (selection, model, result) {\n    if (selection.isEmpty()) {\n      return;\n    }\n\n    for (var i = selection.startLineNumber; i < selection.endLineNumber; i++) {\n      var currentLineMaxColumn = model.getLineMaxColumn(i);\n      result.push(new Selection(i, currentLineMaxColumn, i, currentLineMaxColumn));\n    }\n\n    if (selection.endColumn > 1) {\n      result.push(new Selection(selection.endLineNumber, selection.endColumn, selection.endLineNumber, selection.endColumn));\n    }\n  };\n\n  InsertCursorAtEndOfEachLineSelected.prototype.run = function (accessor, editor) {\n    var _this = this;\n\n    if (!editor.hasModel()) {\n      return;\n    }\n\n    var model = editor.getModel();\n    var selections = editor.getSelections();\n    var newSelections = [];\n    selections.forEach(function (sel) {\n      return _this.getCursorsForSelection(sel, model, newSelections);\n    });\n\n    if (newSelections.length > 0) {\n      editor.setSelections(newSelections);\n    }\n  };\n\n  return InsertCursorAtEndOfEachLineSelected;\n}(EditorAction);\n\nvar InsertCursorAtEndOfLineSelected =\n/** @class */\nfunction (_super) {\n  __extends(InsertCursorAtEndOfLineSelected, _super);\n\n  function InsertCursorAtEndOfLineSelected() {\n    return _super.call(this, {\n      id: 'editor.action.addCursorsToBottom',\n      label: nls.localize('mutlicursor.addCursorsToBottom', \"Add Cursors To Bottom\"),\n      alias: 'Add Cursors To Bottom',\n      precondition: undefined\n    }) || this;\n  }\n\n  InsertCursorAtEndOfLineSelected.prototype.run = function (accessor, editor) {\n    if (!editor.hasModel()) {\n      return;\n    }\n\n    var selections = editor.getSelections();\n    var lineCount = editor.getModel().getLineCount();\n    var newSelections = [];\n\n    for (var i = selections[0].startLineNumber; i <= lineCount; i++) {\n      newSelections.push(new Selection(i, selections[0].startColumn, i, selections[0].endColumn));\n    }\n\n    if (newSelections.length > 0) {\n      editor.setSelections(newSelections);\n    }\n  };\n\n  return InsertCursorAtEndOfLineSelected;\n}(EditorAction);\n\nvar InsertCursorAtTopOfLineSelected =\n/** @class */\nfunction (_super) {\n  __extends(InsertCursorAtTopOfLineSelected, _super);\n\n  function InsertCursorAtTopOfLineSelected() {\n    return _super.call(this, {\n      id: 'editor.action.addCursorsToTop',\n      label: nls.localize('mutlicursor.addCursorsToTop', \"Add Cursors To Top\"),\n      alias: 'Add Cursors To Top',\n      precondition: undefined\n    }) || this;\n  }\n\n  InsertCursorAtTopOfLineSelected.prototype.run = function (accessor, editor) {\n    if (!editor.hasModel()) {\n      return;\n    }\n\n    var selections = editor.getSelections();\n    var newSelections = [];\n\n    for (var i = selections[0].startLineNumber; i >= 1; i--) {\n      newSelections.push(new Selection(i, selections[0].startColumn, i, selections[0].endColumn));\n    }\n\n    if (newSelections.length > 0) {\n      editor.setSelections(newSelections);\n    }\n  };\n\n  return InsertCursorAtTopOfLineSelected;\n}(EditorAction);\n\nvar MultiCursorSessionResult =\n/** @class */\nfunction () {\n  function MultiCursorSessionResult(selections, revealRange, revealScrollType) {\n    this.selections = selections;\n    this.revealRange = revealRange;\n    this.revealScrollType = revealScrollType;\n  }\n\n  return MultiCursorSessionResult;\n}();\n\nexport { MultiCursorSessionResult };\n\nvar MultiCursorSession =\n/** @class */\nfunction () {\n  function MultiCursorSession(_editor, findController, isDisconnectedFromFindController, searchText, wholeWord, matchCase, currentMatch) {\n    this._editor = _editor;\n    this.findController = findController;\n    this.isDisconnectedFromFindController = isDisconnectedFromFindController;\n    this.searchText = searchText;\n    this.wholeWord = wholeWord;\n    this.matchCase = matchCase;\n    this.currentMatch = currentMatch;\n  }\n\n  MultiCursorSession.create = function (editor, findController) {\n    if (!editor.hasModel()) {\n      return null;\n    }\n\n    var findState = findController.getState(); // Find widget owns entirely what we search for if:\n    //  - focus is not in the editor (i.e. it is in the find widget)\n    //  - and the search widget is visible\n    //  - and the search string is non-empty\n\n    if (!editor.hasTextFocus() && findState.isRevealed && findState.searchString.length > 0) {\n      // Find widget owns what is searched for\n      return new MultiCursorSession(editor, findController, false, findState.searchString, findState.wholeWord, findState.matchCase, null);\n    } // Otherwise, the selection gives the search text, and the find widget gives the search settings\n    // The exception is the find state disassociation case: when beginning with a single, collapsed selection\n\n\n    var isDisconnectedFromFindController = false;\n    var wholeWord;\n    var matchCase;\n    var selections = editor.getSelections();\n\n    if (selections.length === 1 && selections[0].isEmpty()) {\n      isDisconnectedFromFindController = true;\n      wholeWord = true;\n      matchCase = true;\n    } else {\n      wholeWord = findState.wholeWord;\n      matchCase = findState.matchCase;\n    } // Selection owns what is searched for\n\n\n    var s = editor.getSelection();\n    var searchText;\n    var currentMatch = null;\n\n    if (s.isEmpty()) {\n      // selection is empty => expand to current word\n      var word = editor.getModel().getWordAtPosition(s.getStartPosition());\n\n      if (!word) {\n        return null;\n      }\n\n      searchText = word.word;\n      currentMatch = new Selection(s.startLineNumber, word.startColumn, s.startLineNumber, word.endColumn);\n    } else {\n      searchText = editor.getModel().getValueInRange(s).replace(/\\r\\n/g, '\\n');\n    }\n\n    return new MultiCursorSession(editor, findController, isDisconnectedFromFindController, searchText, wholeWord, matchCase, currentMatch);\n  };\n\n  MultiCursorSession.prototype.addSelectionToNextFindMatch = function () {\n    if (!this._editor.hasModel()) {\n      return null;\n    }\n\n    var nextMatch = this._getNextMatch();\n\n    if (!nextMatch) {\n      return null;\n    }\n\n    var allSelections = this._editor.getSelections();\n\n    return new MultiCursorSessionResult(allSelections.concat(nextMatch), nextMatch, 0\n    /* Smooth */\n    );\n  };\n\n  MultiCursorSession.prototype.moveSelectionToNextFindMatch = function () {\n    if (!this._editor.hasModel()) {\n      return null;\n    }\n\n    var nextMatch = this._getNextMatch();\n\n    if (!nextMatch) {\n      return null;\n    }\n\n    var allSelections = this._editor.getSelections();\n\n    return new MultiCursorSessionResult(allSelections.slice(0, allSelections.length - 1).concat(nextMatch), nextMatch, 0\n    /* Smooth */\n    );\n  };\n\n  MultiCursorSession.prototype._getNextMatch = function () {\n    if (!this._editor.hasModel()) {\n      return null;\n    }\n\n    if (this.currentMatch) {\n      var result = this.currentMatch;\n      this.currentMatch = null;\n      return result;\n    }\n\n    this.findController.highlightFindOptions();\n\n    var allSelections = this._editor.getSelections();\n\n    var lastAddedSelection = allSelections[allSelections.length - 1];\n\n    var nextMatch = this._editor.getModel().findNextMatch(this.searchText, lastAddedSelection.getEndPosition(), false, this.matchCase, this.wholeWord ? this._editor.getOption(96\n    /* wordSeparators */\n    ) : null, false);\n\n    if (!nextMatch) {\n      return null;\n    }\n\n    return new Selection(nextMatch.range.startLineNumber, nextMatch.range.startColumn, nextMatch.range.endLineNumber, nextMatch.range.endColumn);\n  };\n\n  MultiCursorSession.prototype.addSelectionToPreviousFindMatch = function () {\n    if (!this._editor.hasModel()) {\n      return null;\n    }\n\n    var previousMatch = this._getPreviousMatch();\n\n    if (!previousMatch) {\n      return null;\n    }\n\n    var allSelections = this._editor.getSelections();\n\n    return new MultiCursorSessionResult(allSelections.concat(previousMatch), previousMatch, 0\n    /* Smooth */\n    );\n  };\n\n  MultiCursorSession.prototype.moveSelectionToPreviousFindMatch = function () {\n    if (!this._editor.hasModel()) {\n      return null;\n    }\n\n    var previousMatch = this._getPreviousMatch();\n\n    if (!previousMatch) {\n      return null;\n    }\n\n    var allSelections = this._editor.getSelections();\n\n    return new MultiCursorSessionResult(allSelections.slice(0, allSelections.length - 1).concat(previousMatch), previousMatch, 0\n    /* Smooth */\n    );\n  };\n\n  MultiCursorSession.prototype._getPreviousMatch = function () {\n    if (!this._editor.hasModel()) {\n      return null;\n    }\n\n    if (this.currentMatch) {\n      var result = this.currentMatch;\n      this.currentMatch = null;\n      return result;\n    }\n\n    this.findController.highlightFindOptions();\n\n    var allSelections = this._editor.getSelections();\n\n    var lastAddedSelection = allSelections[allSelections.length - 1];\n\n    var previousMatch = this._editor.getModel().findPreviousMatch(this.searchText, lastAddedSelection.getStartPosition(), false, this.matchCase, this.wholeWord ? this._editor.getOption(96\n    /* wordSeparators */\n    ) : null, false);\n\n    if (!previousMatch) {\n      return null;\n    }\n\n    return new Selection(previousMatch.range.startLineNumber, previousMatch.range.startColumn, previousMatch.range.endLineNumber, previousMatch.range.endColumn);\n  };\n\n  MultiCursorSession.prototype.selectAll = function () {\n    if (!this._editor.hasModel()) {\n      return [];\n    }\n\n    this.findController.highlightFindOptions();\n    return this._editor.getModel().findMatches(this.searchText, true, false, this.matchCase, this.wholeWord ? this._editor.getOption(96\n    /* wordSeparators */\n    ) : null, false, 1073741824\n    /* MAX_SAFE_SMALL_INTEGER */\n    );\n  };\n\n  return MultiCursorSession;\n}();\n\nexport { MultiCursorSession };\n\nvar MultiCursorSelectionController =\n/** @class */\nfunction (_super) {\n  __extends(MultiCursorSelectionController, _super);\n\n  function MultiCursorSelectionController(editor) {\n    var _this = _super.call(this) || this;\n\n    _this._sessionDispose = _this._register(new DisposableStore());\n    _this._editor = editor;\n    _this._ignoreSelectionChange = false;\n    _this._session = null;\n    return _this;\n  }\n\n  MultiCursorSelectionController.get = function (editor) {\n    return editor.getContribution(MultiCursorSelectionController.ID);\n  };\n\n  MultiCursorSelectionController.prototype.dispose = function () {\n    this._endSession();\n\n    _super.prototype.dispose.call(this);\n  };\n\n  MultiCursorSelectionController.prototype._beginSessionIfNeeded = function (findController) {\n    var _this = this;\n\n    if (!this._session) {\n      // Create a new session\n      var session = MultiCursorSession.create(this._editor, findController);\n\n      if (!session) {\n        return;\n      }\n\n      this._session = session;\n      var newState = {\n        searchString: this._session.searchText\n      };\n\n      if (this._session.isDisconnectedFromFindController) {\n        newState.wholeWordOverride = 1\n        /* True */\n        ;\n        newState.matchCaseOverride = 1\n        /* True */\n        ;\n        newState.isRegexOverride = 2\n        /* False */\n        ;\n      }\n\n      findController.getState().change(newState, false);\n\n      this._sessionDispose.add(this._editor.onDidChangeCursorSelection(function (e) {\n        if (_this._ignoreSelectionChange) {\n          return;\n        }\n\n        _this._endSession();\n      }));\n\n      this._sessionDispose.add(this._editor.onDidBlurEditorText(function () {\n        _this._endSession();\n      }));\n\n      this._sessionDispose.add(findController.getState().onFindReplaceStateChange(function (e) {\n        if (e.matchCase || e.wholeWord) {\n          _this._endSession();\n        }\n      }));\n    }\n  };\n\n  MultiCursorSelectionController.prototype._endSession = function () {\n    this._sessionDispose.clear();\n\n    if (this._session && this._session.isDisconnectedFromFindController) {\n      var newState = {\n        wholeWordOverride: 0\n        /* NotSet */\n        ,\n        matchCaseOverride: 0\n        /* NotSet */\n        ,\n        isRegexOverride: 0\n        /* NotSet */\n\n      };\n\n      this._session.findController.getState().change(newState, false);\n    }\n\n    this._session = null;\n  };\n\n  MultiCursorSelectionController.prototype._setSelections = function (selections) {\n    this._ignoreSelectionChange = true;\n\n    this._editor.setSelections(selections);\n\n    this._ignoreSelectionChange = false;\n  };\n\n  MultiCursorSelectionController.prototype._expandEmptyToWord = function (model, selection) {\n    if (!selection.isEmpty()) {\n      return selection;\n    }\n\n    var word = model.getWordAtPosition(selection.getStartPosition());\n\n    if (!word) {\n      return selection;\n    }\n\n    return new Selection(selection.startLineNumber, word.startColumn, selection.startLineNumber, word.endColumn);\n  };\n\n  MultiCursorSelectionController.prototype._applySessionResult = function (result) {\n    if (!result) {\n      return;\n    }\n\n    this._setSelections(result.selections);\n\n    if (result.revealRange) {\n      this._editor.revealRangeInCenterIfOutsideViewport(result.revealRange, result.revealScrollType);\n    }\n  };\n\n  MultiCursorSelectionController.prototype.getSession = function (findController) {\n    return this._session;\n  };\n\n  MultiCursorSelectionController.prototype.addSelectionToNextFindMatch = function (findController) {\n    if (!this._editor.hasModel()) {\n      return;\n    }\n\n    if (!this._session) {\n      // If there are multiple cursors, handle the case where they do not all select the same text.\n      var allSelections = this._editor.getSelections();\n\n      if (allSelections.length > 1) {\n        var findState = findController.getState();\n        var matchCase = findState.matchCase;\n        var selectionsContainSameText = modelRangesContainSameText(this._editor.getModel(), allSelections, matchCase);\n\n        if (!selectionsContainSameText) {\n          var model = this._editor.getModel();\n\n          var resultingSelections = [];\n\n          for (var i = 0, len = allSelections.length; i < len; i++) {\n            resultingSelections[i] = this._expandEmptyToWord(model, allSelections[i]);\n          }\n\n          this._editor.setSelections(resultingSelections);\n\n          return;\n        }\n      }\n    }\n\n    this._beginSessionIfNeeded(findController);\n\n    if (this._session) {\n      this._applySessionResult(this._session.addSelectionToNextFindMatch());\n    }\n  };\n\n  MultiCursorSelectionController.prototype.addSelectionToPreviousFindMatch = function (findController) {\n    this._beginSessionIfNeeded(findController);\n\n    if (this._session) {\n      this._applySessionResult(this._session.addSelectionToPreviousFindMatch());\n    }\n  };\n\n  MultiCursorSelectionController.prototype.moveSelectionToNextFindMatch = function (findController) {\n    this._beginSessionIfNeeded(findController);\n\n    if (this._session) {\n      this._applySessionResult(this._session.moveSelectionToNextFindMatch());\n    }\n  };\n\n  MultiCursorSelectionController.prototype.moveSelectionToPreviousFindMatch = function (findController) {\n    this._beginSessionIfNeeded(findController);\n\n    if (this._session) {\n      this._applySessionResult(this._session.moveSelectionToPreviousFindMatch());\n    }\n  };\n\n  MultiCursorSelectionController.prototype.selectAll = function (findController) {\n    if (!this._editor.hasModel()) {\n      return;\n    }\n\n    var matches = null;\n    var findState = findController.getState(); // Special case: find widget owns entirely what we search for if:\n    // - focus is not in the editor (i.e. it is in the find widget)\n    // - and the search widget is visible\n    // - and the search string is non-empty\n    // - and we're searching for a regex\n\n    if (findState.isRevealed && findState.searchString.length > 0 && findState.isRegex) {\n      matches = this._editor.getModel().findMatches(findState.searchString, true, findState.isRegex, findState.matchCase, findState.wholeWord ? this._editor.getOption(96\n      /* wordSeparators */\n      ) : null, false, 1073741824\n      /* MAX_SAFE_SMALL_INTEGER */\n      );\n    } else {\n      this._beginSessionIfNeeded(findController);\n\n      if (!this._session) {\n        return;\n      }\n\n      matches = this._session.selectAll();\n    }\n\n    if (findState.searchScope) {\n      var state = findState.searchScope;\n      var inSelection = [];\n\n      for (var i = 0; i < matches.length; i++) {\n        if (matches[i].range.endLineNumber <= state.endLineNumber && matches[i].range.startLineNumber >= state.startLineNumber) {\n          inSelection.push(matches[i]);\n        }\n      }\n\n      matches = inSelection;\n    }\n\n    if (matches.length > 0) {\n      var editorSelection = this._editor.getSelection(); // Have the primary cursor remain the one where the action was invoked\n\n\n      for (var i = 0, len = matches.length; i < len; i++) {\n        var match = matches[i];\n        var intersection = match.range.intersectRanges(editorSelection);\n\n        if (intersection) {\n          // bingo!\n          matches[i] = matches[0];\n          matches[0] = match;\n          break;\n        }\n      }\n\n      this._setSelections(matches.map(function (m) {\n        return new Selection(m.range.startLineNumber, m.range.startColumn, m.range.endLineNumber, m.range.endColumn);\n      }));\n    }\n  };\n\n  MultiCursorSelectionController.ID = 'editor.contrib.multiCursorController';\n  return MultiCursorSelectionController;\n}(Disposable);\n\nexport { MultiCursorSelectionController };\n\nvar MultiCursorSelectionControllerAction =\n/** @class */\nfunction (_super) {\n  __extends(MultiCursorSelectionControllerAction, _super);\n\n  function MultiCursorSelectionControllerAction() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  MultiCursorSelectionControllerAction.prototype.run = function (accessor, editor) {\n    var multiCursorController = MultiCursorSelectionController.get(editor);\n\n    if (!multiCursorController) {\n      return;\n    }\n\n    var findController = CommonFindController.get(editor);\n\n    if (!findController) {\n      return;\n    }\n\n    this._run(multiCursorController, findController);\n  };\n\n  return MultiCursorSelectionControllerAction;\n}(EditorAction);\n\nexport { MultiCursorSelectionControllerAction };\n\nvar AddSelectionToNextFindMatchAction =\n/** @class */\nfunction (_super) {\n  __extends(AddSelectionToNextFindMatchAction, _super);\n\n  function AddSelectionToNextFindMatchAction() {\n    return _super.call(this, {\n      id: 'editor.action.addSelectionToNextFindMatch',\n      label: nls.localize('addSelectionToNextFindMatch', \"Add Selection To Next Find Match\"),\n      alias: 'Add Selection To Next Find Match',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.focus,\n        primary: 2048\n        /* CtrlCmd */\n        | 34\n        /* KEY_D */\n        ,\n        weight: 100\n        /* EditorContrib */\n\n      },\n      menuOpts: {\n        menuId: 25\n        /* MenubarSelectionMenu */\n        ,\n        group: '3_multi',\n        title: nls.localize({\n          key: 'miAddSelectionToNextFindMatch',\n          comment: ['&& denotes a mnemonic']\n        }, \"Add &&Next Occurrence\"),\n        order: 5\n      }\n    }) || this;\n  }\n\n  AddSelectionToNextFindMatchAction.prototype._run = function (multiCursorController, findController) {\n    multiCursorController.addSelectionToNextFindMatch(findController);\n  };\n\n  return AddSelectionToNextFindMatchAction;\n}(MultiCursorSelectionControllerAction);\n\nexport { AddSelectionToNextFindMatchAction };\n\nvar AddSelectionToPreviousFindMatchAction =\n/** @class */\nfunction (_super) {\n  __extends(AddSelectionToPreviousFindMatchAction, _super);\n\n  function AddSelectionToPreviousFindMatchAction() {\n    return _super.call(this, {\n      id: 'editor.action.addSelectionToPreviousFindMatch',\n      label: nls.localize('addSelectionToPreviousFindMatch', \"Add Selection To Previous Find Match\"),\n      alias: 'Add Selection To Previous Find Match',\n      precondition: undefined,\n      menuOpts: {\n        menuId: 25\n        /* MenubarSelectionMenu */\n        ,\n        group: '3_multi',\n        title: nls.localize({\n          key: 'miAddSelectionToPreviousFindMatch',\n          comment: ['&& denotes a mnemonic']\n        }, \"Add P&&revious Occurrence\"),\n        order: 6\n      }\n    }) || this;\n  }\n\n  AddSelectionToPreviousFindMatchAction.prototype._run = function (multiCursorController, findController) {\n    multiCursorController.addSelectionToPreviousFindMatch(findController);\n  };\n\n  return AddSelectionToPreviousFindMatchAction;\n}(MultiCursorSelectionControllerAction);\n\nexport { AddSelectionToPreviousFindMatchAction };\n\nvar MoveSelectionToNextFindMatchAction =\n/** @class */\nfunction (_super) {\n  __extends(MoveSelectionToNextFindMatchAction, _super);\n\n  function MoveSelectionToNextFindMatchAction() {\n    return _super.call(this, {\n      id: 'editor.action.moveSelectionToNextFindMatch',\n      label: nls.localize('moveSelectionToNextFindMatch', \"Move Last Selection To Next Find Match\"),\n      alias: 'Move Last Selection To Next Find Match',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.focus,\n        primary: KeyChord(2048\n        /* CtrlCmd */\n        | 41\n        /* KEY_K */\n        , 2048\n        /* CtrlCmd */\n        | 34\n        /* KEY_D */\n        ),\n        weight: 100\n        /* EditorContrib */\n\n      }\n    }) || this;\n  }\n\n  MoveSelectionToNextFindMatchAction.prototype._run = function (multiCursorController, findController) {\n    multiCursorController.moveSelectionToNextFindMatch(findController);\n  };\n\n  return MoveSelectionToNextFindMatchAction;\n}(MultiCursorSelectionControllerAction);\n\nexport { MoveSelectionToNextFindMatchAction };\n\nvar MoveSelectionToPreviousFindMatchAction =\n/** @class */\nfunction (_super) {\n  __extends(MoveSelectionToPreviousFindMatchAction, _super);\n\n  function MoveSelectionToPreviousFindMatchAction() {\n    return _super.call(this, {\n      id: 'editor.action.moveSelectionToPreviousFindMatch',\n      label: nls.localize('moveSelectionToPreviousFindMatch', \"Move Last Selection To Previous Find Match\"),\n      alias: 'Move Last Selection To Previous Find Match',\n      precondition: undefined\n    }) || this;\n  }\n\n  MoveSelectionToPreviousFindMatchAction.prototype._run = function (multiCursorController, findController) {\n    multiCursorController.moveSelectionToPreviousFindMatch(findController);\n  };\n\n  return MoveSelectionToPreviousFindMatchAction;\n}(MultiCursorSelectionControllerAction);\n\nexport { MoveSelectionToPreviousFindMatchAction };\n\nvar SelectHighlightsAction =\n/** @class */\nfunction (_super) {\n  __extends(SelectHighlightsAction, _super);\n\n  function SelectHighlightsAction() {\n    return _super.call(this, {\n      id: 'editor.action.selectHighlights',\n      label: nls.localize('selectAllOccurrencesOfFindMatch', \"Select All Occurrences of Find Match\"),\n      alias: 'Select All Occurrences of Find Match',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.focus,\n        primary: 2048\n        /* CtrlCmd */\n        | 1024\n        /* Shift */\n        | 42\n        /* KEY_L */\n        ,\n        weight: 100\n        /* EditorContrib */\n\n      },\n      menuOpts: {\n        menuId: 25\n        /* MenubarSelectionMenu */\n        ,\n        group: '3_multi',\n        title: nls.localize({\n          key: 'miSelectHighlights',\n          comment: ['&& denotes a mnemonic']\n        }, \"Select All &&Occurrences\"),\n        order: 7\n      }\n    }) || this;\n  }\n\n  SelectHighlightsAction.prototype._run = function (multiCursorController, findController) {\n    multiCursorController.selectAll(findController);\n  };\n\n  return SelectHighlightsAction;\n}(MultiCursorSelectionControllerAction);\n\nexport { SelectHighlightsAction };\n\nvar CompatChangeAll =\n/** @class */\nfunction (_super) {\n  __extends(CompatChangeAll, _super);\n\n  function CompatChangeAll() {\n    return _super.call(this, {\n      id: 'editor.action.changeAll',\n      label: nls.localize('changeAll.label', \"Change All Occurrences\"),\n      alias: 'Change All Occurrences',\n      precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.editorTextFocus),\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 2048\n        /* CtrlCmd */\n        | 60\n        /* F2 */\n        ,\n        weight: 100\n        /* EditorContrib */\n\n      },\n      contextMenuOpts: {\n        group: '1_modification',\n        order: 1.2\n      }\n    }) || this;\n  }\n\n  CompatChangeAll.prototype._run = function (multiCursorController, findController) {\n    multiCursorController.selectAll(findController);\n  };\n\n  return CompatChangeAll;\n}(MultiCursorSelectionControllerAction);\n\nexport { CompatChangeAll };\n\nvar SelectionHighlighterState =\n/** @class */\nfunction () {\n  function SelectionHighlighterState(searchText, matchCase, wordSeparators) {\n    this.searchText = searchText;\n    this.matchCase = matchCase;\n    this.wordSeparators = wordSeparators;\n  }\n  /**\r\n   * Everything equals except for `lastWordUnderCursor`\r\n   */\n\n\n  SelectionHighlighterState.softEquals = function (a, b) {\n    if (!a && !b) {\n      return true;\n    }\n\n    if (!a || !b) {\n      return false;\n    }\n\n    return a.searchText === b.searchText && a.matchCase === b.matchCase && a.wordSeparators === b.wordSeparators;\n  };\n\n  return SelectionHighlighterState;\n}();\n\nvar SelectionHighlighter =\n/** @class */\nfunction (_super) {\n  __extends(SelectionHighlighter, _super);\n\n  function SelectionHighlighter(editor) {\n    var _this = _super.call(this) || this;\n\n    _this.editor = editor;\n    _this._isEnabled = editor.getOption(82\n    /* selectionHighlight */\n    );\n    _this.decorations = [];\n    _this.updateSoon = _this._register(new RunOnceScheduler(function () {\n      return _this._update();\n    }, 300));\n    _this.state = null;\n\n    _this._register(editor.onDidChangeConfiguration(function (e) {\n      _this._isEnabled = editor.getOption(82\n      /* selectionHighlight */\n      );\n    }));\n\n    _this._register(editor.onDidChangeCursorSelection(function (e) {\n      if (!_this._isEnabled) {\n        // Early exit if nothing needs to be done!\n        // Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\n        return;\n      }\n\n      if (e.selection.isEmpty()) {\n        if (e.reason === 3\n        /* Explicit */\n        ) {\n            if (_this.state) {\n              // no longer valid\n              _this._setState(null);\n            }\n\n            _this.updateSoon.schedule();\n          } else {\n          _this._setState(null);\n        }\n      } else {\n        _this._update();\n      }\n    }));\n\n    _this._register(editor.onDidChangeModel(function (e) {\n      _this._setState(null);\n    }));\n\n    _this._register(CommonFindController.get(editor).getState().onFindReplaceStateChange(function (e) {\n      _this._update();\n    }));\n\n    return _this;\n  }\n\n  SelectionHighlighter.prototype._update = function () {\n    this._setState(SelectionHighlighter._createState(this._isEnabled, this.editor));\n  };\n\n  SelectionHighlighter._createState = function (isEnabled, editor) {\n    if (!isEnabled) {\n      return null;\n    }\n\n    if (!editor.hasModel()) {\n      return null;\n    }\n\n    var s = editor.getSelection();\n\n    if (s.startLineNumber !== s.endLineNumber) {\n      // multiline forbidden for perf reasons\n      return null;\n    }\n\n    var multiCursorController = MultiCursorSelectionController.get(editor);\n\n    if (!multiCursorController) {\n      return null;\n    }\n\n    var findController = CommonFindController.get(editor);\n\n    if (!findController) {\n      return null;\n    }\n\n    var r = multiCursorController.getSession(findController);\n\n    if (!r) {\n      var allSelections = editor.getSelections();\n\n      if (allSelections.length > 1) {\n        var findState_1 = findController.getState();\n        var matchCase = findState_1.matchCase;\n        var selectionsContainSameText = modelRangesContainSameText(editor.getModel(), allSelections, matchCase);\n\n        if (!selectionsContainSameText) {\n          return null;\n        }\n      }\n\n      r = MultiCursorSession.create(editor, findController);\n    }\n\n    if (!r) {\n      return null;\n    }\n\n    if (r.currentMatch) {\n      // This is an empty selection\n      // Do not interfere with semantic word highlighting in the no selection case\n      return null;\n    }\n\n    if (/^[ \\t]+$/.test(r.searchText)) {\n      // whitespace only selection\n      return null;\n    }\n\n    if (r.searchText.length > 200) {\n      // very long selection\n      return null;\n    } // TODO: better handling of this case\n\n\n    var findState = findController.getState();\n    var caseSensitive = findState.matchCase; // Return early if the find widget shows the exact same matches\n\n    if (findState.isRevealed) {\n      var findStateSearchString = findState.searchString;\n\n      if (!caseSensitive) {\n        findStateSearchString = findStateSearchString.toLowerCase();\n      }\n\n      var mySearchString = r.searchText;\n\n      if (!caseSensitive) {\n        mySearchString = mySearchString.toLowerCase();\n      }\n\n      if (findStateSearchString === mySearchString && r.matchCase === findState.matchCase && r.wholeWord === findState.wholeWord && !findState.isRegex) {\n        return null;\n      }\n    }\n\n    return new SelectionHighlighterState(r.searchText, r.matchCase, r.wholeWord ? editor.getOption(96\n    /* wordSeparators */\n    ) : null);\n  };\n\n  SelectionHighlighter.prototype._setState = function (state) {\n    if (SelectionHighlighterState.softEquals(this.state, state)) {\n      this.state = state;\n      return;\n    }\n\n    this.state = state;\n\n    if (!this.state) {\n      this.decorations = this.editor.deltaDecorations(this.decorations, []);\n      return;\n    }\n\n    if (!this.editor.hasModel()) {\n      return;\n    }\n\n    var model = this.editor.getModel();\n\n    if (model.isTooLargeForTokenization()) {\n      // the file is too large, so searching word under cursor in the whole document takes is blocking the UI.\n      return;\n    }\n\n    var hasFindOccurrences = DocumentHighlightProviderRegistry.has(model);\n    var allMatches = model.findMatches(this.state.searchText, true, false, this.state.matchCase, this.state.wordSeparators, false).map(function (m) {\n      return m.range;\n    });\n    allMatches.sort(Range.compareRangesUsingStarts);\n    var selections = this.editor.getSelections();\n    selections.sort(Range.compareRangesUsingStarts); // do not overlap with selection (issue #64 and #512)\n\n    var matches = [];\n\n    for (var i = 0, j = 0, len = allMatches.length, lenJ = selections.length; i < len;) {\n      var match = allMatches[i];\n\n      if (j >= lenJ) {\n        // finished all editor selections\n        matches.push(match);\n        i++;\n      } else {\n        var cmp = Range.compareRangesUsingStarts(match, selections[j]);\n\n        if (cmp < 0) {\n          // match is before sel\n          if (selections[j].isEmpty() || !Range.areIntersecting(match, selections[j])) {\n            matches.push(match);\n          }\n\n          i++;\n        } else if (cmp > 0) {\n          // sel is before match\n          j++;\n        } else {\n          // sel is equal to match\n          i++;\n          j++;\n        }\n      }\n    }\n\n    var decorations = matches.map(function (r) {\n      return {\n        range: r,\n        // Show in overviewRuler only if model has no semantic highlighting\n        options: hasFindOccurrences ? SelectionHighlighter._SELECTION_HIGHLIGHT : SelectionHighlighter._SELECTION_HIGHLIGHT_OVERVIEW\n      };\n    });\n    this.decorations = this.editor.deltaDecorations(this.decorations, decorations);\n  };\n\n  SelectionHighlighter.prototype.dispose = function () {\n    this._setState(null);\n\n    _super.prototype.dispose.call(this);\n  };\n\n  SelectionHighlighter.ID = 'editor.contrib.selectionHighlighter';\n  SelectionHighlighter._SELECTION_HIGHLIGHT_OVERVIEW = ModelDecorationOptions.register({\n    stickiness: 1\n    /* NeverGrowsWhenTypingAtEdges */\n    ,\n    className: 'selectionHighlight',\n    overviewRuler: {\n      color: themeColorFromId(overviewRulerSelectionHighlightForeground),\n      position: OverviewRulerLane.Center\n    }\n  });\n  SelectionHighlighter._SELECTION_HIGHLIGHT = ModelDecorationOptions.register({\n    stickiness: 1\n    /* NeverGrowsWhenTypingAtEdges */\n    ,\n    className: 'selectionHighlight'\n  });\n  return SelectionHighlighter;\n}(Disposable);\n\nexport { SelectionHighlighter };\n\nfunction modelRangesContainSameText(model, ranges, matchCase) {\n  var selectedText = getValueInRange(model, ranges[0], !matchCase);\n\n  for (var i = 1, len = ranges.length; i < len; i++) {\n    var range = ranges[i];\n\n    if (range.isEmpty()) {\n      return false;\n    }\n\n    var thisSelectedText = getValueInRange(model, range, !matchCase);\n\n    if (selectedText !== thisSelectedText) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction getValueInRange(model, range, toLowerCase) {\n  var text = model.getValueInRange(range);\n  return toLowerCase ? text.toLowerCase() : text;\n}\n\nregisterEditorContribution(MultiCursorSelectionController.ID, MultiCursorSelectionController);\nregisterEditorContribution(SelectionHighlighter.ID, SelectionHighlighter);\nregisterEditorAction(InsertCursorAbove);\nregisterEditorAction(InsertCursorBelow);\nregisterEditorAction(InsertCursorAtEndOfEachLineSelected);\nregisterEditorAction(AddSelectionToNextFindMatchAction);\nregisterEditorAction(AddSelectionToPreviousFindMatchAction);\nregisterEditorAction(MoveSelectionToNextFindMatchAction);\nregisterEditorAction(MoveSelectionToPreviousFindMatchAction);\nregisterEditorAction(SelectHighlightsAction);\nregisterEditorAction(CompatChangeAll);\nregisterEditorAction(InsertCursorAtEndOfLineSelected);\nregisterEditorAction(InsertCursorAtTopOfLineSelected);","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/contrib/multicursor/multicursor.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","nls","RunOnceScheduler","KeyChord","Disposable","DisposableStore","EditorAction","registerEditorAction","registerEditorContribution","CursorMoveCommands","Range","Selection","EditorContextKeys","OverviewRulerLane","ModelDecorationOptions","DocumentHighlightProviderRegistry","CommonFindController","overviewRulerSelectionHighlightForeground","themeColorFromId","ContextKeyExpr","InsertCursorAbove","_super","call","id","label","localize","alias","precondition","undefined","kbOpts","kbExpr","editorTextFocus","primary","linux","secondary","weight","menuOpts","menuId","group","title","key","comment","order","run","accessor","editor","args","hasModel","useLogicalLine","logicalLine","cursors","_getCursors","context","config","readOnly","model","pushStackElement","setStates","source","addCursorUp","getAll","reveal","InsertCursorBelow","addCursorDown","InsertCursorAtEndOfEachLineSelected","getCursorsForSelection","selection","result","isEmpty","i","startLineNumber","endLineNumber","currentLineMaxColumn","getLineMaxColumn","push","endColumn","_this","getModel","selections","getSelections","newSelections","forEach","sel","length","setSelections","InsertCursorAtEndOfLineSelected","lineCount","getLineCount","startColumn","InsertCursorAtTopOfLineSelected","MultiCursorSessionResult","revealRange","revealScrollType","MultiCursorSession","_editor","findController","isDisconnectedFromFindController","searchText","wholeWord","matchCase","currentMatch","findState","getState","hasTextFocus","isRevealed","searchString","s","getSelection","word","getWordAtPosition","getStartPosition","getValueInRange","replace","addSelectionToNextFindMatch","nextMatch","_getNextMatch","allSelections","concat","moveSelectionToNextFindMatch","slice","highlightFindOptions","lastAddedSelection","findNextMatch","getEndPosition","getOption","range","addSelectionToPreviousFindMatch","previousMatch","_getPreviousMatch","moveSelectionToPreviousFindMatch","findPreviousMatch","selectAll","findMatches","MultiCursorSelectionController","_sessionDispose","_register","_ignoreSelectionChange","_session","get","getContribution","ID","dispose","_endSession","_beginSessionIfNeeded","session","newState","wholeWordOverride","matchCaseOverride","isRegexOverride","change","add","onDidChangeCursorSelection","e","onDidBlurEditorText","onFindReplaceStateChange","clear","_setSelections","_expandEmptyToWord","_applySessionResult","revealRangeInCenterIfOutsideViewport","getSession","selectionsContainSameText","modelRangesContainSameText","resultingSelections","len","matches","isRegex","searchScope","state","inSelection","editorSelection","match","intersection","intersectRanges","map","m","MultiCursorSelectionControllerAction","apply","arguments","multiCursorController","_run","AddSelectionToNextFindMatchAction","focus","AddSelectionToPreviousFindMatchAction","MoveSelectionToNextFindMatchAction","MoveSelectionToPreviousFindMatchAction","SelectHighlightsAction","CompatChangeAll","and","writable","contextMenuOpts","SelectionHighlighterState","wordSeparators","softEquals","a","SelectionHighlighter","_isEnabled","decorations","updateSoon","_update","onDidChangeConfiguration","reason","_setState","schedule","onDidChangeModel","_createState","isEnabled","r","findState_1","test","caseSensitive","findStateSearchString","toLowerCase","mySearchString","deltaDecorations","isTooLargeForTokenization","hasFindOccurrences","has","allMatches","sort","compareRangesUsingStarts","j","lenJ","cmp","areIntersecting","options","_SELECTION_HIGHLIGHT","_SELECTION_HIGHLIGHT_OVERVIEW","register","stickiness","className","overviewRuler","color","position","Center","ranges","selectedText","thisSelectedText","text"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport * as nls from '../../../nls.js';\r\nimport { RunOnceScheduler } from '../../../base/common/async.js';\r\nimport { KeyChord } from '../../../base/common/keyCodes.js';\r\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { CursorMoveCommands } from '../../common/controller/cursorMoveCommands.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { OverviewRulerLane } from '../../common/model.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { DocumentHighlightProviderRegistry } from '../../common/modes.js';\r\nimport { CommonFindController } from '../find/findController.js';\r\nimport { overviewRulerSelectionHighlightForeground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { themeColorFromId } from '../../../platform/theme/common/themeService.js';\r\nimport { ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\r\nvar InsertCursorAbove = /** @class */ (function (_super) {\r\n    __extends(InsertCursorAbove, _super);\r\n    function InsertCursorAbove() {\r\n        return _super.call(this, {\r\n            id: 'editor.action.insertCursorAbove',\r\n            label: nls.localize('mutlicursor.insertAbove', \"Add Cursor Above\"),\r\n            alias: 'Add Cursor Above',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 16 /* UpArrow */,\r\n                linux: {\r\n                    primary: 1024 /* Shift */ | 512 /* Alt */ | 16 /* UpArrow */,\r\n                    secondary: [2048 /* CtrlCmd */ | 1024 /* Shift */ | 16 /* UpArrow */]\r\n                },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: 25 /* MenubarSelectionMenu */,\r\n                group: '3_multi',\r\n                title: nls.localize({ key: 'miInsertCursorAbove', comment: ['&& denotes a mnemonic'] }, \"&&Add Cursor Above\"),\r\n                order: 2\r\n            }\r\n        }) || this;\r\n    }\r\n    InsertCursorAbove.prototype.run = function (accessor, editor, args) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        var useLogicalLine = (args && args.logicalLine === true);\r\n        var cursors = editor._getCursors();\r\n        var context = cursors.context;\r\n        if (context.config.readOnly) {\r\n            return;\r\n        }\r\n        context.model.pushStackElement();\r\n        cursors.setStates(args.source, 3 /* Explicit */, CursorMoveCommands.addCursorUp(context, cursors.getAll(), useLogicalLine));\r\n        cursors.reveal(args.source, true, 1 /* TopMost */, 0 /* Smooth */);\r\n    };\r\n    return InsertCursorAbove;\r\n}(EditorAction));\r\nexport { InsertCursorAbove };\r\nvar InsertCursorBelow = /** @class */ (function (_super) {\r\n    __extends(InsertCursorBelow, _super);\r\n    function InsertCursorBelow() {\r\n        return _super.call(this, {\r\n            id: 'editor.action.insertCursorBelow',\r\n            label: nls.localize('mutlicursor.insertBelow', \"Add Cursor Below\"),\r\n            alias: 'Add Cursor Below',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 18 /* DownArrow */,\r\n                linux: {\r\n                    primary: 1024 /* Shift */ | 512 /* Alt */ | 18 /* DownArrow */,\r\n                    secondary: [2048 /* CtrlCmd */ | 1024 /* Shift */ | 18 /* DownArrow */]\r\n                },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: 25 /* MenubarSelectionMenu */,\r\n                group: '3_multi',\r\n                title: nls.localize({ key: 'miInsertCursorBelow', comment: ['&& denotes a mnemonic'] }, \"A&&dd Cursor Below\"),\r\n                order: 3\r\n            }\r\n        }) || this;\r\n    }\r\n    InsertCursorBelow.prototype.run = function (accessor, editor, args) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        var useLogicalLine = (args && args.logicalLine === true);\r\n        var cursors = editor._getCursors();\r\n        var context = cursors.context;\r\n        if (context.config.readOnly) {\r\n            return;\r\n        }\r\n        context.model.pushStackElement();\r\n        cursors.setStates(args.source, 3 /* Explicit */, CursorMoveCommands.addCursorDown(context, cursors.getAll(), useLogicalLine));\r\n        cursors.reveal(args.source, true, 2 /* BottomMost */, 0 /* Smooth */);\r\n    };\r\n    return InsertCursorBelow;\r\n}(EditorAction));\r\nexport { InsertCursorBelow };\r\nvar InsertCursorAtEndOfEachLineSelected = /** @class */ (function (_super) {\r\n    __extends(InsertCursorAtEndOfEachLineSelected, _super);\r\n    function InsertCursorAtEndOfEachLineSelected() {\r\n        return _super.call(this, {\r\n            id: 'editor.action.insertCursorAtEndOfEachLineSelected',\r\n            label: nls.localize('mutlicursor.insertAtEndOfEachLineSelected', \"Add Cursors to Line Ends\"),\r\n            alias: 'Add Cursors to Line Ends',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 1024 /* Shift */ | 512 /* Alt */ | 39 /* KEY_I */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: 25 /* MenubarSelectionMenu */,\r\n                group: '3_multi',\r\n                title: nls.localize({ key: 'miInsertCursorAtEndOfEachLineSelected', comment: ['&& denotes a mnemonic'] }, \"Add C&&ursors to Line Ends\"),\r\n                order: 4\r\n            }\r\n        }) || this;\r\n    }\r\n    InsertCursorAtEndOfEachLineSelected.prototype.getCursorsForSelection = function (selection, model, result) {\r\n        if (selection.isEmpty()) {\r\n            return;\r\n        }\r\n        for (var i = selection.startLineNumber; i < selection.endLineNumber; i++) {\r\n            var currentLineMaxColumn = model.getLineMaxColumn(i);\r\n            result.push(new Selection(i, currentLineMaxColumn, i, currentLineMaxColumn));\r\n        }\r\n        if (selection.endColumn > 1) {\r\n            result.push(new Selection(selection.endLineNumber, selection.endColumn, selection.endLineNumber, selection.endColumn));\r\n        }\r\n    };\r\n    InsertCursorAtEndOfEachLineSelected.prototype.run = function (accessor, editor) {\r\n        var _this = this;\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        var model = editor.getModel();\r\n        var selections = editor.getSelections();\r\n        var newSelections = [];\r\n        selections.forEach(function (sel) { return _this.getCursorsForSelection(sel, model, newSelections); });\r\n        if (newSelections.length > 0) {\r\n            editor.setSelections(newSelections);\r\n        }\r\n    };\r\n    return InsertCursorAtEndOfEachLineSelected;\r\n}(EditorAction));\r\nvar InsertCursorAtEndOfLineSelected = /** @class */ (function (_super) {\r\n    __extends(InsertCursorAtEndOfLineSelected, _super);\r\n    function InsertCursorAtEndOfLineSelected() {\r\n        return _super.call(this, {\r\n            id: 'editor.action.addCursorsToBottom',\r\n            label: nls.localize('mutlicursor.addCursorsToBottom', \"Add Cursors To Bottom\"),\r\n            alias: 'Add Cursors To Bottom',\r\n            precondition: undefined\r\n        }) || this;\r\n    }\r\n    InsertCursorAtEndOfLineSelected.prototype.run = function (accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        var selections = editor.getSelections();\r\n        var lineCount = editor.getModel().getLineCount();\r\n        var newSelections = [];\r\n        for (var i = selections[0].startLineNumber; i <= lineCount; i++) {\r\n            newSelections.push(new Selection(i, selections[0].startColumn, i, selections[0].endColumn));\r\n        }\r\n        if (newSelections.length > 0) {\r\n            editor.setSelections(newSelections);\r\n        }\r\n    };\r\n    return InsertCursorAtEndOfLineSelected;\r\n}(EditorAction));\r\nvar InsertCursorAtTopOfLineSelected = /** @class */ (function (_super) {\r\n    __extends(InsertCursorAtTopOfLineSelected, _super);\r\n    function InsertCursorAtTopOfLineSelected() {\r\n        return _super.call(this, {\r\n            id: 'editor.action.addCursorsToTop',\r\n            label: nls.localize('mutlicursor.addCursorsToTop', \"Add Cursors To Top\"),\r\n            alias: 'Add Cursors To Top',\r\n            precondition: undefined\r\n        }) || this;\r\n    }\r\n    InsertCursorAtTopOfLineSelected.prototype.run = function (accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        var selections = editor.getSelections();\r\n        var newSelections = [];\r\n        for (var i = selections[0].startLineNumber; i >= 1; i--) {\r\n            newSelections.push(new Selection(i, selections[0].startColumn, i, selections[0].endColumn));\r\n        }\r\n        if (newSelections.length > 0) {\r\n            editor.setSelections(newSelections);\r\n        }\r\n    };\r\n    return InsertCursorAtTopOfLineSelected;\r\n}(EditorAction));\r\nvar MultiCursorSessionResult = /** @class */ (function () {\r\n    function MultiCursorSessionResult(selections, revealRange, revealScrollType) {\r\n        this.selections = selections;\r\n        this.revealRange = revealRange;\r\n        this.revealScrollType = revealScrollType;\r\n    }\r\n    return MultiCursorSessionResult;\r\n}());\r\nexport { MultiCursorSessionResult };\r\nvar MultiCursorSession = /** @class */ (function () {\r\n    function MultiCursorSession(_editor, findController, isDisconnectedFromFindController, searchText, wholeWord, matchCase, currentMatch) {\r\n        this._editor = _editor;\r\n        this.findController = findController;\r\n        this.isDisconnectedFromFindController = isDisconnectedFromFindController;\r\n        this.searchText = searchText;\r\n        this.wholeWord = wholeWord;\r\n        this.matchCase = matchCase;\r\n        this.currentMatch = currentMatch;\r\n    }\r\n    MultiCursorSession.create = function (editor, findController) {\r\n        if (!editor.hasModel()) {\r\n            return null;\r\n        }\r\n        var findState = findController.getState();\r\n        // Find widget owns entirely what we search for if:\r\n        //  - focus is not in the editor (i.e. it is in the find widget)\r\n        //  - and the search widget is visible\r\n        //  - and the search string is non-empty\r\n        if (!editor.hasTextFocus() && findState.isRevealed && findState.searchString.length > 0) {\r\n            // Find widget owns what is searched for\r\n            return new MultiCursorSession(editor, findController, false, findState.searchString, findState.wholeWord, findState.matchCase, null);\r\n        }\r\n        // Otherwise, the selection gives the search text, and the find widget gives the search settings\r\n        // The exception is the find state disassociation case: when beginning with a single, collapsed selection\r\n        var isDisconnectedFromFindController = false;\r\n        var wholeWord;\r\n        var matchCase;\r\n        var selections = editor.getSelections();\r\n        if (selections.length === 1 && selections[0].isEmpty()) {\r\n            isDisconnectedFromFindController = true;\r\n            wholeWord = true;\r\n            matchCase = true;\r\n        }\r\n        else {\r\n            wholeWord = findState.wholeWord;\r\n            matchCase = findState.matchCase;\r\n        }\r\n        // Selection owns what is searched for\r\n        var s = editor.getSelection();\r\n        var searchText;\r\n        var currentMatch = null;\r\n        if (s.isEmpty()) {\r\n            // selection is empty => expand to current word\r\n            var word = editor.getModel().getWordAtPosition(s.getStartPosition());\r\n            if (!word) {\r\n                return null;\r\n            }\r\n            searchText = word.word;\r\n            currentMatch = new Selection(s.startLineNumber, word.startColumn, s.startLineNumber, word.endColumn);\r\n        }\r\n        else {\r\n            searchText = editor.getModel().getValueInRange(s).replace(/\\r\\n/g, '\\n');\r\n        }\r\n        return new MultiCursorSession(editor, findController, isDisconnectedFromFindController, searchText, wholeWord, matchCase, currentMatch);\r\n    };\r\n    MultiCursorSession.prototype.addSelectionToNextFindMatch = function () {\r\n        if (!this._editor.hasModel()) {\r\n            return null;\r\n        }\r\n        var nextMatch = this._getNextMatch();\r\n        if (!nextMatch) {\r\n            return null;\r\n        }\r\n        var allSelections = this._editor.getSelections();\r\n        return new MultiCursorSessionResult(allSelections.concat(nextMatch), nextMatch, 0 /* Smooth */);\r\n    };\r\n    MultiCursorSession.prototype.moveSelectionToNextFindMatch = function () {\r\n        if (!this._editor.hasModel()) {\r\n            return null;\r\n        }\r\n        var nextMatch = this._getNextMatch();\r\n        if (!nextMatch) {\r\n            return null;\r\n        }\r\n        var allSelections = this._editor.getSelections();\r\n        return new MultiCursorSessionResult(allSelections.slice(0, allSelections.length - 1).concat(nextMatch), nextMatch, 0 /* Smooth */);\r\n    };\r\n    MultiCursorSession.prototype._getNextMatch = function () {\r\n        if (!this._editor.hasModel()) {\r\n            return null;\r\n        }\r\n        if (this.currentMatch) {\r\n            var result = this.currentMatch;\r\n            this.currentMatch = null;\r\n            return result;\r\n        }\r\n        this.findController.highlightFindOptions();\r\n        var allSelections = this._editor.getSelections();\r\n        var lastAddedSelection = allSelections[allSelections.length - 1];\r\n        var nextMatch = this._editor.getModel().findNextMatch(this.searchText, lastAddedSelection.getEndPosition(), false, this.matchCase, this.wholeWord ? this._editor.getOption(96 /* wordSeparators */) : null, false);\r\n        if (!nextMatch) {\r\n            return null;\r\n        }\r\n        return new Selection(nextMatch.range.startLineNumber, nextMatch.range.startColumn, nextMatch.range.endLineNumber, nextMatch.range.endColumn);\r\n    };\r\n    MultiCursorSession.prototype.addSelectionToPreviousFindMatch = function () {\r\n        if (!this._editor.hasModel()) {\r\n            return null;\r\n        }\r\n        var previousMatch = this._getPreviousMatch();\r\n        if (!previousMatch) {\r\n            return null;\r\n        }\r\n        var allSelections = this._editor.getSelections();\r\n        return new MultiCursorSessionResult(allSelections.concat(previousMatch), previousMatch, 0 /* Smooth */);\r\n    };\r\n    MultiCursorSession.prototype.moveSelectionToPreviousFindMatch = function () {\r\n        if (!this._editor.hasModel()) {\r\n            return null;\r\n        }\r\n        var previousMatch = this._getPreviousMatch();\r\n        if (!previousMatch) {\r\n            return null;\r\n        }\r\n        var allSelections = this._editor.getSelections();\r\n        return new MultiCursorSessionResult(allSelections.slice(0, allSelections.length - 1).concat(previousMatch), previousMatch, 0 /* Smooth */);\r\n    };\r\n    MultiCursorSession.prototype._getPreviousMatch = function () {\r\n        if (!this._editor.hasModel()) {\r\n            return null;\r\n        }\r\n        if (this.currentMatch) {\r\n            var result = this.currentMatch;\r\n            this.currentMatch = null;\r\n            return result;\r\n        }\r\n        this.findController.highlightFindOptions();\r\n        var allSelections = this._editor.getSelections();\r\n        var lastAddedSelection = allSelections[allSelections.length - 1];\r\n        var previousMatch = this._editor.getModel().findPreviousMatch(this.searchText, lastAddedSelection.getStartPosition(), false, this.matchCase, this.wholeWord ? this._editor.getOption(96 /* wordSeparators */) : null, false);\r\n        if (!previousMatch) {\r\n            return null;\r\n        }\r\n        return new Selection(previousMatch.range.startLineNumber, previousMatch.range.startColumn, previousMatch.range.endLineNumber, previousMatch.range.endColumn);\r\n    };\r\n    MultiCursorSession.prototype.selectAll = function () {\r\n        if (!this._editor.hasModel()) {\r\n            return [];\r\n        }\r\n        this.findController.highlightFindOptions();\r\n        return this._editor.getModel().findMatches(this.searchText, true, false, this.matchCase, this.wholeWord ? this._editor.getOption(96 /* wordSeparators */) : null, false, 1073741824 /* MAX_SAFE_SMALL_INTEGER */);\r\n    };\r\n    return MultiCursorSession;\r\n}());\r\nexport { MultiCursorSession };\r\nvar MultiCursorSelectionController = /** @class */ (function (_super) {\r\n    __extends(MultiCursorSelectionController, _super);\r\n    function MultiCursorSelectionController(editor) {\r\n        var _this = _super.call(this) || this;\r\n        _this._sessionDispose = _this._register(new DisposableStore());\r\n        _this._editor = editor;\r\n        _this._ignoreSelectionChange = false;\r\n        _this._session = null;\r\n        return _this;\r\n    }\r\n    MultiCursorSelectionController.get = function (editor) {\r\n        return editor.getContribution(MultiCursorSelectionController.ID);\r\n    };\r\n    MultiCursorSelectionController.prototype.dispose = function () {\r\n        this._endSession();\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    MultiCursorSelectionController.prototype._beginSessionIfNeeded = function (findController) {\r\n        var _this = this;\r\n        if (!this._session) {\r\n            // Create a new session\r\n            var session = MultiCursorSession.create(this._editor, findController);\r\n            if (!session) {\r\n                return;\r\n            }\r\n            this._session = session;\r\n            var newState = { searchString: this._session.searchText };\r\n            if (this._session.isDisconnectedFromFindController) {\r\n                newState.wholeWordOverride = 1 /* True */;\r\n                newState.matchCaseOverride = 1 /* True */;\r\n                newState.isRegexOverride = 2 /* False */;\r\n            }\r\n            findController.getState().change(newState, false);\r\n            this._sessionDispose.add(this._editor.onDidChangeCursorSelection(function (e) {\r\n                if (_this._ignoreSelectionChange) {\r\n                    return;\r\n                }\r\n                _this._endSession();\r\n            }));\r\n            this._sessionDispose.add(this._editor.onDidBlurEditorText(function () {\r\n                _this._endSession();\r\n            }));\r\n            this._sessionDispose.add(findController.getState().onFindReplaceStateChange(function (e) {\r\n                if (e.matchCase || e.wholeWord) {\r\n                    _this._endSession();\r\n                }\r\n            }));\r\n        }\r\n    };\r\n    MultiCursorSelectionController.prototype._endSession = function () {\r\n        this._sessionDispose.clear();\r\n        if (this._session && this._session.isDisconnectedFromFindController) {\r\n            var newState = {\r\n                wholeWordOverride: 0 /* NotSet */,\r\n                matchCaseOverride: 0 /* NotSet */,\r\n                isRegexOverride: 0 /* NotSet */,\r\n            };\r\n            this._session.findController.getState().change(newState, false);\r\n        }\r\n        this._session = null;\r\n    };\r\n    MultiCursorSelectionController.prototype._setSelections = function (selections) {\r\n        this._ignoreSelectionChange = true;\r\n        this._editor.setSelections(selections);\r\n        this._ignoreSelectionChange = false;\r\n    };\r\n    MultiCursorSelectionController.prototype._expandEmptyToWord = function (model, selection) {\r\n        if (!selection.isEmpty()) {\r\n            return selection;\r\n        }\r\n        var word = model.getWordAtPosition(selection.getStartPosition());\r\n        if (!word) {\r\n            return selection;\r\n        }\r\n        return new Selection(selection.startLineNumber, word.startColumn, selection.startLineNumber, word.endColumn);\r\n    };\r\n    MultiCursorSelectionController.prototype._applySessionResult = function (result) {\r\n        if (!result) {\r\n            return;\r\n        }\r\n        this._setSelections(result.selections);\r\n        if (result.revealRange) {\r\n            this._editor.revealRangeInCenterIfOutsideViewport(result.revealRange, result.revealScrollType);\r\n        }\r\n    };\r\n    MultiCursorSelectionController.prototype.getSession = function (findController) {\r\n        return this._session;\r\n    };\r\n    MultiCursorSelectionController.prototype.addSelectionToNextFindMatch = function (findController) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        if (!this._session) {\r\n            // If there are multiple cursors, handle the case where they do not all select the same text.\r\n            var allSelections = this._editor.getSelections();\r\n            if (allSelections.length > 1) {\r\n                var findState = findController.getState();\r\n                var matchCase = findState.matchCase;\r\n                var selectionsContainSameText = modelRangesContainSameText(this._editor.getModel(), allSelections, matchCase);\r\n                if (!selectionsContainSameText) {\r\n                    var model = this._editor.getModel();\r\n                    var resultingSelections = [];\r\n                    for (var i = 0, len = allSelections.length; i < len; i++) {\r\n                        resultingSelections[i] = this._expandEmptyToWord(model, allSelections[i]);\r\n                    }\r\n                    this._editor.setSelections(resultingSelections);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        this._beginSessionIfNeeded(findController);\r\n        if (this._session) {\r\n            this._applySessionResult(this._session.addSelectionToNextFindMatch());\r\n        }\r\n    };\r\n    MultiCursorSelectionController.prototype.addSelectionToPreviousFindMatch = function (findController) {\r\n        this._beginSessionIfNeeded(findController);\r\n        if (this._session) {\r\n            this._applySessionResult(this._session.addSelectionToPreviousFindMatch());\r\n        }\r\n    };\r\n    MultiCursorSelectionController.prototype.moveSelectionToNextFindMatch = function (findController) {\r\n        this._beginSessionIfNeeded(findController);\r\n        if (this._session) {\r\n            this._applySessionResult(this._session.moveSelectionToNextFindMatch());\r\n        }\r\n    };\r\n    MultiCursorSelectionController.prototype.moveSelectionToPreviousFindMatch = function (findController) {\r\n        this._beginSessionIfNeeded(findController);\r\n        if (this._session) {\r\n            this._applySessionResult(this._session.moveSelectionToPreviousFindMatch());\r\n        }\r\n    };\r\n    MultiCursorSelectionController.prototype.selectAll = function (findController) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        var matches = null;\r\n        var findState = findController.getState();\r\n        // Special case: find widget owns entirely what we search for if:\r\n        // - focus is not in the editor (i.e. it is in the find widget)\r\n        // - and the search widget is visible\r\n        // - and the search string is non-empty\r\n        // - and we're searching for a regex\r\n        if (findState.isRevealed && findState.searchString.length > 0 && findState.isRegex) {\r\n            matches = this._editor.getModel().findMatches(findState.searchString, true, findState.isRegex, findState.matchCase, findState.wholeWord ? this._editor.getOption(96 /* wordSeparators */) : null, false, 1073741824 /* MAX_SAFE_SMALL_INTEGER */);\r\n        }\r\n        else {\r\n            this._beginSessionIfNeeded(findController);\r\n            if (!this._session) {\r\n                return;\r\n            }\r\n            matches = this._session.selectAll();\r\n        }\r\n        if (findState.searchScope) {\r\n            var state = findState.searchScope;\r\n            var inSelection = [];\r\n            for (var i = 0; i < matches.length; i++) {\r\n                if (matches[i].range.endLineNumber <= state.endLineNumber && matches[i].range.startLineNumber >= state.startLineNumber) {\r\n                    inSelection.push(matches[i]);\r\n                }\r\n            }\r\n            matches = inSelection;\r\n        }\r\n        if (matches.length > 0) {\r\n            var editorSelection = this._editor.getSelection();\r\n            // Have the primary cursor remain the one where the action was invoked\r\n            for (var i = 0, len = matches.length; i < len; i++) {\r\n                var match = matches[i];\r\n                var intersection = match.range.intersectRanges(editorSelection);\r\n                if (intersection) {\r\n                    // bingo!\r\n                    matches[i] = matches[0];\r\n                    matches[0] = match;\r\n                    break;\r\n                }\r\n            }\r\n            this._setSelections(matches.map(function (m) { return new Selection(m.range.startLineNumber, m.range.startColumn, m.range.endLineNumber, m.range.endColumn); }));\r\n        }\r\n    };\r\n    MultiCursorSelectionController.ID = 'editor.contrib.multiCursorController';\r\n    return MultiCursorSelectionController;\r\n}(Disposable));\r\nexport { MultiCursorSelectionController };\r\nvar MultiCursorSelectionControllerAction = /** @class */ (function (_super) {\r\n    __extends(MultiCursorSelectionControllerAction, _super);\r\n    function MultiCursorSelectionControllerAction() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    MultiCursorSelectionControllerAction.prototype.run = function (accessor, editor) {\r\n        var multiCursorController = MultiCursorSelectionController.get(editor);\r\n        if (!multiCursorController) {\r\n            return;\r\n        }\r\n        var findController = CommonFindController.get(editor);\r\n        if (!findController) {\r\n            return;\r\n        }\r\n        this._run(multiCursorController, findController);\r\n    };\r\n    return MultiCursorSelectionControllerAction;\r\n}(EditorAction));\r\nexport { MultiCursorSelectionControllerAction };\r\nvar AddSelectionToNextFindMatchAction = /** @class */ (function (_super) {\r\n    __extends(AddSelectionToNextFindMatchAction, _super);\r\n    function AddSelectionToNextFindMatchAction() {\r\n        return _super.call(this, {\r\n            id: 'editor.action.addSelectionToNextFindMatch',\r\n            label: nls.localize('addSelectionToNextFindMatch', \"Add Selection To Next Find Match\"),\r\n            alias: 'Add Selection To Next Find Match',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: 2048 /* CtrlCmd */ | 34 /* KEY_D */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: 25 /* MenubarSelectionMenu */,\r\n                group: '3_multi',\r\n                title: nls.localize({ key: 'miAddSelectionToNextFindMatch', comment: ['&& denotes a mnemonic'] }, \"Add &&Next Occurrence\"),\r\n                order: 5\r\n            }\r\n        }) || this;\r\n    }\r\n    AddSelectionToNextFindMatchAction.prototype._run = function (multiCursorController, findController) {\r\n        multiCursorController.addSelectionToNextFindMatch(findController);\r\n    };\r\n    return AddSelectionToNextFindMatchAction;\r\n}(MultiCursorSelectionControllerAction));\r\nexport { AddSelectionToNextFindMatchAction };\r\nvar AddSelectionToPreviousFindMatchAction = /** @class */ (function (_super) {\r\n    __extends(AddSelectionToPreviousFindMatchAction, _super);\r\n    function AddSelectionToPreviousFindMatchAction() {\r\n        return _super.call(this, {\r\n            id: 'editor.action.addSelectionToPreviousFindMatch',\r\n            label: nls.localize('addSelectionToPreviousFindMatch', \"Add Selection To Previous Find Match\"),\r\n            alias: 'Add Selection To Previous Find Match',\r\n            precondition: undefined,\r\n            menuOpts: {\r\n                menuId: 25 /* MenubarSelectionMenu */,\r\n                group: '3_multi',\r\n                title: nls.localize({ key: 'miAddSelectionToPreviousFindMatch', comment: ['&& denotes a mnemonic'] }, \"Add P&&revious Occurrence\"),\r\n                order: 6\r\n            }\r\n        }) || this;\r\n    }\r\n    AddSelectionToPreviousFindMatchAction.prototype._run = function (multiCursorController, findController) {\r\n        multiCursorController.addSelectionToPreviousFindMatch(findController);\r\n    };\r\n    return AddSelectionToPreviousFindMatchAction;\r\n}(MultiCursorSelectionControllerAction));\r\nexport { AddSelectionToPreviousFindMatchAction };\r\nvar MoveSelectionToNextFindMatchAction = /** @class */ (function (_super) {\r\n    __extends(MoveSelectionToNextFindMatchAction, _super);\r\n    function MoveSelectionToNextFindMatchAction() {\r\n        return _super.call(this, {\r\n            id: 'editor.action.moveSelectionToNextFindMatch',\r\n            label: nls.localize('moveSelectionToNextFindMatch', \"Move Last Selection To Next Find Match\"),\r\n            alias: 'Move Last Selection To Next Find Match',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 34 /* KEY_D */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        }) || this;\r\n    }\r\n    MoveSelectionToNextFindMatchAction.prototype._run = function (multiCursorController, findController) {\r\n        multiCursorController.moveSelectionToNextFindMatch(findController);\r\n    };\r\n    return MoveSelectionToNextFindMatchAction;\r\n}(MultiCursorSelectionControllerAction));\r\nexport { MoveSelectionToNextFindMatchAction };\r\nvar MoveSelectionToPreviousFindMatchAction = /** @class */ (function (_super) {\r\n    __extends(MoveSelectionToPreviousFindMatchAction, _super);\r\n    function MoveSelectionToPreviousFindMatchAction() {\r\n        return _super.call(this, {\r\n            id: 'editor.action.moveSelectionToPreviousFindMatch',\r\n            label: nls.localize('moveSelectionToPreviousFindMatch', \"Move Last Selection To Previous Find Match\"),\r\n            alias: 'Move Last Selection To Previous Find Match',\r\n            precondition: undefined\r\n        }) || this;\r\n    }\r\n    MoveSelectionToPreviousFindMatchAction.prototype._run = function (multiCursorController, findController) {\r\n        multiCursorController.moveSelectionToPreviousFindMatch(findController);\r\n    };\r\n    return MoveSelectionToPreviousFindMatchAction;\r\n}(MultiCursorSelectionControllerAction));\r\nexport { MoveSelectionToPreviousFindMatchAction };\r\nvar SelectHighlightsAction = /** @class */ (function (_super) {\r\n    __extends(SelectHighlightsAction, _super);\r\n    function SelectHighlightsAction() {\r\n        return _super.call(this, {\r\n            id: 'editor.action.selectHighlights',\r\n            label: nls.localize('selectAllOccurrencesOfFindMatch', \"Select All Occurrences of Find Match\"),\r\n            alias: 'Select All Occurrences of Find Match',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 42 /* KEY_L */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: 25 /* MenubarSelectionMenu */,\r\n                group: '3_multi',\r\n                title: nls.localize({ key: 'miSelectHighlights', comment: ['&& denotes a mnemonic'] }, \"Select All &&Occurrences\"),\r\n                order: 7\r\n            }\r\n        }) || this;\r\n    }\r\n    SelectHighlightsAction.prototype._run = function (multiCursorController, findController) {\r\n        multiCursorController.selectAll(findController);\r\n    };\r\n    return SelectHighlightsAction;\r\n}(MultiCursorSelectionControllerAction));\r\nexport { SelectHighlightsAction };\r\nvar CompatChangeAll = /** @class */ (function (_super) {\r\n    __extends(CompatChangeAll, _super);\r\n    function CompatChangeAll() {\r\n        return _super.call(this, {\r\n            id: 'editor.action.changeAll',\r\n            label: nls.localize('changeAll.label', \"Change All Occurrences\"),\r\n            alias: 'Change All Occurrences',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.editorTextFocus),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 60 /* F2 */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            contextMenuOpts: {\r\n                group: '1_modification',\r\n                order: 1.2\r\n            }\r\n        }) || this;\r\n    }\r\n    CompatChangeAll.prototype._run = function (multiCursorController, findController) {\r\n        multiCursorController.selectAll(findController);\r\n    };\r\n    return CompatChangeAll;\r\n}(MultiCursorSelectionControllerAction));\r\nexport { CompatChangeAll };\r\nvar SelectionHighlighterState = /** @class */ (function () {\r\n    function SelectionHighlighterState(searchText, matchCase, wordSeparators) {\r\n        this.searchText = searchText;\r\n        this.matchCase = matchCase;\r\n        this.wordSeparators = wordSeparators;\r\n    }\r\n    /**\r\n     * Everything equals except for `lastWordUnderCursor`\r\n     */\r\n    SelectionHighlighterState.softEquals = function (a, b) {\r\n        if (!a && !b) {\r\n            return true;\r\n        }\r\n        if (!a || !b) {\r\n            return false;\r\n        }\r\n        return (a.searchText === b.searchText\r\n            && a.matchCase === b.matchCase\r\n            && a.wordSeparators === b.wordSeparators);\r\n    };\r\n    return SelectionHighlighterState;\r\n}());\r\nvar SelectionHighlighter = /** @class */ (function (_super) {\r\n    __extends(SelectionHighlighter, _super);\r\n    function SelectionHighlighter(editor) {\r\n        var _this = _super.call(this) || this;\r\n        _this.editor = editor;\r\n        _this._isEnabled = editor.getOption(82 /* selectionHighlight */);\r\n        _this.decorations = [];\r\n        _this.updateSoon = _this._register(new RunOnceScheduler(function () { return _this._update(); }, 300));\r\n        _this.state = null;\r\n        _this._register(editor.onDidChangeConfiguration(function (e) {\r\n            _this._isEnabled = editor.getOption(82 /* selectionHighlight */);\r\n        }));\r\n        _this._register(editor.onDidChangeCursorSelection(function (e) {\r\n            if (!_this._isEnabled) {\r\n                // Early exit if nothing needs to be done!\r\n                // Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\r\n                return;\r\n            }\r\n            if (e.selection.isEmpty()) {\r\n                if (e.reason === 3 /* Explicit */) {\r\n                    if (_this.state) {\r\n                        // no longer valid\r\n                        _this._setState(null);\r\n                    }\r\n                    _this.updateSoon.schedule();\r\n                }\r\n                else {\r\n                    _this._setState(null);\r\n                }\r\n            }\r\n            else {\r\n                _this._update();\r\n            }\r\n        }));\r\n        _this._register(editor.onDidChangeModel(function (e) {\r\n            _this._setState(null);\r\n        }));\r\n        _this._register(CommonFindController.get(editor).getState().onFindReplaceStateChange(function (e) {\r\n            _this._update();\r\n        }));\r\n        return _this;\r\n    }\r\n    SelectionHighlighter.prototype._update = function () {\r\n        this._setState(SelectionHighlighter._createState(this._isEnabled, this.editor));\r\n    };\r\n    SelectionHighlighter._createState = function (isEnabled, editor) {\r\n        if (!isEnabled) {\r\n            return null;\r\n        }\r\n        if (!editor.hasModel()) {\r\n            return null;\r\n        }\r\n        var s = editor.getSelection();\r\n        if (s.startLineNumber !== s.endLineNumber) {\r\n            // multiline forbidden for perf reasons\r\n            return null;\r\n        }\r\n        var multiCursorController = MultiCursorSelectionController.get(editor);\r\n        if (!multiCursorController) {\r\n            return null;\r\n        }\r\n        var findController = CommonFindController.get(editor);\r\n        if (!findController) {\r\n            return null;\r\n        }\r\n        var r = multiCursorController.getSession(findController);\r\n        if (!r) {\r\n            var allSelections = editor.getSelections();\r\n            if (allSelections.length > 1) {\r\n                var findState_1 = findController.getState();\r\n                var matchCase = findState_1.matchCase;\r\n                var selectionsContainSameText = modelRangesContainSameText(editor.getModel(), allSelections, matchCase);\r\n                if (!selectionsContainSameText) {\r\n                    return null;\r\n                }\r\n            }\r\n            r = MultiCursorSession.create(editor, findController);\r\n        }\r\n        if (!r) {\r\n            return null;\r\n        }\r\n        if (r.currentMatch) {\r\n            // This is an empty selection\r\n            // Do not interfere with semantic word highlighting in the no selection case\r\n            return null;\r\n        }\r\n        if (/^[ \\t]+$/.test(r.searchText)) {\r\n            // whitespace only selection\r\n            return null;\r\n        }\r\n        if (r.searchText.length > 200) {\r\n            // very long selection\r\n            return null;\r\n        }\r\n        // TODO: better handling of this case\r\n        var findState = findController.getState();\r\n        var caseSensitive = findState.matchCase;\r\n        // Return early if the find widget shows the exact same matches\r\n        if (findState.isRevealed) {\r\n            var findStateSearchString = findState.searchString;\r\n            if (!caseSensitive) {\r\n                findStateSearchString = findStateSearchString.toLowerCase();\r\n            }\r\n            var mySearchString = r.searchText;\r\n            if (!caseSensitive) {\r\n                mySearchString = mySearchString.toLowerCase();\r\n            }\r\n            if (findStateSearchString === mySearchString && r.matchCase === findState.matchCase && r.wholeWord === findState.wholeWord && !findState.isRegex) {\r\n                return null;\r\n            }\r\n        }\r\n        return new SelectionHighlighterState(r.searchText, r.matchCase, r.wholeWord ? editor.getOption(96 /* wordSeparators */) : null);\r\n    };\r\n    SelectionHighlighter.prototype._setState = function (state) {\r\n        if (SelectionHighlighterState.softEquals(this.state, state)) {\r\n            this.state = state;\r\n            return;\r\n        }\r\n        this.state = state;\r\n        if (!this.state) {\r\n            this.decorations = this.editor.deltaDecorations(this.decorations, []);\r\n            return;\r\n        }\r\n        if (!this.editor.hasModel()) {\r\n            return;\r\n        }\r\n        var model = this.editor.getModel();\r\n        if (model.isTooLargeForTokenization()) {\r\n            // the file is too large, so searching word under cursor in the whole document takes is blocking the UI.\r\n            return;\r\n        }\r\n        var hasFindOccurrences = DocumentHighlightProviderRegistry.has(model);\r\n        var allMatches = model.findMatches(this.state.searchText, true, false, this.state.matchCase, this.state.wordSeparators, false).map(function (m) { return m.range; });\r\n        allMatches.sort(Range.compareRangesUsingStarts);\r\n        var selections = this.editor.getSelections();\r\n        selections.sort(Range.compareRangesUsingStarts);\r\n        // do not overlap with selection (issue #64 and #512)\r\n        var matches = [];\r\n        for (var i = 0, j = 0, len = allMatches.length, lenJ = selections.length; i < len;) {\r\n            var match = allMatches[i];\r\n            if (j >= lenJ) {\r\n                // finished all editor selections\r\n                matches.push(match);\r\n                i++;\r\n            }\r\n            else {\r\n                var cmp = Range.compareRangesUsingStarts(match, selections[j]);\r\n                if (cmp < 0) {\r\n                    // match is before sel\r\n                    if (selections[j].isEmpty() || !Range.areIntersecting(match, selections[j])) {\r\n                        matches.push(match);\r\n                    }\r\n                    i++;\r\n                }\r\n                else if (cmp > 0) {\r\n                    // sel is before match\r\n                    j++;\r\n                }\r\n                else {\r\n                    // sel is equal to match\r\n                    i++;\r\n                    j++;\r\n                }\r\n            }\r\n        }\r\n        var decorations = matches.map(function (r) {\r\n            return {\r\n                range: r,\r\n                // Show in overviewRuler only if model has no semantic highlighting\r\n                options: (hasFindOccurrences ? SelectionHighlighter._SELECTION_HIGHLIGHT : SelectionHighlighter._SELECTION_HIGHLIGHT_OVERVIEW)\r\n            };\r\n        });\r\n        this.decorations = this.editor.deltaDecorations(this.decorations, decorations);\r\n    };\r\n    SelectionHighlighter.prototype.dispose = function () {\r\n        this._setState(null);\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    SelectionHighlighter.ID = 'editor.contrib.selectionHighlighter';\r\n    SelectionHighlighter._SELECTION_HIGHLIGHT_OVERVIEW = ModelDecorationOptions.register({\r\n        stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n        className: 'selectionHighlight',\r\n        overviewRuler: {\r\n            color: themeColorFromId(overviewRulerSelectionHighlightForeground),\r\n            position: OverviewRulerLane.Center\r\n        }\r\n    });\r\n    SelectionHighlighter._SELECTION_HIGHLIGHT = ModelDecorationOptions.register({\r\n        stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n        className: 'selectionHighlight',\r\n    });\r\n    return SelectionHighlighter;\r\n}(Disposable));\r\nexport { SelectionHighlighter };\r\nfunction modelRangesContainSameText(model, ranges, matchCase) {\r\n    var selectedText = getValueInRange(model, ranges[0], !matchCase);\r\n    for (var i = 1, len = ranges.length; i < len; i++) {\r\n        var range = ranges[i];\r\n        if (range.isEmpty()) {\r\n            return false;\r\n        }\r\n        var thisSelectedText = getValueInRange(model, range, !matchCase);\r\n        if (selectedText !== thisSelectedText) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction getValueInRange(model, range, toLowerCase) {\r\n    var text = model.getValueInRange(range);\r\n    return (toLowerCase ? text.toLowerCase() : text);\r\n}\r\nregisterEditorContribution(MultiCursorSelectionController.ID, MultiCursorSelectionController);\r\nregisterEditorContribution(SelectionHighlighter.ID, SelectionHighlighter);\r\nregisterEditorAction(InsertCursorAbove);\r\nregisterEditorAction(InsertCursorBelow);\r\nregisterEditorAction(InsertCursorAtEndOfEachLineSelected);\r\nregisterEditorAction(AddSelectionToNextFindMatchAction);\r\nregisterEditorAction(AddSelectionToPreviousFindMatchAction);\r\nregisterEditorAction(MoveSelectionToNextFindMatchAction);\r\nregisterEditorAction(MoveSelectionToPreviousFindMatchAction);\r\nregisterEditorAction(SelectHighlightsAction);\r\nregisterEditorAction(CompatChangeAll);\r\nregisterEditorAction(InsertCursorAtEndOfLineSelected);\r\nregisterEditorAction(InsertCursorAtTopOfLineSelected);\r\n"]},"metadata":{},"sourceType":"module"}