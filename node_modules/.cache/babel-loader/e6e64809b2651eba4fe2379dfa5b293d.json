{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { IndentAction } from '../languageConfiguration.js';\n\nvar OnEnterSupport =\n/** @class */\nfunction () {\n  function OnEnterSupport(opts) {\n    var _this = this;\n\n    opts = opts || {};\n    opts.brackets = opts.brackets || [['(', ')'], ['{', '}'], ['[', ']']];\n    this._brackets = [];\n    opts.brackets.forEach(function (bracket) {\n      var openRegExp = OnEnterSupport._createOpenBracketRegExp(bracket[0]);\n\n      var closeRegExp = OnEnterSupport._createCloseBracketRegExp(bracket[1]);\n\n      if (openRegExp && closeRegExp) {\n        _this._brackets.push({\n          open: bracket[0],\n          openRegExp: openRegExp,\n          close: bracket[1],\n          closeRegExp: closeRegExp\n        });\n      }\n    });\n    this._regExpRules = opts.onEnterRules || [];\n  }\n\n  OnEnterSupport.prototype.onEnter = function (autoIndent, oneLineAboveText, beforeEnterText, afterEnterText) {\n    // (1): `regExpRules`\n    if (autoIndent >= 3\n    /* Advanced */\n    ) {\n        for (var i = 0, len = this._regExpRules.length; i < len; i++) {\n          var rule = this._regExpRules[i];\n          var regResult = [{\n            reg: rule.beforeText,\n            text: beforeEnterText\n          }, {\n            reg: rule.afterText,\n            text: afterEnterText\n          }, {\n            reg: rule.oneLineAboveText,\n            text: oneLineAboveText\n          }].every(function (obj) {\n            return obj.reg ? obj.reg.test(obj.text) : true;\n          });\n\n          if (regResult) {\n            return rule.action;\n          }\n        }\n      } // (2): Special indent-outdent\n\n\n    if (autoIndent >= 2\n    /* Brackets */\n    ) {\n        if (beforeEnterText.length > 0 && afterEnterText.length > 0) {\n          for (var i = 0, len = this._brackets.length; i < len; i++) {\n            var bracket = this._brackets[i];\n\n            if (bracket.openRegExp.test(beforeEnterText) && bracket.closeRegExp.test(afterEnterText)) {\n              return {\n                indentAction: IndentAction.IndentOutdent\n              };\n            }\n          }\n        }\n      } // (4): Open bracket based logic\n\n\n    if (autoIndent >= 2\n    /* Brackets */\n    ) {\n        if (beforeEnterText.length > 0) {\n          for (var i = 0, len = this._brackets.length; i < len; i++) {\n            var bracket = this._brackets[i];\n\n            if (bracket.openRegExp.test(beforeEnterText)) {\n              return {\n                indentAction: IndentAction.Indent\n              };\n            }\n          }\n        }\n      }\n\n    return null;\n  };\n\n  OnEnterSupport._createOpenBracketRegExp = function (bracket) {\n    var str = strings.escapeRegExpCharacters(bracket);\n\n    if (!/\\B/.test(str.charAt(0))) {\n      str = '\\\\b' + str;\n    }\n\n    str += '\\\\s*$';\n    return OnEnterSupport._safeRegExp(str);\n  };\n\n  OnEnterSupport._createCloseBracketRegExp = function (bracket) {\n    var str = strings.escapeRegExpCharacters(bracket);\n\n    if (!/\\B/.test(str.charAt(str.length - 1))) {\n      str = str + '\\\\b';\n    }\n\n    str = '^\\\\s*' + str;\n    return OnEnterSupport._safeRegExp(str);\n  };\n\n  OnEnterSupport._safeRegExp = function (def) {\n    try {\n      return new RegExp(def);\n    } catch (err) {\n      onUnexpectedError(err);\n      return null;\n    }\n  };\n\n  return OnEnterSupport;\n}();\n\nexport { OnEnterSupport };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/common/modes/supports/onEnter.js"],"names":["onUnexpectedError","strings","IndentAction","OnEnterSupport","opts","_this","brackets","_brackets","forEach","bracket","openRegExp","_createOpenBracketRegExp","closeRegExp","_createCloseBracketRegExp","push","open","close","_regExpRules","onEnterRules","prototype","onEnter","autoIndent","oneLineAboveText","beforeEnterText","afterEnterText","i","len","length","rule","regResult","reg","beforeText","text","afterText","every","obj","test","action","indentAction","IndentOutdent","Indent","str","escapeRegExpCharacters","charAt","_safeRegExp","def","RegExp","err"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\r\nimport * as strings from '../../../../base/common/strings.js';\r\nimport { IndentAction } from '../languageConfiguration.js';\r\nvar OnEnterSupport = /** @class */ (function () {\r\n    function OnEnterSupport(opts) {\r\n        var _this = this;\r\n        opts = opts || {};\r\n        opts.brackets = opts.brackets || [\r\n            ['(', ')'],\r\n            ['{', '}'],\r\n            ['[', ']']\r\n        ];\r\n        this._brackets = [];\r\n        opts.brackets.forEach(function (bracket) {\r\n            var openRegExp = OnEnterSupport._createOpenBracketRegExp(bracket[0]);\r\n            var closeRegExp = OnEnterSupport._createCloseBracketRegExp(bracket[1]);\r\n            if (openRegExp && closeRegExp) {\r\n                _this._brackets.push({\r\n                    open: bracket[0],\r\n                    openRegExp: openRegExp,\r\n                    close: bracket[1],\r\n                    closeRegExp: closeRegExp,\r\n                });\r\n            }\r\n        });\r\n        this._regExpRules = opts.onEnterRules || [];\r\n    }\r\n    OnEnterSupport.prototype.onEnter = function (autoIndent, oneLineAboveText, beforeEnterText, afterEnterText) {\r\n        // (1): `regExpRules`\r\n        if (autoIndent >= 3 /* Advanced */) {\r\n            for (var i = 0, len = this._regExpRules.length; i < len; i++) {\r\n                var rule = this._regExpRules[i];\r\n                var regResult = [{\r\n                        reg: rule.beforeText,\r\n                        text: beforeEnterText\r\n                    }, {\r\n                        reg: rule.afterText,\r\n                        text: afterEnterText\r\n                    }, {\r\n                        reg: rule.oneLineAboveText,\r\n                        text: oneLineAboveText\r\n                    }].every(function (obj) {\r\n                    return obj.reg ? obj.reg.test(obj.text) : true;\r\n                });\r\n                if (regResult) {\r\n                    return rule.action;\r\n                }\r\n            }\r\n        }\r\n        // (2): Special indent-outdent\r\n        if (autoIndent >= 2 /* Brackets */) {\r\n            if (beforeEnterText.length > 0 && afterEnterText.length > 0) {\r\n                for (var i = 0, len = this._brackets.length; i < len; i++) {\r\n                    var bracket = this._brackets[i];\r\n                    if (bracket.openRegExp.test(beforeEnterText) && bracket.closeRegExp.test(afterEnterText)) {\r\n                        return { indentAction: IndentAction.IndentOutdent };\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // (4): Open bracket based logic\r\n        if (autoIndent >= 2 /* Brackets */) {\r\n            if (beforeEnterText.length > 0) {\r\n                for (var i = 0, len = this._brackets.length; i < len; i++) {\r\n                    var bracket = this._brackets[i];\r\n                    if (bracket.openRegExp.test(beforeEnterText)) {\r\n                        return { indentAction: IndentAction.Indent };\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    OnEnterSupport._createOpenBracketRegExp = function (bracket) {\r\n        var str = strings.escapeRegExpCharacters(bracket);\r\n        if (!/\\B/.test(str.charAt(0))) {\r\n            str = '\\\\b' + str;\r\n        }\r\n        str += '\\\\s*$';\r\n        return OnEnterSupport._safeRegExp(str);\r\n    };\r\n    OnEnterSupport._createCloseBracketRegExp = function (bracket) {\r\n        var str = strings.escapeRegExpCharacters(bracket);\r\n        if (!/\\B/.test(str.charAt(str.length - 1))) {\r\n            str = str + '\\\\b';\r\n        }\r\n        str = '^\\\\s*' + str;\r\n        return OnEnterSupport._safeRegExp(str);\r\n    };\r\n    OnEnterSupport._safeRegExp = function (def) {\r\n        try {\r\n            return new RegExp(def);\r\n        }\r\n        catch (err) {\r\n            onUnexpectedError(err);\r\n            return null;\r\n        }\r\n    };\r\n    return OnEnterSupport;\r\n}());\r\nexport { OnEnterSupport };\r\n"]},"metadata":{},"sourceType":"module"}