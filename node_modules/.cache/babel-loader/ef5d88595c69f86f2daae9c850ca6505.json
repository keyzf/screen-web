{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from '../core/position.js';\nimport { PrefixSumComputer } from '../viewModel/prefixSumComputer.js';\n\nvar MirrorTextModel =\n/** @class */\nfunction () {\n  function MirrorTextModel(uri, lines, eol, versionId) {\n    this._uri = uri;\n    this._lines = lines;\n    this._eol = eol;\n    this._versionId = versionId;\n    this._lineStarts = null;\n  }\n\n  MirrorTextModel.prototype.dispose = function () {\n    this._lines.length = 0;\n  };\n\n  MirrorTextModel.prototype.getText = function () {\n    return this._lines.join(this._eol);\n  };\n\n  MirrorTextModel.prototype.onEvents = function (e) {\n    if (e.eol && e.eol !== this._eol) {\n      this._eol = e.eol;\n      this._lineStarts = null;\n    } // Update my lines\n\n\n    var changes = e.changes;\n\n    for (var _i = 0, changes_1 = changes; _i < changes_1.length; _i++) {\n      var change = changes_1[_i];\n\n      this._acceptDeleteRange(change.range);\n\n      this._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\n    }\n\n    this._versionId = e.versionId;\n  };\n\n  MirrorTextModel.prototype._ensureLineStarts = function () {\n    if (!this._lineStarts) {\n      var eolLength = this._eol.length;\n      var linesLength = this._lines.length;\n      var lineStartValues = new Uint32Array(linesLength);\n\n      for (var i = 0; i < linesLength; i++) {\n        lineStartValues[i] = this._lines[i].length + eolLength;\n      }\n\n      this._lineStarts = new PrefixSumComputer(lineStartValues);\n    }\n  };\n  /**\r\n   * All changes to a line's text go through this method\r\n   */\n\n\n  MirrorTextModel.prototype._setLineText = function (lineIndex, newValue) {\n    this._lines[lineIndex] = newValue;\n\n    if (this._lineStarts) {\n      // update prefix sum\n      this._lineStarts.changeValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n    }\n  };\n\n  MirrorTextModel.prototype._acceptDeleteRange = function (range) {\n    if (range.startLineNumber === range.endLineNumber) {\n      if (range.startColumn === range.endColumn) {\n        // Nothing to delete\n        return;\n      } // Delete text on the affected line\n\n\n      this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1) + this._lines[range.startLineNumber - 1].substring(range.endColumn - 1));\n\n      return;\n    } // Take remaining text on last line and append it to remaining text on first line\n\n\n    this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1) + this._lines[range.endLineNumber - 1].substring(range.endColumn - 1)); // Delete middle lines\n\n\n    this._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n\n    if (this._lineStarts) {\n      // update prefix sum\n      this._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n    }\n  };\n\n  MirrorTextModel.prototype._acceptInsertText = function (position, insertText) {\n    if (insertText.length === 0) {\n      // Nothing to insert\n      return;\n    }\n\n    var insertLines = insertText.split(/\\r\\n|\\r|\\n/);\n\n    if (insertLines.length === 1) {\n      // Inserting text on one line\n      this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1) + insertLines[0] + this._lines[position.lineNumber - 1].substring(position.column - 1));\n\n      return;\n    } // Append overflowing text from first line to the end of text to insert\n\n\n    insertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1); // Delete overflowing text from first line and insert text on first line\n\n    this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1) + insertLines[0]); // Insert new lines & store lengths\n\n\n    var newLengths = new Uint32Array(insertLines.length - 1);\n\n    for (var i = 1; i < insertLines.length; i++) {\n      this._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n\n      newLengths[i - 1] = insertLines[i].length + this._eol.length;\n    }\n\n    if (this._lineStarts) {\n      // update prefix sum\n      this._lineStarts.insertValues(position.lineNumber, newLengths);\n    }\n  };\n\n  return MirrorTextModel;\n}();\n\nexport { MirrorTextModel };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/common/model/mirrorTextModel.js"],"names":["Position","PrefixSumComputer","MirrorTextModel","uri","lines","eol","versionId","_uri","_lines","_eol","_versionId","_lineStarts","prototype","dispose","length","getText","join","onEvents","e","changes","_i","changes_1","change","_acceptDeleteRange","range","_acceptInsertText","startLineNumber","startColumn","text","_ensureLineStarts","eolLength","linesLength","lineStartValues","Uint32Array","i","_setLineText","lineIndex","newValue","changeValue","endLineNumber","endColumn","substring","splice","removeValues","position","insertText","insertLines","split","lineNumber","column","newLengths","insertValues"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Position } from '../core/position.js';\r\nimport { PrefixSumComputer } from '../viewModel/prefixSumComputer.js';\r\nvar MirrorTextModel = /** @class */ (function () {\r\n    function MirrorTextModel(uri, lines, eol, versionId) {\r\n        this._uri = uri;\r\n        this._lines = lines;\r\n        this._eol = eol;\r\n        this._versionId = versionId;\r\n        this._lineStarts = null;\r\n    }\r\n    MirrorTextModel.prototype.dispose = function () {\r\n        this._lines.length = 0;\r\n    };\r\n    MirrorTextModel.prototype.getText = function () {\r\n        return this._lines.join(this._eol);\r\n    };\r\n    MirrorTextModel.prototype.onEvents = function (e) {\r\n        if (e.eol && e.eol !== this._eol) {\r\n            this._eol = e.eol;\r\n            this._lineStarts = null;\r\n        }\r\n        // Update my lines\r\n        var changes = e.changes;\r\n        for (var _i = 0, changes_1 = changes; _i < changes_1.length; _i++) {\r\n            var change = changes_1[_i];\r\n            this._acceptDeleteRange(change.range);\r\n            this._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\r\n        }\r\n        this._versionId = e.versionId;\r\n    };\r\n    MirrorTextModel.prototype._ensureLineStarts = function () {\r\n        if (!this._lineStarts) {\r\n            var eolLength = this._eol.length;\r\n            var linesLength = this._lines.length;\r\n            var lineStartValues = new Uint32Array(linesLength);\r\n            for (var i = 0; i < linesLength; i++) {\r\n                lineStartValues[i] = this._lines[i].length + eolLength;\r\n            }\r\n            this._lineStarts = new PrefixSumComputer(lineStartValues);\r\n        }\r\n    };\r\n    /**\r\n     * All changes to a line's text go through this method\r\n     */\r\n    MirrorTextModel.prototype._setLineText = function (lineIndex, newValue) {\r\n        this._lines[lineIndex] = newValue;\r\n        if (this._lineStarts) {\r\n            // update prefix sum\r\n            this._lineStarts.changeValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\r\n        }\r\n    };\r\n    MirrorTextModel.prototype._acceptDeleteRange = function (range) {\r\n        if (range.startLineNumber === range.endLineNumber) {\r\n            if (range.startColumn === range.endColumn) {\r\n                // Nothing to delete\r\n                return;\r\n            }\r\n            // Delete text on the affected line\r\n            this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\r\n                + this._lines[range.startLineNumber - 1].substring(range.endColumn - 1));\r\n            return;\r\n        }\r\n        // Take remaining text on last line and append it to remaining text on first line\r\n        this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\r\n            + this._lines[range.endLineNumber - 1].substring(range.endColumn - 1));\r\n        // Delete middle lines\r\n        this._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\r\n        if (this._lineStarts) {\r\n            // update prefix sum\r\n            this._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\r\n        }\r\n    };\r\n    MirrorTextModel.prototype._acceptInsertText = function (position, insertText) {\r\n        if (insertText.length === 0) {\r\n            // Nothing to insert\r\n            return;\r\n        }\r\n        var insertLines = insertText.split(/\\r\\n|\\r|\\n/);\r\n        if (insertLines.length === 1) {\r\n            // Inserting text on one line\r\n            this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\r\n                + insertLines[0]\r\n                + this._lines[position.lineNumber - 1].substring(position.column - 1));\r\n            return;\r\n        }\r\n        // Append overflowing text from first line to the end of text to insert\r\n        insertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\r\n        // Delete overflowing text from first line and insert text on first line\r\n        this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\r\n            + insertLines[0]);\r\n        // Insert new lines & store lengths\r\n        var newLengths = new Uint32Array(insertLines.length - 1);\r\n        for (var i = 1; i < insertLines.length; i++) {\r\n            this._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\r\n            newLengths[i - 1] = insertLines[i].length + this._eol.length;\r\n        }\r\n        if (this._lineStarts) {\r\n            // update prefix sum\r\n            this._lineStarts.insertValues(position.lineNumber, newLengths);\r\n        }\r\n    };\r\n    return MirrorTextModel;\r\n}());\r\nexport { MirrorTextModel };\r\n"]},"metadata":{},"sourceType":"module"}