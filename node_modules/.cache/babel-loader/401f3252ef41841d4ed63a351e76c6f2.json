{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { Color } from '../../../../base/common/color.js';\n\nvar ParsedTokenThemeRule =\n/** @class */\nfunction () {\n  function ParsedTokenThemeRule(token, index, fontStyle, foreground, background) {\n    this.token = token;\n    this.index = index;\n    this.fontStyle = fontStyle;\n    this.foreground = foreground;\n    this.background = background;\n  }\n\n  return ParsedTokenThemeRule;\n}();\n\nexport { ParsedTokenThemeRule };\n/**\r\n * Parse a raw theme into rules.\r\n */\n\nexport function parseTokenTheme(source) {\n  if (!source || !Array.isArray(source)) {\n    return [];\n  }\n\n  var result = [],\n      resultLen = 0;\n\n  for (var i = 0, len = source.length; i < len; i++) {\n    var entry = source[i];\n    var fontStyle = -1\n    /* NotSet */\n    ;\n\n    if (typeof entry.fontStyle === 'string') {\n      fontStyle = 0\n      /* None */\n      ;\n      var segments = entry.fontStyle.split(' ');\n\n      for (var j = 0, lenJ = segments.length; j < lenJ; j++) {\n        var segment = segments[j];\n\n        switch (segment) {\n          case 'italic':\n            fontStyle = fontStyle | 1\n            /* Italic */\n            ;\n            break;\n\n          case 'bold':\n            fontStyle = fontStyle | 2\n            /* Bold */\n            ;\n            break;\n\n          case 'underline':\n            fontStyle = fontStyle | 4\n            /* Underline */\n            ;\n            break;\n        }\n      }\n    }\n\n    var foreground = null;\n\n    if (typeof entry.foreground === 'string') {\n      foreground = entry.foreground;\n    }\n\n    var background = null;\n\n    if (typeof entry.background === 'string') {\n      background = entry.background;\n    }\n\n    result[resultLen++] = new ParsedTokenThemeRule(entry.token || '', i, fontStyle, foreground, background);\n  }\n\n  return result;\n}\n/**\r\n * Resolve rules (i.e. inheritance).\r\n */\n\nfunction resolveParsedTokenThemeRules(parsedThemeRules, customTokenColors) {\n  // Sort rules lexicographically, and then by index if necessary\n  parsedThemeRules.sort(function (a, b) {\n    var r = strcmp(a.token, b.token);\n\n    if (r !== 0) {\n      return r;\n    }\n\n    return a.index - b.index;\n  }); // Determine defaults\n\n  var defaultFontStyle = 0\n  /* None */\n  ;\n  var defaultForeground = '000000';\n  var defaultBackground = 'ffffff';\n\n  while (parsedThemeRules.length >= 1 && parsedThemeRules[0].token === '') {\n    var incomingDefaults = parsedThemeRules.shift();\n\n    if (incomingDefaults.fontStyle !== -1\n    /* NotSet */\n    ) {\n        defaultFontStyle = incomingDefaults.fontStyle;\n      }\n\n    if (incomingDefaults.foreground !== null) {\n      defaultForeground = incomingDefaults.foreground;\n    }\n\n    if (incomingDefaults.background !== null) {\n      defaultBackground = incomingDefaults.background;\n    }\n  }\n\n  var colorMap = new ColorMap(); // start with token colors from custom token themes\n\n  for (var _i = 0, customTokenColors_1 = customTokenColors; _i < customTokenColors_1.length; _i++) {\n    var color = customTokenColors_1[_i];\n    colorMap.getId(color);\n  }\n\n  var foregroundColorId = colorMap.getId(defaultForeground);\n  var backgroundColorId = colorMap.getId(defaultBackground);\n  var defaults = new ThemeTrieElementRule(defaultFontStyle, foregroundColorId, backgroundColorId);\n  var root = new ThemeTrieElement(defaults);\n\n  for (var i = 0, len = parsedThemeRules.length; i < len; i++) {\n    var rule = parsedThemeRules[i];\n    root.insert(rule.token, rule.fontStyle, colorMap.getId(rule.foreground), colorMap.getId(rule.background));\n  }\n\n  return new TokenTheme(colorMap, root);\n}\n\nvar colorRegExp = /^#?([0-9A-Fa-f]{6})([0-9A-Fa-f]{2})?$/;\n\nvar ColorMap =\n/** @class */\nfunction () {\n  function ColorMap() {\n    this._lastColorId = 0;\n    this._id2color = [];\n    this._color2id = new Map();\n  }\n\n  ColorMap.prototype.getId = function (color) {\n    if (color === null) {\n      return 0;\n    }\n\n    var match = color.match(colorRegExp);\n\n    if (!match) {\n      throw new Error('Illegal value for token color: ' + color);\n    }\n\n    color = match[1].toUpperCase();\n\n    var value = this._color2id.get(color);\n\n    if (value) {\n      return value;\n    }\n\n    value = ++this._lastColorId;\n\n    this._color2id.set(color, value);\n\n    this._id2color[value] = Color.fromHex('#' + color);\n    return value;\n  };\n\n  ColorMap.prototype.getColorMap = function () {\n    return this._id2color.slice(0);\n  };\n\n  return ColorMap;\n}();\n\nexport { ColorMap };\n\nvar TokenTheme =\n/** @class */\nfunction () {\n  function TokenTheme(colorMap, root) {\n    this._colorMap = colorMap;\n    this._root = root;\n    this._cache = new Map();\n  }\n\n  TokenTheme.createFromRawTokenTheme = function (source, customTokenColors) {\n    return this.createFromParsedTokenTheme(parseTokenTheme(source), customTokenColors);\n  };\n\n  TokenTheme.createFromParsedTokenTheme = function (source, customTokenColors) {\n    return resolveParsedTokenThemeRules(source, customTokenColors);\n  };\n\n  TokenTheme.prototype.getColorMap = function () {\n    return this._colorMap.getColorMap();\n  };\n\n  TokenTheme.prototype._match = function (token) {\n    return this._root.match(token);\n  };\n\n  TokenTheme.prototype.match = function (languageId, token) {\n    // The cache contains the metadata without the language bits set.\n    var result = this._cache.get(token);\n\n    if (typeof result === 'undefined') {\n      var rule = this._match(token);\n\n      var standardToken = toStandardTokenType(token);\n      result = (rule.metadata | standardToken << 8\n      /* TOKEN_TYPE_OFFSET */\n      ) >>> 0;\n\n      this._cache.set(token, result);\n    }\n\n    return (result | languageId << 0\n    /* LANGUAGEID_OFFSET */\n    ) >>> 0;\n  };\n\n  return TokenTheme;\n}();\n\nexport { TokenTheme };\nvar STANDARD_TOKEN_TYPE_REGEXP = /\\b(comment|string|regex|regexp)\\b/;\nexport function toStandardTokenType(tokenType) {\n  var m = tokenType.match(STANDARD_TOKEN_TYPE_REGEXP);\n\n  if (!m) {\n    return 0\n    /* Other */\n    ;\n  }\n\n  switch (m[1]) {\n    case 'comment':\n      return 1\n      /* Comment */\n      ;\n\n    case 'string':\n      return 2\n      /* String */\n      ;\n\n    case 'regex':\n      return 4\n      /* RegEx */\n      ;\n\n    case 'regexp':\n      return 4\n      /* RegEx */\n      ;\n  }\n\n  throw new Error('Unexpected match for standard token type!');\n}\nexport function strcmp(a, b) {\n  if (a < b) {\n    return -1;\n  }\n\n  if (a > b) {\n    return 1;\n  }\n\n  return 0;\n}\n\nvar ThemeTrieElementRule =\n/** @class */\nfunction () {\n  function ThemeTrieElementRule(fontStyle, foreground, background) {\n    this._fontStyle = fontStyle;\n    this._foreground = foreground;\n    this._background = background;\n    this.metadata = (this._fontStyle << 11\n    /* FONT_STYLE_OFFSET */\n    | this._foreground << 14\n    /* FOREGROUND_OFFSET */\n    | this._background << 23\n    /* BACKGROUND_OFFSET */\n    ) >>> 0;\n  }\n\n  ThemeTrieElementRule.prototype.clone = function () {\n    return new ThemeTrieElementRule(this._fontStyle, this._foreground, this._background);\n  };\n\n  ThemeTrieElementRule.prototype.acceptOverwrite = function (fontStyle, foreground, background) {\n    if (fontStyle !== -1\n    /* NotSet */\n    ) {\n        this._fontStyle = fontStyle;\n      }\n\n    if (foreground !== 0\n    /* None */\n    ) {\n        this._foreground = foreground;\n      }\n\n    if (background !== 0\n    /* None */\n    ) {\n        this._background = background;\n      }\n\n    this.metadata = (this._fontStyle << 11\n    /* FONT_STYLE_OFFSET */\n    | this._foreground << 14\n    /* FOREGROUND_OFFSET */\n    | this._background << 23\n    /* BACKGROUND_OFFSET */\n    ) >>> 0;\n  };\n\n  return ThemeTrieElementRule;\n}();\n\nexport { ThemeTrieElementRule };\n\nvar ThemeTrieElement =\n/** @class */\nfunction () {\n  function ThemeTrieElement(mainRule) {\n    this._mainRule = mainRule;\n    this._children = new Map();\n  }\n\n  ThemeTrieElement.prototype.match = function (token) {\n    if (token === '') {\n      return this._mainRule;\n    }\n\n    var dotIndex = token.indexOf('.');\n    var head;\n    var tail;\n\n    if (dotIndex === -1) {\n      head = token;\n      tail = '';\n    } else {\n      head = token.substring(0, dotIndex);\n      tail = token.substring(dotIndex + 1);\n    }\n\n    var child = this._children.get(head);\n\n    if (typeof child !== 'undefined') {\n      return child.match(tail);\n    }\n\n    return this._mainRule;\n  };\n\n  ThemeTrieElement.prototype.insert = function (token, fontStyle, foreground, background) {\n    if (token === '') {\n      // Merge into the main rule\n      this._mainRule.acceptOverwrite(fontStyle, foreground, background);\n\n      return;\n    }\n\n    var dotIndex = token.indexOf('.');\n    var head;\n    var tail;\n\n    if (dotIndex === -1) {\n      head = token;\n      tail = '';\n    } else {\n      head = token.substring(0, dotIndex);\n      tail = token.substring(dotIndex + 1);\n    }\n\n    var child = this._children.get(head);\n\n    if (typeof child === 'undefined') {\n      child = new ThemeTrieElement(this._mainRule.clone());\n\n      this._children.set(head, child);\n    }\n\n    child.insert(tail, fontStyle, foreground, background);\n  };\n\n  return ThemeTrieElement;\n}();\n\nexport { ThemeTrieElement };\nexport function generateTokensCSSForColorMap(colorMap) {\n  var rules = [];\n\n  for (var i = 1, len = colorMap.length; i < len; i++) {\n    var color = colorMap[i];\n    rules[i] = \".mtk\" + i + \" { color: \" + color + \"; }\";\n  }\n\n  rules.push('.mtki { font-style: italic; }');\n  rules.push('.mtkb { font-weight: bold; }');\n  rules.push('.mtku { text-decoration: underline; text-underline-position: under; }');\n  return rules.join('\\n');\n}","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/common/modes/supports/tokenization.js"],"names":["Color","ParsedTokenThemeRule","token","index","fontStyle","foreground","background","parseTokenTheme","source","Array","isArray","result","resultLen","i","len","length","entry","segments","split","j","lenJ","segment","resolveParsedTokenThemeRules","parsedThemeRules","customTokenColors","sort","a","b","r","strcmp","defaultFontStyle","defaultForeground","defaultBackground","incomingDefaults","shift","colorMap","ColorMap","_i","customTokenColors_1","color","getId","foregroundColorId","backgroundColorId","defaults","ThemeTrieElementRule","root","ThemeTrieElement","rule","insert","TokenTheme","colorRegExp","_lastColorId","_id2color","_color2id","Map","prototype","match","Error","toUpperCase","value","get","set","fromHex","getColorMap","slice","_colorMap","_root","_cache","createFromRawTokenTheme","createFromParsedTokenTheme","_match","languageId","standardToken","toStandardTokenType","metadata","STANDARD_TOKEN_TYPE_REGEXP","tokenType","m","_fontStyle","_foreground","_background","clone","acceptOverwrite","mainRule","_mainRule","_children","dotIndex","indexOf","head","tail","substring","child","generateTokensCSSForColorMap","rules","push","join"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Color } from '../../../../base/common/color.js';\r\nvar ParsedTokenThemeRule = /** @class */ (function () {\r\n    function ParsedTokenThemeRule(token, index, fontStyle, foreground, background) {\r\n        this.token = token;\r\n        this.index = index;\r\n        this.fontStyle = fontStyle;\r\n        this.foreground = foreground;\r\n        this.background = background;\r\n    }\r\n    return ParsedTokenThemeRule;\r\n}());\r\nexport { ParsedTokenThemeRule };\r\n/**\r\n * Parse a raw theme into rules.\r\n */\r\nexport function parseTokenTheme(source) {\r\n    if (!source || !Array.isArray(source)) {\r\n        return [];\r\n    }\r\n    var result = [], resultLen = 0;\r\n    for (var i = 0, len = source.length; i < len; i++) {\r\n        var entry = source[i];\r\n        var fontStyle = -1 /* NotSet */;\r\n        if (typeof entry.fontStyle === 'string') {\r\n            fontStyle = 0 /* None */;\r\n            var segments = entry.fontStyle.split(' ');\r\n            for (var j = 0, lenJ = segments.length; j < lenJ; j++) {\r\n                var segment = segments[j];\r\n                switch (segment) {\r\n                    case 'italic':\r\n                        fontStyle = fontStyle | 1 /* Italic */;\r\n                        break;\r\n                    case 'bold':\r\n                        fontStyle = fontStyle | 2 /* Bold */;\r\n                        break;\r\n                    case 'underline':\r\n                        fontStyle = fontStyle | 4 /* Underline */;\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        var foreground = null;\r\n        if (typeof entry.foreground === 'string') {\r\n            foreground = entry.foreground;\r\n        }\r\n        var background = null;\r\n        if (typeof entry.background === 'string') {\r\n            background = entry.background;\r\n        }\r\n        result[resultLen++] = new ParsedTokenThemeRule(entry.token || '', i, fontStyle, foreground, background);\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Resolve rules (i.e. inheritance).\r\n */\r\nfunction resolveParsedTokenThemeRules(parsedThemeRules, customTokenColors) {\r\n    // Sort rules lexicographically, and then by index if necessary\r\n    parsedThemeRules.sort(function (a, b) {\r\n        var r = strcmp(a.token, b.token);\r\n        if (r !== 0) {\r\n            return r;\r\n        }\r\n        return a.index - b.index;\r\n    });\r\n    // Determine defaults\r\n    var defaultFontStyle = 0 /* None */;\r\n    var defaultForeground = '000000';\r\n    var defaultBackground = 'ffffff';\r\n    while (parsedThemeRules.length >= 1 && parsedThemeRules[0].token === '') {\r\n        var incomingDefaults = parsedThemeRules.shift();\r\n        if (incomingDefaults.fontStyle !== -1 /* NotSet */) {\r\n            defaultFontStyle = incomingDefaults.fontStyle;\r\n        }\r\n        if (incomingDefaults.foreground !== null) {\r\n            defaultForeground = incomingDefaults.foreground;\r\n        }\r\n        if (incomingDefaults.background !== null) {\r\n            defaultBackground = incomingDefaults.background;\r\n        }\r\n    }\r\n    var colorMap = new ColorMap();\r\n    // start with token colors from custom token themes\r\n    for (var _i = 0, customTokenColors_1 = customTokenColors; _i < customTokenColors_1.length; _i++) {\r\n        var color = customTokenColors_1[_i];\r\n        colorMap.getId(color);\r\n    }\r\n    var foregroundColorId = colorMap.getId(defaultForeground);\r\n    var backgroundColorId = colorMap.getId(defaultBackground);\r\n    var defaults = new ThemeTrieElementRule(defaultFontStyle, foregroundColorId, backgroundColorId);\r\n    var root = new ThemeTrieElement(defaults);\r\n    for (var i = 0, len = parsedThemeRules.length; i < len; i++) {\r\n        var rule = parsedThemeRules[i];\r\n        root.insert(rule.token, rule.fontStyle, colorMap.getId(rule.foreground), colorMap.getId(rule.background));\r\n    }\r\n    return new TokenTheme(colorMap, root);\r\n}\r\nvar colorRegExp = /^#?([0-9A-Fa-f]{6})([0-9A-Fa-f]{2})?$/;\r\nvar ColorMap = /** @class */ (function () {\r\n    function ColorMap() {\r\n        this._lastColorId = 0;\r\n        this._id2color = [];\r\n        this._color2id = new Map();\r\n    }\r\n    ColorMap.prototype.getId = function (color) {\r\n        if (color === null) {\r\n            return 0;\r\n        }\r\n        var match = color.match(colorRegExp);\r\n        if (!match) {\r\n            throw new Error('Illegal value for token color: ' + color);\r\n        }\r\n        color = match[1].toUpperCase();\r\n        var value = this._color2id.get(color);\r\n        if (value) {\r\n            return value;\r\n        }\r\n        value = ++this._lastColorId;\r\n        this._color2id.set(color, value);\r\n        this._id2color[value] = Color.fromHex('#' + color);\r\n        return value;\r\n    };\r\n    ColorMap.prototype.getColorMap = function () {\r\n        return this._id2color.slice(0);\r\n    };\r\n    return ColorMap;\r\n}());\r\nexport { ColorMap };\r\nvar TokenTheme = /** @class */ (function () {\r\n    function TokenTheme(colorMap, root) {\r\n        this._colorMap = colorMap;\r\n        this._root = root;\r\n        this._cache = new Map();\r\n    }\r\n    TokenTheme.createFromRawTokenTheme = function (source, customTokenColors) {\r\n        return this.createFromParsedTokenTheme(parseTokenTheme(source), customTokenColors);\r\n    };\r\n    TokenTheme.createFromParsedTokenTheme = function (source, customTokenColors) {\r\n        return resolveParsedTokenThemeRules(source, customTokenColors);\r\n    };\r\n    TokenTheme.prototype.getColorMap = function () {\r\n        return this._colorMap.getColorMap();\r\n    };\r\n    TokenTheme.prototype._match = function (token) {\r\n        return this._root.match(token);\r\n    };\r\n    TokenTheme.prototype.match = function (languageId, token) {\r\n        // The cache contains the metadata without the language bits set.\r\n        var result = this._cache.get(token);\r\n        if (typeof result === 'undefined') {\r\n            var rule = this._match(token);\r\n            var standardToken = toStandardTokenType(token);\r\n            result = (rule.metadata\r\n                | (standardToken << 8 /* TOKEN_TYPE_OFFSET */)) >>> 0;\r\n            this._cache.set(token, result);\r\n        }\r\n        return (result\r\n            | (languageId << 0 /* LANGUAGEID_OFFSET */)) >>> 0;\r\n    };\r\n    return TokenTheme;\r\n}());\r\nexport { TokenTheme };\r\nvar STANDARD_TOKEN_TYPE_REGEXP = /\\b(comment|string|regex|regexp)\\b/;\r\nexport function toStandardTokenType(tokenType) {\r\n    var m = tokenType.match(STANDARD_TOKEN_TYPE_REGEXP);\r\n    if (!m) {\r\n        return 0 /* Other */;\r\n    }\r\n    switch (m[1]) {\r\n        case 'comment':\r\n            return 1 /* Comment */;\r\n        case 'string':\r\n            return 2 /* String */;\r\n        case 'regex':\r\n            return 4 /* RegEx */;\r\n        case 'regexp':\r\n            return 4 /* RegEx */;\r\n    }\r\n    throw new Error('Unexpected match for standard token type!');\r\n}\r\nexport function strcmp(a, b) {\r\n    if (a < b) {\r\n        return -1;\r\n    }\r\n    if (a > b) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\nvar ThemeTrieElementRule = /** @class */ (function () {\r\n    function ThemeTrieElementRule(fontStyle, foreground, background) {\r\n        this._fontStyle = fontStyle;\r\n        this._foreground = foreground;\r\n        this._background = background;\r\n        this.metadata = ((this._fontStyle << 11 /* FONT_STYLE_OFFSET */)\r\n            | (this._foreground << 14 /* FOREGROUND_OFFSET */)\r\n            | (this._background << 23 /* BACKGROUND_OFFSET */)) >>> 0;\r\n    }\r\n    ThemeTrieElementRule.prototype.clone = function () {\r\n        return new ThemeTrieElementRule(this._fontStyle, this._foreground, this._background);\r\n    };\r\n    ThemeTrieElementRule.prototype.acceptOverwrite = function (fontStyle, foreground, background) {\r\n        if (fontStyle !== -1 /* NotSet */) {\r\n            this._fontStyle = fontStyle;\r\n        }\r\n        if (foreground !== 0 /* None */) {\r\n            this._foreground = foreground;\r\n        }\r\n        if (background !== 0 /* None */) {\r\n            this._background = background;\r\n        }\r\n        this.metadata = ((this._fontStyle << 11 /* FONT_STYLE_OFFSET */)\r\n            | (this._foreground << 14 /* FOREGROUND_OFFSET */)\r\n            | (this._background << 23 /* BACKGROUND_OFFSET */)) >>> 0;\r\n    };\r\n    return ThemeTrieElementRule;\r\n}());\r\nexport { ThemeTrieElementRule };\r\nvar ThemeTrieElement = /** @class */ (function () {\r\n    function ThemeTrieElement(mainRule) {\r\n        this._mainRule = mainRule;\r\n        this._children = new Map();\r\n    }\r\n    ThemeTrieElement.prototype.match = function (token) {\r\n        if (token === '') {\r\n            return this._mainRule;\r\n        }\r\n        var dotIndex = token.indexOf('.');\r\n        var head;\r\n        var tail;\r\n        if (dotIndex === -1) {\r\n            head = token;\r\n            tail = '';\r\n        }\r\n        else {\r\n            head = token.substring(0, dotIndex);\r\n            tail = token.substring(dotIndex + 1);\r\n        }\r\n        var child = this._children.get(head);\r\n        if (typeof child !== 'undefined') {\r\n            return child.match(tail);\r\n        }\r\n        return this._mainRule;\r\n    };\r\n    ThemeTrieElement.prototype.insert = function (token, fontStyle, foreground, background) {\r\n        if (token === '') {\r\n            // Merge into the main rule\r\n            this._mainRule.acceptOverwrite(fontStyle, foreground, background);\r\n            return;\r\n        }\r\n        var dotIndex = token.indexOf('.');\r\n        var head;\r\n        var tail;\r\n        if (dotIndex === -1) {\r\n            head = token;\r\n            tail = '';\r\n        }\r\n        else {\r\n            head = token.substring(0, dotIndex);\r\n            tail = token.substring(dotIndex + 1);\r\n        }\r\n        var child = this._children.get(head);\r\n        if (typeof child === 'undefined') {\r\n            child = new ThemeTrieElement(this._mainRule.clone());\r\n            this._children.set(head, child);\r\n        }\r\n        child.insert(tail, fontStyle, foreground, background);\r\n    };\r\n    return ThemeTrieElement;\r\n}());\r\nexport { ThemeTrieElement };\r\nexport function generateTokensCSSForColorMap(colorMap) {\r\n    var rules = [];\r\n    for (var i = 1, len = colorMap.length; i < len; i++) {\r\n        var color = colorMap[i];\r\n        rules[i] = \".mtk\" + i + \" { color: \" + color + \"; }\";\r\n    }\r\n    rules.push('.mtki { font-style: italic; }');\r\n    rules.push('.mtkb { font-weight: bold; }');\r\n    rules.push('.mtku { text-decoration: underline; text-underline-position: under; }');\r\n    return rules.join('\\n');\r\n}\r\n"]},"metadata":{},"sourceType":"module"}