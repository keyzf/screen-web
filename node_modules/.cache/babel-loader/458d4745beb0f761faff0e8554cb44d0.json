{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport './quickopen.css';\nimport * as nls from '../../../../nls.js';\nimport * as platform from '../../../common/platform.js';\nimport * as types from '../../../common/types.js';\nimport { Filter, Renderer, DataSource, AccessibilityProvider } from './quickOpenViewer.js';\nimport { InputBox } from '../../../browser/ui/inputbox/inputBox.js';\nimport { Tree } from '../../tree/browser/treeImpl.js';\nimport { ProgressBar } from '../../../browser/ui/progressbar/progressbar.js';\nimport { StandardKeyboardEvent } from '../../../browser/keyboardEvent.js';\nimport { DefaultController } from '../../tree/browser/treeDefaults.js';\nimport * as DOM from '../../../browser/dom.js';\nimport { Disposable } from '../../../common/lifecycle.js';\nimport { Color } from '../../../common/color.js';\nimport { mixin } from '../../../common/objects.js';\nimport { StandardMouseEvent } from '../../../browser/mouseEvent.js';\n\nvar QuickOpenController =\n/** @class */\nfunction (_super) {\n  __extends(QuickOpenController, _super);\n\n  function QuickOpenController() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  QuickOpenController.prototype.onContextMenu = function (tree, element, event) {\n    if (platform.isMacintosh) {\n      return this.onLeftClick(tree, element, event); // https://github.com/Microsoft/vscode/issues/1011\n    }\n\n    return _super.prototype.onContextMenu.call(this, tree, element, event);\n  };\n\n  return QuickOpenController;\n}(DefaultController);\n\nexport { QuickOpenController };\nvar defaultStyles = {\n  background: Color.fromHex('#1E1E1E'),\n  foreground: Color.fromHex('#CCCCCC'),\n  pickerGroupForeground: Color.fromHex('#0097FB'),\n  pickerGroupBorder: Color.fromHex('#3F3F46'),\n  widgetShadow: Color.fromHex('#000000'),\n  progressBarBackground: Color.fromHex('#0E70C0')\n};\nvar DEFAULT_INPUT_ARIA_LABEL = nls.localize('quickOpenAriaLabel', \"Quick picker. Type to narrow down results.\");\n\nvar QuickOpenWidget =\n/** @class */\nfunction (_super) {\n  __extends(QuickOpenWidget, _super);\n\n  function QuickOpenWidget(container, callbacks, options) {\n    var _this = _super.call(this) || this;\n\n    _this.isDisposed = false;\n    _this.container = container;\n    _this.callbacks = callbacks;\n    _this.options = options;\n    _this.styles = options || Object.create(null);\n    mixin(_this.styles, defaultStyles, false);\n    _this.model = null;\n    return _this;\n  }\n\n  QuickOpenWidget.prototype.getModel = function () {\n    return this.model;\n  };\n\n  QuickOpenWidget.prototype.create = function () {\n    var _this = this; // Container\n\n\n    this.element = document.createElement('div');\n    DOM.addClass(this.element, 'monaco-quick-open-widget');\n    this.container.appendChild(this.element);\n\n    this._register(DOM.addDisposableListener(this.element, DOM.EventType.CONTEXT_MENU, function (e) {\n      return DOM.EventHelper.stop(e, true);\n    })); // Do this to fix an issue on Mac where the menu goes into the way\n\n\n    this._register(DOM.addDisposableListener(this.element, DOM.EventType.FOCUS, function (e) {\n      return _this.gainingFocus();\n    }, true));\n\n    this._register(DOM.addDisposableListener(this.element, DOM.EventType.BLUR, function (e) {\n      return _this.loosingFocus(e);\n    }, true));\n\n    this._register(DOM.addDisposableListener(this.element, DOM.EventType.KEY_DOWN, function (e) {\n      var keyboardEvent = new StandardKeyboardEvent(e);\n\n      if (keyboardEvent.keyCode === 9\n      /* Escape */\n      ) {\n          DOM.EventHelper.stop(e, true);\n\n          _this.hide(2\n          /* CANCELED */\n          );\n        } else if (keyboardEvent.keyCode === 2\n      /* Tab */\n      && !keyboardEvent.altKey && !keyboardEvent.ctrlKey && !keyboardEvent.metaKey) {\n        var stops = e.currentTarget.querySelectorAll('input, .monaco-tree, .monaco-tree-row.focused .action-label.icon');\n\n        if (keyboardEvent.shiftKey && keyboardEvent.target === stops[0]) {\n          DOM.EventHelper.stop(e, true);\n          stops[stops.length - 1].focus();\n        } else if (!keyboardEvent.shiftKey && keyboardEvent.target === stops[stops.length - 1]) {\n          DOM.EventHelper.stop(e, true);\n          stops[0].focus();\n        }\n      }\n    })); // Progress Bar\n\n\n    this.progressBar = this._register(new ProgressBar(this.element, {\n      progressBarBackground: this.styles.progressBarBackground\n    }));\n    this.progressBar.hide(); // Input Field\n\n    this.inputContainer = document.createElement('div');\n    DOM.addClass(this.inputContainer, 'quick-open-input');\n    this.element.appendChild(this.inputContainer);\n    this.inputBox = this._register(new InputBox(this.inputContainer, undefined, {\n      placeholder: this.options.inputPlaceHolder || '',\n      ariaLabel: DEFAULT_INPUT_ARIA_LABEL,\n      inputBackground: this.styles.inputBackground,\n      inputForeground: this.styles.inputForeground,\n      inputBorder: this.styles.inputBorder,\n      inputValidationInfoBackground: this.styles.inputValidationInfoBackground,\n      inputValidationInfoForeground: this.styles.inputValidationInfoForeground,\n      inputValidationInfoBorder: this.styles.inputValidationInfoBorder,\n      inputValidationWarningBackground: this.styles.inputValidationWarningBackground,\n      inputValidationWarningForeground: this.styles.inputValidationWarningForeground,\n      inputValidationWarningBorder: this.styles.inputValidationWarningBorder,\n      inputValidationErrorBackground: this.styles.inputValidationErrorBackground,\n      inputValidationErrorForeground: this.styles.inputValidationErrorForeground,\n      inputValidationErrorBorder: this.styles.inputValidationErrorBorder\n    }));\n    this.inputElement = this.inputBox.inputElement;\n    this.inputElement.setAttribute('role', 'combobox');\n    this.inputElement.setAttribute('aria-haspopup', 'false');\n    this.inputElement.setAttribute('aria-autocomplete', 'list');\n\n    this._register(DOM.addDisposableListener(this.inputBox.inputElement, DOM.EventType.INPUT, function (e) {\n      return _this.onType();\n    }));\n\n    this._register(DOM.addDisposableListener(this.inputBox.inputElement, DOM.EventType.KEY_DOWN, function (e) {\n      var keyboardEvent = new StandardKeyboardEvent(e);\n\n      var shouldOpenInBackground = _this.shouldOpenInBackground(keyboardEvent); // Do not handle Tab: It is used to navigate between elements without mouse\n\n\n      if (keyboardEvent.keyCode === 2\n      /* Tab */\n      ) {\n          return;\n        } // Pass tree navigation keys to the tree but leave focus in input field\n      else if (keyboardEvent.keyCode === 18\n        /* DownArrow */\n        || keyboardEvent.keyCode === 16\n        /* UpArrow */\n        || keyboardEvent.keyCode === 12\n        /* PageDown */\n        || keyboardEvent.keyCode === 11\n        /* PageUp */\n        ) {\n            DOM.EventHelper.stop(e, true);\n\n            _this.navigateInTree(keyboardEvent.keyCode, keyboardEvent.shiftKey); // Position cursor at the end of input to allow right arrow (open in background)\n            // to function immediately unless the user has made a selection\n\n\n            if (_this.inputBox.inputElement.selectionStart === _this.inputBox.inputElement.selectionEnd) {\n              _this.inputBox.inputElement.selectionStart = _this.inputBox.value.length;\n            }\n          } // Select element on Enter or on Arrow-Right if we are at the end of the input\n        else if (keyboardEvent.keyCode === 3\n          /* Enter */\n          || shouldOpenInBackground) {\n            DOM.EventHelper.stop(e, true);\n\n            var focus_1 = _this.tree.getFocus();\n\n            if (focus_1) {\n              _this.elementSelected(focus_1, e, shouldOpenInBackground ? 2\n              /* OPEN_IN_BACKGROUND */\n              : 1\n              /* OPEN */\n              );\n            }\n          }\n    })); // Result count for screen readers\n\n\n    this.resultCount = document.createElement('div');\n    DOM.addClass(this.resultCount, 'quick-open-result-count');\n    this.resultCount.setAttribute('aria-live', 'polite');\n    this.resultCount.setAttribute('aria-atomic', 'true');\n    this.element.appendChild(this.resultCount); // Tree\n\n    this.treeContainer = document.createElement('div');\n    DOM.addClass(this.treeContainer, 'quick-open-tree');\n    this.element.appendChild(this.treeContainer);\n\n    var createTree = this.options.treeCreator || function (container, config, opts) {\n      return new Tree(container, config, opts);\n    };\n\n    this.tree = this._register(createTree(this.treeContainer, {\n      dataSource: new DataSource(this),\n      controller: new QuickOpenController({\n        clickBehavior: 1\n        /* ON_MOUSE_UP */\n        ,\n        keyboardSupport: this.options.keyboardSupport\n      }),\n      renderer: this.renderer = new Renderer(this, this.styles),\n      filter: new Filter(this),\n      accessibilityProvider: new AccessibilityProvider(this)\n    }, {\n      twistiePixels: 11,\n      indentPixels: 0,\n      alwaysFocused: true,\n      verticalScrollMode: 3\n      /* Visible */\n      ,\n      horizontalScrollMode: 2\n      /* Hidden */\n      ,\n      ariaLabel: nls.localize('treeAriaLabel', \"Quick Picker\"),\n      keyboardSupport: this.options.keyboardSupport,\n      preventRootFocus: false\n    }));\n    this.treeElement = this.tree.getHTMLElement(); // Handle Focus and Selection event\n\n    this._register(this.tree.onDidChangeFocus(function (event) {\n      _this.elementFocused(event.focus, event);\n    }));\n\n    this._register(this.tree.onDidChangeSelection(function (event) {\n      if (event.selection && event.selection.length > 0) {\n        var mouseEvent = event.payload && event.payload.originalEvent instanceof StandardMouseEvent ? event.payload.originalEvent : undefined;\n        var shouldOpenInBackground = mouseEvent ? _this.shouldOpenInBackground(mouseEvent) : false;\n\n        _this.elementSelected(event.selection[0], event, shouldOpenInBackground ? 2\n        /* OPEN_IN_BACKGROUND */\n        : 1\n        /* OPEN */\n        );\n      }\n    }));\n\n    this._register(DOM.addDisposableListener(this.treeContainer, DOM.EventType.KEY_DOWN, function (e) {\n      var keyboardEvent = new StandardKeyboardEvent(e); // Only handle when in quick navigation mode\n\n      if (!_this.quickNavigateConfiguration) {\n        return;\n      } // Support keyboard navigation in quick navigation mode\n\n\n      if (keyboardEvent.keyCode === 18\n      /* DownArrow */\n      || keyboardEvent.keyCode === 16\n      /* UpArrow */\n      || keyboardEvent.keyCode === 12\n      /* PageDown */\n      || keyboardEvent.keyCode === 11\n      /* PageUp */\n      ) {\n          DOM.EventHelper.stop(e, true);\n\n          _this.navigateInTree(keyboardEvent.keyCode);\n        } // Support to open item with Enter still even in quick nav mode\n      else if (keyboardEvent.keyCode === 3\n        /* Enter */\n        ) {\n            DOM.EventHelper.stop(e, true);\n\n            var focus_2 = _this.tree.getFocus();\n\n            if (focus_2) {\n              _this.elementSelected(focus_2, e);\n            }\n          }\n    }));\n\n    this._register(DOM.addDisposableListener(this.treeContainer, DOM.EventType.KEY_UP, function (e) {\n      var keyboardEvent = new StandardKeyboardEvent(e);\n      var keyCode = keyboardEvent.keyCode; // Only handle when in quick navigation mode\n\n      if (!_this.quickNavigateConfiguration) {\n        return;\n      } // Select element when keys are pressed that signal it\n\n\n      var quickNavKeys = _this.quickNavigateConfiguration.keybindings;\n      var wasTriggerKeyPressed = quickNavKeys.some(function (k) {\n        var _a = k.getParts(),\n            firstPart = _a[0],\n            chordPart = _a[1];\n\n        if (chordPart) {\n          return false;\n        }\n\n        if (firstPart.shiftKey && keyCode === 4\n        /* Shift */\n        ) {\n            if (keyboardEvent.ctrlKey || keyboardEvent.altKey || keyboardEvent.metaKey) {\n              return false; // this is an optimistic check for the shift key being used to navigate back in quick open\n            }\n\n            return true;\n          }\n\n        if (firstPart.altKey && keyCode === 6\n        /* Alt */\n        ) {\n            return true;\n          }\n\n        if (firstPart.ctrlKey && keyCode === 5\n        /* Ctrl */\n        ) {\n            return true;\n          }\n\n        if (firstPart.metaKey && keyCode === 57\n        /* Meta */\n        ) {\n            return true;\n          }\n\n        return false;\n      });\n\n      if (wasTriggerKeyPressed) {\n        var focus_3 = _this.tree.getFocus();\n\n        if (focus_3) {\n          _this.elementSelected(focus_3, e);\n        }\n      }\n    })); // Support layout\n\n\n    if (this.layoutDimensions) {\n      this.layout(this.layoutDimensions);\n    }\n\n    this.applyStyles(); // Allows focus to switch to next/previous entry after tab into an actionbar item\n\n    this._register(DOM.addDisposableListener(this.treeContainer, DOM.EventType.KEY_DOWN, function (e) {\n      var keyboardEvent = new StandardKeyboardEvent(e); // Only handle when not in quick navigation mode\n\n      if (_this.quickNavigateConfiguration) {\n        return;\n      }\n\n      if (keyboardEvent.keyCode === 18\n      /* DownArrow */\n      || keyboardEvent.keyCode === 16\n      /* UpArrow */\n      || keyboardEvent.keyCode === 12\n      /* PageDown */\n      || keyboardEvent.keyCode === 11\n      /* PageUp */\n      ) {\n          DOM.EventHelper.stop(e, true);\n\n          _this.navigateInTree(keyboardEvent.keyCode, keyboardEvent.shiftKey);\n\n          _this.treeElement.focus();\n        }\n    }));\n\n    return this.element;\n  };\n\n  QuickOpenWidget.prototype.style = function (styles) {\n    this.styles = styles;\n    this.applyStyles();\n  };\n\n  QuickOpenWidget.prototype.applyStyles = function () {\n    if (this.element) {\n      var foreground = this.styles.foreground ? this.styles.foreground.toString() : '';\n      var background = this.styles.background ? this.styles.background.toString() : '';\n      var borderColor = this.styles.borderColor ? this.styles.borderColor.toString() : '';\n      var widgetShadow = this.styles.widgetShadow ? this.styles.widgetShadow.toString() : '';\n      this.element.style.color = foreground;\n      this.element.style.backgroundColor = background;\n      this.element.style.borderColor = borderColor;\n      this.element.style.borderWidth = borderColor ? '1px' : '';\n      this.element.style.borderStyle = borderColor ? 'solid' : '';\n      this.element.style.boxShadow = widgetShadow ? \"0 5px 8px \" + widgetShadow : '';\n    }\n\n    if (this.progressBar) {\n      this.progressBar.style({\n        progressBarBackground: this.styles.progressBarBackground\n      });\n    }\n\n    if (this.inputBox) {\n      this.inputBox.style({\n        inputBackground: this.styles.inputBackground,\n        inputForeground: this.styles.inputForeground,\n        inputBorder: this.styles.inputBorder,\n        inputValidationInfoBackground: this.styles.inputValidationInfoBackground,\n        inputValidationInfoForeground: this.styles.inputValidationInfoForeground,\n        inputValidationInfoBorder: this.styles.inputValidationInfoBorder,\n        inputValidationWarningBackground: this.styles.inputValidationWarningBackground,\n        inputValidationWarningForeground: this.styles.inputValidationWarningForeground,\n        inputValidationWarningBorder: this.styles.inputValidationWarningBorder,\n        inputValidationErrorBackground: this.styles.inputValidationErrorBackground,\n        inputValidationErrorForeground: this.styles.inputValidationErrorForeground,\n        inputValidationErrorBorder: this.styles.inputValidationErrorBorder\n      });\n    }\n\n    if (this.tree && !this.options.treeCreator) {\n      this.tree.style(this.styles);\n    }\n\n    if (this.renderer) {\n      this.renderer.updateStyles(this.styles);\n    }\n  };\n\n  QuickOpenWidget.prototype.shouldOpenInBackground = function (e) {\n    // Keyboard\n    if (e instanceof StandardKeyboardEvent) {\n      if (e.keyCode !== 17\n      /* RightArrow */\n      ) {\n          return false; // only for right arrow\n        }\n\n      if (e.metaKey || e.ctrlKey || e.shiftKey || e.altKey) {\n        return false; // no modifiers allowed\n      } // validate the cursor is at the end of the input and there is no selection,\n      // and if not prevent opening in the background such as the selection can be changed\n\n\n      var element = this.inputBox.inputElement;\n      return element.selectionEnd === this.inputBox.value.length && element.selectionStart === element.selectionEnd;\n    } // Mouse\n\n\n    return e.middleButton;\n  };\n\n  QuickOpenWidget.prototype.onType = function () {\n    var value = this.inputBox.value; // Adjust help text as needed if present\n\n    if (this.helpText) {\n      if (value) {\n        DOM.hide(this.helpText);\n      } else {\n        DOM.show(this.helpText);\n      }\n    } // Send to callbacks\n\n\n    this.callbacks.onType(value);\n  };\n\n  QuickOpenWidget.prototype.navigateInTree = function (keyCode, isShift) {\n    var model = this.tree.getInput();\n    var entries = model ? model.entries : [];\n    var oldFocus = this.tree.getFocus(); // Normal Navigation\n\n    switch (keyCode) {\n      case 18\n      /* DownArrow */\n      :\n        this.tree.focusNext();\n        break;\n\n      case 16\n      /* UpArrow */\n      :\n        this.tree.focusPrevious();\n        break;\n\n      case 12\n      /* PageDown */\n      :\n        this.tree.focusNextPage();\n        break;\n\n      case 11\n      /* PageUp */\n      :\n        this.tree.focusPreviousPage();\n        break;\n\n      case 2\n      /* Tab */\n      :\n        if (isShift) {\n          this.tree.focusPrevious();\n        } else {\n          this.tree.focusNext();\n        }\n\n        break;\n    }\n\n    var newFocus = this.tree.getFocus(); // Support cycle-through navigation if focus did not change\n\n    if (entries.length > 1 && oldFocus === newFocus) {\n      // Up from no entry or first entry goes down to last\n      if (keyCode === 16\n      /* UpArrow */\n      || keyCode === 2\n      /* Tab */\n      && isShift) {\n        this.tree.focusLast();\n      } // Down from last entry goes to up to first\n      else if (keyCode === 18\n        /* DownArrow */\n        || keyCode === 2\n        /* Tab */\n        && !isShift) {\n          this.tree.focusFirst();\n        }\n    } // Reveal\n\n\n    newFocus = this.tree.getFocus();\n\n    if (newFocus) {\n      this.tree.reveal(newFocus);\n    }\n  };\n\n  QuickOpenWidget.prototype.elementFocused = function (value, event) {\n    if (!value || !this.isVisible()) {\n      return;\n    } // ARIA\n\n\n    var arivaActiveDescendant = this.treeElement.getAttribute('aria-activedescendant');\n\n    if (arivaActiveDescendant) {\n      this.inputElement.setAttribute('aria-activedescendant', arivaActiveDescendant);\n    } else {\n      this.inputElement.removeAttribute('aria-activedescendant');\n    }\n\n    var context = {\n      event: event,\n      keymods: this.extractKeyMods(event),\n      quickNavigateConfiguration: this.quickNavigateConfiguration\n    };\n    this.model.runner.run(value, 0\n    /* PREVIEW */\n    , context);\n  };\n\n  QuickOpenWidget.prototype.elementSelected = function (value, event, preferredMode) {\n    var hide = true; // Trigger open of element on selection\n\n    if (this.isVisible()) {\n      var mode = preferredMode || 1\n      /* OPEN */\n      ;\n      var context = {\n        event: event,\n        keymods: this.extractKeyMods(event),\n        quickNavigateConfiguration: this.quickNavigateConfiguration\n      };\n      hide = this.model.runner.run(value, mode, context);\n    } // Hide if command was run successfully\n\n\n    if (hide) {\n      this.hide(0\n      /* ELEMENT_SELECTED */\n      );\n    }\n  };\n\n  QuickOpenWidget.prototype.extractKeyMods = function (event) {\n    return {\n      ctrlCmd: event && (event.ctrlKey || event.metaKey || event.payload && event.payload.originalEvent && (event.payload.originalEvent.ctrlKey || event.payload.originalEvent.metaKey)),\n      alt: event && (event.altKey || event.payload && event.payload.originalEvent && event.payload.originalEvent.altKey)\n    };\n  };\n\n  QuickOpenWidget.prototype.show = function (param, options) {\n    this.visible = true;\n    this.isLoosingFocus = false;\n    this.quickNavigateConfiguration = options ? options.quickNavigateConfiguration : undefined; // Adjust UI for quick navigate mode\n\n    if (this.quickNavigateConfiguration) {\n      DOM.hide(this.inputContainer);\n      DOM.show(this.element);\n      this.tree.domFocus();\n    } // Otherwise use normal UI\n    else {\n        DOM.show(this.inputContainer);\n        DOM.show(this.element);\n        this.inputBox.focus();\n      } // Adjust Help text for IE\n\n\n    if (this.helpText) {\n      if (this.quickNavigateConfiguration || types.isString(param)) {\n        DOM.hide(this.helpText);\n      } else {\n        DOM.show(this.helpText);\n      }\n    } // Show based on param\n\n\n    if (types.isString(param)) {\n      this.doShowWithPrefix(param);\n    } else {\n      if (options && options.value) {\n        this.restoreLastInput(options.value);\n      }\n\n      this.doShowWithInput(param, options && options.autoFocus ? options.autoFocus : {});\n    } // Respect selectAll option\n\n\n    if (options && options.inputSelection && !this.quickNavigateConfiguration) {\n      this.inputBox.select(options.inputSelection);\n    }\n\n    if (this.callbacks.onShow) {\n      this.callbacks.onShow();\n    }\n  };\n\n  QuickOpenWidget.prototype.restoreLastInput = function (lastInput) {\n    this.inputBox.value = lastInput;\n    this.inputBox.select();\n    this.callbacks.onType(lastInput);\n  };\n\n  QuickOpenWidget.prototype.doShowWithPrefix = function (prefix) {\n    this.inputBox.value = prefix;\n    this.callbacks.onType(prefix);\n  };\n\n  QuickOpenWidget.prototype.doShowWithInput = function (input, autoFocus) {\n    this.setInput(input, autoFocus);\n  };\n\n  QuickOpenWidget.prototype.setInputAndLayout = function (input, autoFocus) {\n    var _this = this;\n\n    this.treeContainer.style.height = this.getHeight(input) + \"px\";\n    this.tree.setInput(null).then(function () {\n      _this.model = input; // ARIA\n\n      _this.inputElement.setAttribute('aria-haspopup', String(input && input.entries && input.entries.length > 0));\n\n      return _this.tree.setInput(input);\n    }).then(function () {\n      // Indicate entries to tree\n      _this.tree.layout();\n\n      var entries = input ? input.entries.filter(function (e) {\n        return _this.isElementVisible(input, e);\n      }) : [];\n\n      _this.updateResultCount(entries.length); // Handle auto focus\n\n\n      if (entries.length) {\n        _this.autoFocus(input, entries, autoFocus);\n      }\n    });\n  };\n\n  QuickOpenWidget.prototype.isElementVisible = function (input, e) {\n    if (!input.filter) {\n      return true;\n    }\n\n    return input.filter.isVisible(e);\n  };\n\n  QuickOpenWidget.prototype.autoFocus = function (input, entries, autoFocus) {\n    if (autoFocus === void 0) {\n      autoFocus = {};\n    } // First check for auto focus of prefix matches\n\n\n    if (autoFocus.autoFocusPrefixMatch) {\n      var caseSensitiveMatch = void 0;\n      var caseInsensitiveMatch = void 0;\n      var prefix = autoFocus.autoFocusPrefixMatch;\n      var lowerCasePrefix = prefix.toLowerCase();\n\n      for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {\n        var entry = entries_1[_i];\n        var label = input.dataSource.getLabel(entry) || '';\n\n        if (!caseSensitiveMatch && label.indexOf(prefix) === 0) {\n          caseSensitiveMatch = entry;\n        } else if (!caseInsensitiveMatch && label.toLowerCase().indexOf(lowerCasePrefix) === 0) {\n          caseInsensitiveMatch = entry;\n        }\n\n        if (caseSensitiveMatch && caseInsensitiveMatch) {\n          break;\n        }\n      }\n\n      var entryToFocus = caseSensitiveMatch || caseInsensitiveMatch;\n\n      if (entryToFocus) {\n        this.tree.setFocus(entryToFocus);\n        this.tree.reveal(entryToFocus, 0.5);\n        return;\n      }\n    } // Second check for auto focus of first entry\n\n\n    if (autoFocus.autoFocusFirstEntry) {\n      this.tree.focusFirst();\n      this.tree.reveal(this.tree.getFocus());\n    } // Third check for specific index option\n    else if (typeof autoFocus.autoFocusIndex === 'number') {\n        if (entries.length > autoFocus.autoFocusIndex) {\n          this.tree.focusNth(autoFocus.autoFocusIndex);\n          this.tree.reveal(this.tree.getFocus());\n        }\n      } // Check for auto focus of second entry\n      else if (autoFocus.autoFocusSecondEntry) {\n          if (entries.length > 1) {\n            this.tree.focusNth(1);\n          }\n        } // Finally check for auto focus of last entry\n        else if (autoFocus.autoFocusLastEntry) {\n            if (entries.length > 1) {\n              this.tree.focusLast();\n              this.tree.reveal(this.tree.getFocus());\n            }\n          }\n  };\n\n  QuickOpenWidget.prototype.getHeight = function (input) {\n    var _this = this;\n\n    var renderer = input.renderer;\n\n    if (!input) {\n      var itemHeight = renderer.getHeight(null);\n      return this.options.minItemsToShow ? this.options.minItemsToShow * itemHeight : 0;\n    }\n\n    var height = 0;\n    var preferredItemsHeight;\n\n    if (this.layoutDimensions && this.layoutDimensions.height) {\n      preferredItemsHeight = (this.layoutDimensions.height - 50\n      /* subtract height of input field (30px) and some spacing (drop shadow) to fit */\n      ) * 0.4\n      /* max 40% of screen */\n      ;\n    }\n\n    if (!preferredItemsHeight || preferredItemsHeight > QuickOpenWidget.MAX_ITEMS_HEIGHT) {\n      preferredItemsHeight = QuickOpenWidget.MAX_ITEMS_HEIGHT;\n    }\n\n    var entries = input.entries.filter(function (e) {\n      return _this.isElementVisible(input, e);\n    });\n    var maxEntries = this.options.maxItemsToShow || entries.length;\n\n    for (var i = 0; i < maxEntries && i < entries.length; i++) {\n      var entryHeight = renderer.getHeight(entries[i]);\n\n      if (height + entryHeight <= preferredItemsHeight) {\n        height += entryHeight;\n      } else {\n        break;\n      }\n    }\n\n    return height;\n  };\n\n  QuickOpenWidget.prototype.updateResultCount = function (count) {\n    this.resultCount.textContent = nls.localize({\n      key: 'quickInput.visibleCount',\n      comment: ['This tells the user how many items are shown in a list of items to select from. The items can be anything. Currently not visible, but read by screen readers.']\n    }, \"{0} Results\", count);\n  };\n\n  QuickOpenWidget.prototype.hide = function (reason) {\n    if (!this.isVisible()) {\n      return;\n    }\n\n    this.visible = false;\n    DOM.hide(this.element);\n    this.element.blur(); // Clear input field and clear tree\n\n    this.inputBox.value = '';\n    this.tree.setInput(null); // ARIA\n\n    this.inputElement.setAttribute('aria-haspopup', 'false'); // Reset Tree Height\n\n    this.treeContainer.style.height = (this.options.minItemsToShow ? this.options.minItemsToShow * 22 : 0) + \"px\"; // Clear any running Progress\n\n    this.progressBar.stop().hide(); // Clear Focus\n\n    if (this.tree.isDOMFocused()) {\n      this.tree.domBlur();\n    } else if (this.inputBox.hasFocus()) {\n      this.inputBox.blur();\n    } // Callbacks\n\n\n    if (reason === 0\n    /* ELEMENT_SELECTED */\n    ) {\n        this.callbacks.onOk();\n      } else {\n      this.callbacks.onCancel();\n    }\n\n    if (this.callbacks.onHide) {\n      this.callbacks.onHide(reason);\n    }\n  };\n\n  QuickOpenWidget.prototype.setInput = function (input, autoFocus, ariaLabel) {\n    if (!this.isVisible()) {\n      return;\n    } // If the input changes, indicate this to the tree\n\n\n    if (!!this.getInput()) {\n      this.onInputChanging();\n    } // Adapt tree height to entries and apply input\n\n\n    this.setInputAndLayout(input, autoFocus); // Apply ARIA\n\n    if (this.inputBox) {\n      this.inputBox.setAriaLabel(ariaLabel || DEFAULT_INPUT_ARIA_LABEL);\n    }\n  };\n\n  QuickOpenWidget.prototype.onInputChanging = function () {\n    var _this = this;\n\n    if (this.inputChangingTimeoutHandle) {\n      clearTimeout(this.inputChangingTimeoutHandle);\n      this.inputChangingTimeoutHandle = null;\n    } // when the input is changing in quick open, we indicate this as CSS class to the widget\n    // for a certain timeout. this helps reducing some hectic UI updates when input changes quickly\n\n\n    DOM.addClass(this.element, 'content-changing');\n    this.inputChangingTimeoutHandle = setTimeout(function () {\n      DOM.removeClass(_this.element, 'content-changing');\n    }, 500);\n  };\n\n  QuickOpenWidget.prototype.getInput = function () {\n    return this.tree.getInput();\n  };\n\n  QuickOpenWidget.prototype.isVisible = function () {\n    return this.visible;\n  };\n\n  QuickOpenWidget.prototype.layout = function (dimension) {\n    this.layoutDimensions = dimension; // Apply to quick open width (height is dynamic by number of items to show)\n\n    var quickOpenWidth = Math.min(this.layoutDimensions.width * 0.62\n    /* golden cut */\n    , QuickOpenWidget.MAX_WIDTH);\n\n    if (this.element) {\n      // quick open\n      this.element.style.width = quickOpenWidth + \"px\";\n      this.element.style.marginLeft = \"-\" + quickOpenWidth / 2 + \"px\"; // input field\n\n      this.inputContainer.style.width = quickOpenWidth - 12 + \"px\";\n    }\n  };\n\n  QuickOpenWidget.prototype.gainingFocus = function () {\n    this.isLoosingFocus = false;\n  };\n\n  QuickOpenWidget.prototype.loosingFocus = function (e) {\n    var _this = this;\n\n    if (!this.isVisible()) {\n      return;\n    }\n\n    var relatedTarget = e.relatedTarget;\n\n    if (!this.quickNavigateConfiguration && DOM.isAncestor(relatedTarget, this.element)) {\n      return; // user clicked somewhere into quick open widget, do not close thereby\n    }\n\n    this.isLoosingFocus = true;\n    setTimeout(function () {\n      if (!_this.isLoosingFocus || _this.isDisposed) {\n        return;\n      }\n\n      var veto = _this.callbacks.onFocusLost && _this.callbacks.onFocusLost();\n\n      if (!veto) {\n        _this.hide(1\n        /* FOCUS_LOST */\n        );\n      }\n    }, 0);\n  };\n\n  QuickOpenWidget.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.isDisposed = true;\n  };\n\n  QuickOpenWidget.MAX_WIDTH = 600; // Max total width of quick open widget\n\n  QuickOpenWidget.MAX_ITEMS_HEIGHT = 20 * 22; // Max height of item list below input field\n\n  return QuickOpenWidget;\n}(Disposable);\n\nexport { QuickOpenWidget };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/base/parts/quickopen/browser/quickOpenWidget.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","nls","platform","types","Filter","Renderer","DataSource","AccessibilityProvider","InputBox","Tree","ProgressBar","StandardKeyboardEvent","DefaultController","DOM","Disposable","Color","mixin","StandardMouseEvent","QuickOpenController","_super","apply","arguments","onContextMenu","tree","element","event","isMacintosh","onLeftClick","call","defaultStyles","background","fromHex","foreground","pickerGroupForeground","pickerGroupBorder","widgetShadow","progressBarBackground","DEFAULT_INPUT_ARIA_LABEL","localize","QuickOpenWidget","container","callbacks","options","_this","isDisposed","styles","model","getModel","document","createElement","addClass","appendChild","_register","addDisposableListener","EventType","CONTEXT_MENU","e","EventHelper","stop","FOCUS","gainingFocus","BLUR","loosingFocus","KEY_DOWN","keyboardEvent","keyCode","hide","altKey","ctrlKey","metaKey","stops","currentTarget","querySelectorAll","shiftKey","target","length","focus","progressBar","inputContainer","inputBox","undefined","placeholder","inputPlaceHolder","ariaLabel","inputBackground","inputForeground","inputBorder","inputValidationInfoBackground","inputValidationInfoForeground","inputValidationInfoBorder","inputValidationWarningBackground","inputValidationWarningForeground","inputValidationWarningBorder","inputValidationErrorBackground","inputValidationErrorForeground","inputValidationErrorBorder","inputElement","setAttribute","INPUT","onType","shouldOpenInBackground","navigateInTree","selectionStart","selectionEnd","value","focus_1","getFocus","elementSelected","resultCount","treeContainer","createTree","treeCreator","config","opts","dataSource","controller","clickBehavior","keyboardSupport","renderer","filter","accessibilityProvider","twistiePixels","indentPixels","alwaysFocused","verticalScrollMode","horizontalScrollMode","preventRootFocus","treeElement","getHTMLElement","onDidChangeFocus","elementFocused","onDidChangeSelection","selection","mouseEvent","payload","originalEvent","quickNavigateConfiguration","focus_2","KEY_UP","quickNavKeys","keybindings","wasTriggerKeyPressed","some","k","_a","getParts","firstPart","chordPart","focus_3","layoutDimensions","layout","applyStyles","style","toString","borderColor","color","backgroundColor","borderWidth","borderStyle","boxShadow","updateStyles","middleButton","helpText","show","isShift","getInput","entries","oldFocus","focusNext","focusPrevious","focusNextPage","focusPreviousPage","newFocus","focusLast","focusFirst","reveal","isVisible","arivaActiveDescendant","getAttribute","removeAttribute","context","keymods","extractKeyMods","runner","run","preferredMode","mode","ctrlCmd","alt","param","visible","isLoosingFocus","domFocus","isString","doShowWithPrefix","restoreLastInput","doShowWithInput","autoFocus","inputSelection","select","onShow","lastInput","prefix","input","setInput","setInputAndLayout","height","getHeight","then","String","isElementVisible","updateResultCount","autoFocusPrefixMatch","caseSensitiveMatch","caseInsensitiveMatch","lowerCasePrefix","toLowerCase","_i","entries_1","entry","label","getLabel","indexOf","entryToFocus","setFocus","autoFocusFirstEntry","autoFocusIndex","focusNth","autoFocusSecondEntry","autoFocusLastEntry","itemHeight","minItemsToShow","preferredItemsHeight","MAX_ITEMS_HEIGHT","maxEntries","maxItemsToShow","i","entryHeight","count","textContent","key","comment","reason","blur","isDOMFocused","domBlur","hasFocus","onOk","onCancel","onHide","onInputChanging","setAriaLabel","inputChangingTimeoutHandle","clearTimeout","setTimeout","removeClass","dimension","quickOpenWidth","Math","min","width","MAX_WIDTH","marginLeft","relatedTarget","isAncestor","veto","onFocusLost","dispose"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport './quickopen.css';\r\nimport * as nls from '../../../../nls.js';\r\nimport * as platform from '../../../common/platform.js';\r\nimport * as types from '../../../common/types.js';\r\nimport { Filter, Renderer, DataSource, AccessibilityProvider } from './quickOpenViewer.js';\r\nimport { InputBox } from '../../../browser/ui/inputbox/inputBox.js';\r\nimport { Tree } from '../../tree/browser/treeImpl.js';\r\nimport { ProgressBar } from '../../../browser/ui/progressbar/progressbar.js';\r\nimport { StandardKeyboardEvent } from '../../../browser/keyboardEvent.js';\r\nimport { DefaultController } from '../../tree/browser/treeDefaults.js';\r\nimport * as DOM from '../../../browser/dom.js';\r\nimport { Disposable } from '../../../common/lifecycle.js';\r\nimport { Color } from '../../../common/color.js';\r\nimport { mixin } from '../../../common/objects.js';\r\nimport { StandardMouseEvent } from '../../../browser/mouseEvent.js';\r\nvar QuickOpenController = /** @class */ (function (_super) {\r\n    __extends(QuickOpenController, _super);\r\n    function QuickOpenController() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    QuickOpenController.prototype.onContextMenu = function (tree, element, event) {\r\n        if (platform.isMacintosh) {\r\n            return this.onLeftClick(tree, element, event); // https://github.com/Microsoft/vscode/issues/1011\r\n        }\r\n        return _super.prototype.onContextMenu.call(this, tree, element, event);\r\n    };\r\n    return QuickOpenController;\r\n}(DefaultController));\r\nexport { QuickOpenController };\r\nvar defaultStyles = {\r\n    background: Color.fromHex('#1E1E1E'),\r\n    foreground: Color.fromHex('#CCCCCC'),\r\n    pickerGroupForeground: Color.fromHex('#0097FB'),\r\n    pickerGroupBorder: Color.fromHex('#3F3F46'),\r\n    widgetShadow: Color.fromHex('#000000'),\r\n    progressBarBackground: Color.fromHex('#0E70C0')\r\n};\r\nvar DEFAULT_INPUT_ARIA_LABEL = nls.localize('quickOpenAriaLabel', \"Quick picker. Type to narrow down results.\");\r\nvar QuickOpenWidget = /** @class */ (function (_super) {\r\n    __extends(QuickOpenWidget, _super);\r\n    function QuickOpenWidget(container, callbacks, options) {\r\n        var _this = _super.call(this) || this;\r\n        _this.isDisposed = false;\r\n        _this.container = container;\r\n        _this.callbacks = callbacks;\r\n        _this.options = options;\r\n        _this.styles = options || Object.create(null);\r\n        mixin(_this.styles, defaultStyles, false);\r\n        _this.model = null;\r\n        return _this;\r\n    }\r\n    QuickOpenWidget.prototype.getModel = function () {\r\n        return this.model;\r\n    };\r\n    QuickOpenWidget.prototype.create = function () {\r\n        var _this = this;\r\n        // Container\r\n        this.element = document.createElement('div');\r\n        DOM.addClass(this.element, 'monaco-quick-open-widget');\r\n        this.container.appendChild(this.element);\r\n        this._register(DOM.addDisposableListener(this.element, DOM.EventType.CONTEXT_MENU, function (e) { return DOM.EventHelper.stop(e, true); })); // Do this to fix an issue on Mac where the menu goes into the way\r\n        this._register(DOM.addDisposableListener(this.element, DOM.EventType.FOCUS, function (e) { return _this.gainingFocus(); }, true));\r\n        this._register(DOM.addDisposableListener(this.element, DOM.EventType.BLUR, function (e) { return _this.loosingFocus(e); }, true));\r\n        this._register(DOM.addDisposableListener(this.element, DOM.EventType.KEY_DOWN, function (e) {\r\n            var keyboardEvent = new StandardKeyboardEvent(e);\r\n            if (keyboardEvent.keyCode === 9 /* Escape */) {\r\n                DOM.EventHelper.stop(e, true);\r\n                _this.hide(2 /* CANCELED */);\r\n            }\r\n            else if (keyboardEvent.keyCode === 2 /* Tab */ && !keyboardEvent.altKey && !keyboardEvent.ctrlKey && !keyboardEvent.metaKey) {\r\n                var stops = e.currentTarget.querySelectorAll('input, .monaco-tree, .monaco-tree-row.focused .action-label.icon');\r\n                if (keyboardEvent.shiftKey && keyboardEvent.target === stops[0]) {\r\n                    DOM.EventHelper.stop(e, true);\r\n                    stops[stops.length - 1].focus();\r\n                }\r\n                else if (!keyboardEvent.shiftKey && keyboardEvent.target === stops[stops.length - 1]) {\r\n                    DOM.EventHelper.stop(e, true);\r\n                    stops[0].focus();\r\n                }\r\n            }\r\n        }));\r\n        // Progress Bar\r\n        this.progressBar = this._register(new ProgressBar(this.element, { progressBarBackground: this.styles.progressBarBackground }));\r\n        this.progressBar.hide();\r\n        // Input Field\r\n        this.inputContainer = document.createElement('div');\r\n        DOM.addClass(this.inputContainer, 'quick-open-input');\r\n        this.element.appendChild(this.inputContainer);\r\n        this.inputBox = this._register(new InputBox(this.inputContainer, undefined, {\r\n            placeholder: this.options.inputPlaceHolder || '',\r\n            ariaLabel: DEFAULT_INPUT_ARIA_LABEL,\r\n            inputBackground: this.styles.inputBackground,\r\n            inputForeground: this.styles.inputForeground,\r\n            inputBorder: this.styles.inputBorder,\r\n            inputValidationInfoBackground: this.styles.inputValidationInfoBackground,\r\n            inputValidationInfoForeground: this.styles.inputValidationInfoForeground,\r\n            inputValidationInfoBorder: this.styles.inputValidationInfoBorder,\r\n            inputValidationWarningBackground: this.styles.inputValidationWarningBackground,\r\n            inputValidationWarningForeground: this.styles.inputValidationWarningForeground,\r\n            inputValidationWarningBorder: this.styles.inputValidationWarningBorder,\r\n            inputValidationErrorBackground: this.styles.inputValidationErrorBackground,\r\n            inputValidationErrorForeground: this.styles.inputValidationErrorForeground,\r\n            inputValidationErrorBorder: this.styles.inputValidationErrorBorder\r\n        }));\r\n        this.inputElement = this.inputBox.inputElement;\r\n        this.inputElement.setAttribute('role', 'combobox');\r\n        this.inputElement.setAttribute('aria-haspopup', 'false');\r\n        this.inputElement.setAttribute('aria-autocomplete', 'list');\r\n        this._register(DOM.addDisposableListener(this.inputBox.inputElement, DOM.EventType.INPUT, function (e) { return _this.onType(); }));\r\n        this._register(DOM.addDisposableListener(this.inputBox.inputElement, DOM.EventType.KEY_DOWN, function (e) {\r\n            var keyboardEvent = new StandardKeyboardEvent(e);\r\n            var shouldOpenInBackground = _this.shouldOpenInBackground(keyboardEvent);\r\n            // Do not handle Tab: It is used to navigate between elements without mouse\r\n            if (keyboardEvent.keyCode === 2 /* Tab */) {\r\n                return;\r\n            }\r\n            // Pass tree navigation keys to the tree but leave focus in input field\r\n            else if (keyboardEvent.keyCode === 18 /* DownArrow */ || keyboardEvent.keyCode === 16 /* UpArrow */ || keyboardEvent.keyCode === 12 /* PageDown */ || keyboardEvent.keyCode === 11 /* PageUp */) {\r\n                DOM.EventHelper.stop(e, true);\r\n                _this.navigateInTree(keyboardEvent.keyCode, keyboardEvent.shiftKey);\r\n                // Position cursor at the end of input to allow right arrow (open in background)\r\n                // to function immediately unless the user has made a selection\r\n                if (_this.inputBox.inputElement.selectionStart === _this.inputBox.inputElement.selectionEnd) {\r\n                    _this.inputBox.inputElement.selectionStart = _this.inputBox.value.length;\r\n                }\r\n            }\r\n            // Select element on Enter or on Arrow-Right if we are at the end of the input\r\n            else if (keyboardEvent.keyCode === 3 /* Enter */ || shouldOpenInBackground) {\r\n                DOM.EventHelper.stop(e, true);\r\n                var focus_1 = _this.tree.getFocus();\r\n                if (focus_1) {\r\n                    _this.elementSelected(focus_1, e, shouldOpenInBackground ? 2 /* OPEN_IN_BACKGROUND */ : 1 /* OPEN */);\r\n                }\r\n            }\r\n        }));\r\n        // Result count for screen readers\r\n        this.resultCount = document.createElement('div');\r\n        DOM.addClass(this.resultCount, 'quick-open-result-count');\r\n        this.resultCount.setAttribute('aria-live', 'polite');\r\n        this.resultCount.setAttribute('aria-atomic', 'true');\r\n        this.element.appendChild(this.resultCount);\r\n        // Tree\r\n        this.treeContainer = document.createElement('div');\r\n        DOM.addClass(this.treeContainer, 'quick-open-tree');\r\n        this.element.appendChild(this.treeContainer);\r\n        var createTree = this.options.treeCreator || (function (container, config, opts) { return new Tree(container, config, opts); });\r\n        this.tree = this._register(createTree(this.treeContainer, {\r\n            dataSource: new DataSource(this),\r\n            controller: new QuickOpenController({ clickBehavior: 1 /* ON_MOUSE_UP */, keyboardSupport: this.options.keyboardSupport }),\r\n            renderer: (this.renderer = new Renderer(this, this.styles)),\r\n            filter: new Filter(this),\r\n            accessibilityProvider: new AccessibilityProvider(this)\r\n        }, {\r\n            twistiePixels: 11,\r\n            indentPixels: 0,\r\n            alwaysFocused: true,\r\n            verticalScrollMode: 3 /* Visible */,\r\n            horizontalScrollMode: 2 /* Hidden */,\r\n            ariaLabel: nls.localize('treeAriaLabel', \"Quick Picker\"),\r\n            keyboardSupport: this.options.keyboardSupport,\r\n            preventRootFocus: false\r\n        }));\r\n        this.treeElement = this.tree.getHTMLElement();\r\n        // Handle Focus and Selection event\r\n        this._register(this.tree.onDidChangeFocus(function (event) {\r\n            _this.elementFocused(event.focus, event);\r\n        }));\r\n        this._register(this.tree.onDidChangeSelection(function (event) {\r\n            if (event.selection && event.selection.length > 0) {\r\n                var mouseEvent = event.payload && event.payload.originalEvent instanceof StandardMouseEvent ? event.payload.originalEvent : undefined;\r\n                var shouldOpenInBackground = mouseEvent ? _this.shouldOpenInBackground(mouseEvent) : false;\r\n                _this.elementSelected(event.selection[0], event, shouldOpenInBackground ? 2 /* OPEN_IN_BACKGROUND */ : 1 /* OPEN */);\r\n            }\r\n        }));\r\n        this._register(DOM.addDisposableListener(this.treeContainer, DOM.EventType.KEY_DOWN, function (e) {\r\n            var keyboardEvent = new StandardKeyboardEvent(e);\r\n            // Only handle when in quick navigation mode\r\n            if (!_this.quickNavigateConfiguration) {\r\n                return;\r\n            }\r\n            // Support keyboard navigation in quick navigation mode\r\n            if (keyboardEvent.keyCode === 18 /* DownArrow */ || keyboardEvent.keyCode === 16 /* UpArrow */ || keyboardEvent.keyCode === 12 /* PageDown */ || keyboardEvent.keyCode === 11 /* PageUp */) {\r\n                DOM.EventHelper.stop(e, true);\r\n                _this.navigateInTree(keyboardEvent.keyCode);\r\n            }\r\n            // Support to open item with Enter still even in quick nav mode\r\n            else if (keyboardEvent.keyCode === 3 /* Enter */) {\r\n                DOM.EventHelper.stop(e, true);\r\n                var focus_2 = _this.tree.getFocus();\r\n                if (focus_2) {\r\n                    _this.elementSelected(focus_2, e);\r\n                }\r\n            }\r\n        }));\r\n        this._register(DOM.addDisposableListener(this.treeContainer, DOM.EventType.KEY_UP, function (e) {\r\n            var keyboardEvent = new StandardKeyboardEvent(e);\r\n            var keyCode = keyboardEvent.keyCode;\r\n            // Only handle when in quick navigation mode\r\n            if (!_this.quickNavigateConfiguration) {\r\n                return;\r\n            }\r\n            // Select element when keys are pressed that signal it\r\n            var quickNavKeys = _this.quickNavigateConfiguration.keybindings;\r\n            var wasTriggerKeyPressed = quickNavKeys.some(function (k) {\r\n                var _a = k.getParts(), firstPart = _a[0], chordPart = _a[1];\r\n                if (chordPart) {\r\n                    return false;\r\n                }\r\n                if (firstPart.shiftKey && keyCode === 4 /* Shift */) {\r\n                    if (keyboardEvent.ctrlKey || keyboardEvent.altKey || keyboardEvent.metaKey) {\r\n                        return false; // this is an optimistic check for the shift key being used to navigate back in quick open\r\n                    }\r\n                    return true;\r\n                }\r\n                if (firstPart.altKey && keyCode === 6 /* Alt */) {\r\n                    return true;\r\n                }\r\n                if (firstPart.ctrlKey && keyCode === 5 /* Ctrl */) {\r\n                    return true;\r\n                }\r\n                if (firstPart.metaKey && keyCode === 57 /* Meta */) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n            if (wasTriggerKeyPressed) {\r\n                var focus_3 = _this.tree.getFocus();\r\n                if (focus_3) {\r\n                    _this.elementSelected(focus_3, e);\r\n                }\r\n            }\r\n        }));\r\n        // Support layout\r\n        if (this.layoutDimensions) {\r\n            this.layout(this.layoutDimensions);\r\n        }\r\n        this.applyStyles();\r\n        // Allows focus to switch to next/previous entry after tab into an actionbar item\r\n        this._register(DOM.addDisposableListener(this.treeContainer, DOM.EventType.KEY_DOWN, function (e) {\r\n            var keyboardEvent = new StandardKeyboardEvent(e);\r\n            // Only handle when not in quick navigation mode\r\n            if (_this.quickNavigateConfiguration) {\r\n                return;\r\n            }\r\n            if (keyboardEvent.keyCode === 18 /* DownArrow */ || keyboardEvent.keyCode === 16 /* UpArrow */ || keyboardEvent.keyCode === 12 /* PageDown */ || keyboardEvent.keyCode === 11 /* PageUp */) {\r\n                DOM.EventHelper.stop(e, true);\r\n                _this.navigateInTree(keyboardEvent.keyCode, keyboardEvent.shiftKey);\r\n                _this.treeElement.focus();\r\n            }\r\n        }));\r\n        return this.element;\r\n    };\r\n    QuickOpenWidget.prototype.style = function (styles) {\r\n        this.styles = styles;\r\n        this.applyStyles();\r\n    };\r\n    QuickOpenWidget.prototype.applyStyles = function () {\r\n        if (this.element) {\r\n            var foreground = this.styles.foreground ? this.styles.foreground.toString() : '';\r\n            var background = this.styles.background ? this.styles.background.toString() : '';\r\n            var borderColor = this.styles.borderColor ? this.styles.borderColor.toString() : '';\r\n            var widgetShadow = this.styles.widgetShadow ? this.styles.widgetShadow.toString() : '';\r\n            this.element.style.color = foreground;\r\n            this.element.style.backgroundColor = background;\r\n            this.element.style.borderColor = borderColor;\r\n            this.element.style.borderWidth = borderColor ? '1px' : '';\r\n            this.element.style.borderStyle = borderColor ? 'solid' : '';\r\n            this.element.style.boxShadow = widgetShadow ? \"0 5px 8px \" + widgetShadow : '';\r\n        }\r\n        if (this.progressBar) {\r\n            this.progressBar.style({\r\n                progressBarBackground: this.styles.progressBarBackground\r\n            });\r\n        }\r\n        if (this.inputBox) {\r\n            this.inputBox.style({\r\n                inputBackground: this.styles.inputBackground,\r\n                inputForeground: this.styles.inputForeground,\r\n                inputBorder: this.styles.inputBorder,\r\n                inputValidationInfoBackground: this.styles.inputValidationInfoBackground,\r\n                inputValidationInfoForeground: this.styles.inputValidationInfoForeground,\r\n                inputValidationInfoBorder: this.styles.inputValidationInfoBorder,\r\n                inputValidationWarningBackground: this.styles.inputValidationWarningBackground,\r\n                inputValidationWarningForeground: this.styles.inputValidationWarningForeground,\r\n                inputValidationWarningBorder: this.styles.inputValidationWarningBorder,\r\n                inputValidationErrorBackground: this.styles.inputValidationErrorBackground,\r\n                inputValidationErrorForeground: this.styles.inputValidationErrorForeground,\r\n                inputValidationErrorBorder: this.styles.inputValidationErrorBorder\r\n            });\r\n        }\r\n        if (this.tree && !this.options.treeCreator) {\r\n            this.tree.style(this.styles);\r\n        }\r\n        if (this.renderer) {\r\n            this.renderer.updateStyles(this.styles);\r\n        }\r\n    };\r\n    QuickOpenWidget.prototype.shouldOpenInBackground = function (e) {\r\n        // Keyboard\r\n        if (e instanceof StandardKeyboardEvent) {\r\n            if (e.keyCode !== 17 /* RightArrow */) {\r\n                return false; // only for right arrow\r\n            }\r\n            if (e.metaKey || e.ctrlKey || e.shiftKey || e.altKey) {\r\n                return false; // no modifiers allowed\r\n            }\r\n            // validate the cursor is at the end of the input and there is no selection,\r\n            // and if not prevent opening in the background such as the selection can be changed\r\n            var element = this.inputBox.inputElement;\r\n            return element.selectionEnd === this.inputBox.value.length && element.selectionStart === element.selectionEnd;\r\n        }\r\n        // Mouse\r\n        return e.middleButton;\r\n    };\r\n    QuickOpenWidget.prototype.onType = function () {\r\n        var value = this.inputBox.value;\r\n        // Adjust help text as needed if present\r\n        if (this.helpText) {\r\n            if (value) {\r\n                DOM.hide(this.helpText);\r\n            }\r\n            else {\r\n                DOM.show(this.helpText);\r\n            }\r\n        }\r\n        // Send to callbacks\r\n        this.callbacks.onType(value);\r\n    };\r\n    QuickOpenWidget.prototype.navigateInTree = function (keyCode, isShift) {\r\n        var model = this.tree.getInput();\r\n        var entries = model ? model.entries : [];\r\n        var oldFocus = this.tree.getFocus();\r\n        // Normal Navigation\r\n        switch (keyCode) {\r\n            case 18 /* DownArrow */:\r\n                this.tree.focusNext();\r\n                break;\r\n            case 16 /* UpArrow */:\r\n                this.tree.focusPrevious();\r\n                break;\r\n            case 12 /* PageDown */:\r\n                this.tree.focusNextPage();\r\n                break;\r\n            case 11 /* PageUp */:\r\n                this.tree.focusPreviousPage();\r\n                break;\r\n            case 2 /* Tab */:\r\n                if (isShift) {\r\n                    this.tree.focusPrevious();\r\n                }\r\n                else {\r\n                    this.tree.focusNext();\r\n                }\r\n                break;\r\n        }\r\n        var newFocus = this.tree.getFocus();\r\n        // Support cycle-through navigation if focus did not change\r\n        if (entries.length > 1 && oldFocus === newFocus) {\r\n            // Up from no entry or first entry goes down to last\r\n            if (keyCode === 16 /* UpArrow */ || (keyCode === 2 /* Tab */ && isShift)) {\r\n                this.tree.focusLast();\r\n            }\r\n            // Down from last entry goes to up to first\r\n            else if (keyCode === 18 /* DownArrow */ || keyCode === 2 /* Tab */ && !isShift) {\r\n                this.tree.focusFirst();\r\n            }\r\n        }\r\n        // Reveal\r\n        newFocus = this.tree.getFocus();\r\n        if (newFocus) {\r\n            this.tree.reveal(newFocus);\r\n        }\r\n    };\r\n    QuickOpenWidget.prototype.elementFocused = function (value, event) {\r\n        if (!value || !this.isVisible()) {\r\n            return;\r\n        }\r\n        // ARIA\r\n        var arivaActiveDescendant = this.treeElement.getAttribute('aria-activedescendant');\r\n        if (arivaActiveDescendant) {\r\n            this.inputElement.setAttribute('aria-activedescendant', arivaActiveDescendant);\r\n        }\r\n        else {\r\n            this.inputElement.removeAttribute('aria-activedescendant');\r\n        }\r\n        var context = { event: event, keymods: this.extractKeyMods(event), quickNavigateConfiguration: this.quickNavigateConfiguration };\r\n        this.model.runner.run(value, 0 /* PREVIEW */, context);\r\n    };\r\n    QuickOpenWidget.prototype.elementSelected = function (value, event, preferredMode) {\r\n        var hide = true;\r\n        // Trigger open of element on selection\r\n        if (this.isVisible()) {\r\n            var mode = preferredMode || 1 /* OPEN */;\r\n            var context = { event: event, keymods: this.extractKeyMods(event), quickNavigateConfiguration: this.quickNavigateConfiguration };\r\n            hide = this.model.runner.run(value, mode, context);\r\n        }\r\n        // Hide if command was run successfully\r\n        if (hide) {\r\n            this.hide(0 /* ELEMENT_SELECTED */);\r\n        }\r\n    };\r\n    QuickOpenWidget.prototype.extractKeyMods = function (event) {\r\n        return {\r\n            ctrlCmd: event && (event.ctrlKey || event.metaKey || (event.payload && event.payload.originalEvent && (event.payload.originalEvent.ctrlKey || event.payload.originalEvent.metaKey))),\r\n            alt: event && (event.altKey || (event.payload && event.payload.originalEvent && event.payload.originalEvent.altKey))\r\n        };\r\n    };\r\n    QuickOpenWidget.prototype.show = function (param, options) {\r\n        this.visible = true;\r\n        this.isLoosingFocus = false;\r\n        this.quickNavigateConfiguration = options ? options.quickNavigateConfiguration : undefined;\r\n        // Adjust UI for quick navigate mode\r\n        if (this.quickNavigateConfiguration) {\r\n            DOM.hide(this.inputContainer);\r\n            DOM.show(this.element);\r\n            this.tree.domFocus();\r\n        }\r\n        // Otherwise use normal UI\r\n        else {\r\n            DOM.show(this.inputContainer);\r\n            DOM.show(this.element);\r\n            this.inputBox.focus();\r\n        }\r\n        // Adjust Help text for IE\r\n        if (this.helpText) {\r\n            if (this.quickNavigateConfiguration || types.isString(param)) {\r\n                DOM.hide(this.helpText);\r\n            }\r\n            else {\r\n                DOM.show(this.helpText);\r\n            }\r\n        }\r\n        // Show based on param\r\n        if (types.isString(param)) {\r\n            this.doShowWithPrefix(param);\r\n        }\r\n        else {\r\n            if (options && options.value) {\r\n                this.restoreLastInput(options.value);\r\n            }\r\n            this.doShowWithInput(param, options && options.autoFocus ? options.autoFocus : {});\r\n        }\r\n        // Respect selectAll option\r\n        if (options && options.inputSelection && !this.quickNavigateConfiguration) {\r\n            this.inputBox.select(options.inputSelection);\r\n        }\r\n        if (this.callbacks.onShow) {\r\n            this.callbacks.onShow();\r\n        }\r\n    };\r\n    QuickOpenWidget.prototype.restoreLastInput = function (lastInput) {\r\n        this.inputBox.value = lastInput;\r\n        this.inputBox.select();\r\n        this.callbacks.onType(lastInput);\r\n    };\r\n    QuickOpenWidget.prototype.doShowWithPrefix = function (prefix) {\r\n        this.inputBox.value = prefix;\r\n        this.callbacks.onType(prefix);\r\n    };\r\n    QuickOpenWidget.prototype.doShowWithInput = function (input, autoFocus) {\r\n        this.setInput(input, autoFocus);\r\n    };\r\n    QuickOpenWidget.prototype.setInputAndLayout = function (input, autoFocus) {\r\n        var _this = this;\r\n        this.treeContainer.style.height = this.getHeight(input) + \"px\";\r\n        this.tree.setInput(null).then(function () {\r\n            _this.model = input;\r\n            // ARIA\r\n            _this.inputElement.setAttribute('aria-haspopup', String(input && input.entries && input.entries.length > 0));\r\n            return _this.tree.setInput(input);\r\n        }).then(function () {\r\n            // Indicate entries to tree\r\n            _this.tree.layout();\r\n            var entries = input ? input.entries.filter(function (e) { return _this.isElementVisible(input, e); }) : [];\r\n            _this.updateResultCount(entries.length);\r\n            // Handle auto focus\r\n            if (entries.length) {\r\n                _this.autoFocus(input, entries, autoFocus);\r\n            }\r\n        });\r\n    };\r\n    QuickOpenWidget.prototype.isElementVisible = function (input, e) {\r\n        if (!input.filter) {\r\n            return true;\r\n        }\r\n        return input.filter.isVisible(e);\r\n    };\r\n    QuickOpenWidget.prototype.autoFocus = function (input, entries, autoFocus) {\r\n        if (autoFocus === void 0) { autoFocus = {}; }\r\n        // First check for auto focus of prefix matches\r\n        if (autoFocus.autoFocusPrefixMatch) {\r\n            var caseSensitiveMatch = void 0;\r\n            var caseInsensitiveMatch = void 0;\r\n            var prefix = autoFocus.autoFocusPrefixMatch;\r\n            var lowerCasePrefix = prefix.toLowerCase();\r\n            for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {\r\n                var entry = entries_1[_i];\r\n                var label = input.dataSource.getLabel(entry) || '';\r\n                if (!caseSensitiveMatch && label.indexOf(prefix) === 0) {\r\n                    caseSensitiveMatch = entry;\r\n                }\r\n                else if (!caseInsensitiveMatch && label.toLowerCase().indexOf(lowerCasePrefix) === 0) {\r\n                    caseInsensitiveMatch = entry;\r\n                }\r\n                if (caseSensitiveMatch && caseInsensitiveMatch) {\r\n                    break;\r\n                }\r\n            }\r\n            var entryToFocus = caseSensitiveMatch || caseInsensitiveMatch;\r\n            if (entryToFocus) {\r\n                this.tree.setFocus(entryToFocus);\r\n                this.tree.reveal(entryToFocus, 0.5);\r\n                return;\r\n            }\r\n        }\r\n        // Second check for auto focus of first entry\r\n        if (autoFocus.autoFocusFirstEntry) {\r\n            this.tree.focusFirst();\r\n            this.tree.reveal(this.tree.getFocus());\r\n        }\r\n        // Third check for specific index option\r\n        else if (typeof autoFocus.autoFocusIndex === 'number') {\r\n            if (entries.length > autoFocus.autoFocusIndex) {\r\n                this.tree.focusNth(autoFocus.autoFocusIndex);\r\n                this.tree.reveal(this.tree.getFocus());\r\n            }\r\n        }\r\n        // Check for auto focus of second entry\r\n        else if (autoFocus.autoFocusSecondEntry) {\r\n            if (entries.length > 1) {\r\n                this.tree.focusNth(1);\r\n            }\r\n        }\r\n        // Finally check for auto focus of last entry\r\n        else if (autoFocus.autoFocusLastEntry) {\r\n            if (entries.length > 1) {\r\n                this.tree.focusLast();\r\n                this.tree.reveal(this.tree.getFocus());\r\n            }\r\n        }\r\n    };\r\n    QuickOpenWidget.prototype.getHeight = function (input) {\r\n        var _this = this;\r\n        var renderer = input.renderer;\r\n        if (!input) {\r\n            var itemHeight = renderer.getHeight(null);\r\n            return this.options.minItemsToShow ? this.options.minItemsToShow * itemHeight : 0;\r\n        }\r\n        var height = 0;\r\n        var preferredItemsHeight;\r\n        if (this.layoutDimensions && this.layoutDimensions.height) {\r\n            preferredItemsHeight = (this.layoutDimensions.height - 50 /* subtract height of input field (30px) and some spacing (drop shadow) to fit */) * 0.4 /* max 40% of screen */;\r\n        }\r\n        if (!preferredItemsHeight || preferredItemsHeight > QuickOpenWidget.MAX_ITEMS_HEIGHT) {\r\n            preferredItemsHeight = QuickOpenWidget.MAX_ITEMS_HEIGHT;\r\n        }\r\n        var entries = input.entries.filter(function (e) { return _this.isElementVisible(input, e); });\r\n        var maxEntries = this.options.maxItemsToShow || entries.length;\r\n        for (var i = 0; i < maxEntries && i < entries.length; i++) {\r\n            var entryHeight = renderer.getHeight(entries[i]);\r\n            if (height + entryHeight <= preferredItemsHeight) {\r\n                height += entryHeight;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        return height;\r\n    };\r\n    QuickOpenWidget.prototype.updateResultCount = function (count) {\r\n        this.resultCount.textContent = nls.localize({ key: 'quickInput.visibleCount', comment: ['This tells the user how many items are shown in a list of items to select from. The items can be anything. Currently not visible, but read by screen readers.'] }, \"{0} Results\", count);\r\n    };\r\n    QuickOpenWidget.prototype.hide = function (reason) {\r\n        if (!this.isVisible()) {\r\n            return;\r\n        }\r\n        this.visible = false;\r\n        DOM.hide(this.element);\r\n        this.element.blur();\r\n        // Clear input field and clear tree\r\n        this.inputBox.value = '';\r\n        this.tree.setInput(null);\r\n        // ARIA\r\n        this.inputElement.setAttribute('aria-haspopup', 'false');\r\n        // Reset Tree Height\r\n        this.treeContainer.style.height = (this.options.minItemsToShow ? this.options.minItemsToShow * 22 : 0) + \"px\";\r\n        // Clear any running Progress\r\n        this.progressBar.stop().hide();\r\n        // Clear Focus\r\n        if (this.tree.isDOMFocused()) {\r\n            this.tree.domBlur();\r\n        }\r\n        else if (this.inputBox.hasFocus()) {\r\n            this.inputBox.blur();\r\n        }\r\n        // Callbacks\r\n        if (reason === 0 /* ELEMENT_SELECTED */) {\r\n            this.callbacks.onOk();\r\n        }\r\n        else {\r\n            this.callbacks.onCancel();\r\n        }\r\n        if (this.callbacks.onHide) {\r\n            this.callbacks.onHide(reason);\r\n        }\r\n    };\r\n    QuickOpenWidget.prototype.setInput = function (input, autoFocus, ariaLabel) {\r\n        if (!this.isVisible()) {\r\n            return;\r\n        }\r\n        // If the input changes, indicate this to the tree\r\n        if (!!this.getInput()) {\r\n            this.onInputChanging();\r\n        }\r\n        // Adapt tree height to entries and apply input\r\n        this.setInputAndLayout(input, autoFocus);\r\n        // Apply ARIA\r\n        if (this.inputBox) {\r\n            this.inputBox.setAriaLabel(ariaLabel || DEFAULT_INPUT_ARIA_LABEL);\r\n        }\r\n    };\r\n    QuickOpenWidget.prototype.onInputChanging = function () {\r\n        var _this = this;\r\n        if (this.inputChangingTimeoutHandle) {\r\n            clearTimeout(this.inputChangingTimeoutHandle);\r\n            this.inputChangingTimeoutHandle = null;\r\n        }\r\n        // when the input is changing in quick open, we indicate this as CSS class to the widget\r\n        // for a certain timeout. this helps reducing some hectic UI updates when input changes quickly\r\n        DOM.addClass(this.element, 'content-changing');\r\n        this.inputChangingTimeoutHandle = setTimeout(function () {\r\n            DOM.removeClass(_this.element, 'content-changing');\r\n        }, 500);\r\n    };\r\n    QuickOpenWidget.prototype.getInput = function () {\r\n        return this.tree.getInput();\r\n    };\r\n    QuickOpenWidget.prototype.isVisible = function () {\r\n        return this.visible;\r\n    };\r\n    QuickOpenWidget.prototype.layout = function (dimension) {\r\n        this.layoutDimensions = dimension;\r\n        // Apply to quick open width (height is dynamic by number of items to show)\r\n        var quickOpenWidth = Math.min(this.layoutDimensions.width * 0.62 /* golden cut */, QuickOpenWidget.MAX_WIDTH);\r\n        if (this.element) {\r\n            // quick open\r\n            this.element.style.width = quickOpenWidth + \"px\";\r\n            this.element.style.marginLeft = \"-\" + quickOpenWidth / 2 + \"px\";\r\n            // input field\r\n            this.inputContainer.style.width = quickOpenWidth - 12 + \"px\";\r\n        }\r\n    };\r\n    QuickOpenWidget.prototype.gainingFocus = function () {\r\n        this.isLoosingFocus = false;\r\n    };\r\n    QuickOpenWidget.prototype.loosingFocus = function (e) {\r\n        var _this = this;\r\n        if (!this.isVisible()) {\r\n            return;\r\n        }\r\n        var relatedTarget = e.relatedTarget;\r\n        if (!this.quickNavigateConfiguration && DOM.isAncestor(relatedTarget, this.element)) {\r\n            return; // user clicked somewhere into quick open widget, do not close thereby\r\n        }\r\n        this.isLoosingFocus = true;\r\n        setTimeout(function () {\r\n            if (!_this.isLoosingFocus || _this.isDisposed) {\r\n                return;\r\n            }\r\n            var veto = _this.callbacks.onFocusLost && _this.callbacks.onFocusLost();\r\n            if (!veto) {\r\n                _this.hide(1 /* FOCUS_LOST */);\r\n            }\r\n        }, 0);\r\n    };\r\n    QuickOpenWidget.prototype.dispose = function () {\r\n        _super.prototype.dispose.call(this);\r\n        this.isDisposed = true;\r\n    };\r\n    QuickOpenWidget.MAX_WIDTH = 600; // Max total width of quick open widget\r\n    QuickOpenWidget.MAX_ITEMS_HEIGHT = 20 * 22; // Max height of item list below input field\r\n    return QuickOpenWidget;\r\n}(Disposable));\r\nexport { QuickOpenWidget };\r\n"]},"metadata":{},"sourceType":"module"}