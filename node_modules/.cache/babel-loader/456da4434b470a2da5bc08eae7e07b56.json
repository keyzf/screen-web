{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport * as objects from '../../../common/objects.js';\nimport { renderCodicons } from '../../../common/codicons.js';\nimport { escape } from '../../../common/strings.js';\n\nvar HighlightedLabel =\n/** @class */\nfunction () {\n  function HighlightedLabel(container, supportCodicons) {\n    this.supportCodicons = supportCodicons;\n    this.text = '';\n    this.title = '';\n    this.highlights = [];\n    this.didEverRender = false;\n    this.domNode = document.createElement('span');\n    this.domNode.className = 'monaco-highlighted-label';\n    container.appendChild(this.domNode);\n  }\n\n  Object.defineProperty(HighlightedLabel.prototype, \"element\", {\n    get: function () {\n      return this.domNode;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  HighlightedLabel.prototype.set = function (text, highlights, title, escapeNewLines) {\n    if (highlights === void 0) {\n      highlights = [];\n    }\n\n    if (title === void 0) {\n      title = '';\n    }\n\n    if (!text) {\n      text = '';\n    }\n\n    if (escapeNewLines) {\n      // adjusts highlights inplace\n      text = HighlightedLabel.escapeNewLines(text, highlights);\n    }\n\n    if (this.didEverRender && this.text === text && this.title === title && objects.equals(this.highlights, highlights)) {\n      return;\n    }\n\n    if (!Array.isArray(highlights)) {\n      highlights = [];\n    }\n\n    this.text = text;\n    this.title = title;\n    this.highlights = highlights;\n    this.render();\n  };\n\n  HighlightedLabel.prototype.render = function () {\n    var htmlContent = '';\n    var pos = 0;\n\n    for (var _i = 0, _a = this.highlights; _i < _a.length; _i++) {\n      var highlight = _a[_i];\n\n      if (highlight.end === highlight.start) {\n        continue;\n      }\n\n      if (pos < highlight.start) {\n        htmlContent += '<span>';\n        var substring_1 = this.text.substring(pos, highlight.start);\n        htmlContent += this.supportCodicons ? renderCodicons(escape(substring_1)) : escape(substring_1);\n        htmlContent += '</span>';\n        pos = highlight.end;\n      }\n\n      if (highlight.extraClasses) {\n        htmlContent += \"<span class=\\\"highlight \" + highlight.extraClasses + \"\\\">\";\n      } else {\n        htmlContent += \"<span class=\\\"highlight\\\">\";\n      }\n\n      var substring = this.text.substring(highlight.start, highlight.end);\n      htmlContent += this.supportCodicons ? renderCodicons(escape(substring)) : escape(substring);\n      htmlContent += '</span>';\n      pos = highlight.end;\n    }\n\n    if (pos < this.text.length) {\n      htmlContent += '<span>';\n      var substring = this.text.substring(pos);\n      htmlContent += this.supportCodicons ? renderCodicons(escape(substring)) : escape(substring);\n      htmlContent += '</span>';\n    }\n\n    this.domNode.innerHTML = htmlContent;\n\n    if (this.title) {\n      this.domNode.title = this.title;\n    } else {\n      this.domNode.removeAttribute('title');\n    }\n\n    this.didEverRender = true;\n  };\n\n  HighlightedLabel.escapeNewLines = function (text, highlights) {\n    var total = 0;\n    var extra = 0;\n    return text.replace(/\\r\\n|\\r|\\n/g, function (match, offset) {\n      extra = match === '\\r\\n' ? -1 : 0;\n      offset += total;\n\n      for (var _i = 0, highlights_1 = highlights; _i < highlights_1.length; _i++) {\n        var highlight = highlights_1[_i];\n\n        if (highlight.end <= offset) {\n          continue;\n        }\n\n        if (highlight.start >= offset) {\n          highlight.start += extra;\n        }\n\n        if (highlight.end >= offset) {\n          highlight.end += extra;\n        }\n      }\n\n      total += extra;\n      return '\\u23CE';\n    });\n  };\n\n  return HighlightedLabel;\n}();\n\nexport { HighlightedLabel };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/base/browser/ui/highlightedlabel/highlightedLabel.js"],"names":["objects","renderCodicons","escape","HighlightedLabel","container","supportCodicons","text","title","highlights","didEverRender","domNode","document","createElement","className","appendChild","Object","defineProperty","prototype","get","enumerable","configurable","set","escapeNewLines","equals","Array","isArray","render","htmlContent","pos","_i","_a","length","highlight","end","start","substring_1","substring","extraClasses","innerHTML","removeAttribute","total","extra","replace","match","offset","highlights_1"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as objects from '../../../common/objects.js';\r\nimport { renderCodicons } from '../../../common/codicons.js';\r\nimport { escape } from '../../../common/strings.js';\r\nvar HighlightedLabel = /** @class */ (function () {\r\n    function HighlightedLabel(container, supportCodicons) {\r\n        this.supportCodicons = supportCodicons;\r\n        this.text = '';\r\n        this.title = '';\r\n        this.highlights = [];\r\n        this.didEverRender = false;\r\n        this.domNode = document.createElement('span');\r\n        this.domNode.className = 'monaco-highlighted-label';\r\n        container.appendChild(this.domNode);\r\n    }\r\n    Object.defineProperty(HighlightedLabel.prototype, \"element\", {\r\n        get: function () {\r\n            return this.domNode;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    HighlightedLabel.prototype.set = function (text, highlights, title, escapeNewLines) {\r\n        if (highlights === void 0) { highlights = []; }\r\n        if (title === void 0) { title = ''; }\r\n        if (!text) {\r\n            text = '';\r\n        }\r\n        if (escapeNewLines) {\r\n            // adjusts highlights inplace\r\n            text = HighlightedLabel.escapeNewLines(text, highlights);\r\n        }\r\n        if (this.didEverRender && this.text === text && this.title === title && objects.equals(this.highlights, highlights)) {\r\n            return;\r\n        }\r\n        if (!Array.isArray(highlights)) {\r\n            highlights = [];\r\n        }\r\n        this.text = text;\r\n        this.title = title;\r\n        this.highlights = highlights;\r\n        this.render();\r\n    };\r\n    HighlightedLabel.prototype.render = function () {\r\n        var htmlContent = '';\r\n        var pos = 0;\r\n        for (var _i = 0, _a = this.highlights; _i < _a.length; _i++) {\r\n            var highlight = _a[_i];\r\n            if (highlight.end === highlight.start) {\r\n                continue;\r\n            }\r\n            if (pos < highlight.start) {\r\n                htmlContent += '<span>';\r\n                var substring_1 = this.text.substring(pos, highlight.start);\r\n                htmlContent += this.supportCodicons ? renderCodicons(escape(substring_1)) : escape(substring_1);\r\n                htmlContent += '</span>';\r\n                pos = highlight.end;\r\n            }\r\n            if (highlight.extraClasses) {\r\n                htmlContent += \"<span class=\\\"highlight \" + highlight.extraClasses + \"\\\">\";\r\n            }\r\n            else {\r\n                htmlContent += \"<span class=\\\"highlight\\\">\";\r\n            }\r\n            var substring = this.text.substring(highlight.start, highlight.end);\r\n            htmlContent += this.supportCodicons ? renderCodicons(escape(substring)) : escape(substring);\r\n            htmlContent += '</span>';\r\n            pos = highlight.end;\r\n        }\r\n        if (pos < this.text.length) {\r\n            htmlContent += '<span>';\r\n            var substring = this.text.substring(pos);\r\n            htmlContent += this.supportCodicons ? renderCodicons(escape(substring)) : escape(substring);\r\n            htmlContent += '</span>';\r\n        }\r\n        this.domNode.innerHTML = htmlContent;\r\n        if (this.title) {\r\n            this.domNode.title = this.title;\r\n        }\r\n        else {\r\n            this.domNode.removeAttribute('title');\r\n        }\r\n        this.didEverRender = true;\r\n    };\r\n    HighlightedLabel.escapeNewLines = function (text, highlights) {\r\n        var total = 0;\r\n        var extra = 0;\r\n        return text.replace(/\\r\\n|\\r|\\n/g, function (match, offset) {\r\n            extra = match === '\\r\\n' ? -1 : 0;\r\n            offset += total;\r\n            for (var _i = 0, highlights_1 = highlights; _i < highlights_1.length; _i++) {\r\n                var highlight = highlights_1[_i];\r\n                if (highlight.end <= offset) {\r\n                    continue;\r\n                }\r\n                if (highlight.start >= offset) {\r\n                    highlight.start += extra;\r\n                }\r\n                if (highlight.end >= offset) {\r\n                    highlight.end += extra;\r\n                }\r\n            }\r\n            total += extra;\r\n            return '\\u23CE';\r\n        });\r\n    };\r\n    return HighlightedLabel;\r\n}());\r\nexport { HighlightedLabel };\r\n"]},"metadata":{},"sourceType":"module"}