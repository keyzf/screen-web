{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar IndentRulesSupport =\n/** @class */\nfunction () {\n  function IndentRulesSupport(indentationRules) {\n    this._indentationRules = indentationRules;\n  }\n\n  IndentRulesSupport.prototype.shouldIncrease = function (text) {\n    if (this._indentationRules) {\n      if (this._indentationRules.increaseIndentPattern && this._indentationRules.increaseIndentPattern.test(text)) {\n        return true;\n      } // if (this._indentationRules.indentNextLinePattern && this._indentationRules.indentNextLinePattern.test(text)) {\n      // \treturn true;\n      // }\n\n    }\n\n    return false;\n  };\n\n  IndentRulesSupport.prototype.shouldDecrease = function (text) {\n    if (this._indentationRules && this._indentationRules.decreaseIndentPattern && this._indentationRules.decreaseIndentPattern.test(text)) {\n      return true;\n    }\n\n    return false;\n  };\n\n  IndentRulesSupport.prototype.shouldIndentNextLine = function (text) {\n    if (this._indentationRules && this._indentationRules.indentNextLinePattern && this._indentationRules.indentNextLinePattern.test(text)) {\n      return true;\n    }\n\n    return false;\n  };\n\n  IndentRulesSupport.prototype.shouldIgnore = function (text) {\n    // the text matches `unIndentedLinePattern`\n    if (this._indentationRules && this._indentationRules.unIndentedLinePattern && this._indentationRules.unIndentedLinePattern.test(text)) {\n      return true;\n    }\n\n    return false;\n  };\n\n  IndentRulesSupport.prototype.getIndentMetadata = function (text) {\n    var ret = 0;\n\n    if (this.shouldIncrease(text)) {\n      ret += 1\n      /* INCREASE_MASK */\n      ;\n    }\n\n    if (this.shouldDecrease(text)) {\n      ret += 2\n      /* DECREASE_MASK */\n      ;\n    }\n\n    if (this.shouldIndentNextLine(text)) {\n      ret += 4\n      /* INDENT_NEXTLINE_MASK */\n      ;\n    }\n\n    if (this.shouldIgnore(text)) {\n      ret += 8\n      /* UNINDENT_MASK */\n      ;\n    }\n\n    return ret;\n  };\n\n  return IndentRulesSupport;\n}();\n\nexport { IndentRulesSupport };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/common/modes/supports/indentRules.js"],"names":["IndentRulesSupport","indentationRules","_indentationRules","prototype","shouldIncrease","text","increaseIndentPattern","test","shouldDecrease","decreaseIndentPattern","shouldIndentNextLine","indentNextLinePattern","shouldIgnore","unIndentedLinePattern","getIndentMetadata","ret"],"mappings":"AAAA;;;;AAIA,IAAIA,kBAAkB;AAAG;AAAe,YAAY;AAChD,WAASA,kBAAT,CAA4BC,gBAA5B,EAA8C;AAC1C,SAAKC,iBAAL,GAAyBD,gBAAzB;AACH;;AACDD,EAAAA,kBAAkB,CAACG,SAAnB,CAA6BC,cAA7B,GAA8C,UAAUC,IAAV,EAAgB;AAC1D,QAAI,KAAKH,iBAAT,EAA4B;AACxB,UAAI,KAAKA,iBAAL,CAAuBI,qBAAvB,IAAgD,KAAKJ,iBAAL,CAAuBI,qBAAvB,CAA6CC,IAA7C,CAAkDF,IAAlD,CAApD,EAA6G;AACzG,eAAO,IAAP;AACH,OAHuB,CAIxB;AACA;AACA;;AACH;;AACD,WAAO,KAAP;AACH,GAVD;;AAWAL,EAAAA,kBAAkB,CAACG,SAAnB,CAA6BK,cAA7B,GAA8C,UAAUH,IAAV,EAAgB;AAC1D,QAAI,KAAKH,iBAAL,IAA0B,KAAKA,iBAAL,CAAuBO,qBAAjD,IAA0E,KAAKP,iBAAL,CAAuBO,qBAAvB,CAA6CF,IAA7C,CAAkDF,IAAlD,CAA9E,EAAuI;AACnI,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH,GALD;;AAMAL,EAAAA,kBAAkB,CAACG,SAAnB,CAA6BO,oBAA7B,GAAoD,UAAUL,IAAV,EAAgB;AAChE,QAAI,KAAKH,iBAAL,IAA0B,KAAKA,iBAAL,CAAuBS,qBAAjD,IAA0E,KAAKT,iBAAL,CAAuBS,qBAAvB,CAA6CJ,IAA7C,CAAkDF,IAAlD,CAA9E,EAAuI;AACnI,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH,GALD;;AAMAL,EAAAA,kBAAkB,CAACG,SAAnB,CAA6BS,YAA7B,GAA4C,UAAUP,IAAV,EAAgB;AACxD;AACA,QAAI,KAAKH,iBAAL,IAA0B,KAAKA,iBAAL,CAAuBW,qBAAjD,IAA0E,KAAKX,iBAAL,CAAuBW,qBAAvB,CAA6CN,IAA7C,CAAkDF,IAAlD,CAA9E,EAAuI;AACnI,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH,GAND;;AAOAL,EAAAA,kBAAkB,CAACG,SAAnB,CAA6BW,iBAA7B,GAAiD,UAAUT,IAAV,EAAgB;AAC7D,QAAIU,GAAG,GAAG,CAAV;;AACA,QAAI,KAAKX,cAAL,CAAoBC,IAApB,CAAJ,EAA+B;AAC3BU,MAAAA,GAAG,IAAI;AAAE;AAAT;AACH;;AACD,QAAI,KAAKP,cAAL,CAAoBH,IAApB,CAAJ,EAA+B;AAC3BU,MAAAA,GAAG,IAAI;AAAE;AAAT;AACH;;AACD,QAAI,KAAKL,oBAAL,CAA0BL,IAA1B,CAAJ,EAAqC;AACjCU,MAAAA,GAAG,IAAI;AAAE;AAAT;AACH;;AACD,QAAI,KAAKH,YAAL,CAAkBP,IAAlB,CAAJ,EAA6B;AACzBU,MAAAA,GAAG,IAAI;AAAE;AAAT;AACH;;AACD,WAAOA,GAAP;AACH,GAfD;;AAgBA,SAAOf,kBAAP;AACH,CAnDuC,EAAxC;;AAoDA,SAASA,kBAAT","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar IndentRulesSupport = /** @class */ (function () {\r\n    function IndentRulesSupport(indentationRules) {\r\n        this._indentationRules = indentationRules;\r\n    }\r\n    IndentRulesSupport.prototype.shouldIncrease = function (text) {\r\n        if (this._indentationRules) {\r\n            if (this._indentationRules.increaseIndentPattern && this._indentationRules.increaseIndentPattern.test(text)) {\r\n                return true;\r\n            }\r\n            // if (this._indentationRules.indentNextLinePattern && this._indentationRules.indentNextLinePattern.test(text)) {\r\n            // \treturn true;\r\n            // }\r\n        }\r\n        return false;\r\n    };\r\n    IndentRulesSupport.prototype.shouldDecrease = function (text) {\r\n        if (this._indentationRules && this._indentationRules.decreaseIndentPattern && this._indentationRules.decreaseIndentPattern.test(text)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    IndentRulesSupport.prototype.shouldIndentNextLine = function (text) {\r\n        if (this._indentationRules && this._indentationRules.indentNextLinePattern && this._indentationRules.indentNextLinePattern.test(text)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    IndentRulesSupport.prototype.shouldIgnore = function (text) {\r\n        // the text matches `unIndentedLinePattern`\r\n        if (this._indentationRules && this._indentationRules.unIndentedLinePattern && this._indentationRules.unIndentedLinePattern.test(text)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    IndentRulesSupport.prototype.getIndentMetadata = function (text) {\r\n        var ret = 0;\r\n        if (this.shouldIncrease(text)) {\r\n            ret += 1 /* INCREASE_MASK */;\r\n        }\r\n        if (this.shouldDecrease(text)) {\r\n            ret += 2 /* DECREASE_MASK */;\r\n        }\r\n        if (this.shouldIndentNextLine(text)) {\r\n            ret += 4 /* INDENT_NEXTLINE_MASK */;\r\n        }\r\n        if (this.shouldIgnore(text)) {\r\n            ret += 8 /* UNINDENT_MASK */;\r\n        }\r\n        return ret;\r\n    };\r\n    return IndentRulesSupport;\r\n}());\r\nexport { IndentRulesSupport };\r\n"]},"metadata":{},"sourceType":"module"}