{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { SmoothScrollableElement } from '../../../../base/browser/ui/scrollbar/scrollableElement.js';\nimport { PartFingerprints, ViewPart } from '../../view/viewPart.js';\nimport { getThemeTypeSelector } from '../../../../platform/theme/common/themeService.js';\n\nvar EditorScrollbar =\n/** @class */\nfunction (_super) {\n  __extends(EditorScrollbar, _super);\n\n  function EditorScrollbar(context, linesContent, viewDomNode, overflowGuardDomNode) {\n    var _this = _super.call(this, context) || this;\n\n    var options = _this._context.configuration.options;\n    var scrollbar = options.get(78\n    /* scrollbar */\n    );\n    var mouseWheelScrollSensitivity = options.get(56\n    /* mouseWheelScrollSensitivity */\n    );\n    var fastScrollSensitivity = options.get(27\n    /* fastScrollSensitivity */\n    );\n    var scrollbarOptions = {\n      listenOnDomNode: viewDomNode.domNode,\n      className: 'editor-scrollable' + ' ' + getThemeTypeSelector(context.theme.type),\n      useShadows: false,\n      lazyRender: true,\n      vertical: scrollbar.vertical,\n      horizontal: scrollbar.horizontal,\n      verticalHasArrows: scrollbar.verticalHasArrows,\n      horizontalHasArrows: scrollbar.horizontalHasArrows,\n      verticalScrollbarSize: scrollbar.verticalScrollbarSize,\n      verticalSliderSize: scrollbar.verticalSliderSize,\n      horizontalScrollbarSize: scrollbar.horizontalScrollbarSize,\n      horizontalSliderSize: scrollbar.horizontalSliderSize,\n      handleMouseWheel: scrollbar.handleMouseWheel,\n      alwaysConsumeMouseWheel: scrollbar.alwaysConsumeMouseWheel,\n      arrowSize: scrollbar.arrowSize,\n      mouseWheelScrollSensitivity: mouseWheelScrollSensitivity,\n      fastScrollSensitivity: fastScrollSensitivity\n    };\n    _this.scrollbar = _this._register(new SmoothScrollableElement(linesContent.domNode, scrollbarOptions, _this._context.viewLayout.getScrollable()));\n    PartFingerprints.write(_this.scrollbar.getDomNode(), 5\n    /* ScrollableElement */\n    );\n    _this.scrollbarDomNode = createFastDomNode(_this.scrollbar.getDomNode());\n\n    _this.scrollbarDomNode.setPosition('absolute');\n\n    _this._setLayout(); // When having a zone widget that calls .focus() on one of its dom elements,\n    // the browser will try desperately to reveal that dom node, unexpectedly\n    // changing the .scrollTop of this.linesContent\n\n\n    var onBrowserDesperateReveal = function (domNode, lookAtScrollTop, lookAtScrollLeft) {\n      var newScrollPosition = {};\n\n      if (lookAtScrollTop) {\n        var deltaTop = domNode.scrollTop;\n\n        if (deltaTop) {\n          newScrollPosition.scrollTop = _this._context.viewLayout.getCurrentScrollTop() + deltaTop;\n          domNode.scrollTop = 0;\n        }\n      }\n\n      if (lookAtScrollLeft) {\n        var deltaLeft = domNode.scrollLeft;\n\n        if (deltaLeft) {\n          newScrollPosition.scrollLeft = _this._context.viewLayout.getCurrentScrollLeft() + deltaLeft;\n          domNode.scrollLeft = 0;\n        }\n      }\n\n      _this._context.viewLayout.setScrollPositionNow(newScrollPosition);\n    }; // I've seen this happen both on the view dom node & on the lines content dom node.\n\n\n    _this._register(dom.addDisposableListener(viewDomNode.domNode, 'scroll', function (e) {\n      return onBrowserDesperateReveal(viewDomNode.domNode, true, true);\n    }));\n\n    _this._register(dom.addDisposableListener(linesContent.domNode, 'scroll', function (e) {\n      return onBrowserDesperateReveal(linesContent.domNode, true, false);\n    }));\n\n    _this._register(dom.addDisposableListener(overflowGuardDomNode.domNode, 'scroll', function (e) {\n      return onBrowserDesperateReveal(overflowGuardDomNode.domNode, true, false);\n    }));\n\n    _this._register(dom.addDisposableListener(_this.scrollbarDomNode.domNode, 'scroll', function (e) {\n      return onBrowserDesperateReveal(_this.scrollbarDomNode.domNode, true, false);\n    }));\n\n    return _this;\n  }\n\n  EditorScrollbar.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n  };\n\n  EditorScrollbar.prototype._setLayout = function () {\n    var options = this._context.configuration.options;\n    var layoutInfo = options.get(107\n    /* layoutInfo */\n    );\n    this.scrollbarDomNode.setLeft(layoutInfo.contentLeft);\n    var minimap = options.get(54\n    /* minimap */\n    );\n    var side = minimap.side;\n\n    if (side === 'right') {\n      this.scrollbarDomNode.setWidth(layoutInfo.contentWidth + layoutInfo.minimapWidth);\n    } else {\n      this.scrollbarDomNode.setWidth(layoutInfo.contentWidth);\n    }\n\n    this.scrollbarDomNode.setHeight(layoutInfo.height);\n  };\n\n  EditorScrollbar.prototype.getOverviewRulerLayoutInfo = function () {\n    return this.scrollbar.getOverviewRulerLayoutInfo();\n  };\n\n  EditorScrollbar.prototype.getDomNode = function () {\n    return this.scrollbarDomNode;\n  };\n\n  EditorScrollbar.prototype.delegateVerticalScrollbarMouseDown = function (browserEvent) {\n    this.scrollbar.delegateVerticalScrollbarMouseDown(browserEvent);\n  }; // --- begin event handlers\n\n\n  EditorScrollbar.prototype.onConfigurationChanged = function (e) {\n    if (e.hasChanged(78\n    /* scrollbar */\n    ) || e.hasChanged(56\n    /* mouseWheelScrollSensitivity */\n    ) || e.hasChanged(27\n    /* fastScrollSensitivity */\n    )) {\n      var options = this._context.configuration.options;\n      var scrollbar = options.get(78\n      /* scrollbar */\n      );\n      var mouseWheelScrollSensitivity = options.get(56\n      /* mouseWheelScrollSensitivity */\n      );\n      var fastScrollSensitivity = options.get(27\n      /* fastScrollSensitivity */\n      );\n      var newOpts = {\n        handleMouseWheel: scrollbar.handleMouseWheel,\n        mouseWheelScrollSensitivity: mouseWheelScrollSensitivity,\n        fastScrollSensitivity: fastScrollSensitivity\n      };\n      this.scrollbar.updateOptions(newOpts);\n    }\n\n    if (e.hasChanged(107\n    /* layoutInfo */\n    )) {\n      this._setLayout();\n    }\n\n    return true;\n  };\n\n  EditorScrollbar.prototype.onScrollChanged = function (e) {\n    return true;\n  };\n\n  EditorScrollbar.prototype.onThemeChanged = function (e) {\n    this.scrollbar.updateClassName('editor-scrollable' + ' ' + getThemeTypeSelector(this._context.theme.type));\n    return true;\n  }; // --- end event handlers\n\n\n  EditorScrollbar.prototype.prepareRender = function (ctx) {// Nothing to do\n  };\n\n  EditorScrollbar.prototype.render = function (ctx) {\n    this.scrollbar.renderNow();\n  };\n\n  return EditorScrollbar;\n}(ViewPart);\n\nexport { EditorScrollbar };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/editorScrollbar/editorScrollbar.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","dom","createFastDomNode","SmoothScrollableElement","PartFingerprints","ViewPart","getThemeTypeSelector","EditorScrollbar","_super","context","linesContent","viewDomNode","overflowGuardDomNode","_this","call","options","_context","configuration","scrollbar","get","mouseWheelScrollSensitivity","fastScrollSensitivity","scrollbarOptions","listenOnDomNode","domNode","className","theme","type","useShadows","lazyRender","vertical","horizontal","verticalHasArrows","horizontalHasArrows","verticalScrollbarSize","verticalSliderSize","horizontalScrollbarSize","horizontalSliderSize","handleMouseWheel","alwaysConsumeMouseWheel","arrowSize","_register","viewLayout","getScrollable","write","getDomNode","scrollbarDomNode","setPosition","_setLayout","onBrowserDesperateReveal","lookAtScrollTop","lookAtScrollLeft","newScrollPosition","deltaTop","scrollTop","getCurrentScrollTop","deltaLeft","scrollLeft","getCurrentScrollLeft","setScrollPositionNow","addDisposableListener","e","dispose","layoutInfo","setLeft","contentLeft","minimap","side","setWidth","contentWidth","minimapWidth","setHeight","height","getOverviewRulerLayoutInfo","delegateVerticalScrollbarMouseDown","browserEvent","onConfigurationChanged","hasChanged","newOpts","updateOptions","onScrollChanged","onThemeChanged","updateClassName","prepareRender","ctx","render","renderNow"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport * as dom from '../../../../base/browser/dom.js';\r\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\r\nimport { SmoothScrollableElement } from '../../../../base/browser/ui/scrollbar/scrollableElement.js';\r\nimport { PartFingerprints, ViewPart } from '../../view/viewPart.js';\r\nimport { getThemeTypeSelector } from '../../../../platform/theme/common/themeService.js';\r\nvar EditorScrollbar = /** @class */ (function (_super) {\r\n    __extends(EditorScrollbar, _super);\r\n    function EditorScrollbar(context, linesContent, viewDomNode, overflowGuardDomNode) {\r\n        var _this = _super.call(this, context) || this;\r\n        var options = _this._context.configuration.options;\r\n        var scrollbar = options.get(78 /* scrollbar */);\r\n        var mouseWheelScrollSensitivity = options.get(56 /* mouseWheelScrollSensitivity */);\r\n        var fastScrollSensitivity = options.get(27 /* fastScrollSensitivity */);\r\n        var scrollbarOptions = {\r\n            listenOnDomNode: viewDomNode.domNode,\r\n            className: 'editor-scrollable' + ' ' + getThemeTypeSelector(context.theme.type),\r\n            useShadows: false,\r\n            lazyRender: true,\r\n            vertical: scrollbar.vertical,\r\n            horizontal: scrollbar.horizontal,\r\n            verticalHasArrows: scrollbar.verticalHasArrows,\r\n            horizontalHasArrows: scrollbar.horizontalHasArrows,\r\n            verticalScrollbarSize: scrollbar.verticalScrollbarSize,\r\n            verticalSliderSize: scrollbar.verticalSliderSize,\r\n            horizontalScrollbarSize: scrollbar.horizontalScrollbarSize,\r\n            horizontalSliderSize: scrollbar.horizontalSliderSize,\r\n            handleMouseWheel: scrollbar.handleMouseWheel,\r\n            alwaysConsumeMouseWheel: scrollbar.alwaysConsumeMouseWheel,\r\n            arrowSize: scrollbar.arrowSize,\r\n            mouseWheelScrollSensitivity: mouseWheelScrollSensitivity,\r\n            fastScrollSensitivity: fastScrollSensitivity,\r\n        };\r\n        _this.scrollbar = _this._register(new SmoothScrollableElement(linesContent.domNode, scrollbarOptions, _this._context.viewLayout.getScrollable()));\r\n        PartFingerprints.write(_this.scrollbar.getDomNode(), 5 /* ScrollableElement */);\r\n        _this.scrollbarDomNode = createFastDomNode(_this.scrollbar.getDomNode());\r\n        _this.scrollbarDomNode.setPosition('absolute');\r\n        _this._setLayout();\r\n        // When having a zone widget that calls .focus() on one of its dom elements,\r\n        // the browser will try desperately to reveal that dom node, unexpectedly\r\n        // changing the .scrollTop of this.linesContent\r\n        var onBrowserDesperateReveal = function (domNode, lookAtScrollTop, lookAtScrollLeft) {\r\n            var newScrollPosition = {};\r\n            if (lookAtScrollTop) {\r\n                var deltaTop = domNode.scrollTop;\r\n                if (deltaTop) {\r\n                    newScrollPosition.scrollTop = _this._context.viewLayout.getCurrentScrollTop() + deltaTop;\r\n                    domNode.scrollTop = 0;\r\n                }\r\n            }\r\n            if (lookAtScrollLeft) {\r\n                var deltaLeft = domNode.scrollLeft;\r\n                if (deltaLeft) {\r\n                    newScrollPosition.scrollLeft = _this._context.viewLayout.getCurrentScrollLeft() + deltaLeft;\r\n                    domNode.scrollLeft = 0;\r\n                }\r\n            }\r\n            _this._context.viewLayout.setScrollPositionNow(newScrollPosition);\r\n        };\r\n        // I've seen this happen both on the view dom node & on the lines content dom node.\r\n        _this._register(dom.addDisposableListener(viewDomNode.domNode, 'scroll', function (e) { return onBrowserDesperateReveal(viewDomNode.domNode, true, true); }));\r\n        _this._register(dom.addDisposableListener(linesContent.domNode, 'scroll', function (e) { return onBrowserDesperateReveal(linesContent.domNode, true, false); }));\r\n        _this._register(dom.addDisposableListener(overflowGuardDomNode.domNode, 'scroll', function (e) { return onBrowserDesperateReveal(overflowGuardDomNode.domNode, true, false); }));\r\n        _this._register(dom.addDisposableListener(_this.scrollbarDomNode.domNode, 'scroll', function (e) { return onBrowserDesperateReveal(_this.scrollbarDomNode.domNode, true, false); }));\r\n        return _this;\r\n    }\r\n    EditorScrollbar.prototype.dispose = function () {\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    EditorScrollbar.prototype._setLayout = function () {\r\n        var options = this._context.configuration.options;\r\n        var layoutInfo = options.get(107 /* layoutInfo */);\r\n        this.scrollbarDomNode.setLeft(layoutInfo.contentLeft);\r\n        var minimap = options.get(54 /* minimap */);\r\n        var side = minimap.side;\r\n        if (side === 'right') {\r\n            this.scrollbarDomNode.setWidth(layoutInfo.contentWidth + layoutInfo.minimapWidth);\r\n        }\r\n        else {\r\n            this.scrollbarDomNode.setWidth(layoutInfo.contentWidth);\r\n        }\r\n        this.scrollbarDomNode.setHeight(layoutInfo.height);\r\n    };\r\n    EditorScrollbar.prototype.getOverviewRulerLayoutInfo = function () {\r\n        return this.scrollbar.getOverviewRulerLayoutInfo();\r\n    };\r\n    EditorScrollbar.prototype.getDomNode = function () {\r\n        return this.scrollbarDomNode;\r\n    };\r\n    EditorScrollbar.prototype.delegateVerticalScrollbarMouseDown = function (browserEvent) {\r\n        this.scrollbar.delegateVerticalScrollbarMouseDown(browserEvent);\r\n    };\r\n    // --- begin event handlers\r\n    EditorScrollbar.prototype.onConfigurationChanged = function (e) {\r\n        if (e.hasChanged(78 /* scrollbar */)\r\n            || e.hasChanged(56 /* mouseWheelScrollSensitivity */)\r\n            || e.hasChanged(27 /* fastScrollSensitivity */)) {\r\n            var options = this._context.configuration.options;\r\n            var scrollbar = options.get(78 /* scrollbar */);\r\n            var mouseWheelScrollSensitivity = options.get(56 /* mouseWheelScrollSensitivity */);\r\n            var fastScrollSensitivity = options.get(27 /* fastScrollSensitivity */);\r\n            var newOpts = {\r\n                handleMouseWheel: scrollbar.handleMouseWheel,\r\n                mouseWheelScrollSensitivity: mouseWheelScrollSensitivity,\r\n                fastScrollSensitivity: fastScrollSensitivity\r\n            };\r\n            this.scrollbar.updateOptions(newOpts);\r\n        }\r\n        if (e.hasChanged(107 /* layoutInfo */)) {\r\n            this._setLayout();\r\n        }\r\n        return true;\r\n    };\r\n    EditorScrollbar.prototype.onScrollChanged = function (e) {\r\n        return true;\r\n    };\r\n    EditorScrollbar.prototype.onThemeChanged = function (e) {\r\n        this.scrollbar.updateClassName('editor-scrollable' + ' ' + getThemeTypeSelector(this._context.theme.type));\r\n        return true;\r\n    };\r\n    // --- end event handlers\r\n    EditorScrollbar.prototype.prepareRender = function (ctx) {\r\n        // Nothing to do\r\n    };\r\n    EditorScrollbar.prototype.render = function (ctx) {\r\n        this.scrollbar.renderNow();\r\n    };\r\n    return EditorScrollbar;\r\n}(ViewPart));\r\nexport { EditorScrollbar };\r\n"]},"metadata":{},"sourceType":"module"}