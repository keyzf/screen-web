{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { UnresolvedSchema } from './jsonSchemaService.js';\nimport { ErrorCode, Diagnostic, DiagnosticSeverity, Range } from '../jsonLanguageTypes.js';\nimport * as nls from './../../../fillers/vscode-nls.js';\nimport { isBoolean } from '../utils/objects.js';\nvar localize = nls.loadMessageBundle();\n\nvar JSONValidation =\n/** @class */\nfunction () {\n  function JSONValidation(jsonSchemaService, promiseConstructor) {\n    this.jsonSchemaService = jsonSchemaService;\n    this.promise = promiseConstructor;\n    this.validationEnabled = true;\n  }\n\n  JSONValidation.prototype.configure = function (raw) {\n    if (raw) {\n      this.validationEnabled = raw.validate;\n      this.commentSeverity = raw.allowComments ? void 0 : DiagnosticSeverity.Error;\n    }\n  };\n\n  JSONValidation.prototype.doValidation = function (textDocument, jsonDocument, documentSettings, schema) {\n    var _this = this;\n\n    if (!this.validationEnabled) {\n      return this.promise.resolve([]);\n    }\n\n    var diagnostics = [];\n    var added = {};\n\n    var addProblem = function (problem) {\n      // remove duplicated messages\n      var signature = problem.range.start.line + ' ' + problem.range.start.character + ' ' + problem.message;\n\n      if (!added[signature]) {\n        added[signature] = true;\n        diagnostics.push(problem);\n      }\n    };\n\n    var getDiagnostics = function (schema) {\n      var trailingCommaSeverity = documentSettings ? toDiagnosticSeverity(documentSettings.trailingCommas) : DiagnosticSeverity.Error;\n      var commentSeverity = documentSettings ? toDiagnosticSeverity(documentSettings.comments) : _this.commentSeverity;\n\n      if (schema) {\n        if (schema.errors.length && jsonDocument.root) {\n          var astRoot = jsonDocument.root;\n          var property = astRoot.type === 'object' ? astRoot.properties[0] : null;\n\n          if (property && property.keyNode.value === '$schema') {\n            var node = property.valueNode || property;\n            var range = Range.create(textDocument.positionAt(node.offset), textDocument.positionAt(node.offset + node.length));\n            addProblem(Diagnostic.create(range, schema.errors[0], DiagnosticSeverity.Warning, ErrorCode.SchemaResolveError));\n          } else {\n            var range = Range.create(textDocument.positionAt(astRoot.offset), textDocument.positionAt(astRoot.offset + 1));\n            addProblem(Diagnostic.create(range, schema.errors[0], DiagnosticSeverity.Warning, ErrorCode.SchemaResolveError));\n          }\n        } else {\n          var semanticErrors = jsonDocument.validate(textDocument, schema.schema);\n\n          if (semanticErrors) {\n            semanticErrors.forEach(addProblem);\n          }\n        }\n\n        if (schemaAllowsComments(schema.schema)) {\n          commentSeverity = void 0;\n        }\n\n        if (schemaAllowsTrailingCommas(schema.schema)) {\n          trailingCommaSeverity = void 0;\n        }\n      }\n\n      for (var _i = 0, _a = jsonDocument.syntaxErrors; _i < _a.length; _i++) {\n        var p = _a[_i];\n\n        if (p.code === ErrorCode.TrailingComma) {\n          if (typeof trailingCommaSeverity !== 'number') {\n            continue;\n          }\n\n          p.severity = trailingCommaSeverity;\n        }\n\n        addProblem(p);\n      }\n\n      if (typeof commentSeverity === 'number') {\n        var message_1 = localize('InvalidCommentToken', 'Comments are not permitted in JSON.');\n        jsonDocument.comments.forEach(function (c) {\n          addProblem(Diagnostic.create(c, message_1, commentSeverity, ErrorCode.CommentNotPermitted));\n        });\n      }\n\n      return diagnostics;\n    };\n\n    if (schema) {\n      var id = schema.id || 'schemaservice://untitled/' + idCounter++;\n      return this.jsonSchemaService.resolveSchemaContent(new UnresolvedSchema(schema), id, {}).then(function (resolvedSchema) {\n        return getDiagnostics(resolvedSchema);\n      });\n    }\n\n    return this.jsonSchemaService.getSchemaForResource(textDocument.uri, jsonDocument).then(function (schema) {\n      return getDiagnostics(schema);\n    });\n  };\n\n  return JSONValidation;\n}();\n\nexport { JSONValidation };\nvar idCounter = 0;\n\nfunction schemaAllowsComments(schemaRef) {\n  if (schemaRef && typeof schemaRef === 'object') {\n    if (isBoolean(schemaRef.allowComments)) {\n      return schemaRef.allowComments;\n    }\n\n    if (schemaRef.allOf) {\n      for (var _i = 0, _a = schemaRef.allOf; _i < _a.length; _i++) {\n        var schema = _a[_i];\n        var allow = schemaAllowsComments(schema);\n\n        if (isBoolean(allow)) {\n          return allow;\n        }\n      }\n    }\n  }\n\n  return undefined;\n}\n\nfunction schemaAllowsTrailingCommas(schemaRef) {\n  if (schemaRef && typeof schemaRef === 'object') {\n    if (isBoolean(schemaRef.allowTrailingCommas)) {\n      return schemaRef.allowTrailingCommas;\n    }\n\n    if (isBoolean(schemaRef['allowsTrailingCommas'])) {\n      // deprecated\n      return schemaRef['allowsTrailingCommas'];\n    }\n\n    if (schemaRef.allOf) {\n      for (var _i = 0, _a = schemaRef.allOf; _i < _a.length; _i++) {\n        var schema = _a[_i];\n        var allow = schemaAllowsTrailingCommas(schema);\n\n        if (isBoolean(allow)) {\n          return allow;\n        }\n      }\n    }\n  }\n\n  return undefined;\n}\n\nfunction toDiagnosticSeverity(severityLevel) {\n  switch (severityLevel) {\n    case 'error':\n      return DiagnosticSeverity.Error;\n\n    case 'warning':\n      return DiagnosticSeverity.Warning;\n\n    case 'ignore':\n      return void 0;\n  }\n\n  return void 0;\n}","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/services/jsonValidation.js"],"names":["UnresolvedSchema","ErrorCode","Diagnostic","DiagnosticSeverity","Range","nls","isBoolean","localize","loadMessageBundle","JSONValidation","jsonSchemaService","promiseConstructor","promise","validationEnabled","prototype","configure","raw","validate","commentSeverity","allowComments","Error","doValidation","textDocument","jsonDocument","documentSettings","schema","_this","resolve","diagnostics","added","addProblem","problem","signature","range","start","line","character","message","push","getDiagnostics","trailingCommaSeverity","toDiagnosticSeverity","trailingCommas","comments","errors","length","root","astRoot","property","type","properties","keyNode","value","node","valueNode","create","positionAt","offset","Warning","SchemaResolveError","semanticErrors","forEach","schemaAllowsComments","schemaAllowsTrailingCommas","_i","_a","syntaxErrors","p","code","TrailingComma","severity","message_1","c","CommentNotPermitted","id","idCounter","resolveSchemaContent","then","resolvedSchema","getSchemaForResource","uri","schemaRef","allOf","allow","undefined","allowTrailingCommas","severityLevel"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { UnresolvedSchema } from './jsonSchemaService.js';\nimport { ErrorCode, Diagnostic, DiagnosticSeverity, Range } from '../jsonLanguageTypes.js';\nimport * as nls from './../../../fillers/vscode-nls.js';\nimport { isBoolean } from '../utils/objects.js';\nvar localize = nls.loadMessageBundle();\nvar JSONValidation = /** @class */ (function () {\n    function JSONValidation(jsonSchemaService, promiseConstructor) {\n        this.jsonSchemaService = jsonSchemaService;\n        this.promise = promiseConstructor;\n        this.validationEnabled = true;\n    }\n    JSONValidation.prototype.configure = function (raw) {\n        if (raw) {\n            this.validationEnabled = raw.validate;\n            this.commentSeverity = raw.allowComments ? void 0 : DiagnosticSeverity.Error;\n        }\n    };\n    JSONValidation.prototype.doValidation = function (textDocument, jsonDocument, documentSettings, schema) {\n        var _this = this;\n        if (!this.validationEnabled) {\n            return this.promise.resolve([]);\n        }\n        var diagnostics = [];\n        var added = {};\n        var addProblem = function (problem) {\n            // remove duplicated messages\n            var signature = problem.range.start.line + ' ' + problem.range.start.character + ' ' + problem.message;\n            if (!added[signature]) {\n                added[signature] = true;\n                diagnostics.push(problem);\n            }\n        };\n        var getDiagnostics = function (schema) {\n            var trailingCommaSeverity = documentSettings ? toDiagnosticSeverity(documentSettings.trailingCommas) : DiagnosticSeverity.Error;\n            var commentSeverity = documentSettings ? toDiagnosticSeverity(documentSettings.comments) : _this.commentSeverity;\n            if (schema) {\n                if (schema.errors.length && jsonDocument.root) {\n                    var astRoot = jsonDocument.root;\n                    var property = astRoot.type === 'object' ? astRoot.properties[0] : null;\n                    if (property && property.keyNode.value === '$schema') {\n                        var node = property.valueNode || property;\n                        var range = Range.create(textDocument.positionAt(node.offset), textDocument.positionAt(node.offset + node.length));\n                        addProblem(Diagnostic.create(range, schema.errors[0], DiagnosticSeverity.Warning, ErrorCode.SchemaResolveError));\n                    }\n                    else {\n                        var range = Range.create(textDocument.positionAt(astRoot.offset), textDocument.positionAt(astRoot.offset + 1));\n                        addProblem(Diagnostic.create(range, schema.errors[0], DiagnosticSeverity.Warning, ErrorCode.SchemaResolveError));\n                    }\n                }\n                else {\n                    var semanticErrors = jsonDocument.validate(textDocument, schema.schema);\n                    if (semanticErrors) {\n                        semanticErrors.forEach(addProblem);\n                    }\n                }\n                if (schemaAllowsComments(schema.schema)) {\n                    commentSeverity = void 0;\n                }\n                if (schemaAllowsTrailingCommas(schema.schema)) {\n                    trailingCommaSeverity = void 0;\n                }\n            }\n            for (var _i = 0, _a = jsonDocument.syntaxErrors; _i < _a.length; _i++) {\n                var p = _a[_i];\n                if (p.code === ErrorCode.TrailingComma) {\n                    if (typeof trailingCommaSeverity !== 'number') {\n                        continue;\n                    }\n                    p.severity = trailingCommaSeverity;\n                }\n                addProblem(p);\n            }\n            if (typeof commentSeverity === 'number') {\n                var message_1 = localize('InvalidCommentToken', 'Comments are not permitted in JSON.');\n                jsonDocument.comments.forEach(function (c) {\n                    addProblem(Diagnostic.create(c, message_1, commentSeverity, ErrorCode.CommentNotPermitted));\n                });\n            }\n            return diagnostics;\n        };\n        if (schema) {\n            var id = schema.id || ('schemaservice://untitled/' + idCounter++);\n            return this.jsonSchemaService.resolveSchemaContent(new UnresolvedSchema(schema), id, {}).then(function (resolvedSchema) {\n                return getDiagnostics(resolvedSchema);\n            });\n        }\n        return this.jsonSchemaService.getSchemaForResource(textDocument.uri, jsonDocument).then(function (schema) {\n            return getDiagnostics(schema);\n        });\n    };\n    return JSONValidation;\n}());\nexport { JSONValidation };\nvar idCounter = 0;\nfunction schemaAllowsComments(schemaRef) {\n    if (schemaRef && typeof schemaRef === 'object') {\n        if (isBoolean(schemaRef.allowComments)) {\n            return schemaRef.allowComments;\n        }\n        if (schemaRef.allOf) {\n            for (var _i = 0, _a = schemaRef.allOf; _i < _a.length; _i++) {\n                var schema = _a[_i];\n                var allow = schemaAllowsComments(schema);\n                if (isBoolean(allow)) {\n                    return allow;\n                }\n            }\n        }\n    }\n    return undefined;\n}\nfunction schemaAllowsTrailingCommas(schemaRef) {\n    if (schemaRef && typeof schemaRef === 'object') {\n        if (isBoolean(schemaRef.allowTrailingCommas)) {\n            return schemaRef.allowTrailingCommas;\n        }\n        if (isBoolean(schemaRef['allowsTrailingCommas'])) { // deprecated\n            return schemaRef['allowsTrailingCommas'];\n        }\n        if (schemaRef.allOf) {\n            for (var _i = 0, _a = schemaRef.allOf; _i < _a.length; _i++) {\n                var schema = _a[_i];\n                var allow = schemaAllowsTrailingCommas(schema);\n                if (isBoolean(allow)) {\n                    return allow;\n                }\n            }\n        }\n    }\n    return undefined;\n}\nfunction toDiagnosticSeverity(severityLevel) {\n    switch (severityLevel) {\n        case 'error': return DiagnosticSeverity.Error;\n        case 'warning': return DiagnosticSeverity.Warning;\n        case 'ignore': return void 0;\n    }\n    return void 0;\n}\n"]},"metadata":{},"sourceType":"module"}