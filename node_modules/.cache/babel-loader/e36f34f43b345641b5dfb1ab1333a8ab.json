{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport Severity from '../../../base/common/severity.js';\nimport { registerThemingParticipant } from '../../theme/common/themeService.js';\nimport { problemsErrorIconForeground, problemsInfoIconForeground, problemsWarningIconForeground } from '../../theme/common/colorRegistry.js';\nexport var SeverityIcon;\n\n(function (SeverityIcon) {\n  function className(severity) {\n    switch (severity) {\n      case Severity.Ignore:\n        return 'severity-ignore codicon-info';\n\n      case Severity.Info:\n        return 'codicon-info';\n\n      case Severity.Warning:\n        return 'codicon-warning';\n\n      case Severity.Error:\n        return 'codicon-error';\n    }\n\n    return '';\n  }\n\n  SeverityIcon.className = className;\n})(SeverityIcon || (SeverityIcon = {}));\n\nregisterThemingParticipant(function (theme, collector) {\n  var errorIconForeground = theme.getColor(problemsErrorIconForeground);\n\n  if (errorIconForeground) {\n    collector.addRule(\"\\n\\t\\t\\t.monaco-editor .zone-widget .codicon-error,\\n\\t\\t\\t.markers-panel .marker-icon.codicon-error,\\n\\t\\t\\t.extensions-viewlet > .extensions .codicon-error,\\n\\t\\t\\t.monaco-dialog-box .dialog-message-row .codicon-error {\\n\\t\\t\\t\\tcolor: \" + errorIconForeground + \";\\n\\t\\t\\t}\\n\\t\\t\");\n  }\n\n  var warningIconForeground = theme.getColor(problemsWarningIconForeground);\n\n  if (errorIconForeground) {\n    collector.addRule(\"\\n\\t\\t\\t.monaco-editor .zone-widget .codicon-warning,\\n\\t\\t\\t.markers-panel .marker-icon.codicon-warning,\\n\\t\\t\\t.extensions-viewlet > .extensions .codicon-warning,\\n\\t\\t\\t.extension-editor .codicon-warning,\\n\\t\\t\\t.monaco-dialog-box .dialog-message-row .codicon-warning {\\n\\t\\t\\t\\tcolor: \" + warningIconForeground + \";\\n\\t\\t\\t}\\n\\t\\t\");\n  }\n\n  var infoIconForeground = theme.getColor(problemsInfoIconForeground);\n\n  if (errorIconForeground) {\n    collector.addRule(\"\\n\\t\\t\\t.monaco-editor .zone-widget .codicon-info,\\n\\t\\t\\t.markers-panel .marker-icon.codicon-info,\\n\\t\\t\\t.extensions-viewlet > .extensions .codicon-info,\\n\\t\\t\\t.extension-editor .codicon-info,\\n\\t\\t\\t.monaco-dialog-box .dialog-message-row .codicon-info {\\n\\t\\t\\t\\tcolor: \" + infoIconForeground + \";\\n\\t\\t\\t}\\n\\t\\t\");\n  }\n});","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/platform/severityIcon/common/severityIcon.js"],"names":["Severity","registerThemingParticipant","problemsErrorIconForeground","problemsInfoIconForeground","problemsWarningIconForeground","SeverityIcon","className","severity","Ignore","Info","Warning","Error","theme","collector","errorIconForeground","getColor","addRule","warningIconForeground","infoIconForeground"],"mappings":"AAAA;;;;AAIA,OAAOA,QAAP,MAAqB,kCAArB;AACA,SAASC,0BAAT,QAA2C,oCAA3C;AACA,SAASC,2BAAT,EAAsCC,0BAAtC,EAAkEC,6BAAlE,QAAuG,qCAAvG;AACA,OAAO,IAAIC,YAAJ;;AACP,CAAC,UAAUA,YAAV,EAAwB;AACrB,WAASC,SAAT,CAAmBC,QAAnB,EAA6B;AACzB,YAAQA,QAAR;AACI,WAAKP,QAAQ,CAACQ,MAAd;AACI,eAAO,8BAAP;;AACJ,WAAKR,QAAQ,CAACS,IAAd;AACI,eAAO,cAAP;;AACJ,WAAKT,QAAQ,CAACU,OAAd;AACI,eAAO,iBAAP;;AACJ,WAAKV,QAAQ,CAACW,KAAd;AACI,eAAO,eAAP;AARR;;AAUA,WAAO,EAAP;AACH;;AACDN,EAAAA,YAAY,CAACC,SAAb,GAAyBA,SAAzB;AACH,CAfD,EAeGD,YAAY,KAAKA,YAAY,GAAG,EAApB,CAff;;AAgBAJ,0BAA0B,CAAC,UAAUW,KAAV,EAAiBC,SAAjB,EAA4B;AACnD,MAAIC,mBAAmB,GAAGF,KAAK,CAACG,QAAN,CAAeb,2BAAf,CAA1B;;AACA,MAAIY,mBAAJ,EAAyB;AACrBD,IAAAA,SAAS,CAACG,OAAV,CAAkB,mPAAmPF,mBAAnP,GAAyQ,kBAA3R;AACH;;AACD,MAAIG,qBAAqB,GAAGL,KAAK,CAACG,QAAN,CAAeX,6BAAf,CAA5B;;AACA,MAAIU,mBAAJ,EAAyB;AACrBD,IAAAA,SAAS,CAACG,OAAV,CAAkB,sSAAsSC,qBAAtS,GAA8T,kBAAhV;AACH;;AACD,MAAIC,kBAAkB,GAAGN,KAAK,CAACG,QAAN,CAAeZ,0BAAf,CAAzB;;AACA,MAAIW,mBAAJ,EAAyB;AACrBD,IAAAA,SAAS,CAACG,OAAV,CAAkB,uRAAuRE,kBAAvR,GAA4S,kBAA9T;AACH;AACJ,CAbyB,CAA1B","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport Severity from '../../../base/common/severity.js';\r\nimport { registerThemingParticipant } from '../../theme/common/themeService.js';\r\nimport { problemsErrorIconForeground, problemsInfoIconForeground, problemsWarningIconForeground } from '../../theme/common/colorRegistry.js';\r\nexport var SeverityIcon;\r\n(function (SeverityIcon) {\r\n    function className(severity) {\r\n        switch (severity) {\r\n            case Severity.Ignore:\r\n                return 'severity-ignore codicon-info';\r\n            case Severity.Info:\r\n                return 'codicon-info';\r\n            case Severity.Warning:\r\n                return 'codicon-warning';\r\n            case Severity.Error:\r\n                return 'codicon-error';\r\n        }\r\n        return '';\r\n    }\r\n    SeverityIcon.className = className;\r\n})(SeverityIcon || (SeverityIcon = {}));\r\nregisterThemingParticipant(function (theme, collector) {\r\n    var errorIconForeground = theme.getColor(problemsErrorIconForeground);\r\n    if (errorIconForeground) {\r\n        collector.addRule(\"\\n\\t\\t\\t.monaco-editor .zone-widget .codicon-error,\\n\\t\\t\\t.markers-panel .marker-icon.codicon-error,\\n\\t\\t\\t.extensions-viewlet > .extensions .codicon-error,\\n\\t\\t\\t.monaco-dialog-box .dialog-message-row .codicon-error {\\n\\t\\t\\t\\tcolor: \" + errorIconForeground + \";\\n\\t\\t\\t}\\n\\t\\t\");\r\n    }\r\n    var warningIconForeground = theme.getColor(problemsWarningIconForeground);\r\n    if (errorIconForeground) {\r\n        collector.addRule(\"\\n\\t\\t\\t.monaco-editor .zone-widget .codicon-warning,\\n\\t\\t\\t.markers-panel .marker-icon.codicon-warning,\\n\\t\\t\\t.extensions-viewlet > .extensions .codicon-warning,\\n\\t\\t\\t.extension-editor .codicon-warning,\\n\\t\\t\\t.monaco-dialog-box .dialog-message-row .codicon-warning {\\n\\t\\t\\t\\tcolor: \" + warningIconForeground + \";\\n\\t\\t\\t}\\n\\t\\t\");\r\n    }\r\n    var infoIconForeground = theme.getColor(problemsInfoIconForeground);\r\n    if (errorIconForeground) {\r\n        collector.addRule(\"\\n\\t\\t\\t.monaco-editor .zone-widget .codicon-info,\\n\\t\\t\\t.markers-panel .marker-icon.codicon-info,\\n\\t\\t\\t.extensions-viewlet > .extensions .codicon-info,\\n\\t\\t\\t.extension-editor .codicon-info,\\n\\t\\t\\t.monaco-dialog-box .dialog-message-row .codicon-info {\\n\\t\\t\\t\\tcolor: \" + infoIconForeground + \";\\n\\t\\t\\t}\\n\\t\\t\");\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}