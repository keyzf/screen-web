{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../common/event.js';\n\nvar WindowManager =\n/** @class */\nfunction () {\n  function WindowManager() {\n    // --- Zoom Level\n    this._zoomLevel = 0;\n    this._lastZoomLevelChangeTime = 0;\n    this._onDidChangeZoomLevel = new Emitter();\n    this.onDidChangeZoomLevel = this._onDidChangeZoomLevel.event;\n  }\n\n  WindowManager.prototype.getZoomLevel = function () {\n    return this._zoomLevel;\n  };\n\n  WindowManager.prototype.getTimeSinceLastZoomLevelChanged = function () {\n    return Date.now() - this._lastZoomLevelChangeTime;\n  }; // --- Pixel Ratio\n\n\n  WindowManager.prototype.getPixelRatio = function () {\n    var ctx = document.createElement('canvas').getContext('2d');\n    var dpr = window.devicePixelRatio || 1;\n    var bsr = ctx.webkitBackingStorePixelRatio || ctx.mozBackingStorePixelRatio || ctx.msBackingStorePixelRatio || ctx.oBackingStorePixelRatio || ctx.backingStorePixelRatio || 1;\n    return dpr / bsr;\n  };\n\n  WindowManager.INSTANCE = new WindowManager();\n  return WindowManager;\n}();\n\nexport function getZoomLevel() {\n  return WindowManager.INSTANCE.getZoomLevel();\n}\n/** Returns the time (in ms) since the zoom level was changed */\n\nexport function getTimeSinceLastZoomLevelChanged() {\n  return WindowManager.INSTANCE.getTimeSinceLastZoomLevelChanged();\n}\nexport function onDidChangeZoomLevel(callback) {\n  return WindowManager.INSTANCE.onDidChangeZoomLevel(callback);\n}\nexport function getPixelRatio() {\n  return WindowManager.INSTANCE.getPixelRatio();\n}\nvar userAgent = navigator.userAgent;\nexport var isIE = userAgent.indexOf('Trident') >= 0;\nexport var isEdge = userAgent.indexOf('Edge/') >= 0;\nexport var isEdgeOrIE = isIE || isEdge;\nexport var isFirefox = userAgent.indexOf('Firefox') >= 0;\nexport var isWebKit = userAgent.indexOf('AppleWebKit') >= 0;\nexport var isChrome = userAgent.indexOf('Chrome') >= 0;\nexport var isSafari = !isChrome && userAgent.indexOf('Safari') >= 0;\nexport var isWebkitWebView = !isChrome && !isSafari && isWebKit;\nexport var isIPad = userAgent.indexOf('iPad') >= 0 || isSafari && navigator.maxTouchPoints > 0;\nexport var isEdgeWebView = isEdge && userAgent.indexOf('WebView/') >= 0;\nexport var isStandalone = window.matchMedia && window.matchMedia('(display-mode: standalone)').matches;","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/base/browser/browser.js"],"names":["Emitter","WindowManager","_zoomLevel","_lastZoomLevelChangeTime","_onDidChangeZoomLevel","onDidChangeZoomLevel","event","prototype","getZoomLevel","getTimeSinceLastZoomLevelChanged","Date","now","getPixelRatio","ctx","document","createElement","getContext","dpr","window","devicePixelRatio","bsr","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","INSTANCE","callback","userAgent","navigator","isIE","indexOf","isEdge","isEdgeOrIE","isFirefox","isWebKit","isChrome","isSafari","isWebkitWebView","isIPad","maxTouchPoints","isEdgeWebView","isStandalone","matchMedia","matches"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Emitter } from '../common/event.js';\r\nvar WindowManager = /** @class */ (function () {\r\n    function WindowManager() {\r\n        // --- Zoom Level\r\n        this._zoomLevel = 0;\r\n        this._lastZoomLevelChangeTime = 0;\r\n        this._onDidChangeZoomLevel = new Emitter();\r\n        this.onDidChangeZoomLevel = this._onDidChangeZoomLevel.event;\r\n    }\r\n    WindowManager.prototype.getZoomLevel = function () {\r\n        return this._zoomLevel;\r\n    };\r\n    WindowManager.prototype.getTimeSinceLastZoomLevelChanged = function () {\r\n        return Date.now() - this._lastZoomLevelChangeTime;\r\n    };\r\n    // --- Pixel Ratio\r\n    WindowManager.prototype.getPixelRatio = function () {\r\n        var ctx = document.createElement('canvas').getContext('2d');\r\n        var dpr = window.devicePixelRatio || 1;\r\n        var bsr = ctx.webkitBackingStorePixelRatio ||\r\n            ctx.mozBackingStorePixelRatio ||\r\n            ctx.msBackingStorePixelRatio ||\r\n            ctx.oBackingStorePixelRatio ||\r\n            ctx.backingStorePixelRatio || 1;\r\n        return dpr / bsr;\r\n    };\r\n    WindowManager.INSTANCE = new WindowManager();\r\n    return WindowManager;\r\n}());\r\nexport function getZoomLevel() {\r\n    return WindowManager.INSTANCE.getZoomLevel();\r\n}\r\n/** Returns the time (in ms) since the zoom level was changed */\r\nexport function getTimeSinceLastZoomLevelChanged() {\r\n    return WindowManager.INSTANCE.getTimeSinceLastZoomLevelChanged();\r\n}\r\nexport function onDidChangeZoomLevel(callback) {\r\n    return WindowManager.INSTANCE.onDidChangeZoomLevel(callback);\r\n}\r\nexport function getPixelRatio() {\r\n    return WindowManager.INSTANCE.getPixelRatio();\r\n}\r\nvar userAgent = navigator.userAgent;\r\nexport var isIE = (userAgent.indexOf('Trident') >= 0);\r\nexport var isEdge = (userAgent.indexOf('Edge/') >= 0);\r\nexport var isEdgeOrIE = isIE || isEdge;\r\nexport var isFirefox = (userAgent.indexOf('Firefox') >= 0);\r\nexport var isWebKit = (userAgent.indexOf('AppleWebKit') >= 0);\r\nexport var isChrome = (userAgent.indexOf('Chrome') >= 0);\r\nexport var isSafari = (!isChrome && (userAgent.indexOf('Safari') >= 0));\r\nexport var isWebkitWebView = (!isChrome && !isSafari && isWebKit);\r\nexport var isIPad = (userAgent.indexOf('iPad') >= 0 || (isSafari && navigator.maxTouchPoints > 0));\r\nexport var isEdgeWebView = isEdge && (userAgent.indexOf('WebView/') >= 0);\r\nexport var isStandalone = (window.matchMedia && window.matchMedia('(display-mode: standalone)').matches);\r\n"]},"metadata":{},"sourceType":"module"}