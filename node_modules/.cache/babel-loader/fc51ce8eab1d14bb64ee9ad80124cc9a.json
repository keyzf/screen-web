{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as nls from '../../../nls.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport * as objects from '../../../base/common/objects.js';\nimport * as arrays from '../../../base/common/arrays.js';\nimport { editorOptionsRegistry, ValidatedEditorOptions, ConfigurationChangedEvent, EDITOR_MODEL_DEFAULTS } from './editorOptions.js';\nimport { EditorZoom } from './editorZoom.js';\nimport { BareFontInfo } from './fontInfo.js';\nimport { Extensions } from '../../../platform/configuration/common/configurationRegistry.js';\nimport { Registry } from '../../../platform/registry/common/platform.js';\nimport { forEach } from '../../../base/common/collections.js';\nexport var TabFocus = new (\n/** @class */\nfunction () {\n  function class_1() {\n    this._tabFocus = false;\n    this._onDidChangeTabFocus = new Emitter();\n    this.onDidChangeTabFocus = this._onDidChangeTabFocus.event;\n  }\n\n  class_1.prototype.getTabFocusMode = function () {\n    return this._tabFocus;\n  };\n\n  class_1.prototype.setTabFocusMode = function (tabFocusMode) {\n    if (this._tabFocus === tabFocusMode) {\n      return;\n    }\n\n    this._tabFocus = tabFocusMode;\n\n    this._onDidChangeTabFocus.fire(this._tabFocus);\n  };\n\n  return class_1;\n}())();\nvar hasOwnProperty = Object.hasOwnProperty;\n\nvar ComputedEditorOptions =\n/** @class */\nfunction () {\n  function ComputedEditorOptions() {\n    this._values = [];\n  }\n\n  ComputedEditorOptions.prototype._read = function (id) {\n    return this._values[id];\n  };\n\n  ComputedEditorOptions.prototype.get = function (id) {\n    return this._values[id];\n  };\n\n  ComputedEditorOptions.prototype._write = function (id, value) {\n    this._values[id] = value;\n  };\n\n  return ComputedEditorOptions;\n}();\n\nexport { ComputedEditorOptions };\n\nvar RawEditorOptions =\n/** @class */\nfunction () {\n  function RawEditorOptions() {\n    this._values = [];\n  }\n\n  RawEditorOptions.prototype._read = function (id) {\n    return this._values[id];\n  };\n\n  RawEditorOptions.prototype._write = function (id, value) {\n    this._values[id] = value;\n  };\n\n  return RawEditorOptions;\n}();\n\nvar EditorConfiguration2 =\n/** @class */\nfunction () {\n  function EditorConfiguration2() {}\n\n  EditorConfiguration2.readOptions = function (_options) {\n    var options = _options;\n    var result = new RawEditorOptions();\n\n    for (var _i = 0, editorOptionsRegistry_2 = editorOptionsRegistry; _i < editorOptionsRegistry_2.length; _i++) {\n      var editorOption = editorOptionsRegistry_2[_i];\n      var value = editorOption.name === '_never_' ? undefined : options[editorOption.name];\n\n      result._write(editorOption.id, value);\n    }\n\n    return result;\n  };\n\n  EditorConfiguration2.validateOptions = function (options) {\n    var result = new ValidatedEditorOptions();\n\n    for (var _i = 0, editorOptionsRegistry_3 = editorOptionsRegistry; _i < editorOptionsRegistry_3.length; _i++) {\n      var editorOption = editorOptionsRegistry_3[_i];\n\n      result._write(editorOption.id, editorOption.validate(options._read(editorOption.id)));\n    }\n\n    return result;\n  };\n\n  EditorConfiguration2.computeOptions = function (options, env) {\n    var result = new ComputedEditorOptions();\n\n    for (var _i = 0, editorOptionsRegistry_4 = editorOptionsRegistry; _i < editorOptionsRegistry_4.length; _i++) {\n      var editorOption = editorOptionsRegistry_4[_i];\n\n      result._write(editorOption.id, editorOption.compute(env, result, options._read(editorOption.id)));\n    }\n\n    return result;\n  };\n\n  EditorConfiguration2._deepEquals = function (a, b) {\n    if (typeof a !== 'object' || typeof b !== 'object') {\n      return a === b;\n    }\n\n    if (Array.isArray(a) || Array.isArray(b)) {\n      return Array.isArray(a) && Array.isArray(b) ? arrays.equals(a, b) : false;\n    }\n\n    for (var key in a) {\n      if (!EditorConfiguration2._deepEquals(a[key], b[key])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  EditorConfiguration2.checkEquals = function (a, b) {\n    var result = [];\n    var somethingChanged = false;\n\n    for (var _i = 0, editorOptionsRegistry_5 = editorOptionsRegistry; _i < editorOptionsRegistry_5.length; _i++) {\n      var editorOption = editorOptionsRegistry_5[_i];\n      var changed = !EditorConfiguration2._deepEquals(a._read(editorOption.id), b._read(editorOption.id));\n      result[editorOption.id] = changed;\n\n      if (changed) {\n        somethingChanged = true;\n      }\n    }\n\n    return somethingChanged ? new ConfigurationChangedEvent(result) : null;\n  };\n\n  return EditorConfiguration2;\n}();\n/**\r\n * Compatibility with old options\r\n */\n\n\nfunction migrateOptions(options) {\n  var wordWrap = options.wordWrap;\n\n  if (wordWrap === true) {\n    options.wordWrap = 'on';\n  } else if (wordWrap === false) {\n    options.wordWrap = 'off';\n  }\n\n  var lineNumbers = options.lineNumbers;\n\n  if (lineNumbers === true) {\n    options.lineNumbers = 'on';\n  } else if (lineNumbers === false) {\n    options.lineNumbers = 'off';\n  }\n\n  var autoClosingBrackets = options.autoClosingBrackets;\n\n  if (autoClosingBrackets === false) {\n    options.autoClosingBrackets = 'never';\n    options.autoClosingQuotes = 'never';\n    options.autoSurround = 'never';\n  }\n\n  var cursorBlinking = options.cursorBlinking;\n\n  if (cursorBlinking === 'visible') {\n    options.cursorBlinking = 'solid';\n  }\n\n  var renderWhitespace = options.renderWhitespace;\n\n  if (renderWhitespace === true) {\n    options.renderWhitespace = 'boundary';\n  } else if (renderWhitespace === false) {\n    options.renderWhitespace = 'none';\n  }\n\n  var renderLineHighlight = options.renderLineHighlight;\n\n  if (renderLineHighlight === true) {\n    options.renderLineHighlight = 'line';\n  } else if (renderLineHighlight === false) {\n    options.renderLineHighlight = 'none';\n  }\n\n  var acceptSuggestionOnEnter = options.acceptSuggestionOnEnter;\n\n  if (acceptSuggestionOnEnter === true) {\n    options.acceptSuggestionOnEnter = 'on';\n  } else if (acceptSuggestionOnEnter === false) {\n    options.acceptSuggestionOnEnter = 'off';\n  }\n\n  var tabCompletion = options.tabCompletion;\n\n  if (tabCompletion === false) {\n    options.tabCompletion = 'off';\n  } else if (tabCompletion === true) {\n    options.tabCompletion = 'onlySnippets';\n  }\n\n  var suggest = options.suggest;\n\n  if (suggest && typeof suggest.filteredTypes === 'object' && suggest.filteredTypes) {\n    var mapping = {};\n    mapping['method'] = 'showMethods';\n    mapping['function'] = 'showFunctions';\n    mapping['constructor'] = 'showConstructors';\n    mapping['field'] = 'showFields';\n    mapping['variable'] = 'showVariables';\n    mapping['class'] = 'showClasses';\n    mapping['struct'] = 'showStructs';\n    mapping['interface'] = 'showInterfaces';\n    mapping['module'] = 'showModules';\n    mapping['property'] = 'showProperties';\n    mapping['event'] = 'showEvents';\n    mapping['operator'] = 'showOperators';\n    mapping['unit'] = 'showUnits';\n    mapping['value'] = 'showValues';\n    mapping['constant'] = 'showConstants';\n    mapping['enum'] = 'showEnums';\n    mapping['enumMember'] = 'showEnumMembers';\n    mapping['keyword'] = 'showKeywords';\n    mapping['text'] = 'showWords';\n    mapping['color'] = 'showColors';\n    mapping['file'] = 'showFiles';\n    mapping['reference'] = 'showReferences';\n    mapping['folder'] = 'showFolders';\n    mapping['typeParameter'] = 'showTypeParameters';\n    mapping['snippet'] = 'showSnippets';\n    forEach(mapping, function (entry) {\n      var value = suggest.filteredTypes[entry.key];\n\n      if (value === false) {\n        suggest[entry.value] = value;\n      }\n    }); // delete (<any>suggest).filteredTypes;\n  }\n\n  var hover = options.hover;\n\n  if (hover === true) {\n    options.hover = {\n      enabled: true\n    };\n  } else if (hover === false) {\n    options.hover = {\n      enabled: false\n    };\n  }\n\n  var parameterHints = options.parameterHints;\n\n  if (parameterHints === true) {\n    options.parameterHints = {\n      enabled: true\n    };\n  } else if (parameterHints === false) {\n    options.parameterHints = {\n      enabled: false\n    };\n  }\n\n  var autoIndent = options.autoIndent;\n\n  if (autoIndent === true) {\n    options.autoIndent = 'full';\n  } else if (autoIndent === false) {\n    options.autoIndent = 'advanced';\n  }\n\n  var matchBrackets = options.matchBrackets;\n\n  if (matchBrackets === true) {\n    options.matchBrackets = 'always';\n  } else if (matchBrackets === false) {\n    options.matchBrackets = 'never';\n  }\n}\n\nfunction deepCloneAndMigrateOptions(_options) {\n  var options = objects.deepClone(_options);\n  migrateOptions(options);\n  return options;\n}\n\nvar CommonEditorConfiguration =\n/** @class */\nfunction (_super) {\n  __extends(CommonEditorConfiguration, _super);\n\n  function CommonEditorConfiguration(isSimpleWidget, _options) {\n    var _this = _super.call(this) || this;\n\n    _this._onDidChange = _this._register(new Emitter());\n    _this.onDidChange = _this._onDidChange.event;\n    _this.isSimpleWidget = isSimpleWidget;\n    _this._isDominatedByLongLines = false;\n    _this._lineNumbersDigitCount = 1;\n    _this._rawOptions = deepCloneAndMigrateOptions(_options);\n    _this._readOptions = EditorConfiguration2.readOptions(_this._rawOptions);\n    _this._validatedOptions = EditorConfiguration2.validateOptions(_this._readOptions);\n\n    _this._register(EditorZoom.onDidChangeZoomLevel(function (_) {\n      return _this._recomputeOptions();\n    }));\n\n    _this._register(TabFocus.onDidChangeTabFocus(function (_) {\n      return _this._recomputeOptions();\n    }));\n\n    return _this;\n  }\n\n  CommonEditorConfiguration.prototype.observeReferenceElement = function (dimension) {};\n\n  CommonEditorConfiguration.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n  };\n\n  CommonEditorConfiguration.prototype._recomputeOptions = function () {\n    var oldOptions = this.options;\n\n    var newOptions = this._computeInternalOptions();\n\n    if (!oldOptions) {\n      this.options = newOptions;\n    } else {\n      var changeEvent = EditorConfiguration2.checkEquals(oldOptions, newOptions);\n\n      if (changeEvent === null) {\n        // nothing changed!\n        return;\n      }\n\n      this.options = newOptions;\n\n      this._onDidChange.fire(changeEvent);\n    }\n  };\n\n  CommonEditorConfiguration.prototype.getRawOptions = function () {\n    return this._rawOptions;\n  };\n\n  CommonEditorConfiguration.prototype._computeInternalOptions = function () {\n    var partialEnv = this._getEnvConfiguration();\n\n    var bareFontInfo = BareFontInfo.createFromValidatedSettings(this._validatedOptions, partialEnv.zoomLevel, this.isSimpleWidget);\n    var env = {\n      outerWidth: partialEnv.outerWidth,\n      outerHeight: partialEnv.outerHeight,\n      fontInfo: this.readConfiguration(bareFontInfo),\n      extraEditorClassName: partialEnv.extraEditorClassName,\n      isDominatedByLongLines: this._isDominatedByLongLines,\n      lineNumbersDigitCount: this._lineNumbersDigitCount,\n      emptySelectionClipboard: partialEnv.emptySelectionClipboard,\n      pixelRatio: partialEnv.pixelRatio,\n      tabFocusMode: TabFocus.getTabFocusMode(),\n      accessibilitySupport: partialEnv.accessibilitySupport\n    };\n    return EditorConfiguration2.computeOptions(this._validatedOptions, env);\n  };\n\n  CommonEditorConfiguration._subsetEquals = function (base, subset) {\n    for (var key in subset) {\n      if (hasOwnProperty.call(subset, key)) {\n        var subsetValue = subset[key];\n        var baseValue = base[key];\n\n        if (baseValue === subsetValue) {\n          continue;\n        }\n\n        if (Array.isArray(baseValue) && Array.isArray(subsetValue)) {\n          if (!arrays.equals(baseValue, subsetValue)) {\n            return false;\n          }\n\n          continue;\n        }\n\n        if (typeof baseValue === 'object' && typeof subsetValue === 'object') {\n          if (!this._subsetEquals(baseValue, subsetValue)) {\n            return false;\n          }\n\n          continue;\n        }\n\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  CommonEditorConfiguration.prototype.updateOptions = function (_newOptions) {\n    if (typeof _newOptions === 'undefined') {\n      return;\n    }\n\n    var newOptions = deepCloneAndMigrateOptions(_newOptions);\n\n    if (CommonEditorConfiguration._subsetEquals(this._rawOptions, newOptions)) {\n      return;\n    }\n\n    this._rawOptions = objects.mixin(this._rawOptions, newOptions || {});\n    this._readOptions = EditorConfiguration2.readOptions(this._rawOptions);\n    this._validatedOptions = EditorConfiguration2.validateOptions(this._readOptions);\n\n    this._recomputeOptions();\n  };\n\n  CommonEditorConfiguration.prototype.setIsDominatedByLongLines = function (isDominatedByLongLines) {\n    this._isDominatedByLongLines = isDominatedByLongLines;\n\n    this._recomputeOptions();\n  };\n\n  CommonEditorConfiguration.prototype.setMaxLineNumber = function (maxLineNumber) {\n    var digitCount = CommonEditorConfiguration._digitCount(maxLineNumber);\n\n    if (this._lineNumbersDigitCount === digitCount) {\n      return;\n    }\n\n    this._lineNumbersDigitCount = digitCount;\n\n    this._recomputeOptions();\n  };\n\n  CommonEditorConfiguration._digitCount = function (n) {\n    var r = 0;\n\n    while (n) {\n      n = Math.floor(n / 10);\n      r++;\n    }\n\n    return r ? r : 1;\n  };\n\n  return CommonEditorConfiguration;\n}(Disposable);\n\nexport { CommonEditorConfiguration };\nexport var editorConfigurationBaseNode = Object.freeze({\n  id: 'editor',\n  order: 5,\n  type: 'object',\n  title: nls.localize('editorConfigurationTitle', \"Editor\"),\n  scope: 5\n  /* LANGUAGE_OVERRIDABLE */\n\n});\nvar configurationRegistry = Registry.as(Extensions.Configuration);\n\nvar editorConfiguration = __assign(__assign({}, editorConfigurationBaseNode), {\n  properties: {\n    'editor.tabSize': {\n      type: 'number',\n      default: EDITOR_MODEL_DEFAULTS.tabSize,\n      minimum: 1,\n      markdownDescription: nls.localize('tabSize', \"The number of spaces a tab is equal to. This setting is overridden based on the file contents when `#editor.detectIndentation#` is on.\")\n    },\n    // 'editor.indentSize': {\n    // \t'anyOf': [\n    // \t\t{\n    // \t\t\ttype: 'string',\n    // \t\t\tenum: ['tabSize']\n    // \t\t},\n    // \t\t{\n    // \t\t\ttype: 'number',\n    // \t\t\tminimum: 1\n    // \t\t}\n    // \t],\n    // \tdefault: 'tabSize',\n    // \tmarkdownDescription: nls.localize('indentSize', \"The number of spaces used for indentation or 'tabSize' to use the value from `#editor.tabSize#`. This setting is overridden based on the file contents when `#editor.detectIndentation#` is on.\")\n    // },\n    'editor.insertSpaces': {\n      type: 'boolean',\n      default: EDITOR_MODEL_DEFAULTS.insertSpaces,\n      markdownDescription: nls.localize('insertSpaces', \"Insert spaces when pressing `Tab`. This setting is overridden based on the file contents when `#editor.detectIndentation#` is on.\")\n    },\n    'editor.detectIndentation': {\n      type: 'boolean',\n      default: EDITOR_MODEL_DEFAULTS.detectIndentation,\n      markdownDescription: nls.localize('detectIndentation', \"Controls whether `#editor.tabSize#` and `#editor.insertSpaces#` will be automatically detected when a file is opened based on the file contents.\")\n    },\n    'editor.trimAutoWhitespace': {\n      type: 'boolean',\n      default: EDITOR_MODEL_DEFAULTS.trimAutoWhitespace,\n      description: nls.localize('trimAutoWhitespace', \"Remove trailing auto inserted whitespace.\")\n    },\n    'editor.largeFileOptimizations': {\n      type: 'boolean',\n      default: EDITOR_MODEL_DEFAULTS.largeFileOptimizations,\n      description: nls.localize('largeFileOptimizations', \"Special handling for large files to disable certain memory intensive features.\")\n    },\n    'editor.wordBasedSuggestions': {\n      type: 'boolean',\n      default: true,\n      description: nls.localize('wordBasedSuggestions', \"Controls whether completions should be computed based on words in the document.\")\n    },\n    'editor.semanticHighlighting.enabled': {\n      type: 'boolean',\n      default: false,\n      description: nls.localize('semanticHighlighting.enabled', \"Controls whether the semanticHighlighting is shown for the languages that support it.\")\n    },\n    'editor.stablePeek': {\n      type: 'boolean',\n      default: false,\n      markdownDescription: nls.localize('stablePeek', \"Keep peek editors open even when double clicking their content or when hitting `Escape`.\")\n    },\n    'editor.maxTokenizationLineLength': {\n      type: 'integer',\n      default: 20000,\n      description: nls.localize('maxTokenizationLineLength', \"Lines above this length will not be tokenized for performance reasons\")\n    },\n    'diffEditor.maxComputationTime': {\n      type: 'number',\n      default: 5000,\n      description: nls.localize('maxComputationTime', \"Timeout in milliseconds after which diff computation is cancelled. Use 0 for no timeout.\")\n    },\n    'diffEditor.renderSideBySide': {\n      type: 'boolean',\n      default: true,\n      description: nls.localize('sideBySide', \"Controls whether the diff editor shows the diff side by side or inline.\")\n    },\n    'diffEditor.ignoreTrimWhitespace': {\n      type: 'boolean',\n      default: true,\n      description: nls.localize('ignoreTrimWhitespace', \"Controls whether the diff editor shows changes in leading or trailing whitespace as diffs.\")\n    },\n    'diffEditor.renderIndicators': {\n      type: 'boolean',\n      default: true,\n      description: nls.localize('renderIndicators', \"Controls whether the diff editor shows +/- indicators for added/removed changes.\")\n    }\n  }\n});\n\nfunction isConfigurationPropertySchema(x) {\n  return typeof x.type !== 'undefined' || typeof x.anyOf !== 'undefined';\n} // Add properties from the Editor Option Registry\n\n\nfor (var _i = 0, editorOptionsRegistry_1 = editorOptionsRegistry; _i < editorOptionsRegistry_1.length; _i++) {\n  var editorOption = editorOptionsRegistry_1[_i];\n  var schema = editorOption.schema;\n\n  if (typeof schema !== 'undefined') {\n    if (isConfigurationPropertySchema(schema)) {\n      // This is a single schema contribution\n      editorConfiguration.properties[\"editor.\" + editorOption.name] = schema;\n    } else {\n      for (var key in schema) {\n        if (hasOwnProperty.call(schema, key)) {\n          editorConfiguration.properties[key] = schema[key];\n        }\n      }\n    }\n  }\n}\n\nvar cachedEditorConfigurationKeys = null;\n\nfunction getEditorConfigurationKeys() {\n  if (cachedEditorConfigurationKeys === null) {\n    cachedEditorConfigurationKeys = Object.create(null);\n    Object.keys(editorConfiguration.properties).forEach(function (prop) {\n      cachedEditorConfigurationKeys[prop] = true;\n    });\n  }\n\n  return cachedEditorConfigurationKeys;\n}\n\nexport function isEditorConfigurationKey(key) {\n  var editorConfigurationKeys = getEditorConfigurationKeys();\n  return editorConfigurationKeys[\"editor.\" + key] || false;\n}\nexport function isDiffEditorConfigurationKey(key) {\n  var editorConfigurationKeys = getEditorConfigurationKeys();\n  return editorConfigurationKeys[\"diffEditor.\" + key] || false;\n}\nconfigurationRegistry.registerConfiguration(editorConfiguration);","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/common/config/commonEditorConfig.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","nls","Emitter","Disposable","objects","arrays","editorOptionsRegistry","ValidatedEditorOptions","ConfigurationChangedEvent","EDITOR_MODEL_DEFAULTS","EditorZoom","BareFontInfo","Extensions","Registry","forEach","TabFocus","class_1","_tabFocus","_onDidChangeTabFocus","onDidChangeTabFocus","event","getTabFocusMode","setTabFocusMode","tabFocusMode","fire","ComputedEditorOptions","_values","_read","id","get","_write","value","RawEditorOptions","EditorConfiguration2","readOptions","_options","options","result","_i","editorOptionsRegistry_2","editorOption","name","undefined","validateOptions","editorOptionsRegistry_3","validate","computeOptions","env","editorOptionsRegistry_4","compute","_deepEquals","a","isArray","equals","key","checkEquals","somethingChanged","editorOptionsRegistry_5","changed","migrateOptions","wordWrap","lineNumbers","autoClosingBrackets","autoClosingQuotes","autoSurround","cursorBlinking","renderWhitespace","renderLineHighlight","acceptSuggestionOnEnter","tabCompletion","suggest","filteredTypes","mapping","entry","hover","enabled","parameterHints","autoIndent","matchBrackets","deepCloneAndMigrateOptions","deepClone","CommonEditorConfiguration","_super","isSimpleWidget","_this","_onDidChange","_register","onDidChange","_isDominatedByLongLines","_lineNumbersDigitCount","_rawOptions","_readOptions","_validatedOptions","onDidChangeZoomLevel","_","_recomputeOptions","observeReferenceElement","dimension","dispose","oldOptions","newOptions","_computeInternalOptions","changeEvent","getRawOptions","partialEnv","_getEnvConfiguration","bareFontInfo","createFromValidatedSettings","zoomLevel","outerWidth","outerHeight","fontInfo","readConfiguration","extraEditorClassName","isDominatedByLongLines","lineNumbersDigitCount","emptySelectionClipboard","pixelRatio","accessibilitySupport","_subsetEquals","base","subset","subsetValue","baseValue","updateOptions","_newOptions","mixin","setIsDominatedByLongLines","setMaxLineNumber","maxLineNumber","digitCount","_digitCount","r","Math","floor","editorConfigurationBaseNode","freeze","order","type","title","localize","scope","configurationRegistry","as","Configuration","editorConfiguration","properties","default","tabSize","minimum","markdownDescription","insertSpaces","detectIndentation","trimAutoWhitespace","description","largeFileOptimizations","isConfigurationPropertySchema","x","anyOf","editorOptionsRegistry_1","schema","cachedEditorConfigurationKeys","getEditorConfigurationKeys","keys","prop","isEditorConfigurationKey","editorConfigurationKeys","isDiffEditorConfigurationKey","registerConfiguration"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport * as objects from '../../../base/common/objects.js';\r\nimport * as arrays from '../../../base/common/arrays.js';\r\nimport { editorOptionsRegistry, ValidatedEditorOptions, ConfigurationChangedEvent, EDITOR_MODEL_DEFAULTS } from './editorOptions.js';\r\nimport { EditorZoom } from './editorZoom.js';\r\nimport { BareFontInfo } from './fontInfo.js';\r\nimport { Extensions } from '../../../platform/configuration/common/configurationRegistry.js';\r\nimport { Registry } from '../../../platform/registry/common/platform.js';\r\nimport { forEach } from '../../../base/common/collections.js';\r\nexport var TabFocus = new /** @class */ (function () {\r\n    function class_1() {\r\n        this._tabFocus = false;\r\n        this._onDidChangeTabFocus = new Emitter();\r\n        this.onDidChangeTabFocus = this._onDidChangeTabFocus.event;\r\n    }\r\n    class_1.prototype.getTabFocusMode = function () {\r\n        return this._tabFocus;\r\n    };\r\n    class_1.prototype.setTabFocusMode = function (tabFocusMode) {\r\n        if (this._tabFocus === tabFocusMode) {\r\n            return;\r\n        }\r\n        this._tabFocus = tabFocusMode;\r\n        this._onDidChangeTabFocus.fire(this._tabFocus);\r\n    };\r\n    return class_1;\r\n}());\r\nvar hasOwnProperty = Object.hasOwnProperty;\r\nvar ComputedEditorOptions = /** @class */ (function () {\r\n    function ComputedEditorOptions() {\r\n        this._values = [];\r\n    }\r\n    ComputedEditorOptions.prototype._read = function (id) {\r\n        return this._values[id];\r\n    };\r\n    ComputedEditorOptions.prototype.get = function (id) {\r\n        return this._values[id];\r\n    };\r\n    ComputedEditorOptions.prototype._write = function (id, value) {\r\n        this._values[id] = value;\r\n    };\r\n    return ComputedEditorOptions;\r\n}());\r\nexport { ComputedEditorOptions };\r\nvar RawEditorOptions = /** @class */ (function () {\r\n    function RawEditorOptions() {\r\n        this._values = [];\r\n    }\r\n    RawEditorOptions.prototype._read = function (id) {\r\n        return this._values[id];\r\n    };\r\n    RawEditorOptions.prototype._write = function (id, value) {\r\n        this._values[id] = value;\r\n    };\r\n    return RawEditorOptions;\r\n}());\r\nvar EditorConfiguration2 = /** @class */ (function () {\r\n    function EditorConfiguration2() {\r\n    }\r\n    EditorConfiguration2.readOptions = function (_options) {\r\n        var options = _options;\r\n        var result = new RawEditorOptions();\r\n        for (var _i = 0, editorOptionsRegistry_2 = editorOptionsRegistry; _i < editorOptionsRegistry_2.length; _i++) {\r\n            var editorOption = editorOptionsRegistry_2[_i];\r\n            var value = (editorOption.name === '_never_' ? undefined : options[editorOption.name]);\r\n            result._write(editorOption.id, value);\r\n        }\r\n        return result;\r\n    };\r\n    EditorConfiguration2.validateOptions = function (options) {\r\n        var result = new ValidatedEditorOptions();\r\n        for (var _i = 0, editorOptionsRegistry_3 = editorOptionsRegistry; _i < editorOptionsRegistry_3.length; _i++) {\r\n            var editorOption = editorOptionsRegistry_3[_i];\r\n            result._write(editorOption.id, editorOption.validate(options._read(editorOption.id)));\r\n        }\r\n        return result;\r\n    };\r\n    EditorConfiguration2.computeOptions = function (options, env) {\r\n        var result = new ComputedEditorOptions();\r\n        for (var _i = 0, editorOptionsRegistry_4 = editorOptionsRegistry; _i < editorOptionsRegistry_4.length; _i++) {\r\n            var editorOption = editorOptionsRegistry_4[_i];\r\n            result._write(editorOption.id, editorOption.compute(env, result, options._read(editorOption.id)));\r\n        }\r\n        return result;\r\n    };\r\n    EditorConfiguration2._deepEquals = function (a, b) {\r\n        if (typeof a !== 'object' || typeof b !== 'object') {\r\n            return (a === b);\r\n        }\r\n        if (Array.isArray(a) || Array.isArray(b)) {\r\n            return (Array.isArray(a) && Array.isArray(b) ? arrays.equals(a, b) : false);\r\n        }\r\n        for (var key in a) {\r\n            if (!EditorConfiguration2._deepEquals(a[key], b[key])) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    EditorConfiguration2.checkEquals = function (a, b) {\r\n        var result = [];\r\n        var somethingChanged = false;\r\n        for (var _i = 0, editorOptionsRegistry_5 = editorOptionsRegistry; _i < editorOptionsRegistry_5.length; _i++) {\r\n            var editorOption = editorOptionsRegistry_5[_i];\r\n            var changed = !EditorConfiguration2._deepEquals(a._read(editorOption.id), b._read(editorOption.id));\r\n            result[editorOption.id] = changed;\r\n            if (changed) {\r\n                somethingChanged = true;\r\n            }\r\n        }\r\n        return (somethingChanged ? new ConfigurationChangedEvent(result) : null);\r\n    };\r\n    return EditorConfiguration2;\r\n}());\r\n/**\r\n * Compatibility with old options\r\n */\r\nfunction migrateOptions(options) {\r\n    var wordWrap = options.wordWrap;\r\n    if (wordWrap === true) {\r\n        options.wordWrap = 'on';\r\n    }\r\n    else if (wordWrap === false) {\r\n        options.wordWrap = 'off';\r\n    }\r\n    var lineNumbers = options.lineNumbers;\r\n    if (lineNumbers === true) {\r\n        options.lineNumbers = 'on';\r\n    }\r\n    else if (lineNumbers === false) {\r\n        options.lineNumbers = 'off';\r\n    }\r\n    var autoClosingBrackets = options.autoClosingBrackets;\r\n    if (autoClosingBrackets === false) {\r\n        options.autoClosingBrackets = 'never';\r\n        options.autoClosingQuotes = 'never';\r\n        options.autoSurround = 'never';\r\n    }\r\n    var cursorBlinking = options.cursorBlinking;\r\n    if (cursorBlinking === 'visible') {\r\n        options.cursorBlinking = 'solid';\r\n    }\r\n    var renderWhitespace = options.renderWhitespace;\r\n    if (renderWhitespace === true) {\r\n        options.renderWhitespace = 'boundary';\r\n    }\r\n    else if (renderWhitespace === false) {\r\n        options.renderWhitespace = 'none';\r\n    }\r\n    var renderLineHighlight = options.renderLineHighlight;\r\n    if (renderLineHighlight === true) {\r\n        options.renderLineHighlight = 'line';\r\n    }\r\n    else if (renderLineHighlight === false) {\r\n        options.renderLineHighlight = 'none';\r\n    }\r\n    var acceptSuggestionOnEnter = options.acceptSuggestionOnEnter;\r\n    if (acceptSuggestionOnEnter === true) {\r\n        options.acceptSuggestionOnEnter = 'on';\r\n    }\r\n    else if (acceptSuggestionOnEnter === false) {\r\n        options.acceptSuggestionOnEnter = 'off';\r\n    }\r\n    var tabCompletion = options.tabCompletion;\r\n    if (tabCompletion === false) {\r\n        options.tabCompletion = 'off';\r\n    }\r\n    else if (tabCompletion === true) {\r\n        options.tabCompletion = 'onlySnippets';\r\n    }\r\n    var suggest = options.suggest;\r\n    if (suggest && typeof suggest.filteredTypes === 'object' && suggest.filteredTypes) {\r\n        var mapping = {};\r\n        mapping['method'] = 'showMethods';\r\n        mapping['function'] = 'showFunctions';\r\n        mapping['constructor'] = 'showConstructors';\r\n        mapping['field'] = 'showFields';\r\n        mapping['variable'] = 'showVariables';\r\n        mapping['class'] = 'showClasses';\r\n        mapping['struct'] = 'showStructs';\r\n        mapping['interface'] = 'showInterfaces';\r\n        mapping['module'] = 'showModules';\r\n        mapping['property'] = 'showProperties';\r\n        mapping['event'] = 'showEvents';\r\n        mapping['operator'] = 'showOperators';\r\n        mapping['unit'] = 'showUnits';\r\n        mapping['value'] = 'showValues';\r\n        mapping['constant'] = 'showConstants';\r\n        mapping['enum'] = 'showEnums';\r\n        mapping['enumMember'] = 'showEnumMembers';\r\n        mapping['keyword'] = 'showKeywords';\r\n        mapping['text'] = 'showWords';\r\n        mapping['color'] = 'showColors';\r\n        mapping['file'] = 'showFiles';\r\n        mapping['reference'] = 'showReferences';\r\n        mapping['folder'] = 'showFolders';\r\n        mapping['typeParameter'] = 'showTypeParameters';\r\n        mapping['snippet'] = 'showSnippets';\r\n        forEach(mapping, function (entry) {\r\n            var value = suggest.filteredTypes[entry.key];\r\n            if (value === false) {\r\n                suggest[entry.value] = value;\r\n            }\r\n        });\r\n        // delete (<any>suggest).filteredTypes;\r\n    }\r\n    var hover = options.hover;\r\n    if (hover === true) {\r\n        options.hover = {\r\n            enabled: true\r\n        };\r\n    }\r\n    else if (hover === false) {\r\n        options.hover = {\r\n            enabled: false\r\n        };\r\n    }\r\n    var parameterHints = options.parameterHints;\r\n    if (parameterHints === true) {\r\n        options.parameterHints = {\r\n            enabled: true\r\n        };\r\n    }\r\n    else if (parameterHints === false) {\r\n        options.parameterHints = {\r\n            enabled: false\r\n        };\r\n    }\r\n    var autoIndent = options.autoIndent;\r\n    if (autoIndent === true) {\r\n        options.autoIndent = 'full';\r\n    }\r\n    else if (autoIndent === false) {\r\n        options.autoIndent = 'advanced';\r\n    }\r\n    var matchBrackets = options.matchBrackets;\r\n    if (matchBrackets === true) {\r\n        options.matchBrackets = 'always';\r\n    }\r\n    else if (matchBrackets === false) {\r\n        options.matchBrackets = 'never';\r\n    }\r\n}\r\nfunction deepCloneAndMigrateOptions(_options) {\r\n    var options = objects.deepClone(_options);\r\n    migrateOptions(options);\r\n    return options;\r\n}\r\nvar CommonEditorConfiguration = /** @class */ (function (_super) {\r\n    __extends(CommonEditorConfiguration, _super);\r\n    function CommonEditorConfiguration(isSimpleWidget, _options) {\r\n        var _this = _super.call(this) || this;\r\n        _this._onDidChange = _this._register(new Emitter());\r\n        _this.onDidChange = _this._onDidChange.event;\r\n        _this.isSimpleWidget = isSimpleWidget;\r\n        _this._isDominatedByLongLines = false;\r\n        _this._lineNumbersDigitCount = 1;\r\n        _this._rawOptions = deepCloneAndMigrateOptions(_options);\r\n        _this._readOptions = EditorConfiguration2.readOptions(_this._rawOptions);\r\n        _this._validatedOptions = EditorConfiguration2.validateOptions(_this._readOptions);\r\n        _this._register(EditorZoom.onDidChangeZoomLevel(function (_) { return _this._recomputeOptions(); }));\r\n        _this._register(TabFocus.onDidChangeTabFocus(function (_) { return _this._recomputeOptions(); }));\r\n        return _this;\r\n    }\r\n    CommonEditorConfiguration.prototype.observeReferenceElement = function (dimension) {\r\n    };\r\n    CommonEditorConfiguration.prototype.dispose = function () {\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    CommonEditorConfiguration.prototype._recomputeOptions = function () {\r\n        var oldOptions = this.options;\r\n        var newOptions = this._computeInternalOptions();\r\n        if (!oldOptions) {\r\n            this.options = newOptions;\r\n        }\r\n        else {\r\n            var changeEvent = EditorConfiguration2.checkEquals(oldOptions, newOptions);\r\n            if (changeEvent === null) {\r\n                // nothing changed!\r\n                return;\r\n            }\r\n            this.options = newOptions;\r\n            this._onDidChange.fire(changeEvent);\r\n        }\r\n    };\r\n    CommonEditorConfiguration.prototype.getRawOptions = function () {\r\n        return this._rawOptions;\r\n    };\r\n    CommonEditorConfiguration.prototype._computeInternalOptions = function () {\r\n        var partialEnv = this._getEnvConfiguration();\r\n        var bareFontInfo = BareFontInfo.createFromValidatedSettings(this._validatedOptions, partialEnv.zoomLevel, this.isSimpleWidget);\r\n        var env = {\r\n            outerWidth: partialEnv.outerWidth,\r\n            outerHeight: partialEnv.outerHeight,\r\n            fontInfo: this.readConfiguration(bareFontInfo),\r\n            extraEditorClassName: partialEnv.extraEditorClassName,\r\n            isDominatedByLongLines: this._isDominatedByLongLines,\r\n            lineNumbersDigitCount: this._lineNumbersDigitCount,\r\n            emptySelectionClipboard: partialEnv.emptySelectionClipboard,\r\n            pixelRatio: partialEnv.pixelRatio,\r\n            tabFocusMode: TabFocus.getTabFocusMode(),\r\n            accessibilitySupport: partialEnv.accessibilitySupport\r\n        };\r\n        return EditorConfiguration2.computeOptions(this._validatedOptions, env);\r\n    };\r\n    CommonEditorConfiguration._subsetEquals = function (base, subset) {\r\n        for (var key in subset) {\r\n            if (hasOwnProperty.call(subset, key)) {\r\n                var subsetValue = subset[key];\r\n                var baseValue = base[key];\r\n                if (baseValue === subsetValue) {\r\n                    continue;\r\n                }\r\n                if (Array.isArray(baseValue) && Array.isArray(subsetValue)) {\r\n                    if (!arrays.equals(baseValue, subsetValue)) {\r\n                        return false;\r\n                    }\r\n                    continue;\r\n                }\r\n                if (typeof baseValue === 'object' && typeof subsetValue === 'object') {\r\n                    if (!this._subsetEquals(baseValue, subsetValue)) {\r\n                        return false;\r\n                    }\r\n                    continue;\r\n                }\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    CommonEditorConfiguration.prototype.updateOptions = function (_newOptions) {\r\n        if (typeof _newOptions === 'undefined') {\r\n            return;\r\n        }\r\n        var newOptions = deepCloneAndMigrateOptions(_newOptions);\r\n        if (CommonEditorConfiguration._subsetEquals(this._rawOptions, newOptions)) {\r\n            return;\r\n        }\r\n        this._rawOptions = objects.mixin(this._rawOptions, newOptions || {});\r\n        this._readOptions = EditorConfiguration2.readOptions(this._rawOptions);\r\n        this._validatedOptions = EditorConfiguration2.validateOptions(this._readOptions);\r\n        this._recomputeOptions();\r\n    };\r\n    CommonEditorConfiguration.prototype.setIsDominatedByLongLines = function (isDominatedByLongLines) {\r\n        this._isDominatedByLongLines = isDominatedByLongLines;\r\n        this._recomputeOptions();\r\n    };\r\n    CommonEditorConfiguration.prototype.setMaxLineNumber = function (maxLineNumber) {\r\n        var digitCount = CommonEditorConfiguration._digitCount(maxLineNumber);\r\n        if (this._lineNumbersDigitCount === digitCount) {\r\n            return;\r\n        }\r\n        this._lineNumbersDigitCount = digitCount;\r\n        this._recomputeOptions();\r\n    };\r\n    CommonEditorConfiguration._digitCount = function (n) {\r\n        var r = 0;\r\n        while (n) {\r\n            n = Math.floor(n / 10);\r\n            r++;\r\n        }\r\n        return r ? r : 1;\r\n    };\r\n    return CommonEditorConfiguration;\r\n}(Disposable));\r\nexport { CommonEditorConfiguration };\r\nexport var editorConfigurationBaseNode = Object.freeze({\r\n    id: 'editor',\r\n    order: 5,\r\n    type: 'object',\r\n    title: nls.localize('editorConfigurationTitle', \"Editor\"),\r\n    scope: 5 /* LANGUAGE_OVERRIDABLE */,\r\n});\r\nvar configurationRegistry = Registry.as(Extensions.Configuration);\r\nvar editorConfiguration = __assign(__assign({}, editorConfigurationBaseNode), { properties: {\r\n        'editor.tabSize': {\r\n            type: 'number',\r\n            default: EDITOR_MODEL_DEFAULTS.tabSize,\r\n            minimum: 1,\r\n            markdownDescription: nls.localize('tabSize', \"The number of spaces a tab is equal to. This setting is overridden based on the file contents when `#editor.detectIndentation#` is on.\")\r\n        },\r\n        // 'editor.indentSize': {\r\n        // \t'anyOf': [\r\n        // \t\t{\r\n        // \t\t\ttype: 'string',\r\n        // \t\t\tenum: ['tabSize']\r\n        // \t\t},\r\n        // \t\t{\r\n        // \t\t\ttype: 'number',\r\n        // \t\t\tminimum: 1\r\n        // \t\t}\r\n        // \t],\r\n        // \tdefault: 'tabSize',\r\n        // \tmarkdownDescription: nls.localize('indentSize', \"The number of spaces used for indentation or 'tabSize' to use the value from `#editor.tabSize#`. This setting is overridden based on the file contents when `#editor.detectIndentation#` is on.\")\r\n        // },\r\n        'editor.insertSpaces': {\r\n            type: 'boolean',\r\n            default: EDITOR_MODEL_DEFAULTS.insertSpaces,\r\n            markdownDescription: nls.localize('insertSpaces', \"Insert spaces when pressing `Tab`. This setting is overridden based on the file contents when `#editor.detectIndentation#` is on.\")\r\n        },\r\n        'editor.detectIndentation': {\r\n            type: 'boolean',\r\n            default: EDITOR_MODEL_DEFAULTS.detectIndentation,\r\n            markdownDescription: nls.localize('detectIndentation', \"Controls whether `#editor.tabSize#` and `#editor.insertSpaces#` will be automatically detected when a file is opened based on the file contents.\")\r\n        },\r\n        'editor.trimAutoWhitespace': {\r\n            type: 'boolean',\r\n            default: EDITOR_MODEL_DEFAULTS.trimAutoWhitespace,\r\n            description: nls.localize('trimAutoWhitespace', \"Remove trailing auto inserted whitespace.\")\r\n        },\r\n        'editor.largeFileOptimizations': {\r\n            type: 'boolean',\r\n            default: EDITOR_MODEL_DEFAULTS.largeFileOptimizations,\r\n            description: nls.localize('largeFileOptimizations', \"Special handling for large files to disable certain memory intensive features.\")\r\n        },\r\n        'editor.wordBasedSuggestions': {\r\n            type: 'boolean',\r\n            default: true,\r\n            description: nls.localize('wordBasedSuggestions', \"Controls whether completions should be computed based on words in the document.\")\r\n        },\r\n        'editor.semanticHighlighting.enabled': {\r\n            type: 'boolean',\r\n            default: false,\r\n            description: nls.localize('semanticHighlighting.enabled', \"Controls whether the semanticHighlighting is shown for the languages that support it.\")\r\n        },\r\n        'editor.stablePeek': {\r\n            type: 'boolean',\r\n            default: false,\r\n            markdownDescription: nls.localize('stablePeek', \"Keep peek editors open even when double clicking their content or when hitting `Escape`.\")\r\n        },\r\n        'editor.maxTokenizationLineLength': {\r\n            type: 'integer',\r\n            default: 20000,\r\n            description: nls.localize('maxTokenizationLineLength', \"Lines above this length will not be tokenized for performance reasons\")\r\n        },\r\n        'diffEditor.maxComputationTime': {\r\n            type: 'number',\r\n            default: 5000,\r\n            description: nls.localize('maxComputationTime', \"Timeout in milliseconds after which diff computation is cancelled. Use 0 for no timeout.\")\r\n        },\r\n        'diffEditor.renderSideBySide': {\r\n            type: 'boolean',\r\n            default: true,\r\n            description: nls.localize('sideBySide', \"Controls whether the diff editor shows the diff side by side or inline.\")\r\n        },\r\n        'diffEditor.ignoreTrimWhitespace': {\r\n            type: 'boolean',\r\n            default: true,\r\n            description: nls.localize('ignoreTrimWhitespace', \"Controls whether the diff editor shows changes in leading or trailing whitespace as diffs.\")\r\n        },\r\n        'diffEditor.renderIndicators': {\r\n            type: 'boolean',\r\n            default: true,\r\n            description: nls.localize('renderIndicators', \"Controls whether the diff editor shows +/- indicators for added/removed changes.\")\r\n        }\r\n    } });\r\nfunction isConfigurationPropertySchema(x) {\r\n    return (typeof x.type !== 'undefined' || typeof x.anyOf !== 'undefined');\r\n}\r\n// Add properties from the Editor Option Registry\r\nfor (var _i = 0, editorOptionsRegistry_1 = editorOptionsRegistry; _i < editorOptionsRegistry_1.length; _i++) {\r\n    var editorOption = editorOptionsRegistry_1[_i];\r\n    var schema = editorOption.schema;\r\n    if (typeof schema !== 'undefined') {\r\n        if (isConfigurationPropertySchema(schema)) {\r\n            // This is a single schema contribution\r\n            editorConfiguration.properties[\"editor.\" + editorOption.name] = schema;\r\n        }\r\n        else {\r\n            for (var key in schema) {\r\n                if (hasOwnProperty.call(schema, key)) {\r\n                    editorConfiguration.properties[key] = schema[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nvar cachedEditorConfigurationKeys = null;\r\nfunction getEditorConfigurationKeys() {\r\n    if (cachedEditorConfigurationKeys === null) {\r\n        cachedEditorConfigurationKeys = Object.create(null);\r\n        Object.keys(editorConfiguration.properties).forEach(function (prop) {\r\n            cachedEditorConfigurationKeys[prop] = true;\r\n        });\r\n    }\r\n    return cachedEditorConfigurationKeys;\r\n}\r\nexport function isEditorConfigurationKey(key) {\r\n    var editorConfigurationKeys = getEditorConfigurationKeys();\r\n    return (editorConfigurationKeys[\"editor.\" + key] || false);\r\n}\r\nexport function isDiffEditorConfigurationKey(key) {\r\n    var editorConfigurationKeys = getEditorConfigurationKeys();\r\n    return (editorConfigurationKeys[\"diffEditor.\" + key] || false);\r\n}\r\nconfigurationRegistry.registerConfiguration(editorConfiguration);\r\n"]},"metadata":{},"sourceType":"module"}