{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as Parser from '../parser/jsonParser.js';\nimport * as Strings from '../utils/strings.js';\nimport { colorFromHex } from '../utils/colors.js';\nimport { Range, TextEdit, SymbolKind, Location } from \"../jsonLanguageTypes.js\";\n\nvar JSONDocumentSymbols =\n/** @class */\nfunction () {\n  function JSONDocumentSymbols(schemaService) {\n    this.schemaService = schemaService;\n  }\n\n  JSONDocumentSymbols.prototype.findDocumentSymbols = function (document, doc, context) {\n    var _this = this;\n\n    if (context === void 0) {\n      context = {\n        resultLimit: Number.MAX_VALUE\n      };\n    }\n\n    var root = doc.root;\n\n    if (!root) {\n      return null;\n    }\n\n    var limit = context.resultLimit; // special handling for key bindings\n\n    var resourceString = document.uri;\n\n    if (resourceString === 'vscode://defaultsettings/keybindings.json' || Strings.endsWith(resourceString.toLowerCase(), '/user/keybindings.json')) {\n      if (root.type === 'array') {\n        var result_1 = [];\n\n        for (var _i = 0, _a = root.items; _i < _a.length; _i++) {\n          var item = _a[_i];\n\n          if (item.type === 'object') {\n            for (var _b = 0, _c = item.properties; _b < _c.length; _b++) {\n              var property = _c[_b];\n\n              if (property.keyNode.value === 'key' && property.valueNode) {\n                var location = Location.create(document.uri, getRange(document, item));\n                result_1.push({\n                  name: Parser.getNodeValue(property.valueNode),\n                  kind: SymbolKind.Function,\n                  location: location\n                });\n                limit--;\n\n                if (limit <= 0) {\n                  if (context && context.onResultLimitExceeded) {\n                    context.onResultLimitExceeded(resourceString);\n                  }\n\n                  return result_1;\n                }\n              }\n            }\n          }\n        }\n\n        return result_1;\n      }\n    }\n\n    var toVisit = [{\n      node: root,\n      containerName: ''\n    }];\n    var nextToVisit = 0;\n    var limitExceeded = false;\n    var result = [];\n\n    var collectOutlineEntries = function (node, containerName) {\n      if (node.type === 'array') {\n        node.items.forEach(function (node) {\n          if (node) {\n            toVisit.push({\n              node: node,\n              containerName: containerName\n            });\n          }\n        });\n      } else if (node.type === 'object') {\n        node.properties.forEach(function (property) {\n          var valueNode = property.valueNode;\n\n          if (valueNode) {\n            if (limit > 0) {\n              limit--;\n              var location = Location.create(document.uri, getRange(document, property));\n              var childContainerName = containerName ? containerName + '.' + property.keyNode.value : property.keyNode.value;\n              result.push({\n                name: _this.getKeyLabel(property),\n                kind: _this.getSymbolKind(valueNode.type),\n                location: location,\n                containerName: containerName\n              });\n              toVisit.push({\n                node: valueNode,\n                containerName: childContainerName\n              });\n            } else {\n              limitExceeded = true;\n            }\n          }\n        });\n      }\n    }; // breath first traversal\n\n\n    while (nextToVisit < toVisit.length) {\n      var next = toVisit[nextToVisit++];\n      collectOutlineEntries(next.node, next.containerName);\n    }\n\n    if (limitExceeded && context && context.onResultLimitExceeded) {\n      context.onResultLimitExceeded(resourceString);\n    }\n\n    return result;\n  };\n\n  JSONDocumentSymbols.prototype.findDocumentSymbols2 = function (document, doc, context) {\n    var _this = this;\n\n    if (context === void 0) {\n      context = {\n        resultLimit: Number.MAX_VALUE\n      };\n    }\n\n    var root = doc.root;\n\n    if (!root) {\n      return null;\n    }\n\n    var limit = context.resultLimit; // special handling for key bindings\n\n    var resourceString = document.uri;\n\n    if (resourceString === 'vscode://defaultsettings/keybindings.json' || Strings.endsWith(resourceString.toLowerCase(), '/user/keybindings.json')) {\n      if (root.type === 'array') {\n        var result_2 = [];\n\n        for (var _i = 0, _a = root.items; _i < _a.length; _i++) {\n          var item = _a[_i];\n\n          if (item.type === 'object') {\n            for (var _b = 0, _c = item.properties; _b < _c.length; _b++) {\n              var property = _c[_b];\n\n              if (property.keyNode.value === 'key' && property.valueNode) {\n                var range = getRange(document, item);\n                var selectionRange = getRange(document, property.keyNode);\n                result_2.push({\n                  name: Parser.getNodeValue(property.valueNode),\n                  kind: SymbolKind.Function,\n                  range: range,\n                  selectionRange: selectionRange\n                });\n                limit--;\n\n                if (limit <= 0) {\n                  if (context && context.onResultLimitExceeded) {\n                    context.onResultLimitExceeded(resourceString);\n                  }\n\n                  return result_2;\n                }\n              }\n            }\n          }\n        }\n\n        return result_2;\n      }\n    }\n\n    var result = [];\n    var toVisit = [{\n      node: root,\n      result: result\n    }];\n    var nextToVisit = 0;\n    var limitExceeded = false;\n\n    var collectOutlineEntries = function (node, result) {\n      if (node.type === 'array') {\n        node.items.forEach(function (node, index) {\n          if (node) {\n            if (limit > 0) {\n              limit--;\n              var range = getRange(document, node);\n              var selectionRange = range;\n              var name = String(index);\n              var symbol = {\n                name: name,\n                kind: _this.getSymbolKind(node.type),\n                range: range,\n                selectionRange: selectionRange,\n                children: []\n              };\n              result.push(symbol);\n              toVisit.push({\n                result: symbol.children,\n                node: node\n              });\n            } else {\n              limitExceeded = true;\n            }\n          }\n        });\n      } else if (node.type === 'object') {\n        node.properties.forEach(function (property) {\n          var valueNode = property.valueNode;\n\n          if (valueNode) {\n            if (limit > 0) {\n              limit--;\n              var range = getRange(document, property);\n              var selectionRange = getRange(document, property.keyNode);\n              var symbol = {\n                name: _this.getKeyLabel(property),\n                kind: _this.getSymbolKind(valueNode.type),\n                range: range,\n                selectionRange: selectionRange,\n                children: []\n              };\n              result.push(symbol);\n              toVisit.push({\n                result: symbol.children,\n                node: valueNode\n              });\n            } else {\n              limitExceeded = true;\n            }\n          }\n        });\n      }\n    }; // breath first traversal\n\n\n    while (nextToVisit < toVisit.length) {\n      var next = toVisit[nextToVisit++];\n      collectOutlineEntries(next.node, next.result);\n    }\n\n    if (limitExceeded && context && context.onResultLimitExceeded) {\n      context.onResultLimitExceeded(resourceString);\n    }\n\n    return result;\n  };\n\n  JSONDocumentSymbols.prototype.getSymbolKind = function (nodeType) {\n    switch (nodeType) {\n      case 'object':\n        return SymbolKind.Module;\n\n      case 'string':\n        return SymbolKind.String;\n\n      case 'number':\n        return SymbolKind.Number;\n\n      case 'array':\n        return SymbolKind.Array;\n\n      case 'boolean':\n        return SymbolKind.Boolean;\n\n      default:\n        // 'null'\n        return SymbolKind.Variable;\n    }\n  };\n\n  JSONDocumentSymbols.prototype.getKeyLabel = function (property) {\n    var name = property.keyNode.value;\n\n    if (name) {\n      name = name.replace(/[\\n]/g, 'â†µ');\n    }\n\n    if (name && name.trim()) {\n      return name;\n    }\n\n    return \"\\\"\" + name + \"\\\"\";\n  };\n\n  JSONDocumentSymbols.prototype.findDocumentColors = function (document, doc, context) {\n    return this.schemaService.getSchemaForResource(document.uri, doc).then(function (schema) {\n      var result = [];\n\n      if (schema) {\n        var limit = context && typeof context.resultLimit === 'number' ? context.resultLimit : Number.MAX_VALUE;\n        var matchingSchemas = doc.getMatchingSchemas(schema.schema);\n        var visitedNode = {};\n\n        for (var _i = 0, matchingSchemas_1 = matchingSchemas; _i < matchingSchemas_1.length; _i++) {\n          var s = matchingSchemas_1[_i];\n\n          if (!s.inverted && s.schema && (s.schema.format === 'color' || s.schema.format === 'color-hex') && s.node && s.node.type === 'string') {\n            var nodeId = String(s.node.offset);\n\n            if (!visitedNode[nodeId]) {\n              var color = colorFromHex(Parser.getNodeValue(s.node));\n\n              if (color) {\n                var range = getRange(document, s.node);\n                result.push({\n                  color: color,\n                  range: range\n                });\n              }\n\n              visitedNode[nodeId] = true;\n              limit--;\n\n              if (limit <= 0) {\n                if (context && context.onResultLimitExceeded) {\n                  context.onResultLimitExceeded(document.uri);\n                }\n\n                return result;\n              }\n            }\n          }\n        }\n      }\n\n      return result;\n    });\n  };\n\n  JSONDocumentSymbols.prototype.getColorPresentations = function (document, doc, color, range) {\n    var result = [];\n    var red256 = Math.round(color.red * 255),\n        green256 = Math.round(color.green * 255),\n        blue256 = Math.round(color.blue * 255);\n\n    function toTwoDigitHex(n) {\n      var r = n.toString(16);\n      return r.length !== 2 ? '0' + r : r;\n    }\n\n    var label;\n\n    if (color.alpha === 1) {\n      label = \"#\" + toTwoDigitHex(red256) + toTwoDigitHex(green256) + toTwoDigitHex(blue256);\n    } else {\n      label = \"#\" + toTwoDigitHex(red256) + toTwoDigitHex(green256) + toTwoDigitHex(blue256) + toTwoDigitHex(Math.round(color.alpha * 255));\n    }\n\n    result.push({\n      label: label,\n      textEdit: TextEdit.replace(range, JSON.stringify(label))\n    });\n    return result;\n  };\n\n  return JSONDocumentSymbols;\n}();\n\nexport { JSONDocumentSymbols };\n\nfunction getRange(document, node) {\n  return Range.create(document.positionAt(node.offset), document.positionAt(node.offset + node.length));\n}","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/services/jsonDocumentSymbols.js"],"names":["Parser","Strings","colorFromHex","Range","TextEdit","SymbolKind","Location","JSONDocumentSymbols","schemaService","prototype","findDocumentSymbols","document","doc","context","_this","resultLimit","Number","MAX_VALUE","root","limit","resourceString","uri","endsWith","toLowerCase","type","result_1","_i","_a","items","length","item","_b","_c","properties","property","keyNode","value","valueNode","location","create","getRange","push","name","getNodeValue","kind","Function","onResultLimitExceeded","toVisit","node","containerName","nextToVisit","limitExceeded","result","collectOutlineEntries","forEach","childContainerName","getKeyLabel","getSymbolKind","next","findDocumentSymbols2","result_2","range","selectionRange","index","String","symbol","children","nodeType","Module","Array","Boolean","Variable","replace","trim","findDocumentColors","getSchemaForResource","then","schema","matchingSchemas","getMatchingSchemas","visitedNode","matchingSchemas_1","s","inverted","format","nodeId","offset","color","getColorPresentations","red256","Math","round","red","green256","green","blue256","blue","toTwoDigitHex","n","r","toString","label","alpha","textEdit","JSON","stringify","positionAt"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as Parser from '../parser/jsonParser.js';\nimport * as Strings from '../utils/strings.js';\nimport { colorFromHex } from '../utils/colors.js';\nimport { Range, TextEdit, SymbolKind, Location } from \"../jsonLanguageTypes.js\";\nvar JSONDocumentSymbols = /** @class */ (function () {\n    function JSONDocumentSymbols(schemaService) {\n        this.schemaService = schemaService;\n    }\n    JSONDocumentSymbols.prototype.findDocumentSymbols = function (document, doc, context) {\n        var _this = this;\n        if (context === void 0) { context = { resultLimit: Number.MAX_VALUE }; }\n        var root = doc.root;\n        if (!root) {\n            return null;\n        }\n        var limit = context.resultLimit;\n        // special handling for key bindings\n        var resourceString = document.uri;\n        if ((resourceString === 'vscode://defaultsettings/keybindings.json') || Strings.endsWith(resourceString.toLowerCase(), '/user/keybindings.json')) {\n            if (root.type === 'array') {\n                var result_1 = [];\n                for (var _i = 0, _a = root.items; _i < _a.length; _i++) {\n                    var item = _a[_i];\n                    if (item.type === 'object') {\n                        for (var _b = 0, _c = item.properties; _b < _c.length; _b++) {\n                            var property = _c[_b];\n                            if (property.keyNode.value === 'key' && property.valueNode) {\n                                var location = Location.create(document.uri, getRange(document, item));\n                                result_1.push({ name: Parser.getNodeValue(property.valueNode), kind: SymbolKind.Function, location: location });\n                                limit--;\n                                if (limit <= 0) {\n                                    if (context && context.onResultLimitExceeded) {\n                                        context.onResultLimitExceeded(resourceString);\n                                    }\n                                    return result_1;\n                                }\n                            }\n                        }\n                    }\n                }\n                return result_1;\n            }\n        }\n        var toVisit = [\n            { node: root, containerName: '' }\n        ];\n        var nextToVisit = 0;\n        var limitExceeded = false;\n        var result = [];\n        var collectOutlineEntries = function (node, containerName) {\n            if (node.type === 'array') {\n                node.items.forEach(function (node) {\n                    if (node) {\n                        toVisit.push({ node: node, containerName: containerName });\n                    }\n                });\n            }\n            else if (node.type === 'object') {\n                node.properties.forEach(function (property) {\n                    var valueNode = property.valueNode;\n                    if (valueNode) {\n                        if (limit > 0) {\n                            limit--;\n                            var location = Location.create(document.uri, getRange(document, property));\n                            var childContainerName = containerName ? containerName + '.' + property.keyNode.value : property.keyNode.value;\n                            result.push({ name: _this.getKeyLabel(property), kind: _this.getSymbolKind(valueNode.type), location: location, containerName: containerName });\n                            toVisit.push({ node: valueNode, containerName: childContainerName });\n                        }\n                        else {\n                            limitExceeded = true;\n                        }\n                    }\n                });\n            }\n        };\n        // breath first traversal\n        while (nextToVisit < toVisit.length) {\n            var next = toVisit[nextToVisit++];\n            collectOutlineEntries(next.node, next.containerName);\n        }\n        if (limitExceeded && context && context.onResultLimitExceeded) {\n            context.onResultLimitExceeded(resourceString);\n        }\n        return result;\n    };\n    JSONDocumentSymbols.prototype.findDocumentSymbols2 = function (document, doc, context) {\n        var _this = this;\n        if (context === void 0) { context = { resultLimit: Number.MAX_VALUE }; }\n        var root = doc.root;\n        if (!root) {\n            return null;\n        }\n        var limit = context.resultLimit;\n        // special handling for key bindings\n        var resourceString = document.uri;\n        if ((resourceString === 'vscode://defaultsettings/keybindings.json') || Strings.endsWith(resourceString.toLowerCase(), '/user/keybindings.json')) {\n            if (root.type === 'array') {\n                var result_2 = [];\n                for (var _i = 0, _a = root.items; _i < _a.length; _i++) {\n                    var item = _a[_i];\n                    if (item.type === 'object') {\n                        for (var _b = 0, _c = item.properties; _b < _c.length; _b++) {\n                            var property = _c[_b];\n                            if (property.keyNode.value === 'key' && property.valueNode) {\n                                var range = getRange(document, item);\n                                var selectionRange = getRange(document, property.keyNode);\n                                result_2.push({ name: Parser.getNodeValue(property.valueNode), kind: SymbolKind.Function, range: range, selectionRange: selectionRange });\n                                limit--;\n                                if (limit <= 0) {\n                                    if (context && context.onResultLimitExceeded) {\n                                        context.onResultLimitExceeded(resourceString);\n                                    }\n                                    return result_2;\n                                }\n                            }\n                        }\n                    }\n                }\n                return result_2;\n            }\n        }\n        var result = [];\n        var toVisit = [\n            { node: root, result: result }\n        ];\n        var nextToVisit = 0;\n        var limitExceeded = false;\n        var collectOutlineEntries = function (node, result) {\n            if (node.type === 'array') {\n                node.items.forEach(function (node, index) {\n                    if (node) {\n                        if (limit > 0) {\n                            limit--;\n                            var range = getRange(document, node);\n                            var selectionRange = range;\n                            var name = String(index);\n                            var symbol = { name: name, kind: _this.getSymbolKind(node.type), range: range, selectionRange: selectionRange, children: [] };\n                            result.push(symbol);\n                            toVisit.push({ result: symbol.children, node: node });\n                        }\n                        else {\n                            limitExceeded = true;\n                        }\n                    }\n                });\n            }\n            else if (node.type === 'object') {\n                node.properties.forEach(function (property) {\n                    var valueNode = property.valueNode;\n                    if (valueNode) {\n                        if (limit > 0) {\n                            limit--;\n                            var range = getRange(document, property);\n                            var selectionRange = getRange(document, property.keyNode);\n                            var symbol = { name: _this.getKeyLabel(property), kind: _this.getSymbolKind(valueNode.type), range: range, selectionRange: selectionRange, children: [] };\n                            result.push(symbol);\n                            toVisit.push({ result: symbol.children, node: valueNode });\n                        }\n                        else {\n                            limitExceeded = true;\n                        }\n                    }\n                });\n            }\n        };\n        // breath first traversal\n        while (nextToVisit < toVisit.length) {\n            var next = toVisit[nextToVisit++];\n            collectOutlineEntries(next.node, next.result);\n        }\n        if (limitExceeded && context && context.onResultLimitExceeded) {\n            context.onResultLimitExceeded(resourceString);\n        }\n        return result;\n    };\n    JSONDocumentSymbols.prototype.getSymbolKind = function (nodeType) {\n        switch (nodeType) {\n            case 'object':\n                return SymbolKind.Module;\n            case 'string':\n                return SymbolKind.String;\n            case 'number':\n                return SymbolKind.Number;\n            case 'array':\n                return SymbolKind.Array;\n            case 'boolean':\n                return SymbolKind.Boolean;\n            default: // 'null'\n                return SymbolKind.Variable;\n        }\n    };\n    JSONDocumentSymbols.prototype.getKeyLabel = function (property) {\n        var name = property.keyNode.value;\n        if (name) {\n            name = name.replace(/[\\n]/g, 'â†µ');\n        }\n        if (name && name.trim()) {\n            return name;\n        }\n        return \"\\\"\" + name + \"\\\"\";\n    };\n    JSONDocumentSymbols.prototype.findDocumentColors = function (document, doc, context) {\n        return this.schemaService.getSchemaForResource(document.uri, doc).then(function (schema) {\n            var result = [];\n            if (schema) {\n                var limit = context && typeof context.resultLimit === 'number' ? context.resultLimit : Number.MAX_VALUE;\n                var matchingSchemas = doc.getMatchingSchemas(schema.schema);\n                var visitedNode = {};\n                for (var _i = 0, matchingSchemas_1 = matchingSchemas; _i < matchingSchemas_1.length; _i++) {\n                    var s = matchingSchemas_1[_i];\n                    if (!s.inverted && s.schema && (s.schema.format === 'color' || s.schema.format === 'color-hex') && s.node && s.node.type === 'string') {\n                        var nodeId = String(s.node.offset);\n                        if (!visitedNode[nodeId]) {\n                            var color = colorFromHex(Parser.getNodeValue(s.node));\n                            if (color) {\n                                var range = getRange(document, s.node);\n                                result.push({ color: color, range: range });\n                            }\n                            visitedNode[nodeId] = true;\n                            limit--;\n                            if (limit <= 0) {\n                                if (context && context.onResultLimitExceeded) {\n                                    context.onResultLimitExceeded(document.uri);\n                                }\n                                return result;\n                            }\n                        }\n                    }\n                }\n            }\n            return result;\n        });\n    };\n    JSONDocumentSymbols.prototype.getColorPresentations = function (document, doc, color, range) {\n        var result = [];\n        var red256 = Math.round(color.red * 255), green256 = Math.round(color.green * 255), blue256 = Math.round(color.blue * 255);\n        function toTwoDigitHex(n) {\n            var r = n.toString(16);\n            return r.length !== 2 ? '0' + r : r;\n        }\n        var label;\n        if (color.alpha === 1) {\n            label = \"#\" + toTwoDigitHex(red256) + toTwoDigitHex(green256) + toTwoDigitHex(blue256);\n        }\n        else {\n            label = \"#\" + toTwoDigitHex(red256) + toTwoDigitHex(green256) + toTwoDigitHex(blue256) + toTwoDigitHex(Math.round(color.alpha * 255));\n        }\n        result.push({ label: label, textEdit: TextEdit.replace(range, JSON.stringify(label)) });\n        return result;\n    };\n    return JSONDocumentSymbols;\n}());\nexport { JSONDocumentSymbols };\nfunction getRange(document, node) {\n    return Range.create(document.positionAt(node.offset), document.positionAt(node.offset + node.length));\n}\n"]},"metadata":{},"sourceType":"module"}