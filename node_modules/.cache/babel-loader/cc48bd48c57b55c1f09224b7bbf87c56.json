{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { ArrayIterator } from '../../../common/iterator.js';\n\nvar HeightMap =\n/** @class */\nfunction () {\n  function HeightMap() {\n    this.heightMap = [];\n    this.indexes = {};\n  }\n\n  HeightMap.prototype.getContentHeight = function () {\n    var last = this.heightMap[this.heightMap.length - 1];\n    return !last ? 0 : last.top + last.height;\n  };\n\n  HeightMap.prototype.onInsertItems = function (iterator, afterItemId) {\n    if (afterItemId === void 0) {\n      afterItemId = null;\n    }\n\n    var item = null;\n    var viewItem;\n    var i, j;\n    var totalSize;\n    var sizeDiff = 0;\n\n    if (afterItemId === null) {\n      i = 0;\n      totalSize = 0;\n    } else {\n      i = this.indexes[afterItemId] + 1;\n      viewItem = this.heightMap[i - 1];\n\n      if (!viewItem) {\n        console.error('view item doesnt exist');\n        return undefined;\n      }\n\n      totalSize = viewItem.top + viewItem.height;\n    }\n\n    var boundSplice = this.heightMap.splice.bind(this.heightMap, i, 0);\n    var itemsToInsert = [];\n\n    while (item = iterator.next()) {\n      viewItem = this.createViewItem(item);\n      viewItem.top = totalSize + sizeDiff;\n      this.indexes[item.id] = i++;\n      itemsToInsert.push(viewItem);\n      sizeDiff += viewItem.height;\n    }\n\n    boundSplice.apply(this.heightMap, itemsToInsert);\n\n    for (j = i; j < this.heightMap.length; j++) {\n      viewItem = this.heightMap[j];\n      viewItem.top += sizeDiff;\n      this.indexes[viewItem.model.id] = j;\n    }\n\n    for (j = itemsToInsert.length - 1; j >= 0; j--) {\n      this.onInsertItem(itemsToInsert[j]);\n    }\n\n    for (j = this.heightMap.length - 1; j >= i; j--) {\n      this.onRefreshItem(this.heightMap[j]);\n    }\n\n    return sizeDiff;\n  };\n\n  HeightMap.prototype.onInsertItem = function (item) {// noop\n  }; // Contiguous items\n\n\n  HeightMap.prototype.onRemoveItems = function (iterator) {\n    var itemId = null;\n    var viewItem;\n    var startIndex = null;\n    var i = 0;\n    var sizeDiff = 0;\n\n    while (itemId = iterator.next()) {\n      i = this.indexes[itemId];\n      viewItem = this.heightMap[i];\n\n      if (!viewItem) {\n        console.error('view item doesnt exist');\n        return;\n      }\n\n      sizeDiff -= viewItem.height;\n      delete this.indexes[itemId];\n      this.onRemoveItem(viewItem);\n\n      if (startIndex === null) {\n        startIndex = i;\n      }\n    }\n\n    if (sizeDiff === 0 || startIndex === null) {\n      return;\n    }\n\n    this.heightMap.splice(startIndex, i - startIndex + 1);\n\n    for (i = startIndex; i < this.heightMap.length; i++) {\n      viewItem = this.heightMap[i];\n      viewItem.top += sizeDiff;\n      this.indexes[viewItem.model.id] = i;\n      this.onRefreshItem(viewItem);\n    }\n  };\n\n  HeightMap.prototype.onRemoveItem = function (item) {// noop\n  };\n\n  HeightMap.prototype.onRefreshItemSet = function (items) {\n    var _this = this;\n\n    var sortedItems = items.sort(function (a, b) {\n      return _this.indexes[a.id] - _this.indexes[b.id];\n    });\n    this.onRefreshItems(new ArrayIterator(sortedItems));\n  }; // Ordered, but not necessarily contiguous items\n\n\n  HeightMap.prototype.onRefreshItems = function (iterator) {\n    var item = null;\n    var viewItem;\n    var newHeight;\n    var i,\n        j = null;\n    var cummDiff = 0;\n\n    while (item = iterator.next()) {\n      i = this.indexes[item.id];\n\n      for (; cummDiff !== 0 && j !== null && j < i; j++) {\n        viewItem = this.heightMap[j];\n        viewItem.top += cummDiff;\n        this.onRefreshItem(viewItem);\n      }\n\n      viewItem = this.heightMap[i];\n      newHeight = item.getHeight();\n      viewItem.top += cummDiff;\n      cummDiff += newHeight - viewItem.height;\n      viewItem.height = newHeight;\n      this.onRefreshItem(viewItem, true);\n      j = i + 1;\n    }\n\n    if (cummDiff !== 0 && j !== null) {\n      for (; j < this.heightMap.length; j++) {\n        viewItem = this.heightMap[j];\n        viewItem.top += cummDiff;\n        this.onRefreshItem(viewItem);\n      }\n    }\n  };\n\n  HeightMap.prototype.onRefreshItem = function (item, needsRender) {\n    if (needsRender === void 0) {\n      needsRender = false;\n    } // noop\n\n  };\n\n  HeightMap.prototype.indexAt = function (position) {\n    var left = 0;\n    var right = this.heightMap.length;\n    var center;\n    var item; // Binary search\n\n    while (left < right) {\n      center = Math.floor((left + right) / 2);\n      item = this.heightMap[center];\n\n      if (position < item.top) {\n        right = center;\n      } else if (position >= item.top + item.height) {\n        if (left === center) {\n          break;\n        }\n\n        left = center;\n      } else {\n        return center;\n      }\n    }\n\n    return this.heightMap.length;\n  };\n\n  HeightMap.prototype.indexAfter = function (position) {\n    return Math.min(this.indexAt(position) + 1, this.heightMap.length);\n  };\n\n  HeightMap.prototype.itemAtIndex = function (index) {\n    return this.heightMap[index];\n  };\n\n  HeightMap.prototype.itemAfter = function (item) {\n    return this.heightMap[this.indexes[item.model.id] + 1] || null;\n  };\n\n  HeightMap.prototype.createViewItem = function (item) {\n    throw new Error('not implemented');\n  };\n\n  HeightMap.prototype.dispose = function () {\n    this.heightMap = [];\n    this.indexes = {};\n  };\n\n  return HeightMap;\n}();\n\nexport { HeightMap };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/base/parts/tree/browser/treeViewModel.js"],"names":["ArrayIterator","HeightMap","heightMap","indexes","prototype","getContentHeight","last","length","top","height","onInsertItems","iterator","afterItemId","item","viewItem","i","j","totalSize","sizeDiff","console","error","undefined","boundSplice","splice","bind","itemsToInsert","next","createViewItem","id","push","apply","model","onInsertItem","onRefreshItem","onRemoveItems","itemId","startIndex","onRemoveItem","onRefreshItemSet","items","_this","sortedItems","sort","a","b","onRefreshItems","newHeight","cummDiff","getHeight","needsRender","indexAt","position","left","right","center","Math","floor","indexAfter","min","itemAtIndex","index","itemAfter","Error","dispose"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { ArrayIterator } from '../../../common/iterator.js';\r\nvar HeightMap = /** @class */ (function () {\r\n    function HeightMap() {\r\n        this.heightMap = [];\r\n        this.indexes = {};\r\n    }\r\n    HeightMap.prototype.getContentHeight = function () {\r\n        var last = this.heightMap[this.heightMap.length - 1];\r\n        return !last ? 0 : last.top + last.height;\r\n    };\r\n    HeightMap.prototype.onInsertItems = function (iterator, afterItemId) {\r\n        if (afterItemId === void 0) { afterItemId = null; }\r\n        var item = null;\r\n        var viewItem;\r\n        var i, j;\r\n        var totalSize;\r\n        var sizeDiff = 0;\r\n        if (afterItemId === null) {\r\n            i = 0;\r\n            totalSize = 0;\r\n        }\r\n        else {\r\n            i = this.indexes[afterItemId] + 1;\r\n            viewItem = this.heightMap[i - 1];\r\n            if (!viewItem) {\r\n                console.error('view item doesnt exist');\r\n                return undefined;\r\n            }\r\n            totalSize = viewItem.top + viewItem.height;\r\n        }\r\n        var boundSplice = this.heightMap.splice.bind(this.heightMap, i, 0);\r\n        var itemsToInsert = [];\r\n        while (item = iterator.next()) {\r\n            viewItem = this.createViewItem(item);\r\n            viewItem.top = totalSize + sizeDiff;\r\n            this.indexes[item.id] = i++;\r\n            itemsToInsert.push(viewItem);\r\n            sizeDiff += viewItem.height;\r\n        }\r\n        boundSplice.apply(this.heightMap, itemsToInsert);\r\n        for (j = i; j < this.heightMap.length; j++) {\r\n            viewItem = this.heightMap[j];\r\n            viewItem.top += sizeDiff;\r\n            this.indexes[viewItem.model.id] = j;\r\n        }\r\n        for (j = itemsToInsert.length - 1; j >= 0; j--) {\r\n            this.onInsertItem(itemsToInsert[j]);\r\n        }\r\n        for (j = this.heightMap.length - 1; j >= i; j--) {\r\n            this.onRefreshItem(this.heightMap[j]);\r\n        }\r\n        return sizeDiff;\r\n    };\r\n    HeightMap.prototype.onInsertItem = function (item) {\r\n        // noop\r\n    };\r\n    // Contiguous items\r\n    HeightMap.prototype.onRemoveItems = function (iterator) {\r\n        var itemId = null;\r\n        var viewItem;\r\n        var startIndex = null;\r\n        var i = 0;\r\n        var sizeDiff = 0;\r\n        while (itemId = iterator.next()) {\r\n            i = this.indexes[itemId];\r\n            viewItem = this.heightMap[i];\r\n            if (!viewItem) {\r\n                console.error('view item doesnt exist');\r\n                return;\r\n            }\r\n            sizeDiff -= viewItem.height;\r\n            delete this.indexes[itemId];\r\n            this.onRemoveItem(viewItem);\r\n            if (startIndex === null) {\r\n                startIndex = i;\r\n            }\r\n        }\r\n        if (sizeDiff === 0 || startIndex === null) {\r\n            return;\r\n        }\r\n        this.heightMap.splice(startIndex, i - startIndex + 1);\r\n        for (i = startIndex; i < this.heightMap.length; i++) {\r\n            viewItem = this.heightMap[i];\r\n            viewItem.top += sizeDiff;\r\n            this.indexes[viewItem.model.id] = i;\r\n            this.onRefreshItem(viewItem);\r\n        }\r\n    };\r\n    HeightMap.prototype.onRemoveItem = function (item) {\r\n        // noop\r\n    };\r\n    HeightMap.prototype.onRefreshItemSet = function (items) {\r\n        var _this = this;\r\n        var sortedItems = items.sort(function (a, b) { return _this.indexes[a.id] - _this.indexes[b.id]; });\r\n        this.onRefreshItems(new ArrayIterator(sortedItems));\r\n    };\r\n    // Ordered, but not necessarily contiguous items\r\n    HeightMap.prototype.onRefreshItems = function (iterator) {\r\n        var item = null;\r\n        var viewItem;\r\n        var newHeight;\r\n        var i, j = null;\r\n        var cummDiff = 0;\r\n        while (item = iterator.next()) {\r\n            i = this.indexes[item.id];\r\n            for (; cummDiff !== 0 && j !== null && j < i; j++) {\r\n                viewItem = this.heightMap[j];\r\n                viewItem.top += cummDiff;\r\n                this.onRefreshItem(viewItem);\r\n            }\r\n            viewItem = this.heightMap[i];\r\n            newHeight = item.getHeight();\r\n            viewItem.top += cummDiff;\r\n            cummDiff += newHeight - viewItem.height;\r\n            viewItem.height = newHeight;\r\n            this.onRefreshItem(viewItem, true);\r\n            j = i + 1;\r\n        }\r\n        if (cummDiff !== 0 && j !== null) {\r\n            for (; j < this.heightMap.length; j++) {\r\n                viewItem = this.heightMap[j];\r\n                viewItem.top += cummDiff;\r\n                this.onRefreshItem(viewItem);\r\n            }\r\n        }\r\n    };\r\n    HeightMap.prototype.onRefreshItem = function (item, needsRender) {\r\n        if (needsRender === void 0) { needsRender = false; }\r\n        // noop\r\n    };\r\n    HeightMap.prototype.indexAt = function (position) {\r\n        var left = 0;\r\n        var right = this.heightMap.length;\r\n        var center;\r\n        var item;\r\n        // Binary search\r\n        while (left < right) {\r\n            center = Math.floor((left + right) / 2);\r\n            item = this.heightMap[center];\r\n            if (position < item.top) {\r\n                right = center;\r\n            }\r\n            else if (position >= item.top + item.height) {\r\n                if (left === center) {\r\n                    break;\r\n                }\r\n                left = center;\r\n            }\r\n            else {\r\n                return center;\r\n            }\r\n        }\r\n        return this.heightMap.length;\r\n    };\r\n    HeightMap.prototype.indexAfter = function (position) {\r\n        return Math.min(this.indexAt(position) + 1, this.heightMap.length);\r\n    };\r\n    HeightMap.prototype.itemAtIndex = function (index) {\r\n        return this.heightMap[index];\r\n    };\r\n    HeightMap.prototype.itemAfter = function (item) {\r\n        return this.heightMap[this.indexes[item.model.id] + 1] || null;\r\n    };\r\n    HeightMap.prototype.createViewItem = function (item) {\r\n        throw new Error('not implemented');\r\n    };\r\n    HeightMap.prototype.dispose = function () {\r\n        this.heightMap = [];\r\n        this.indexes = {};\r\n    };\r\n    return HeightMap;\r\n}());\r\nexport { HeightMap };\r\n"]},"metadata":{},"sourceType":"module"}