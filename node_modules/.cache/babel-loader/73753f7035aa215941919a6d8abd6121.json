{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar ColorZone =\n/** @class */\nfunction () {\n  function ColorZone(from, to, colorId) {\n    this.from = from | 0;\n    this.to = to | 0;\n    this.colorId = colorId | 0;\n  }\n\n  ColorZone.compare = function (a, b) {\n    if (a.colorId === b.colorId) {\n      if (a.from === b.from) {\n        return a.to - b.to;\n      }\n\n      return a.from - b.from;\n    }\n\n    return a.colorId - b.colorId;\n  };\n\n  return ColorZone;\n}();\n\nexport { ColorZone };\n/**\r\n * A zone in the overview ruler\r\n */\n\nvar OverviewRulerZone =\n/** @class */\nfunction () {\n  function OverviewRulerZone(startLineNumber, endLineNumber, color) {\n    this.startLineNumber = startLineNumber;\n    this.endLineNumber = endLineNumber;\n    this.color = color;\n    this._colorZone = null;\n  }\n\n  OverviewRulerZone.compare = function (a, b) {\n    if (a.color === b.color) {\n      if (a.startLineNumber === b.startLineNumber) {\n        return a.endLineNumber - b.endLineNumber;\n      }\n\n      return a.startLineNumber - b.startLineNumber;\n    }\n\n    return a.color < b.color ? -1 : 1;\n  };\n\n  OverviewRulerZone.prototype.setColorZone = function (colorZone) {\n    this._colorZone = colorZone;\n  };\n\n  OverviewRulerZone.prototype.getColorZones = function () {\n    return this._colorZone;\n  };\n\n  return OverviewRulerZone;\n}();\n\nexport { OverviewRulerZone };\n\nvar OverviewZoneManager =\n/** @class */\nfunction () {\n  function OverviewZoneManager(getVerticalOffsetForLine) {\n    this._getVerticalOffsetForLine = getVerticalOffsetForLine;\n    this._zones = [];\n    this._colorZonesInvalid = false;\n    this._lineHeight = 0;\n    this._domWidth = 0;\n    this._domHeight = 0;\n    this._outerHeight = 0;\n    this._pixelRatio = 1;\n    this._lastAssignedId = 0;\n    this._color2Id = Object.create(null);\n    this._id2Color = [];\n  }\n\n  OverviewZoneManager.prototype.getId2Color = function () {\n    return this._id2Color;\n  };\n\n  OverviewZoneManager.prototype.setZones = function (newZones) {\n    this._zones = newZones;\n\n    this._zones.sort(OverviewRulerZone.compare);\n  };\n\n  OverviewZoneManager.prototype.setLineHeight = function (lineHeight) {\n    if (this._lineHeight === lineHeight) {\n      return false;\n    }\n\n    this._lineHeight = lineHeight;\n    this._colorZonesInvalid = true;\n    return true;\n  };\n\n  OverviewZoneManager.prototype.setPixelRatio = function (pixelRatio) {\n    this._pixelRatio = pixelRatio;\n    this._colorZonesInvalid = true;\n  };\n\n  OverviewZoneManager.prototype.getDOMWidth = function () {\n    return this._domWidth;\n  };\n\n  OverviewZoneManager.prototype.getCanvasWidth = function () {\n    return this._domWidth * this._pixelRatio;\n  };\n\n  OverviewZoneManager.prototype.setDOMWidth = function (width) {\n    if (this._domWidth === width) {\n      return false;\n    }\n\n    this._domWidth = width;\n    this._colorZonesInvalid = true;\n    return true;\n  };\n\n  OverviewZoneManager.prototype.getDOMHeight = function () {\n    return this._domHeight;\n  };\n\n  OverviewZoneManager.prototype.getCanvasHeight = function () {\n    return this._domHeight * this._pixelRatio;\n  };\n\n  OverviewZoneManager.prototype.setDOMHeight = function (height) {\n    if (this._domHeight === height) {\n      return false;\n    }\n\n    this._domHeight = height;\n    this._colorZonesInvalid = true;\n    return true;\n  };\n\n  OverviewZoneManager.prototype.getOuterHeight = function () {\n    return this._outerHeight;\n  };\n\n  OverviewZoneManager.prototype.setOuterHeight = function (outerHeight) {\n    if (this._outerHeight === outerHeight) {\n      return false;\n    }\n\n    this._outerHeight = outerHeight;\n    this._colorZonesInvalid = true;\n    return true;\n  };\n\n  OverviewZoneManager.prototype.resolveColorZones = function () {\n    var colorZonesInvalid = this._colorZonesInvalid;\n    var lineHeight = Math.floor(this._lineHeight); // @perf\n\n    var totalHeight = Math.floor(this.getCanvasHeight()); // @perf\n\n    var outerHeight = Math.floor(this._outerHeight); // @perf\n\n    var heightRatio = totalHeight / outerHeight;\n    var halfMinimumHeight = Math.floor(4\n    /* MINIMUM_HEIGHT */\n    * this._pixelRatio / 2);\n    var allColorZones = [];\n\n    for (var i = 0, len = this._zones.length; i < len; i++) {\n      var zone = this._zones[i];\n\n      if (!colorZonesInvalid) {\n        var colorZone_1 = zone.getColorZones();\n\n        if (colorZone_1) {\n          allColorZones.push(colorZone_1);\n          continue;\n        }\n      }\n\n      var y1 = Math.floor(heightRatio * this._getVerticalOffsetForLine(zone.startLineNumber));\n      var y2 = Math.floor(heightRatio * (this._getVerticalOffsetForLine(zone.endLineNumber) + lineHeight));\n      var ycenter = Math.floor((y1 + y2) / 2);\n      var halfHeight = y2 - ycenter;\n\n      if (halfHeight < halfMinimumHeight) {\n        halfHeight = halfMinimumHeight;\n      }\n\n      if (ycenter - halfHeight < 0) {\n        ycenter = halfHeight;\n      }\n\n      if (ycenter + halfHeight > totalHeight) {\n        ycenter = totalHeight - halfHeight;\n      }\n\n      var color = zone.color;\n      var colorId = this._color2Id[color];\n\n      if (!colorId) {\n        colorId = ++this._lastAssignedId;\n        this._color2Id[color] = colorId;\n        this._id2Color[colorId] = color;\n      }\n\n      var colorZone = new ColorZone(ycenter - halfHeight, ycenter + halfHeight, colorId);\n      zone.setColorZone(colorZone);\n      allColorZones.push(colorZone);\n    }\n\n    this._colorZonesInvalid = false;\n    allColorZones.sort(ColorZone.compare);\n    return allColorZones;\n  };\n\n  return OverviewZoneManager;\n}();\n\nexport { OverviewZoneManager };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/common/view/overviewZoneManager.js"],"names":["ColorZone","from","to","colorId","compare","a","b","OverviewRulerZone","startLineNumber","endLineNumber","color","_colorZone","prototype","setColorZone","colorZone","getColorZones","OverviewZoneManager","getVerticalOffsetForLine","_getVerticalOffsetForLine","_zones","_colorZonesInvalid","_lineHeight","_domWidth","_domHeight","_outerHeight","_pixelRatio","_lastAssignedId","_color2Id","Object","create","_id2Color","getId2Color","setZones","newZones","sort","setLineHeight","lineHeight","setPixelRatio","pixelRatio","getDOMWidth","getCanvasWidth","setDOMWidth","width","getDOMHeight","getCanvasHeight","setDOMHeight","height","getOuterHeight","setOuterHeight","outerHeight","resolveColorZones","colorZonesInvalid","Math","floor","totalHeight","heightRatio","halfMinimumHeight","allColorZones","i","len","length","zone","colorZone_1","push","y1","y2","ycenter","halfHeight"],"mappings":"AAAA;;;;AAIA,IAAIA,SAAS;AAAG;AAAe,YAAY;AACvC,WAASA,SAAT,CAAmBC,IAAnB,EAAyBC,EAAzB,EAA6BC,OAA7B,EAAsC;AAClC,SAAKF,IAAL,GAAYA,IAAI,GAAG,CAAnB;AACA,SAAKC,EAAL,GAAUA,EAAE,GAAG,CAAf;AACA,SAAKC,OAAL,GAAeA,OAAO,GAAG,CAAzB;AACH;;AACDH,EAAAA,SAAS,CAACI,OAAV,GAAoB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChC,QAAID,CAAC,CAACF,OAAF,KAAcG,CAAC,CAACH,OAApB,EAA6B;AACzB,UAAIE,CAAC,CAACJ,IAAF,KAAWK,CAAC,CAACL,IAAjB,EAAuB;AACnB,eAAOI,CAAC,CAACH,EAAF,GAAOI,CAAC,CAACJ,EAAhB;AACH;;AACD,aAAOG,CAAC,CAACJ,IAAF,GAASK,CAAC,CAACL,IAAlB;AACH;;AACD,WAAOI,CAAC,CAACF,OAAF,GAAYG,CAAC,CAACH,OAArB;AACH,GARD;;AASA,SAAOH,SAAP;AACH,CAhB8B,EAA/B;;AAiBA,SAASA,SAAT;AACA;;;;AAGA,IAAIO,iBAAiB;AAAG;AAAe,YAAY;AAC/C,WAASA,iBAAT,CAA2BC,eAA3B,EAA4CC,aAA5C,EAA2DC,KAA3D,EAAkE;AAC9D,SAAKF,eAAL,GAAuBA,eAAvB;AACA,SAAKC,aAAL,GAAqBA,aAArB;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,UAAL,GAAkB,IAAlB;AACH;;AACDJ,EAAAA,iBAAiB,CAACH,OAAlB,GAA4B,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACxC,QAAID,CAAC,CAACK,KAAF,KAAYJ,CAAC,CAACI,KAAlB,EAAyB;AACrB,UAAIL,CAAC,CAACG,eAAF,KAAsBF,CAAC,CAACE,eAA5B,EAA6C;AACzC,eAAOH,CAAC,CAACI,aAAF,GAAkBH,CAAC,CAACG,aAA3B;AACH;;AACD,aAAOJ,CAAC,CAACG,eAAF,GAAoBF,CAAC,CAACE,eAA7B;AACH;;AACD,WAAOH,CAAC,CAACK,KAAF,GAAUJ,CAAC,CAACI,KAAZ,GAAoB,CAAC,CAArB,GAAyB,CAAhC;AACH,GARD;;AASAH,EAAAA,iBAAiB,CAACK,SAAlB,CAA4BC,YAA5B,GAA2C,UAAUC,SAAV,EAAqB;AAC5D,SAAKH,UAAL,GAAkBG,SAAlB;AACH,GAFD;;AAGAP,EAAAA,iBAAiB,CAACK,SAAlB,CAA4BG,aAA5B,GAA4C,YAAY;AACpD,WAAO,KAAKJ,UAAZ;AACH,GAFD;;AAGA,SAAOJ,iBAAP;AACH,CAvBsC,EAAvC;;AAwBA,SAASA,iBAAT;;AACA,IAAIS,mBAAmB;AAAG;AAAe,YAAY;AACjD,WAASA,mBAAT,CAA6BC,wBAA7B,EAAuD;AACnD,SAAKC,yBAAL,GAAiCD,wBAAjC;AACA,SAAKE,MAAL,GAAc,EAAd;AACA,SAAKC,kBAAL,GAA0B,KAA1B;AACA,SAAKC,WAAL,GAAmB,CAAnB;AACA,SAAKC,SAAL,GAAiB,CAAjB;AACA,SAAKC,UAAL,GAAkB,CAAlB;AACA,SAAKC,YAAL,GAAoB,CAApB;AACA,SAAKC,WAAL,GAAmB,CAAnB;AACA,SAAKC,eAAL,GAAuB,CAAvB;AACA,SAAKC,SAAL,GAAiBC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAjB;AACA,SAAKC,SAAL,GAAiB,EAAjB;AACH;;AACDd,EAAAA,mBAAmB,CAACJ,SAApB,CAA8BmB,WAA9B,GAA4C,YAAY;AACpD,WAAO,KAAKD,SAAZ;AACH,GAFD;;AAGAd,EAAAA,mBAAmB,CAACJ,SAApB,CAA8BoB,QAA9B,GAAyC,UAAUC,QAAV,EAAoB;AACzD,SAAKd,MAAL,GAAcc,QAAd;;AACA,SAAKd,MAAL,CAAYe,IAAZ,CAAiB3B,iBAAiB,CAACH,OAAnC;AACH,GAHD;;AAIAY,EAAAA,mBAAmB,CAACJ,SAApB,CAA8BuB,aAA9B,GAA8C,UAAUC,UAAV,EAAsB;AAChE,QAAI,KAAKf,WAAL,KAAqBe,UAAzB,EAAqC;AACjC,aAAO,KAAP;AACH;;AACD,SAAKf,WAAL,GAAmBe,UAAnB;AACA,SAAKhB,kBAAL,GAA0B,IAA1B;AACA,WAAO,IAAP;AACH,GAPD;;AAQAJ,EAAAA,mBAAmB,CAACJ,SAApB,CAA8ByB,aAA9B,GAA8C,UAAUC,UAAV,EAAsB;AAChE,SAAKb,WAAL,GAAmBa,UAAnB;AACA,SAAKlB,kBAAL,GAA0B,IAA1B;AACH,GAHD;;AAIAJ,EAAAA,mBAAmB,CAACJ,SAApB,CAA8B2B,WAA9B,GAA4C,YAAY;AACpD,WAAO,KAAKjB,SAAZ;AACH,GAFD;;AAGAN,EAAAA,mBAAmB,CAACJ,SAApB,CAA8B4B,cAA9B,GAA+C,YAAY;AACvD,WAAO,KAAKlB,SAAL,GAAiB,KAAKG,WAA7B;AACH,GAFD;;AAGAT,EAAAA,mBAAmB,CAACJ,SAApB,CAA8B6B,WAA9B,GAA4C,UAAUC,KAAV,EAAiB;AACzD,QAAI,KAAKpB,SAAL,KAAmBoB,KAAvB,EAA8B;AAC1B,aAAO,KAAP;AACH;;AACD,SAAKpB,SAAL,GAAiBoB,KAAjB;AACA,SAAKtB,kBAAL,GAA0B,IAA1B;AACA,WAAO,IAAP;AACH,GAPD;;AAQAJ,EAAAA,mBAAmB,CAACJ,SAApB,CAA8B+B,YAA9B,GAA6C,YAAY;AACrD,WAAO,KAAKpB,UAAZ;AACH,GAFD;;AAGAP,EAAAA,mBAAmB,CAACJ,SAApB,CAA8BgC,eAA9B,GAAgD,YAAY;AACxD,WAAO,KAAKrB,UAAL,GAAkB,KAAKE,WAA9B;AACH,GAFD;;AAGAT,EAAAA,mBAAmB,CAACJ,SAApB,CAA8BiC,YAA9B,GAA6C,UAAUC,MAAV,EAAkB;AAC3D,QAAI,KAAKvB,UAAL,KAAoBuB,MAAxB,EAAgC;AAC5B,aAAO,KAAP;AACH;;AACD,SAAKvB,UAAL,GAAkBuB,MAAlB;AACA,SAAK1B,kBAAL,GAA0B,IAA1B;AACA,WAAO,IAAP;AACH,GAPD;;AAQAJ,EAAAA,mBAAmB,CAACJ,SAApB,CAA8BmC,cAA9B,GAA+C,YAAY;AACvD,WAAO,KAAKvB,YAAZ;AACH,GAFD;;AAGAR,EAAAA,mBAAmB,CAACJ,SAApB,CAA8BoC,cAA9B,GAA+C,UAAUC,WAAV,EAAuB;AAClE,QAAI,KAAKzB,YAAL,KAAsByB,WAA1B,EAAuC;AACnC,aAAO,KAAP;AACH;;AACD,SAAKzB,YAAL,GAAoByB,WAApB;AACA,SAAK7B,kBAAL,GAA0B,IAA1B;AACA,WAAO,IAAP;AACH,GAPD;;AAQAJ,EAAAA,mBAAmB,CAACJ,SAApB,CAA8BsC,iBAA9B,GAAkD,YAAY;AAC1D,QAAIC,iBAAiB,GAAG,KAAK/B,kBAA7B;AACA,QAAIgB,UAAU,GAAGgB,IAAI,CAACC,KAAL,CAAW,KAAKhC,WAAhB,CAAjB,CAF0D,CAEX;;AAC/C,QAAIiC,WAAW,GAAGF,IAAI,CAACC,KAAL,CAAW,KAAKT,eAAL,EAAX,CAAlB,CAH0D,CAGJ;;AACtD,QAAIK,WAAW,GAAGG,IAAI,CAACC,KAAL,CAAW,KAAK7B,YAAhB,CAAlB,CAJ0D,CAIT;;AACjD,QAAI+B,WAAW,GAAGD,WAAW,GAAGL,WAAhC;AACA,QAAIO,iBAAiB,GAAGJ,IAAI,CAACC,KAAL,CAAW;AAAE;AAAF,MAAyB,KAAK5B,WAA9B,GAA4C,CAAvD,CAAxB;AACA,QAAIgC,aAAa,GAAG,EAApB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAG,KAAKxC,MAAL,CAAYyC,MAAlC,EAA0CF,CAAC,GAAGC,GAA9C,EAAmDD,CAAC,EAApD,EAAwD;AACpD,UAAIG,IAAI,GAAG,KAAK1C,MAAL,CAAYuC,CAAZ,CAAX;;AACA,UAAI,CAACP,iBAAL,EAAwB;AACpB,YAAIW,WAAW,GAAGD,IAAI,CAAC9C,aAAL,EAAlB;;AACA,YAAI+C,WAAJ,EAAiB;AACbL,UAAAA,aAAa,CAACM,IAAd,CAAmBD,WAAnB;AACA;AACH;AACJ;;AACD,UAAIE,EAAE,GAAGZ,IAAI,CAACC,KAAL,CAAWE,WAAW,GAAI,KAAKrC,yBAAL,CAA+B2C,IAAI,CAACrD,eAApC,CAA1B,CAAT;AACA,UAAIyD,EAAE,GAAGb,IAAI,CAACC,KAAL,CAAWE,WAAW,IAAI,KAAKrC,yBAAL,CAA+B2C,IAAI,CAACpD,aAApC,IAAqD2B,UAAzD,CAAtB,CAAT;AACA,UAAI8B,OAAO,GAAGd,IAAI,CAACC,KAAL,CAAW,CAACW,EAAE,GAAGC,EAAN,IAAY,CAAvB,CAAd;AACA,UAAIE,UAAU,GAAIF,EAAE,GAAGC,OAAvB;;AACA,UAAIC,UAAU,GAAGX,iBAAjB,EAAoC;AAChCW,QAAAA,UAAU,GAAGX,iBAAb;AACH;;AACD,UAAIU,OAAO,GAAGC,UAAV,GAAuB,CAA3B,EAA8B;AAC1BD,QAAAA,OAAO,GAAGC,UAAV;AACH;;AACD,UAAID,OAAO,GAAGC,UAAV,GAAuBb,WAA3B,EAAwC;AACpCY,QAAAA,OAAO,GAAGZ,WAAW,GAAGa,UAAxB;AACH;;AACD,UAAIzD,KAAK,GAAGmD,IAAI,CAACnD,KAAjB;AACA,UAAIP,OAAO,GAAG,KAAKwB,SAAL,CAAejB,KAAf,CAAd;;AACA,UAAI,CAACP,OAAL,EAAc;AACVA,QAAAA,OAAO,GAAI,EAAE,KAAKuB,eAAlB;AACA,aAAKC,SAAL,CAAejB,KAAf,IAAwBP,OAAxB;AACA,aAAK2B,SAAL,CAAe3B,OAAf,IAA0BO,KAA1B;AACH;;AACD,UAAII,SAAS,GAAG,IAAId,SAAJ,CAAckE,OAAO,GAAGC,UAAxB,EAAoCD,OAAO,GAAGC,UAA9C,EAA0DhE,OAA1D,CAAhB;AACA0D,MAAAA,IAAI,CAAChD,YAAL,CAAkBC,SAAlB;AACA2C,MAAAA,aAAa,CAACM,IAAd,CAAmBjD,SAAnB;AACH;;AACD,SAAKM,kBAAL,GAA0B,KAA1B;AACAqC,IAAAA,aAAa,CAACvB,IAAd,CAAmBlC,SAAS,CAACI,OAA7B;AACA,WAAOqD,aAAP;AACH,GA5CD;;AA6CA,SAAOzC,mBAAP;AACH,CAtHwC,EAAzC;;AAuHA,SAASA,mBAAT","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar ColorZone = /** @class */ (function () {\r\n    function ColorZone(from, to, colorId) {\r\n        this.from = from | 0;\r\n        this.to = to | 0;\r\n        this.colorId = colorId | 0;\r\n    }\r\n    ColorZone.compare = function (a, b) {\r\n        if (a.colorId === b.colorId) {\r\n            if (a.from === b.from) {\r\n                return a.to - b.to;\r\n            }\r\n            return a.from - b.from;\r\n        }\r\n        return a.colorId - b.colorId;\r\n    };\r\n    return ColorZone;\r\n}());\r\nexport { ColorZone };\r\n/**\r\n * A zone in the overview ruler\r\n */\r\nvar OverviewRulerZone = /** @class */ (function () {\r\n    function OverviewRulerZone(startLineNumber, endLineNumber, color) {\r\n        this.startLineNumber = startLineNumber;\r\n        this.endLineNumber = endLineNumber;\r\n        this.color = color;\r\n        this._colorZone = null;\r\n    }\r\n    OverviewRulerZone.compare = function (a, b) {\r\n        if (a.color === b.color) {\r\n            if (a.startLineNumber === b.startLineNumber) {\r\n                return a.endLineNumber - b.endLineNumber;\r\n            }\r\n            return a.startLineNumber - b.startLineNumber;\r\n        }\r\n        return a.color < b.color ? -1 : 1;\r\n    };\r\n    OverviewRulerZone.prototype.setColorZone = function (colorZone) {\r\n        this._colorZone = colorZone;\r\n    };\r\n    OverviewRulerZone.prototype.getColorZones = function () {\r\n        return this._colorZone;\r\n    };\r\n    return OverviewRulerZone;\r\n}());\r\nexport { OverviewRulerZone };\r\nvar OverviewZoneManager = /** @class */ (function () {\r\n    function OverviewZoneManager(getVerticalOffsetForLine) {\r\n        this._getVerticalOffsetForLine = getVerticalOffsetForLine;\r\n        this._zones = [];\r\n        this._colorZonesInvalid = false;\r\n        this._lineHeight = 0;\r\n        this._domWidth = 0;\r\n        this._domHeight = 0;\r\n        this._outerHeight = 0;\r\n        this._pixelRatio = 1;\r\n        this._lastAssignedId = 0;\r\n        this._color2Id = Object.create(null);\r\n        this._id2Color = [];\r\n    }\r\n    OverviewZoneManager.prototype.getId2Color = function () {\r\n        return this._id2Color;\r\n    };\r\n    OverviewZoneManager.prototype.setZones = function (newZones) {\r\n        this._zones = newZones;\r\n        this._zones.sort(OverviewRulerZone.compare);\r\n    };\r\n    OverviewZoneManager.prototype.setLineHeight = function (lineHeight) {\r\n        if (this._lineHeight === lineHeight) {\r\n            return false;\r\n        }\r\n        this._lineHeight = lineHeight;\r\n        this._colorZonesInvalid = true;\r\n        return true;\r\n    };\r\n    OverviewZoneManager.prototype.setPixelRatio = function (pixelRatio) {\r\n        this._pixelRatio = pixelRatio;\r\n        this._colorZonesInvalid = true;\r\n    };\r\n    OverviewZoneManager.prototype.getDOMWidth = function () {\r\n        return this._domWidth;\r\n    };\r\n    OverviewZoneManager.prototype.getCanvasWidth = function () {\r\n        return this._domWidth * this._pixelRatio;\r\n    };\r\n    OverviewZoneManager.prototype.setDOMWidth = function (width) {\r\n        if (this._domWidth === width) {\r\n            return false;\r\n        }\r\n        this._domWidth = width;\r\n        this._colorZonesInvalid = true;\r\n        return true;\r\n    };\r\n    OverviewZoneManager.prototype.getDOMHeight = function () {\r\n        return this._domHeight;\r\n    };\r\n    OverviewZoneManager.prototype.getCanvasHeight = function () {\r\n        return this._domHeight * this._pixelRatio;\r\n    };\r\n    OverviewZoneManager.prototype.setDOMHeight = function (height) {\r\n        if (this._domHeight === height) {\r\n            return false;\r\n        }\r\n        this._domHeight = height;\r\n        this._colorZonesInvalid = true;\r\n        return true;\r\n    };\r\n    OverviewZoneManager.prototype.getOuterHeight = function () {\r\n        return this._outerHeight;\r\n    };\r\n    OverviewZoneManager.prototype.setOuterHeight = function (outerHeight) {\r\n        if (this._outerHeight === outerHeight) {\r\n            return false;\r\n        }\r\n        this._outerHeight = outerHeight;\r\n        this._colorZonesInvalid = true;\r\n        return true;\r\n    };\r\n    OverviewZoneManager.prototype.resolveColorZones = function () {\r\n        var colorZonesInvalid = this._colorZonesInvalid;\r\n        var lineHeight = Math.floor(this._lineHeight); // @perf\r\n        var totalHeight = Math.floor(this.getCanvasHeight()); // @perf\r\n        var outerHeight = Math.floor(this._outerHeight); // @perf\r\n        var heightRatio = totalHeight / outerHeight;\r\n        var halfMinimumHeight = Math.floor(4 /* MINIMUM_HEIGHT */ * this._pixelRatio / 2);\r\n        var allColorZones = [];\r\n        for (var i = 0, len = this._zones.length; i < len; i++) {\r\n            var zone = this._zones[i];\r\n            if (!colorZonesInvalid) {\r\n                var colorZone_1 = zone.getColorZones();\r\n                if (colorZone_1) {\r\n                    allColorZones.push(colorZone_1);\r\n                    continue;\r\n                }\r\n            }\r\n            var y1 = Math.floor(heightRatio * (this._getVerticalOffsetForLine(zone.startLineNumber)));\r\n            var y2 = Math.floor(heightRatio * (this._getVerticalOffsetForLine(zone.endLineNumber) + lineHeight));\r\n            var ycenter = Math.floor((y1 + y2) / 2);\r\n            var halfHeight = (y2 - ycenter);\r\n            if (halfHeight < halfMinimumHeight) {\r\n                halfHeight = halfMinimumHeight;\r\n            }\r\n            if (ycenter - halfHeight < 0) {\r\n                ycenter = halfHeight;\r\n            }\r\n            if (ycenter + halfHeight > totalHeight) {\r\n                ycenter = totalHeight - halfHeight;\r\n            }\r\n            var color = zone.color;\r\n            var colorId = this._color2Id[color];\r\n            if (!colorId) {\r\n                colorId = (++this._lastAssignedId);\r\n                this._color2Id[color] = colorId;\r\n                this._id2Color[colorId] = color;\r\n            }\r\n            var colorZone = new ColorZone(ycenter - halfHeight, ycenter + halfHeight, colorId);\r\n            zone.setColorZone(colorZone);\r\n            allColorZones.push(colorZone);\r\n        }\r\n        this._colorZonesInvalid = false;\r\n        allColorZones.sort(ColorZone.compare);\r\n        return allColorZones;\r\n    };\r\n    return OverviewZoneManager;\r\n}());\r\nexport { OverviewZoneManager };\r\n"]},"metadata":{},"sourceType":"module"}