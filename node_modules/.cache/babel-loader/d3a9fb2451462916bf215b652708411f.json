{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { Selection } from '../core/selection.js';\n\nvar ReplaceCommand =\n/** @class */\nfunction () {\n  function ReplaceCommand(range, text, insertsAutoWhitespace) {\n    if (insertsAutoWhitespace === void 0) {\n      insertsAutoWhitespace = false;\n    }\n\n    this._range = range;\n    this._text = text;\n    this.insertsAutoWhitespace = insertsAutoWhitespace;\n  }\n\n  ReplaceCommand.prototype.getEditOperations = function (model, builder) {\n    builder.addTrackedEditOperation(this._range, this._text);\n  };\n\n  ReplaceCommand.prototype.computeCursorState = function (model, helper) {\n    var inverseEditOperations = helper.getInverseEditOperations();\n    var srcRange = inverseEditOperations[0].range;\n    return new Selection(srcRange.endLineNumber, srcRange.endColumn, srcRange.endLineNumber, srcRange.endColumn);\n  };\n\n  return ReplaceCommand;\n}();\n\nexport { ReplaceCommand };\n\nvar ReplaceCommandThatSelectsText =\n/** @class */\nfunction () {\n  function ReplaceCommandThatSelectsText(range, text) {\n    this._range = range;\n    this._text = text;\n  }\n\n  ReplaceCommandThatSelectsText.prototype.getEditOperations = function (model, builder) {\n    builder.addTrackedEditOperation(this._range, this._text);\n  };\n\n  ReplaceCommandThatSelectsText.prototype.computeCursorState = function (model, helper) {\n    var inverseEditOperations = helper.getInverseEditOperations();\n    var srcRange = inverseEditOperations[0].range;\n    return new Selection(srcRange.startLineNumber, srcRange.startColumn, srcRange.endLineNumber, srcRange.endColumn);\n  };\n\n  return ReplaceCommandThatSelectsText;\n}();\n\nexport { ReplaceCommandThatSelectsText };\n\nvar ReplaceCommandWithoutChangingPosition =\n/** @class */\nfunction () {\n  function ReplaceCommandWithoutChangingPosition(range, text, insertsAutoWhitespace) {\n    if (insertsAutoWhitespace === void 0) {\n      insertsAutoWhitespace = false;\n    }\n\n    this._range = range;\n    this._text = text;\n    this.insertsAutoWhitespace = insertsAutoWhitespace;\n  }\n\n  ReplaceCommandWithoutChangingPosition.prototype.getEditOperations = function (model, builder) {\n    builder.addTrackedEditOperation(this._range, this._text);\n  };\n\n  ReplaceCommandWithoutChangingPosition.prototype.computeCursorState = function (model, helper) {\n    var inverseEditOperations = helper.getInverseEditOperations();\n    var srcRange = inverseEditOperations[0].range;\n    return new Selection(srcRange.startLineNumber, srcRange.startColumn, srcRange.startLineNumber, srcRange.startColumn);\n  };\n\n  return ReplaceCommandWithoutChangingPosition;\n}();\n\nexport { ReplaceCommandWithoutChangingPosition };\n\nvar ReplaceCommandWithOffsetCursorState =\n/** @class */\nfunction () {\n  function ReplaceCommandWithOffsetCursorState(range, text, lineNumberDeltaOffset, columnDeltaOffset, insertsAutoWhitespace) {\n    if (insertsAutoWhitespace === void 0) {\n      insertsAutoWhitespace = false;\n    }\n\n    this._range = range;\n    this._text = text;\n    this._columnDeltaOffset = columnDeltaOffset;\n    this._lineNumberDeltaOffset = lineNumberDeltaOffset;\n    this.insertsAutoWhitespace = insertsAutoWhitespace;\n  }\n\n  ReplaceCommandWithOffsetCursorState.prototype.getEditOperations = function (model, builder) {\n    builder.addTrackedEditOperation(this._range, this._text);\n  };\n\n  ReplaceCommandWithOffsetCursorState.prototype.computeCursorState = function (model, helper) {\n    var inverseEditOperations = helper.getInverseEditOperations();\n    var srcRange = inverseEditOperations[0].range;\n    return new Selection(srcRange.endLineNumber + this._lineNumberDeltaOffset, srcRange.endColumn + this._columnDeltaOffset, srcRange.endLineNumber + this._lineNumberDeltaOffset, srcRange.endColumn + this._columnDeltaOffset);\n  };\n\n  return ReplaceCommandWithOffsetCursorState;\n}();\n\nexport { ReplaceCommandWithOffsetCursorState };\n\nvar ReplaceCommandThatPreservesSelection =\n/** @class */\nfunction () {\n  function ReplaceCommandThatPreservesSelection(editRange, text, initialSelection, forceMoveMarkers) {\n    if (forceMoveMarkers === void 0) {\n      forceMoveMarkers = false;\n    }\n\n    this._range = editRange;\n    this._text = text;\n    this._initialSelection = initialSelection;\n    this._forceMoveMarkers = forceMoveMarkers;\n    this._selectionId = null;\n  }\n\n  ReplaceCommandThatPreservesSelection.prototype.getEditOperations = function (model, builder) {\n    builder.addTrackedEditOperation(this._range, this._text, this._forceMoveMarkers);\n    this._selectionId = builder.trackSelection(this._initialSelection);\n  };\n\n  ReplaceCommandThatPreservesSelection.prototype.computeCursorState = function (model, helper) {\n    return helper.getTrackedSelection(this._selectionId);\n  };\n\n  return ReplaceCommandThatPreservesSelection;\n}();\n\nexport { ReplaceCommandThatPreservesSelection };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/common/commands/replaceCommand.js"],"names":["Selection","ReplaceCommand","range","text","insertsAutoWhitespace","_range","_text","prototype","getEditOperations","model","builder","addTrackedEditOperation","computeCursorState","helper","inverseEditOperations","getInverseEditOperations","srcRange","endLineNumber","endColumn","ReplaceCommandThatSelectsText","startLineNumber","startColumn","ReplaceCommandWithoutChangingPosition","ReplaceCommandWithOffsetCursorState","lineNumberDeltaOffset","columnDeltaOffset","_columnDeltaOffset","_lineNumberDeltaOffset","ReplaceCommandThatPreservesSelection","editRange","initialSelection","forceMoveMarkers","_initialSelection","_forceMoveMarkers","_selectionId","trackSelection","getTrackedSelection"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Selection } from '../core/selection.js';\r\nvar ReplaceCommand = /** @class */ (function () {\r\n    function ReplaceCommand(range, text, insertsAutoWhitespace) {\r\n        if (insertsAutoWhitespace === void 0) { insertsAutoWhitespace = false; }\r\n        this._range = range;\r\n        this._text = text;\r\n        this.insertsAutoWhitespace = insertsAutoWhitespace;\r\n    }\r\n    ReplaceCommand.prototype.getEditOperations = function (model, builder) {\r\n        builder.addTrackedEditOperation(this._range, this._text);\r\n    };\r\n    ReplaceCommand.prototype.computeCursorState = function (model, helper) {\r\n        var inverseEditOperations = helper.getInverseEditOperations();\r\n        var srcRange = inverseEditOperations[0].range;\r\n        return new Selection(srcRange.endLineNumber, srcRange.endColumn, srcRange.endLineNumber, srcRange.endColumn);\r\n    };\r\n    return ReplaceCommand;\r\n}());\r\nexport { ReplaceCommand };\r\nvar ReplaceCommandThatSelectsText = /** @class */ (function () {\r\n    function ReplaceCommandThatSelectsText(range, text) {\r\n        this._range = range;\r\n        this._text = text;\r\n    }\r\n    ReplaceCommandThatSelectsText.prototype.getEditOperations = function (model, builder) {\r\n        builder.addTrackedEditOperation(this._range, this._text);\r\n    };\r\n    ReplaceCommandThatSelectsText.prototype.computeCursorState = function (model, helper) {\r\n        var inverseEditOperations = helper.getInverseEditOperations();\r\n        var srcRange = inverseEditOperations[0].range;\r\n        return new Selection(srcRange.startLineNumber, srcRange.startColumn, srcRange.endLineNumber, srcRange.endColumn);\r\n    };\r\n    return ReplaceCommandThatSelectsText;\r\n}());\r\nexport { ReplaceCommandThatSelectsText };\r\nvar ReplaceCommandWithoutChangingPosition = /** @class */ (function () {\r\n    function ReplaceCommandWithoutChangingPosition(range, text, insertsAutoWhitespace) {\r\n        if (insertsAutoWhitespace === void 0) { insertsAutoWhitespace = false; }\r\n        this._range = range;\r\n        this._text = text;\r\n        this.insertsAutoWhitespace = insertsAutoWhitespace;\r\n    }\r\n    ReplaceCommandWithoutChangingPosition.prototype.getEditOperations = function (model, builder) {\r\n        builder.addTrackedEditOperation(this._range, this._text);\r\n    };\r\n    ReplaceCommandWithoutChangingPosition.prototype.computeCursorState = function (model, helper) {\r\n        var inverseEditOperations = helper.getInverseEditOperations();\r\n        var srcRange = inverseEditOperations[0].range;\r\n        return new Selection(srcRange.startLineNumber, srcRange.startColumn, srcRange.startLineNumber, srcRange.startColumn);\r\n    };\r\n    return ReplaceCommandWithoutChangingPosition;\r\n}());\r\nexport { ReplaceCommandWithoutChangingPosition };\r\nvar ReplaceCommandWithOffsetCursorState = /** @class */ (function () {\r\n    function ReplaceCommandWithOffsetCursorState(range, text, lineNumberDeltaOffset, columnDeltaOffset, insertsAutoWhitespace) {\r\n        if (insertsAutoWhitespace === void 0) { insertsAutoWhitespace = false; }\r\n        this._range = range;\r\n        this._text = text;\r\n        this._columnDeltaOffset = columnDeltaOffset;\r\n        this._lineNumberDeltaOffset = lineNumberDeltaOffset;\r\n        this.insertsAutoWhitespace = insertsAutoWhitespace;\r\n    }\r\n    ReplaceCommandWithOffsetCursorState.prototype.getEditOperations = function (model, builder) {\r\n        builder.addTrackedEditOperation(this._range, this._text);\r\n    };\r\n    ReplaceCommandWithOffsetCursorState.prototype.computeCursorState = function (model, helper) {\r\n        var inverseEditOperations = helper.getInverseEditOperations();\r\n        var srcRange = inverseEditOperations[0].range;\r\n        return new Selection(srcRange.endLineNumber + this._lineNumberDeltaOffset, srcRange.endColumn + this._columnDeltaOffset, srcRange.endLineNumber + this._lineNumberDeltaOffset, srcRange.endColumn + this._columnDeltaOffset);\r\n    };\r\n    return ReplaceCommandWithOffsetCursorState;\r\n}());\r\nexport { ReplaceCommandWithOffsetCursorState };\r\nvar ReplaceCommandThatPreservesSelection = /** @class */ (function () {\r\n    function ReplaceCommandThatPreservesSelection(editRange, text, initialSelection, forceMoveMarkers) {\r\n        if (forceMoveMarkers === void 0) { forceMoveMarkers = false; }\r\n        this._range = editRange;\r\n        this._text = text;\r\n        this._initialSelection = initialSelection;\r\n        this._forceMoveMarkers = forceMoveMarkers;\r\n        this._selectionId = null;\r\n    }\r\n    ReplaceCommandThatPreservesSelection.prototype.getEditOperations = function (model, builder) {\r\n        builder.addTrackedEditOperation(this._range, this._text, this._forceMoveMarkers);\r\n        this._selectionId = builder.trackSelection(this._initialSelection);\r\n    };\r\n    ReplaceCommandThatPreservesSelection.prototype.computeCursorState = function (model, helper) {\r\n        return helper.getTrackedSelection(this._selectionId);\r\n    };\r\n    return ReplaceCommandThatPreservesSelection;\r\n}());\r\nexport { ReplaceCommandThatPreservesSelection };\r\n"]},"metadata":{},"sourceType":"module"}