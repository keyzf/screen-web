{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { Event as BaseEvent, Emitter } from '../common/event.js';\nexport var domEvent = function (element, type, useCapture) {\n  var fn = function (e) {\n    return emitter.fire(e);\n  };\n\n  var emitter = new Emitter({\n    onFirstListenerAdd: function () {\n      element.addEventListener(type, fn, useCapture);\n    },\n    onLastListenerRemove: function () {\n      element.removeEventListener(type, fn, useCapture);\n    }\n  });\n  return emitter.event;\n};\nexport function stop(event) {\n  return BaseEvent.map(event, function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    return e;\n  });\n}","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/base/browser/event.js"],"names":["Event","BaseEvent","Emitter","domEvent","element","type","useCapture","fn","e","emitter","fire","onFirstListenerAdd","addEventListener","onLastListenerRemove","removeEventListener","event","stop","map","preventDefault","stopPropagation"],"mappings":"AAAA;;;;AAIA,SAASA,KAAK,IAAIC,SAAlB,EAA6BC,OAA7B,QAA4C,oBAA5C;AACA,OAAO,IAAIC,QAAQ,GAAG,UAAUC,OAAV,EAAmBC,IAAnB,EAAyBC,UAAzB,EAAqC;AACvD,MAAIC,EAAE,GAAG,UAAUC,CAAV,EAAa;AAAE,WAAOC,OAAO,CAACC,IAAR,CAAaF,CAAb,CAAP;AAAyB,GAAjD;;AACA,MAAIC,OAAO,GAAG,IAAIP,OAAJ,CAAY;AACtBS,IAAAA,kBAAkB,EAAE,YAAY;AAC5BP,MAAAA,OAAO,CAACQ,gBAAR,CAAyBP,IAAzB,EAA+BE,EAA/B,EAAmCD,UAAnC;AACH,KAHqB;AAItBO,IAAAA,oBAAoB,EAAE,YAAY;AAC9BT,MAAAA,OAAO,CAACU,mBAAR,CAA4BT,IAA5B,EAAkCE,EAAlC,EAAsCD,UAAtC;AACH;AANqB,GAAZ,CAAd;AAQA,SAAOG,OAAO,CAACM,KAAf;AACH,CAXM;AAYP,OAAO,SAASC,IAAT,CAAcD,KAAd,EAAqB;AACxB,SAAOd,SAAS,CAACgB,GAAV,CAAcF,KAAd,EAAqB,UAAUP,CAAV,EAAa;AACrCA,IAAAA,CAAC,CAACU,cAAF;AACAV,IAAAA,CAAC,CAACW,eAAF;AACA,WAAOX,CAAP;AACH,GAJM,CAAP;AAKH","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Event as BaseEvent, Emitter } from '../common/event.js';\r\nexport var domEvent = function (element, type, useCapture) {\r\n    var fn = function (e) { return emitter.fire(e); };\r\n    var emitter = new Emitter({\r\n        onFirstListenerAdd: function () {\r\n            element.addEventListener(type, fn, useCapture);\r\n        },\r\n        onLastListenerRemove: function () {\r\n            element.removeEventListener(type, fn, useCapture);\r\n        }\r\n    });\r\n    return emitter.event;\r\n};\r\nexport function stop(event) {\r\n    return BaseEvent.map(event, function (e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        return e;\r\n    });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}