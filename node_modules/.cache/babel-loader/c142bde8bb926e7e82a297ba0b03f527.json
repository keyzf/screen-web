{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as nls from '../../../nls.js';\nimport * as types from '../../../base/common/types.js';\nimport { Command, EditorCommand, registerEditorCommand } from '../editorExtensions.js';\nimport { ICodeEditorService } from '../services/codeEditorService.js';\nimport { ColumnSelection } from '../../common/controller/cursorColumnSelection.js';\nimport { CursorState } from '../../common/controller/cursorCommon.js';\nimport { DeleteOperations } from '../../common/controller/cursorDeleteOperations.js';\nimport { CursorMove as CursorMove_, CursorMoveCommands } from '../../common/controller/cursorMoveCommands.js';\nimport { TypeOperations } from '../../common/controller/cursorTypeOperations.js';\nimport { Position } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { Handler } from '../../common/editorCommon.js';\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\nimport { ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\nvar CORE_WEIGHT = 0\n/* EditorCore */\n;\n\nvar CoreEditorCommand =\n/** @class */\nfunction (_super) {\n  __extends(CoreEditorCommand, _super);\n\n  function CoreEditorCommand() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  CoreEditorCommand.prototype.runEditorCommand = function (accessor, editor, args) {\n    var cursors = editor._getCursors();\n\n    if (!cursors) {\n      // the editor has no view => has no cursors\n      return;\n    }\n\n    this.runCoreEditorCommand(cursors, args || {});\n  };\n\n  return CoreEditorCommand;\n}(EditorCommand);\n\nexport { CoreEditorCommand };\nexport var EditorScroll_;\n\n(function (EditorScroll_) {\n  var isEditorScrollArgs = function (arg) {\n    if (!types.isObject(arg)) {\n      return false;\n    }\n\n    var scrollArg = arg;\n\n    if (!types.isString(scrollArg.to)) {\n      return false;\n    }\n\n    if (!types.isUndefined(scrollArg.by) && !types.isString(scrollArg.by)) {\n      return false;\n    }\n\n    if (!types.isUndefined(scrollArg.value) && !types.isNumber(scrollArg.value)) {\n      return false;\n    }\n\n    if (!types.isUndefined(scrollArg.revealCursor) && !types.isBoolean(scrollArg.revealCursor)) {\n      return false;\n    }\n\n    return true;\n  };\n\n  EditorScroll_.description = {\n    description: 'Scroll editor in the given direction',\n    args: [{\n      name: 'Editor scroll argument object',\n      description: \"Property-value pairs that can be passed through this argument:\\n\\t\\t\\t\\t\\t* 'to': A mandatory direction value.\\n\\t\\t\\t\\t\\t\\t```\\n\\t\\t\\t\\t\\t\\t'up', 'down'\\n\\t\\t\\t\\t\\t\\t```\\n\\t\\t\\t\\t\\t* 'by': Unit to move. Default is computed based on 'to' value.\\n\\t\\t\\t\\t\\t\\t```\\n\\t\\t\\t\\t\\t\\t'line', 'wrappedLine', 'page', 'halfPage'\\n\\t\\t\\t\\t\\t\\t```\\n\\t\\t\\t\\t\\t* 'value': Number of units to move. Default is '1'.\\n\\t\\t\\t\\t\\t* 'revealCursor': If 'true' reveals the cursor if it is outside view port.\\n\\t\\t\\t\\t\",\n      constraint: isEditorScrollArgs,\n      schema: {\n        'type': 'object',\n        'required': ['to'],\n        'properties': {\n          'to': {\n            'type': 'string',\n            'enum': ['up', 'down']\n          },\n          'by': {\n            'type': 'string',\n            'enum': ['line', 'wrappedLine', 'page', 'halfPage']\n          },\n          'value': {\n            'type': 'number',\n            'default': 1\n          },\n          'revealCursor': {\n            'type': 'boolean'\n          }\n        }\n      }\n    }]\n  };\n  /**\r\n   * Directions in the view for editor scroll command.\r\n   */\n\n  EditorScroll_.RawDirection = {\n    Up: 'up',\n    Down: 'down'\n  };\n  /**\r\n   * Units for editor scroll 'by' argument\r\n   */\n\n  EditorScroll_.RawUnit = {\n    Line: 'line',\n    WrappedLine: 'wrappedLine',\n    Page: 'page',\n    HalfPage: 'halfPage'\n  };\n\n  function parse(args) {\n    var direction;\n\n    switch (args.to) {\n      case EditorScroll_.RawDirection.Up:\n        direction = 1\n        /* Up */\n        ;\n        break;\n\n      case EditorScroll_.RawDirection.Down:\n        direction = 2\n        /* Down */\n        ;\n        break;\n\n      default:\n        // Illegal arguments\n        return null;\n    }\n\n    var unit;\n\n    switch (args.by) {\n      case EditorScroll_.RawUnit.Line:\n        unit = 1\n        /* Line */\n        ;\n        break;\n\n      case EditorScroll_.RawUnit.WrappedLine:\n        unit = 2\n        /* WrappedLine */\n        ;\n        break;\n\n      case EditorScroll_.RawUnit.Page:\n        unit = 3\n        /* Page */\n        ;\n        break;\n\n      case EditorScroll_.RawUnit.HalfPage:\n        unit = 4\n        /* HalfPage */\n        ;\n        break;\n\n      default:\n        unit = 2\n        /* WrappedLine */\n        ;\n    }\n\n    var value = Math.floor(args.value || 1);\n    var revealCursor = !!args.revealCursor;\n    return {\n      direction: direction,\n      unit: unit,\n      value: value,\n      revealCursor: revealCursor,\n      select: !!args.select\n    };\n  }\n\n  EditorScroll_.parse = parse;\n})(EditorScroll_ || (EditorScroll_ = {}));\n\nexport var RevealLine_;\n\n(function (RevealLine_) {\n  var isRevealLineArgs = function (arg) {\n    if (!types.isObject(arg)) {\n      return false;\n    }\n\n    var reveaLineArg = arg;\n\n    if (!types.isNumber(reveaLineArg.lineNumber)) {\n      return false;\n    }\n\n    if (!types.isUndefined(reveaLineArg.at) && !types.isString(reveaLineArg.at)) {\n      return false;\n    }\n\n    return true;\n  };\n\n  RevealLine_.description = {\n    description: 'Reveal the given line at the given logical position',\n    args: [{\n      name: 'Reveal line argument object',\n      description: \"Property-value pairs that can be passed through this argument:\\n\\t\\t\\t\\t\\t* 'lineNumber': A mandatory line number value.\\n\\t\\t\\t\\t\\t* 'at': Logical position at which line has to be revealed .\\n\\t\\t\\t\\t\\t\\t```\\n\\t\\t\\t\\t\\t\\t'top', 'center', 'bottom'\\n\\t\\t\\t\\t\\t\\t```\\n\\t\\t\\t\\t\",\n      constraint: isRevealLineArgs,\n      schema: {\n        'type': 'object',\n        'required': ['lineNumber'],\n        'properties': {\n          'lineNumber': {\n            'type': 'number'\n          },\n          'at': {\n            'type': 'string',\n            'enum': ['top', 'center', 'bottom']\n          }\n        }\n      }\n    }]\n  };\n  /**\r\n   * Values for reveal line 'at' argument\r\n   */\n\n  RevealLine_.RawAtArgument = {\n    Top: 'top',\n    Center: 'center',\n    Bottom: 'bottom'\n  };\n})(RevealLine_ || (RevealLine_ = {}));\n\nexport var CoreNavigationCommands;\n\n(function (CoreNavigationCommands) {\n  var BaseMoveToCommand =\n  /** @class */\n  function (_super) {\n    __extends(BaseMoveToCommand, _super);\n\n    function BaseMoveToCommand(opts) {\n      var _this = _super.call(this, opts) || this;\n\n      _this._inSelectionMode = opts.inSelectionMode;\n      return _this;\n    }\n\n    BaseMoveToCommand.prototype.runCoreEditorCommand = function (cursors, args) {\n      cursors.context.model.pushStackElement();\n      cursors.setStates(args.source, 3\n      /* Explicit */\n      , [CursorMoveCommands.moveTo(cursors.context, cursors.getPrimaryCursor(), this._inSelectionMode, args.position, args.viewPosition)]);\n      cursors.reveal(args.source, true, 0\n      /* Primary */\n      , 0\n      /* Smooth */\n      );\n    };\n\n    return BaseMoveToCommand;\n  }(CoreEditorCommand);\n\n  CoreNavigationCommands.MoveTo = registerEditorCommand(new BaseMoveToCommand({\n    id: '_moveTo',\n    inSelectionMode: false,\n    precondition: undefined\n  }));\n  CoreNavigationCommands.MoveToSelect = registerEditorCommand(new BaseMoveToCommand({\n    id: '_moveToSelect',\n    inSelectionMode: true,\n    precondition: undefined\n  }));\n\n  var ColumnSelectCommand =\n  /** @class */\n  function (_super) {\n    __extends(ColumnSelectCommand, _super);\n\n    function ColumnSelectCommand() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    ColumnSelectCommand.prototype.runCoreEditorCommand = function (cursors, args) {\n      cursors.context.model.pushStackElement();\n\n      var result = this._getColumnSelectResult(cursors.context, cursors.getPrimaryCursor(), cursors.getColumnSelectData(), args);\n\n      cursors.setStates(args.source, 3\n      /* Explicit */\n      , result.viewStates.map(function (viewState) {\n        return CursorState.fromViewState(viewState);\n      }));\n      cursors.setColumnSelectData({\n        isReal: true,\n        fromViewLineNumber: result.fromLineNumber,\n        fromViewVisualColumn: result.fromVisualColumn,\n        toViewLineNumber: result.toLineNumber,\n        toViewVisualColumn: result.toVisualColumn\n      });\n      cursors.reveal(args.source, true, result.reversed ? 1\n      /* TopMost */\n      : 2\n      /* BottomMost */\n      , 0\n      /* Smooth */\n      );\n    };\n\n    return ColumnSelectCommand;\n  }(CoreEditorCommand);\n\n  CoreNavigationCommands.ColumnSelect = registerEditorCommand(new (\n  /** @class */\n  function (_super) {\n    __extends(class_1, _super);\n\n    function class_1() {\n      return _super.call(this, {\n        id: 'columnSelect',\n        precondition: undefined\n      }) || this;\n    }\n\n    class_1.prototype._getColumnSelectResult = function (context, primary, prevColumnSelectData, args) {\n      // validate `args`\n      var validatedPosition = context.model.validatePosition(args.position);\n      var validatedViewPosition = context.validateViewPosition(new Position(args.viewPosition.lineNumber, args.viewPosition.column), validatedPosition);\n      var fromViewLineNumber = args.doColumnSelect ? prevColumnSelectData.fromViewLineNumber : validatedViewPosition.lineNumber;\n      var fromViewVisualColumn = args.doColumnSelect ? prevColumnSelectData.fromViewVisualColumn : args.mouseColumn - 1;\n      return ColumnSelection.columnSelect(context.config, context.viewModel, fromViewLineNumber, fromViewVisualColumn, validatedViewPosition.lineNumber, args.mouseColumn - 1);\n    };\n\n    return class_1;\n  }(ColumnSelectCommand))());\n  CoreNavigationCommands.CursorColumnSelectLeft = registerEditorCommand(new (\n  /** @class */\n  function (_super) {\n    __extends(class_2, _super);\n\n    function class_2() {\n      return _super.call(this, {\n        id: 'cursorColumnSelectLeft',\n        precondition: undefined,\n        kbOpts: {\n          weight: CORE_WEIGHT,\n          kbExpr: EditorContextKeys.textInputFocus,\n          primary: 2048\n          /* CtrlCmd */\n          | 1024\n          /* Shift */\n          | 512\n          /* Alt */\n          | 15\n          /* LeftArrow */\n          ,\n          linux: {\n            primary: 0\n          }\n        }\n      }) || this;\n    }\n\n    class_2.prototype._getColumnSelectResult = function (context, primary, prevColumnSelectData, args) {\n      return ColumnSelection.columnSelectLeft(context.config, context.viewModel, prevColumnSelectData);\n    };\n\n    return class_2;\n  }(ColumnSelectCommand))());\n  CoreNavigationCommands.CursorColumnSelectRight = registerEditorCommand(new (\n  /** @class */\n  function (_super) {\n    __extends(class_3, _super);\n\n    function class_3() {\n      return _super.call(this, {\n        id: 'cursorColumnSelectRight',\n        precondition: undefined,\n        kbOpts: {\n          weight: CORE_WEIGHT,\n          kbExpr: EditorContextKeys.textInputFocus,\n          primary: 2048\n          /* CtrlCmd */\n          | 1024\n          /* Shift */\n          | 512\n          /* Alt */\n          | 17\n          /* RightArrow */\n          ,\n          linux: {\n            primary: 0\n          }\n        }\n      }) || this;\n    }\n\n    class_3.prototype._getColumnSelectResult = function (context, primary, prevColumnSelectData, args) {\n      return ColumnSelection.columnSelectRight(context.config, context.viewModel, prevColumnSelectData);\n    };\n\n    return class_3;\n  }(ColumnSelectCommand))());\n\n  var ColumnSelectUpCommand =\n  /** @class */\n  function (_super) {\n    __extends(ColumnSelectUpCommand, _super);\n\n    function ColumnSelectUpCommand(opts) {\n      var _this = _super.call(this, opts) || this;\n\n      _this._isPaged = opts.isPaged;\n      return _this;\n    }\n\n    ColumnSelectUpCommand.prototype._getColumnSelectResult = function (context, primary, prevColumnSelectData, args) {\n      return ColumnSelection.columnSelectUp(context.config, context.viewModel, prevColumnSelectData, this._isPaged);\n    };\n\n    return ColumnSelectUpCommand;\n  }(ColumnSelectCommand);\n\n  CoreNavigationCommands.CursorColumnSelectUp = registerEditorCommand(new ColumnSelectUpCommand({\n    isPaged: false,\n    id: 'cursorColumnSelectUp',\n    precondition: undefined,\n    kbOpts: {\n      weight: CORE_WEIGHT,\n      kbExpr: EditorContextKeys.textInputFocus,\n      primary: 2048\n      /* CtrlCmd */\n      | 1024\n      /* Shift */\n      | 512\n      /* Alt */\n      | 16\n      /* UpArrow */\n      ,\n      linux: {\n        primary: 0\n      }\n    }\n  }));\n  CoreNavigationCommands.CursorColumnSelectPageUp = registerEditorCommand(new ColumnSelectUpCommand({\n    isPaged: true,\n    id: 'cursorColumnSelectPageUp',\n    precondition: undefined,\n    kbOpts: {\n      weight: CORE_WEIGHT,\n      kbExpr: EditorContextKeys.textInputFocus,\n      primary: 2048\n      /* CtrlCmd */\n      | 1024\n      /* Shift */\n      | 512\n      /* Alt */\n      | 11\n      /* PageUp */\n      ,\n      linux: {\n        primary: 0\n      }\n    }\n  }));\n\n  var ColumnSelectDownCommand =\n  /** @class */\n  function (_super) {\n    __extends(ColumnSelectDownCommand, _super);\n\n    function ColumnSelectDownCommand(opts) {\n      var _this = _super.call(this, opts) || this;\n\n      _this._isPaged = opts.isPaged;\n      return _this;\n    }\n\n    ColumnSelectDownCommand.prototype._getColumnSelectResult = function (context, primary, prevColumnSelectData, args) {\n      return ColumnSelection.columnSelectDown(context.config, context.viewModel, prevColumnSelectData, this._isPaged);\n    };\n\n    return ColumnSelectDownCommand;\n  }(ColumnSelectCommand);\n\n  CoreNavigationCommands.CursorColumnSelectDown = registerEditorCommand(new ColumnSelectDownCommand({\n    isPaged: false,\n    id: 'cursorColumnSelectDown',\n    precondition: undefined,\n    kbOpts: {\n      weight: CORE_WEIGHT,\n      kbExpr: EditorContextKeys.textInputFocus,\n      primary: 2048\n      /* CtrlCmd */\n      | 1024\n      /* Shift */\n      | 512\n      /* Alt */\n      | 18\n      /* DownArrow */\n      ,\n      linux: {\n        primary: 0\n      }\n    }\n  }));\n  CoreNavigationCommands.CursorColumnSelectPageDown = registerEditorCommand(new ColumnSelectDownCommand({\n    isPaged: true,\n    id: 'cursorColumnSelectPageDown',\n    precondition: undefined,\n    kbOpts: {\n      weight: CORE_WEIGHT,\n      kbExpr: EditorContextKeys.textInputFocus,\n      primary: 2048\n      /* CtrlCmd */\n      | 1024\n      /* Shift */\n      | 512\n      /* Alt */\n      | 12\n      /* PageDown */\n      ,\n      linux: {\n        primary: 0\n      }\n    }\n  }));\n\n  var CursorMoveImpl =\n  /** @class */\n  function (_super) {\n    __extends(CursorMoveImpl, _super);\n\n    function CursorMoveImpl() {\n      return _super.call(this, {\n        id: 'cursorMove',\n        precondition: undefined,\n        description: CursorMove_.description\n      }) || this;\n    }\n\n    CursorMoveImpl.prototype.runCoreEditorCommand = function (cursors, args) {\n      var parsed = CursorMove_.parse(args);\n\n      if (!parsed) {\n        // illegal arguments\n        return;\n      }\n\n      this._runCursorMove(cursors, args.source, parsed);\n    };\n\n    CursorMoveImpl.prototype._runCursorMove = function (cursors, source, args) {\n      cursors.context.model.pushStackElement();\n      cursors.setStates(source, 3\n      /* Explicit */\n      , CursorMoveCommands.move(cursors.context, cursors.getAll(), args));\n      cursors.reveal(source, true, 0\n      /* Primary */\n      , 0\n      /* Smooth */\n      );\n    };\n\n    return CursorMoveImpl;\n  }(CoreEditorCommand);\n\n  CoreNavigationCommands.CursorMoveImpl = CursorMoveImpl;\n  CoreNavigationCommands.CursorMove = registerEditorCommand(new CursorMoveImpl());\n\n  var CursorMoveBasedCommand =\n  /** @class */\n  function (_super) {\n    __extends(CursorMoveBasedCommand, _super);\n\n    function CursorMoveBasedCommand(opts) {\n      var _this = _super.call(this, opts) || this;\n\n      _this._staticArgs = opts.args;\n      return _this;\n    }\n\n    CursorMoveBasedCommand.prototype.runCoreEditorCommand = function (cursors, dynamicArgs) {\n      var args = this._staticArgs;\n\n      if (this._staticArgs.value === -1\n      /* PAGE_SIZE_MARKER */\n      ) {\n          // -1 is a marker for page size\n          args = {\n            direction: this._staticArgs.direction,\n            unit: this._staticArgs.unit,\n            select: this._staticArgs.select,\n            value: cursors.context.config.pageSize\n          };\n        }\n\n      CoreNavigationCommands.CursorMove._runCursorMove(cursors, dynamicArgs.source, args);\n    };\n\n    return CursorMoveBasedCommand;\n  }(CoreEditorCommand);\n\n  CoreNavigationCommands.CursorLeft = registerEditorCommand(new CursorMoveBasedCommand({\n    args: {\n      direction: 0\n      /* Left */\n      ,\n      unit: 0\n      /* None */\n      ,\n      select: false,\n      value: 1\n    },\n    id: 'cursorLeft',\n    precondition: undefined,\n    kbOpts: {\n      weight: CORE_WEIGHT,\n      kbExpr: EditorContextKeys.textInputFocus,\n      primary: 15\n      /* LeftArrow */\n      ,\n      mac: {\n        primary: 15\n        /* LeftArrow */\n        ,\n        secondary: [256\n        /* WinCtrl */\n        | 32\n        /* KEY_B */\n        ]\n      }\n    }\n  }));\n  CoreNavigationCommands.CursorLeftSelect = registerEditorCommand(new CursorMoveBasedCommand({\n    args: {\n      direction: 0\n      /* Left */\n      ,\n      unit: 0\n      /* None */\n      ,\n      select: true,\n      value: 1\n    },\n    id: 'cursorLeftSelect',\n    precondition: undefined,\n    kbOpts: {\n      weight: CORE_WEIGHT,\n      kbExpr: EditorContextKeys.textInputFocus,\n      primary: 1024\n      /* Shift */\n      | 15\n      /* LeftArrow */\n\n    }\n  }));\n  CoreNavigationCommands.CursorRight = registerEditorCommand(new CursorMoveBasedCommand({\n    args: {\n      direction: 1\n      /* Right */\n      ,\n      unit: 0\n      /* None */\n      ,\n      select: false,\n      value: 1\n    },\n    id: 'cursorRight',\n    precondition: undefined,\n    kbOpts: {\n      weight: CORE_WEIGHT,\n      kbExpr: EditorContextKeys.textInputFocus,\n      primary: 17\n      /* RightArrow */\n      ,\n      mac: {\n        primary: 17\n        /* RightArrow */\n        ,\n        secondary: [256\n        /* WinCtrl */\n        | 36\n        /* KEY_F */\n        ]\n      }\n    }\n  }));\n  CoreNavigationCommands.CursorRightSelect = registerEditorCommand(new CursorMoveBasedCommand({\n    args: {\n      direction: 1\n      /* Right */\n      ,\n      unit: 0\n      /* None */\n      ,\n      select: true,\n      value: 1\n    },\n    id: 'cursorRightSelect',\n    precondition: undefined,\n    kbOpts: {\n      weight: CORE_WEIGHT,\n      kbExpr: EditorContextKeys.textInputFocus,\n      primary: 1024\n      /* Shift */\n      | 17\n      /* RightArrow */\n\n    }\n  }));\n  CoreNavigationCommands.CursorUp = registerEditorCommand(new CursorMoveBasedCommand({\n    args: {\n      direction: 2\n      /* Up */\n      ,\n      unit: 2\n      /* WrappedLine */\n      ,\n      select: false,\n      value: 1\n    },\n    id: 'cursorUp',\n    precondition: undefined,\n    kbOpts: {\n      weight: CORE_WEIGHT,\n      kbExpr: EditorContextKeys.textInputFocus,\n      primary: 16\n      /* UpArrow */\n      ,\n      mac: {\n        primary: 16\n        /* UpArrow */\n        ,\n        secondary: [256\n        /* WinCtrl */\n        | 46\n        /* KEY_P */\n        ]\n      }\n    }\n  }));\n  CoreNavigationCommands.CursorUpSelect = registerEditorCommand(new CursorMoveBasedCommand({\n    args: {\n      direction: 2\n      /* Up */\n      ,\n      unit: 2\n      /* WrappedLine */\n      ,\n      select: true,\n      value: 1\n    },\n    id: 'cursorUpSelect',\n    precondition: undefined,\n    kbOpts: {\n      weight: CORE_WEIGHT,\n      kbExpr: EditorContextKeys.textInputFocus,\n      primary: 1024\n      /* Shift */\n      | 16\n      /* UpArrow */\n      ,\n      secondary: [2048\n      /* CtrlCmd */\n      | 1024\n      /* Shift */\n      | 16\n      /* UpArrow */\n      ],\n      mac: {\n        primary: 1024\n        /* Shift */\n        | 16\n        /* UpArrow */\n\n      },\n      linux: {\n        primary: 1024\n        /* Shift */\n        | 16\n        /* UpArrow */\n\n      }\n    }\n  }));\n  CoreNavigationCommands.CursorPageUp = registerEditorCommand(new CursorMoveBasedCommand({\n    args: {\n      direction: 2\n      /* Up */\n      ,\n      unit: 2\n      /* WrappedLine */\n      ,\n      select: false,\n      value: -1\n      /* PAGE_SIZE_MARKER */\n\n    },\n    id: 'cursorPageUp',\n    precondition: undefined,\n    kbOpts: {\n      weight: CORE_WEIGHT,\n      kbExpr: EditorContextKeys.textInputFocus,\n      primary: 11\n      /* PageUp */\n\n    }\n  }));\n  CoreNavigationCommands.CursorPageUpSelect = registerEditorCommand(new CursorMoveBasedCommand({\n    args: {\n      direction: 2\n      /* Up */\n      ,\n      unit: 2\n      /* WrappedLine */\n      ,\n      select: true,\n      value: -1\n      /* PAGE_SIZE_MARKER */\n\n    },\n    id: 'cursorPageUpSelect',\n    precondition: undefined,\n    kbOpts: {\n      weight: CORE_WEIGHT,\n      kbExpr: EditorContextKeys.textInputFocus,\n      primary: 1024\n      /* Shift */\n      | 11\n      /* PageUp */\n\n    }\n  }));\n  CoreNavigationCommands.CursorDown = registerEditorCommand(new CursorMoveBasedCommand({\n    args: {\n      direction: 3\n      /* Down */\n      ,\n      unit: 2\n      /* WrappedLine */\n      ,\n      select: false,\n      value: 1\n    },\n    id: 'cursorDown',\n    precondition: undefined,\n    kbOpts: {\n      weight: CORE_WEIGHT,\n      kbExpr: EditorContextKeys.textInputFocus,\n      primary: 18\n      /* DownArrow */\n      ,\n      mac: {\n        primary: 18\n        /* DownArrow */\n        ,\n        secondary: [256\n        /* WinCtrl */\n        | 44\n        /* KEY_N */\n        ]\n      }\n    }\n  }));\n  CoreNavigationCommands.CursorDownSelect = registerEditorCommand(new CursorMoveBasedCommand({\n    args: {\n      direction: 3\n      /* Down */\n      ,\n      unit: 2\n      /* WrappedLine */\n      ,\n      select: true,\n      value: 1\n    },\n    id: 'cursorDownSelect',\n    precondition: undefined,\n    kbOpts: {\n      weight: CORE_WEIGHT,\n      kbExpr: EditorContextKeys.textInputFocus,\n      primary: 1024\n      /* Shift */\n      | 18\n      /* DownArrow */\n      ,\n      secondary: [2048\n      /* CtrlCmd */\n      | 1024\n      /* Shift */\n      | 18\n      /* DownArrow */\n      ],\n      mac: {\n        primary: 1024\n        /* Shift */\n        | 18\n        /* DownArrow */\n\n      },\n      linux: {\n        primary: 1024\n        /* Shift */\n        | 18\n        /* DownArrow */\n\n      }\n    }\n  }));\n  CoreNavigationCommands.CursorPageDown = registerEditorCommand(new CursorMoveBasedCommand({\n    args: {\n      direction: 3\n      /* Down */\n      ,\n      unit: 2\n      /* WrappedLine */\n      ,\n      select: false,\n      value: -1\n      /* PAGE_SIZE_MARKER */\n\n    },\n    id: 'cursorPageDown',\n    precondition: undefined,\n    kbOpts: {\n      weight: CORE_WEIGHT,\n      kbExpr: EditorContextKeys.textInputFocus,\n      primary: 12\n      /* PageDown */\n\n    }\n  }));\n  CoreNavigationCommands.CursorPageDownSelect = registerEditorCommand(new CursorMoveBasedCommand({\n    args: {\n      direction: 3\n      /* Down */\n      ,\n      unit: 2\n      /* WrappedLine */\n      ,\n      select: true,\n      value: -1\n      /* PAGE_SIZE_MARKER */\n\n    },\n    id: 'cursorPageDownSelect',\n    precondition: undefined,\n    kbOpts: {\n      weight: CORE_WEIGHT,\n      kbExpr: EditorContextKeys.textInputFocus,\n      primary: 1024\n      /* Shift */\n      | 12\n      /* PageDown */\n\n    }\n  }));\n  CoreNavigationCommands.CreateCursor = registerEditorCommand(new (\n  /** @class */\n  function (_super) {\n    __extends(class_4, _super);\n\n    function class_4() {\n      return _super.call(this, {\n        id: 'createCursor',\n        precondition: undefined\n      }) || this;\n    }\n\n    class_4.prototype.runCoreEditorCommand = function (cursors, args) {\n      var context = cursors.context;\n      var newState;\n\n      if (args.wholeLine) {\n        newState = CursorMoveCommands.line(context, cursors.getPrimaryCursor(), false, args.position, args.viewPosition);\n      } else {\n        newState = CursorMoveCommands.moveTo(context, cursors.getPrimaryCursor(), false, args.position, args.viewPosition);\n      }\n\n      var states = cursors.getAll(); // Check if we should remove a cursor (sort of like a toggle)\n\n      if (states.length > 1) {\n        var newModelPosition = newState.modelState ? newState.modelState.position : null;\n        var newViewPosition = newState.viewState ? newState.viewState.position : null;\n\n        for (var i = 0, len = states.length; i < len; i++) {\n          var state = states[i];\n\n          if (newModelPosition && !state.modelState.selection.containsPosition(newModelPosition)) {\n            continue;\n          }\n\n          if (newViewPosition && !state.viewState.selection.containsPosition(newViewPosition)) {\n            continue;\n          } // => Remove the cursor\n\n\n          states.splice(i, 1);\n          cursors.context.model.pushStackElement();\n          cursors.setStates(args.source, 3\n          /* Explicit */\n          , states);\n          return;\n        }\n      } // => Add the new cursor\n\n\n      states.push(newState);\n      cursors.context.model.pushStackElement();\n      cursors.setStates(args.source, 3\n      /* Explicit */\n      , states);\n    };\n\n    return class_4;\n  }(CoreEditorCommand))());\n  CoreNavigationCommands.LastCursorMoveToSelect = registerEditorCommand(new (\n  /** @class */\n  function (_super) {\n    __extends(class_5, _super);\n\n    function class_5() {\n      return _super.call(this, {\n        id: '_lastCursorMoveToSelect',\n        precondition: undefined\n      }) || this;\n    }\n\n    class_5.prototype.runCoreEditorCommand = function (cursors, args) {\n      var context = cursors.context;\n      var lastAddedCursorIndex = cursors.getLastAddedCursorIndex();\n      var states = cursors.getAll();\n      var newStates = states.slice(0);\n      newStates[lastAddedCursorIndex] = CursorMoveCommands.moveTo(context, states[lastAddedCursorIndex], true, args.position, args.viewPosition);\n      cursors.context.model.pushStackElement();\n      cursors.setStates(args.source, 3\n      /* Explicit */\n      , newStates);\n    };\n\n    return class_5;\n  }(CoreEditorCommand))());\n\n  var HomeCommand =\n  /** @class */\n  function (_super) {\n    __extends(HomeCommand, _super);\n\n    function HomeCommand(opts) {\n      var _this = _super.call(this, opts) || this;\n\n      _this._inSelectionMode = opts.inSelectionMode;\n      return _this;\n    }\n\n    HomeCommand.prototype.runCoreEditorCommand = function (cursors, args) {\n      cursors.context.model.pushStackElement();\n      cursors.setStates(args.source, 3\n      /* Explicit */\n      , CursorMoveCommands.moveToBeginningOfLine(cursors.context, cursors.getAll(), this._inSelectionMode));\n      cursors.reveal(args.source, true, 0\n      /* Primary */\n      , 0\n      /* Smooth */\n      );\n    };\n\n    return HomeCommand;\n  }(CoreEditorCommand);\n\n  CoreNavigationCommands.CursorHome = registerEditorCommand(new HomeCommand({\n    inSelectionMode: false,\n    id: 'cursorHome',\n    precondition: undefined,\n    kbOpts: {\n      weight: CORE_WEIGHT,\n      kbExpr: EditorContextKeys.textInputFocus,\n      primary: 14\n      /* Home */\n      ,\n      mac: {\n        primary: 14\n        /* Home */\n        ,\n        secondary: [2048\n        /* CtrlCmd */\n        | 15\n        /* LeftArrow */\n        ]\n      }\n    }\n  }));\n  CoreNavigationCommands.CursorHomeSelect = registerEditorCommand(new HomeCommand({\n    inSelectionMode: true,\n    id: 'cursorHomeSelect',\n    precondition: undefined,\n    kbOpts: {\n      weight: CORE_WEIGHT,\n      kbExpr: EditorContextKeys.textInputFocus,\n      primary: 1024\n      /* Shift */\n      | 14\n      /* Home */\n      ,\n      mac: {\n        primary: 1024\n        /* Shift */\n        | 14\n        /* Home */\n        ,\n        secondary: [2048\n        /* CtrlCmd */\n        | 1024\n        /* Shift */\n        | 15\n        /* LeftArrow */\n        ]\n      }\n    }\n  }));\n  CoreNavigationCommands.CursorLineStart = registerEditorCommand(new (\n  /** @class */\n  function (_super) {\n    __extends(class_6, _super);\n\n    function class_6() {\n      return _super.call(this, {\n        id: 'cursorLineStart',\n        precondition: undefined,\n        kbOpts: {\n          weight: CORE_WEIGHT,\n          kbExpr: EditorContextKeys.textInputFocus,\n          primary: 0,\n          mac: {\n            primary: 256\n            /* WinCtrl */\n            | 31\n            /* KEY_A */\n\n          }\n        }\n      }) || this;\n    }\n\n    class_6.prototype.runCoreEditorCommand = function (cursors, args) {\n      cursors.context.model.pushStackElement();\n      cursors.setStates(args.source, 3\n      /* Explicit */\n      , this._exec(cursors.context, cursors.getAll()));\n      cursors.reveal(args.source, true, 0\n      /* Primary */\n      , 0\n      /* Smooth */\n      );\n    };\n\n    class_6.prototype._exec = function (context, cursors) {\n      var result = [];\n\n      for (var i = 0, len = cursors.length; i < len; i++) {\n        var cursor = cursors[i];\n        var lineNumber = cursor.modelState.position.lineNumber;\n        result[i] = CursorState.fromModelState(cursor.modelState.move(false, lineNumber, 1, 0));\n      }\n\n      return result;\n    };\n\n    return class_6;\n  }(CoreEditorCommand))());\n\n  var EndCommand =\n  /** @class */\n  function (_super) {\n    __extends(EndCommand, _super);\n\n    function EndCommand(opts) {\n      var _this = _super.call(this, opts) || this;\n\n      _this._inSelectionMode = opts.inSelectionMode;\n      return _this;\n    }\n\n    EndCommand.prototype.runCoreEditorCommand = function (cursors, args) {\n      cursors.context.model.pushStackElement();\n      cursors.setStates(args.source, 3\n      /* Explicit */\n      , CursorMoveCommands.moveToEndOfLine(cursors.context, cursors.getAll(), this._inSelectionMode));\n      cursors.reveal(args.source, true, 0\n      /* Primary */\n      , 0\n      /* Smooth */\n      );\n    };\n\n    return EndCommand;\n  }(CoreEditorCommand);\n\n  CoreNavigationCommands.CursorEnd = registerEditorCommand(new EndCommand({\n    inSelectionMode: false,\n    id: 'cursorEnd',\n    precondition: undefined,\n    kbOpts: {\n      weight: CORE_WEIGHT,\n      kbExpr: EditorContextKeys.textInputFocus,\n      primary: 13\n      /* End */\n      ,\n      mac: {\n        primary: 13\n        /* End */\n        ,\n        secondary: [2048\n        /* CtrlCmd */\n        | 17\n        /* RightArrow */\n        ]\n      }\n    }\n  }));\n  CoreNavigationCommands.CursorEndSelect = registerEditorCommand(new EndCommand({\n    inSelectionMode: true,\n    id: 'cursorEndSelect',\n    precondition: undefined,\n    kbOpts: {\n      weight: CORE_WEIGHT,\n      kbExpr: EditorContextKeys.textInputFocus,\n      primary: 1024\n      /* Shift */\n      | 13\n      /* End */\n      ,\n      mac: {\n        primary: 1024\n        /* Shift */\n        | 13\n        /* End */\n        ,\n        secondary: [2048\n        /* CtrlCmd */\n        | 1024\n        /* Shift */\n        | 17\n        /* RightArrow */\n        ]\n      }\n    }\n  }));\n  CoreNavigationCommands.CursorLineEnd = registerEditorCommand(new (\n  /** @class */\n  function (_super) {\n    __extends(class_7, _super);\n\n    function class_7() {\n      return _super.call(this, {\n        id: 'cursorLineEnd',\n        precondition: undefined,\n        kbOpts: {\n          weight: CORE_WEIGHT,\n          kbExpr: EditorContextKeys.textInputFocus,\n          primary: 0,\n          mac: {\n            primary: 256\n            /* WinCtrl */\n            | 35\n            /* KEY_E */\n\n          }\n        }\n      }) || this;\n    }\n\n    class_7.prototype.runCoreEditorCommand = function (cursors, args) {\n      cursors.context.model.pushStackElement();\n      cursors.setStates(args.source, 3\n      /* Explicit */\n      , this._exec(cursors.context, cursors.getAll()));\n      cursors.reveal(args.source, true, 0\n      /* Primary */\n      , 0\n      /* Smooth */\n      );\n    };\n\n    class_7.prototype._exec = function (context, cursors) {\n      var result = [];\n\n      for (var i = 0, len = cursors.length; i < len; i++) {\n        var cursor = cursors[i];\n        var lineNumber = cursor.modelState.position.lineNumber;\n        var maxColumn = context.model.getLineMaxColumn(lineNumber);\n        result[i] = CursorState.fromModelState(cursor.modelState.move(false, lineNumber, maxColumn, 0));\n      }\n\n      return result;\n    };\n\n    return class_7;\n  }(CoreEditorCommand))());\n\n  var TopCommand =\n  /** @class */\n  function (_super) {\n    __extends(TopCommand, _super);\n\n    function TopCommand(opts) {\n      var _this = _super.call(this, opts) || this;\n\n      _this._inSelectionMode = opts.inSelectionMode;\n      return _this;\n    }\n\n    TopCommand.prototype.runCoreEditorCommand = function (cursors, args) {\n      cursors.context.model.pushStackElement();\n      cursors.setStates(args.source, 3\n      /* Explicit */\n      , CursorMoveCommands.moveToBeginningOfBuffer(cursors.context, cursors.getAll(), this._inSelectionMode));\n      cursors.reveal(args.source, true, 0\n      /* Primary */\n      , 0\n      /* Smooth */\n      );\n    };\n\n    return TopCommand;\n  }(CoreEditorCommand);\n\n  CoreNavigationCommands.CursorTop = registerEditorCommand(new TopCommand({\n    inSelectionMode: false,\n    id: 'cursorTop',\n    precondition: undefined,\n    kbOpts: {\n      weight: CORE_WEIGHT,\n      kbExpr: EditorContextKeys.textInputFocus,\n      primary: 2048\n      /* CtrlCmd */\n      | 14\n      /* Home */\n      ,\n      mac: {\n        primary: 2048\n        /* CtrlCmd */\n        | 16\n        /* UpArrow */\n\n      }\n    }\n  }));\n  CoreNavigationCommands.CursorTopSelect = registerEditorCommand(new TopCommand({\n    inSelectionMode: true,\n    id: 'cursorTopSelect',\n    precondition: undefined,\n    kbOpts: {\n      weight: CORE_WEIGHT,\n      kbExpr: EditorContextKeys.textInputFocus,\n      primary: 2048\n      /* CtrlCmd */\n      | 1024\n      /* Shift */\n      | 14\n      /* Home */\n      ,\n      mac: {\n        primary: 2048\n        /* CtrlCmd */\n        | 1024\n        /* Shift */\n        | 16\n        /* UpArrow */\n\n      }\n    }\n  }));\n\n  var BottomCommand =\n  /** @class */\n  function (_super) {\n    __extends(BottomCommand, _super);\n\n    function BottomCommand(opts) {\n      var _this = _super.call(this, opts) || this;\n\n      _this._inSelectionMode = opts.inSelectionMode;\n      return _this;\n    }\n\n    BottomCommand.prototype.runCoreEditorCommand = function (cursors, args) {\n      cursors.context.model.pushStackElement();\n      cursors.setStates(args.source, 3\n      /* Explicit */\n      , CursorMoveCommands.moveToEndOfBuffer(cursors.context, cursors.getAll(), this._inSelectionMode));\n      cursors.reveal(args.source, true, 0\n      /* Primary */\n      , 0\n      /* Smooth */\n      );\n    };\n\n    return BottomCommand;\n  }(CoreEditorCommand);\n\n  CoreNavigationCommands.CursorBottom = registerEditorCommand(new BottomCommand({\n    inSelectionMode: false,\n    id: 'cursorBottom',\n    precondition: undefined,\n    kbOpts: {\n      weight: CORE_WEIGHT,\n      kbExpr: EditorContextKeys.textInputFocus,\n      primary: 2048\n      /* CtrlCmd */\n      | 13\n      /* End */\n      ,\n      mac: {\n        primary: 2048\n        /* CtrlCmd */\n        | 18\n        /* DownArrow */\n\n      }\n    }\n  }));\n  CoreNavigationCommands.CursorBottomSelect = registerEditorCommand(new BottomCommand({\n    inSelectionMode: true,\n    id: 'cursorBottomSelect',\n    precondition: undefined,\n    kbOpts: {\n      weight: CORE_WEIGHT,\n      kbExpr: EditorContextKeys.textInputFocus,\n      primary: 2048\n      /* CtrlCmd */\n      | 1024\n      /* Shift */\n      | 13\n      /* End */\n      ,\n      mac: {\n        primary: 2048\n        /* CtrlCmd */\n        | 1024\n        /* Shift */\n        | 18\n        /* DownArrow */\n\n      }\n    }\n  }));\n\n  var EditorScrollImpl =\n  /** @class */\n  function (_super) {\n    __extends(EditorScrollImpl, _super);\n\n    function EditorScrollImpl() {\n      return _super.call(this, {\n        id: 'editorScroll',\n        precondition: undefined,\n        description: EditorScroll_.description\n      }) || this;\n    }\n\n    EditorScrollImpl.prototype.runCoreEditorCommand = function (cursors, args) {\n      var parsed = EditorScroll_.parse(args);\n\n      if (!parsed) {\n        // illegal arguments\n        return;\n      }\n\n      this._runEditorScroll(cursors, args.source, parsed);\n    };\n\n    EditorScrollImpl.prototype._runEditorScroll = function (cursors, source, args) {\n      var desiredScrollTop = this._computeDesiredScrollTop(cursors.context, args);\n\n      if (args.revealCursor) {\n        // must ensure cursor is in new visible range\n        var desiredVisibleViewRange = cursors.context.getCompletelyVisibleViewRangeAtScrollTop(desiredScrollTop);\n        cursors.setStates(source, 3\n        /* Explicit */\n        , [CursorMoveCommands.findPositionInViewportIfOutside(cursors.context, cursors.getPrimaryCursor(), desiredVisibleViewRange, args.select)]);\n      }\n\n      cursors.scrollTo(desiredScrollTop);\n    };\n\n    EditorScrollImpl.prototype._computeDesiredScrollTop = function (context, args) {\n      if (args.unit === 1\n      /* Line */\n      ) {\n          // scrolling by model lines\n          var visibleModelRange = context.getCompletelyVisibleModelRange();\n          var desiredTopModelLineNumber = void 0;\n\n          if (args.direction === 1\n          /* Up */\n          ) {\n              // must go x model lines up\n              desiredTopModelLineNumber = Math.max(1, visibleModelRange.startLineNumber - args.value);\n            } else {\n            // must go x model lines down\n            desiredTopModelLineNumber = Math.min(context.model.getLineCount(), visibleModelRange.startLineNumber + args.value);\n          }\n\n          var desiredTopViewPosition = context.convertModelPositionToViewPosition(new Position(desiredTopModelLineNumber, 1));\n          return context.getVerticalOffsetForViewLine(desiredTopViewPosition.lineNumber);\n        }\n\n      var noOfLines;\n\n      if (args.unit === 3\n      /* Page */\n      ) {\n          noOfLines = context.config.pageSize * args.value;\n        } else if (args.unit === 4\n      /* HalfPage */\n      ) {\n          noOfLines = Math.round(context.config.pageSize / 2) * args.value;\n        } else {\n        noOfLines = args.value;\n      }\n\n      var deltaLines = (args.direction === 1\n      /* Up */\n      ? -1 : 1) * noOfLines;\n      return context.getCurrentScrollTop() + deltaLines * context.config.lineHeight;\n    };\n\n    return EditorScrollImpl;\n  }(CoreEditorCommand);\n\n  CoreNavigationCommands.EditorScrollImpl = EditorScrollImpl;\n  CoreNavigationCommands.EditorScroll = registerEditorCommand(new EditorScrollImpl());\n  CoreNavigationCommands.ScrollLineUp = registerEditorCommand(new (\n  /** @class */\n  function (_super) {\n    __extends(class_8, _super);\n\n    function class_8() {\n      return _super.call(this, {\n        id: 'scrollLineUp',\n        precondition: undefined,\n        kbOpts: {\n          weight: CORE_WEIGHT,\n          kbExpr: EditorContextKeys.textInputFocus,\n          primary: 2048\n          /* CtrlCmd */\n          | 16\n          /* UpArrow */\n          ,\n          mac: {\n            primary: 256\n            /* WinCtrl */\n            | 11\n            /* PageUp */\n\n          }\n        }\n      }) || this;\n    }\n\n    class_8.prototype.runCoreEditorCommand = function (cursors, args) {\n      CoreNavigationCommands.EditorScroll._runEditorScroll(cursors, args.source, {\n        direction: 1\n        /* Up */\n        ,\n        unit: 2\n        /* WrappedLine */\n        ,\n        value: 1,\n        revealCursor: false,\n        select: false\n      });\n    };\n\n    return class_8;\n  }(CoreEditorCommand))());\n  CoreNavigationCommands.ScrollPageUp = registerEditorCommand(new (\n  /** @class */\n  function (_super) {\n    __extends(class_9, _super);\n\n    function class_9() {\n      return _super.call(this, {\n        id: 'scrollPageUp',\n        precondition: undefined,\n        kbOpts: {\n          weight: CORE_WEIGHT,\n          kbExpr: EditorContextKeys.textInputFocus,\n          primary: 2048\n          /* CtrlCmd */\n          | 11\n          /* PageUp */\n          ,\n          win: {\n            primary: 512\n            /* Alt */\n            | 11\n            /* PageUp */\n\n          },\n          linux: {\n            primary: 512\n            /* Alt */\n            | 11\n            /* PageUp */\n\n          }\n        }\n      }) || this;\n    }\n\n    class_9.prototype.runCoreEditorCommand = function (cursors, args) {\n      CoreNavigationCommands.EditorScroll._runEditorScroll(cursors, args.source, {\n        direction: 1\n        /* Up */\n        ,\n        unit: 3\n        /* Page */\n        ,\n        value: 1,\n        revealCursor: false,\n        select: false\n      });\n    };\n\n    return class_9;\n  }(CoreEditorCommand))());\n  CoreNavigationCommands.ScrollLineDown = registerEditorCommand(new (\n  /** @class */\n  function (_super) {\n    __extends(class_10, _super);\n\n    function class_10() {\n      return _super.call(this, {\n        id: 'scrollLineDown',\n        precondition: undefined,\n        kbOpts: {\n          weight: CORE_WEIGHT,\n          kbExpr: EditorContextKeys.textInputFocus,\n          primary: 2048\n          /* CtrlCmd */\n          | 18\n          /* DownArrow */\n          ,\n          mac: {\n            primary: 256\n            /* WinCtrl */\n            | 12\n            /* PageDown */\n\n          }\n        }\n      }) || this;\n    }\n\n    class_10.prototype.runCoreEditorCommand = function (cursors, args) {\n      CoreNavigationCommands.EditorScroll._runEditorScroll(cursors, args.source, {\n        direction: 2\n        /* Down */\n        ,\n        unit: 2\n        /* WrappedLine */\n        ,\n        value: 1,\n        revealCursor: false,\n        select: false\n      });\n    };\n\n    return class_10;\n  }(CoreEditorCommand))());\n  CoreNavigationCommands.ScrollPageDown = registerEditorCommand(new (\n  /** @class */\n  function (_super) {\n    __extends(class_11, _super);\n\n    function class_11() {\n      return _super.call(this, {\n        id: 'scrollPageDown',\n        precondition: undefined,\n        kbOpts: {\n          weight: CORE_WEIGHT,\n          kbExpr: EditorContextKeys.textInputFocus,\n          primary: 2048\n          /* CtrlCmd */\n          | 12\n          /* PageDown */\n          ,\n          win: {\n            primary: 512\n            /* Alt */\n            | 12\n            /* PageDown */\n\n          },\n          linux: {\n            primary: 512\n            /* Alt */\n            | 12\n            /* PageDown */\n\n          }\n        }\n      }) || this;\n    }\n\n    class_11.prototype.runCoreEditorCommand = function (cursors, args) {\n      CoreNavigationCommands.EditorScroll._runEditorScroll(cursors, args.source, {\n        direction: 2\n        /* Down */\n        ,\n        unit: 3\n        /* Page */\n        ,\n        value: 1,\n        revealCursor: false,\n        select: false\n      });\n    };\n\n    return class_11;\n  }(CoreEditorCommand))());\n\n  var WordCommand =\n  /** @class */\n  function (_super) {\n    __extends(WordCommand, _super);\n\n    function WordCommand(opts) {\n      var _this = _super.call(this, opts) || this;\n\n      _this._inSelectionMode = opts.inSelectionMode;\n      return _this;\n    }\n\n    WordCommand.prototype.runCoreEditorCommand = function (cursors, args) {\n      cursors.context.model.pushStackElement();\n      cursors.setStates(args.source, 3\n      /* Explicit */\n      , [CursorMoveCommands.word(cursors.context, cursors.getPrimaryCursor(), this._inSelectionMode, args.position)]);\n      cursors.reveal(args.source, true, 0\n      /* Primary */\n      , 0\n      /* Smooth */\n      );\n    };\n\n    return WordCommand;\n  }(CoreEditorCommand);\n\n  CoreNavigationCommands.WordSelect = registerEditorCommand(new WordCommand({\n    inSelectionMode: false,\n    id: '_wordSelect',\n    precondition: undefined\n  }));\n  CoreNavigationCommands.WordSelectDrag = registerEditorCommand(new WordCommand({\n    inSelectionMode: true,\n    id: '_wordSelectDrag',\n    precondition: undefined\n  }));\n  CoreNavigationCommands.LastCursorWordSelect = registerEditorCommand(new (\n  /** @class */\n  function (_super) {\n    __extends(class_12, _super);\n\n    function class_12() {\n      return _super.call(this, {\n        id: 'lastCursorWordSelect',\n        precondition: undefined\n      }) || this;\n    }\n\n    class_12.prototype.runCoreEditorCommand = function (cursors, args) {\n      var context = cursors.context;\n      var lastAddedCursorIndex = cursors.getLastAddedCursorIndex();\n      var states = cursors.getAll();\n      var newStates = states.slice(0);\n      var lastAddedState = states[lastAddedCursorIndex];\n      newStates[lastAddedCursorIndex] = CursorMoveCommands.word(context, lastAddedState, lastAddedState.modelState.hasSelection(), args.position);\n      context.model.pushStackElement();\n      cursors.setStates(args.source, 3\n      /* Explicit */\n      , newStates);\n    };\n\n    return class_12;\n  }(CoreEditorCommand))());\n\n  var LineCommand =\n  /** @class */\n  function (_super) {\n    __extends(LineCommand, _super);\n\n    function LineCommand(opts) {\n      var _this = _super.call(this, opts) || this;\n\n      _this._inSelectionMode = opts.inSelectionMode;\n      return _this;\n    }\n\n    LineCommand.prototype.runCoreEditorCommand = function (cursors, args) {\n      cursors.context.model.pushStackElement();\n      cursors.setStates(args.source, 3\n      /* Explicit */\n      , [CursorMoveCommands.line(cursors.context, cursors.getPrimaryCursor(), this._inSelectionMode, args.position, args.viewPosition)]);\n      cursors.reveal(args.source, false, 0\n      /* Primary */\n      , 0\n      /* Smooth */\n      );\n    };\n\n    return LineCommand;\n  }(CoreEditorCommand);\n\n  CoreNavigationCommands.LineSelect = registerEditorCommand(new LineCommand({\n    inSelectionMode: false,\n    id: '_lineSelect',\n    precondition: undefined\n  }));\n  CoreNavigationCommands.LineSelectDrag = registerEditorCommand(new LineCommand({\n    inSelectionMode: true,\n    id: '_lineSelectDrag',\n    precondition: undefined\n  }));\n\n  var LastCursorLineCommand =\n  /** @class */\n  function (_super) {\n    __extends(LastCursorLineCommand, _super);\n\n    function LastCursorLineCommand(opts) {\n      var _this = _super.call(this, opts) || this;\n\n      _this._inSelectionMode = opts.inSelectionMode;\n      return _this;\n    }\n\n    LastCursorLineCommand.prototype.runCoreEditorCommand = function (cursors, args) {\n      var lastAddedCursorIndex = cursors.getLastAddedCursorIndex();\n      var states = cursors.getAll();\n      var newStates = states.slice(0);\n      newStates[lastAddedCursorIndex] = CursorMoveCommands.line(cursors.context, states[lastAddedCursorIndex], this._inSelectionMode, args.position, args.viewPosition);\n      cursors.context.model.pushStackElement();\n      cursors.setStates(args.source, 3\n      /* Explicit */\n      , newStates);\n    };\n\n    return LastCursorLineCommand;\n  }(CoreEditorCommand);\n\n  CoreNavigationCommands.LastCursorLineSelect = registerEditorCommand(new LastCursorLineCommand({\n    inSelectionMode: false,\n    id: 'lastCursorLineSelect',\n    precondition: undefined\n  }));\n  CoreNavigationCommands.LastCursorLineSelectDrag = registerEditorCommand(new LastCursorLineCommand({\n    inSelectionMode: true,\n    id: 'lastCursorLineSelectDrag',\n    precondition: undefined\n  }));\n  CoreNavigationCommands.ExpandLineSelection = registerEditorCommand(new (\n  /** @class */\n  function (_super) {\n    __extends(class_13, _super);\n\n    function class_13() {\n      return _super.call(this, {\n        id: 'expandLineSelection',\n        precondition: undefined,\n        kbOpts: {\n          weight: CORE_WEIGHT,\n          kbExpr: EditorContextKeys.textInputFocus,\n          primary: 2048\n          /* CtrlCmd */\n          | 42\n          /* KEY_L */\n\n        }\n      }) || this;\n    }\n\n    class_13.prototype.runCoreEditorCommand = function (cursors, args) {\n      cursors.context.model.pushStackElement();\n      cursors.setStates(args.source, 3\n      /* Explicit */\n      , CursorMoveCommands.expandLineSelection(cursors.context, cursors.getAll()));\n      cursors.reveal(args.source, true, 0\n      /* Primary */\n      , 0\n      /* Smooth */\n      );\n    };\n\n    return class_13;\n  }(CoreEditorCommand))());\n  CoreNavigationCommands.CancelSelection = registerEditorCommand(new (\n  /** @class */\n  function (_super) {\n    __extends(class_14, _super);\n\n    function class_14() {\n      return _super.call(this, {\n        id: 'cancelSelection',\n        precondition: EditorContextKeys.hasNonEmptySelection,\n        kbOpts: {\n          weight: CORE_WEIGHT,\n          kbExpr: EditorContextKeys.textInputFocus,\n          primary: 9\n          /* Escape */\n          ,\n          secondary: [1024\n          /* Shift */\n          | 9\n          /* Escape */\n          ]\n        }\n      }) || this;\n    }\n\n    class_14.prototype.runCoreEditorCommand = function (cursors, args) {\n      cursors.context.model.pushStackElement();\n      cursors.setStates(args.source, 3\n      /* Explicit */\n      , [CursorMoveCommands.cancelSelection(cursors.context, cursors.getPrimaryCursor())]);\n      cursors.reveal(args.source, true, 0\n      /* Primary */\n      , 0\n      /* Smooth */\n      );\n    };\n\n    return class_14;\n  }(CoreEditorCommand))());\n  CoreNavigationCommands.RemoveSecondaryCursors = registerEditorCommand(new (\n  /** @class */\n  function (_super) {\n    __extends(class_15, _super);\n\n    function class_15() {\n      return _super.call(this, {\n        id: 'removeSecondaryCursors',\n        precondition: EditorContextKeys.hasMultipleSelections,\n        kbOpts: {\n          weight: CORE_WEIGHT + 1,\n          kbExpr: EditorContextKeys.textInputFocus,\n          primary: 9\n          /* Escape */\n          ,\n          secondary: [1024\n          /* Shift */\n          | 9\n          /* Escape */\n          ]\n        }\n      }) || this;\n    }\n\n    class_15.prototype.runCoreEditorCommand = function (cursors, args) {\n      cursors.context.model.pushStackElement();\n      cursors.setStates(args.source, 3\n      /* Explicit */\n      , [cursors.getPrimaryCursor()]);\n      cursors.reveal(args.source, true, 0\n      /* Primary */\n      , 0\n      /* Smooth */\n      );\n    };\n\n    return class_15;\n  }(CoreEditorCommand))());\n  CoreNavigationCommands.RevealLine = registerEditorCommand(new (\n  /** @class */\n  function (_super) {\n    __extends(class_16, _super);\n\n    function class_16() {\n      return _super.call(this, {\n        id: 'revealLine',\n        precondition: undefined,\n        description: RevealLine_.description\n      }) || this;\n    }\n\n    class_16.prototype.runCoreEditorCommand = function (cursors, args) {\n      var revealLineArg = args;\n      var lineNumber = (revealLineArg.lineNumber || 0) + 1;\n\n      if (lineNumber < 1) {\n        lineNumber = 1;\n      }\n\n      var lineCount = cursors.context.model.getLineCount();\n\n      if (lineNumber > lineCount) {\n        lineNumber = lineCount;\n      }\n\n      var range = new Range(lineNumber, 1, lineNumber, cursors.context.model.getLineMaxColumn(lineNumber));\n      var revealAt = 0\n      /* Simple */\n      ;\n\n      if (revealLineArg.at) {\n        switch (revealLineArg.at) {\n          case RevealLine_.RawAtArgument.Top:\n            revealAt = 3\n            /* Top */\n            ;\n            break;\n\n          case RevealLine_.RawAtArgument.Center:\n            revealAt = 1\n            /* Center */\n            ;\n            break;\n\n          case RevealLine_.RawAtArgument.Bottom:\n            revealAt = 4\n            /* Bottom */\n            ;\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      var viewRange = cursors.context.convertModelRangeToViewRange(range);\n      cursors.revealRange(args.source, false, viewRange, revealAt, 0\n      /* Smooth */\n      );\n    };\n\n    return class_16;\n  }(CoreEditorCommand))());\n  CoreNavigationCommands.SelectAll = registerEditorCommand(new (\n  /** @class */\n  function (_super) {\n    __extends(class_17, _super);\n\n    function class_17() {\n      return _super.call(this, {\n        id: 'selectAll',\n        precondition: undefined\n      }) || this;\n    }\n\n    class_17.prototype.runCoreEditorCommand = function (cursors, args) {\n      cursors.context.model.pushStackElement();\n      cursors.setStates(args.source, 3\n      /* Explicit */\n      , [CursorMoveCommands.selectAll(cursors.context, cursors.getPrimaryCursor())]);\n    };\n\n    return class_17;\n  }(CoreEditorCommand))());\n  CoreNavigationCommands.SetSelection = registerEditorCommand(new (\n  /** @class */\n  function (_super) {\n    __extends(class_18, _super);\n\n    function class_18() {\n      return _super.call(this, {\n        id: 'setSelection',\n        precondition: undefined\n      }) || this;\n    }\n\n    class_18.prototype.runCoreEditorCommand = function (cursors, args) {\n      cursors.context.model.pushStackElement();\n      cursors.setStates(args.source, 3\n      /* Explicit */\n      , [CursorState.fromModelSelection(args.selection)]);\n    };\n\n    return class_18;\n  }(CoreEditorCommand))());\n})(CoreNavigationCommands || (CoreNavigationCommands = {}));\n\nexport var CoreEditingCommands;\n\n(function (CoreEditingCommands) {\n  var CoreEditingCommand =\n  /** @class */\n  function (_super) {\n    __extends(CoreEditingCommand, _super);\n\n    function CoreEditingCommand() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    CoreEditingCommand.prototype.runEditorCommand = function (accessor, editor, args) {\n      var cursors = editor._getCursors();\n\n      if (!cursors) {\n        // the editor has no view => has no cursors\n        return;\n      }\n\n      this.runCoreEditingCommand(editor, cursors, args || {});\n    };\n\n    return CoreEditingCommand;\n  }(EditorCommand);\n\n  CoreEditingCommands.CoreEditingCommand = CoreEditingCommand;\n  CoreEditingCommands.LineBreakInsert = registerEditorCommand(new (\n  /** @class */\n  function (_super) {\n    __extends(class_19, _super);\n\n    function class_19() {\n      return _super.call(this, {\n        id: 'lineBreakInsert',\n        precondition: EditorContextKeys.writable,\n        kbOpts: {\n          weight: CORE_WEIGHT,\n          kbExpr: EditorContextKeys.textInputFocus,\n          primary: 0,\n          mac: {\n            primary: 256\n            /* WinCtrl */\n            | 45\n            /* KEY_O */\n\n          }\n        }\n      }) || this;\n    }\n\n    class_19.prototype.runCoreEditingCommand = function (editor, cursors, args) {\n      editor.pushUndoStop();\n      editor.executeCommands(this.id, TypeOperations.lineBreakInsert(cursors.context.config, cursors.context.model, cursors.getAll().map(function (s) {\n        return s.modelState.selection;\n      })));\n    };\n\n    return class_19;\n  }(CoreEditingCommand))());\n  CoreEditingCommands.Outdent = registerEditorCommand(new (\n  /** @class */\n  function (_super) {\n    __extends(class_20, _super);\n\n    function class_20() {\n      return _super.call(this, {\n        id: 'outdent',\n        precondition: EditorContextKeys.writable,\n        kbOpts: {\n          weight: CORE_WEIGHT,\n          kbExpr: ContextKeyExpr.and(EditorContextKeys.editorTextFocus, EditorContextKeys.tabDoesNotMoveFocus),\n          primary: 1024\n          /* Shift */\n          | 2\n          /* Tab */\n\n        }\n      }) || this;\n    }\n\n    class_20.prototype.runCoreEditingCommand = function (editor, cursors, args) {\n      editor.pushUndoStop();\n      editor.executeCommands(this.id, TypeOperations.outdent(cursors.context.config, cursors.context.model, cursors.getAll().map(function (s) {\n        return s.modelState.selection;\n      })));\n      editor.pushUndoStop();\n    };\n\n    return class_20;\n  }(CoreEditingCommand))());\n  CoreEditingCommands.Tab = registerEditorCommand(new (\n  /** @class */\n  function (_super) {\n    __extends(class_21, _super);\n\n    function class_21() {\n      return _super.call(this, {\n        id: 'tab',\n        precondition: EditorContextKeys.writable,\n        kbOpts: {\n          weight: CORE_WEIGHT,\n          kbExpr: ContextKeyExpr.and(EditorContextKeys.editorTextFocus, EditorContextKeys.tabDoesNotMoveFocus),\n          primary: 2\n          /* Tab */\n\n        }\n      }) || this;\n    }\n\n    class_21.prototype.runCoreEditingCommand = function (editor, cursors, args) {\n      editor.pushUndoStop();\n      editor.executeCommands(this.id, TypeOperations.tab(cursors.context.config, cursors.context.model, cursors.getAll().map(function (s) {\n        return s.modelState.selection;\n      })));\n      editor.pushUndoStop();\n    };\n\n    return class_21;\n  }(CoreEditingCommand))());\n  CoreEditingCommands.DeleteLeft = registerEditorCommand(new (\n  /** @class */\n  function (_super) {\n    __extends(class_22, _super);\n\n    function class_22() {\n      return _super.call(this, {\n        id: 'deleteLeft',\n        precondition: EditorContextKeys.writable,\n        kbOpts: {\n          weight: CORE_WEIGHT,\n          kbExpr: EditorContextKeys.textInputFocus,\n          primary: 1\n          /* Backspace */\n          ,\n          secondary: [1024\n          /* Shift */\n          | 1\n          /* Backspace */\n          ],\n          mac: {\n            primary: 1\n            /* Backspace */\n            ,\n            secondary: [1024\n            /* Shift */\n            | 1\n            /* Backspace */\n            , 256\n            /* WinCtrl */\n            | 38\n            /* KEY_H */\n            , 256\n            /* WinCtrl */\n            | 1\n            /* Backspace */\n            ]\n          }\n        }\n      }) || this;\n    }\n\n    class_22.prototype.runCoreEditingCommand = function (editor, cursors, args) {\n      var _a = DeleteOperations.deleteLeft(cursors.getPrevEditOperationType(), cursors.context.config, cursors.context.model, cursors.getAll().map(function (s) {\n        return s.modelState.selection;\n      })),\n          shouldPushStackElementBefore = _a[0],\n          commands = _a[1];\n\n      if (shouldPushStackElementBefore) {\n        editor.pushUndoStop();\n      }\n\n      editor.executeCommands(this.id, commands);\n      cursors.setPrevEditOperationType(2\n      /* DeletingLeft */\n      );\n    };\n\n    return class_22;\n  }(CoreEditingCommand))());\n  CoreEditingCommands.DeleteRight = registerEditorCommand(new (\n  /** @class */\n  function (_super) {\n    __extends(class_23, _super);\n\n    function class_23() {\n      return _super.call(this, {\n        id: 'deleteRight',\n        precondition: EditorContextKeys.writable,\n        kbOpts: {\n          weight: CORE_WEIGHT,\n          kbExpr: EditorContextKeys.textInputFocus,\n          primary: 20\n          /* Delete */\n          ,\n          mac: {\n            primary: 20\n            /* Delete */\n            ,\n            secondary: [256\n            /* WinCtrl */\n            | 34\n            /* KEY_D */\n            , 256\n            /* WinCtrl */\n            | 20\n            /* Delete */\n            ]\n          }\n        }\n      }) || this;\n    }\n\n    class_23.prototype.runCoreEditingCommand = function (editor, cursors, args) {\n      var _a = DeleteOperations.deleteRight(cursors.getPrevEditOperationType(), cursors.context.config, cursors.context.model, cursors.getAll().map(function (s) {\n        return s.modelState.selection;\n      })),\n          shouldPushStackElementBefore = _a[0],\n          commands = _a[1];\n\n      if (shouldPushStackElementBefore) {\n        editor.pushUndoStop();\n      }\n\n      editor.executeCommands(this.id, commands);\n      cursors.setPrevEditOperationType(3\n      /* DeletingRight */\n      );\n    };\n\n    return class_23;\n  }(CoreEditingCommand))());\n})(CoreEditingCommands || (CoreEditingCommands = {}));\n\nfunction registerCommand(command) {\n  command.register();\n}\n/**\r\n * A command that will:\r\n *  1. invoke a command on the focused editor.\r\n *  2. otherwise, invoke a browser built-in command on the `activeElement`.\r\n *  3. otherwise, invoke a command on the workbench active editor.\r\n */\n\n\nvar EditorOrNativeTextInputCommand =\n/** @class */\nfunction (_super) {\n  __extends(EditorOrNativeTextInputCommand, _super);\n\n  function EditorOrNativeTextInputCommand(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this._editorHandler = opts.editorHandler;\n    _this._inputHandler = opts.inputHandler;\n    return _this;\n  }\n\n  EditorOrNativeTextInputCommand.prototype.runCommand = function (accessor, args) {\n    var focusedEditor = accessor.get(ICodeEditorService).getFocusedCodeEditor(); // Only if editor text focus (i.e. not if editor has widget focus).\n\n    if (focusedEditor && focusedEditor.hasTextFocus()) {\n      return this._runEditorHandler(accessor, focusedEditor, args);\n    } // Ignore this action when user is focused on an element that allows for entering text\n\n\n    var activeElement = document.activeElement;\n\n    if (activeElement && ['input', 'textarea'].indexOf(activeElement.tagName.toLowerCase()) >= 0) {\n      document.execCommand(this._inputHandler);\n      return;\n    } // Redirecting to active editor\n\n\n    var activeEditor = accessor.get(ICodeEditorService).getActiveCodeEditor();\n\n    if (activeEditor) {\n      activeEditor.focus();\n      return this._runEditorHandler(accessor, activeEditor, args);\n    }\n  };\n\n  EditorOrNativeTextInputCommand.prototype._runEditorHandler = function (accessor, editor, args) {\n    var HANDLER = this._editorHandler;\n\n    if (typeof HANDLER === 'string') {\n      editor.trigger('keyboard', HANDLER, args);\n    } else {\n      args = args || {};\n      args.source = 'keyboard';\n      HANDLER.runEditorCommand(accessor, editor, args);\n    }\n  };\n\n  return EditorOrNativeTextInputCommand;\n}(Command);\n/**\r\n * A command that will invoke a command on the focused editor.\r\n */\n\n\nvar EditorHandlerCommand =\n/** @class */\nfunction (_super) {\n  __extends(EditorHandlerCommand, _super);\n\n  function EditorHandlerCommand(id, handlerId, description) {\n    var _this = _super.call(this, {\n      id: id,\n      precondition: undefined,\n      description: description\n    }) || this;\n\n    _this._handlerId = handlerId;\n    return _this;\n  }\n\n  EditorHandlerCommand.prototype.runCommand = function (accessor, args) {\n    var editor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\n\n    if (!editor) {\n      return;\n    }\n\n    editor.trigger('keyboard', this._handlerId, args);\n  };\n\n  return EditorHandlerCommand;\n}(Command);\n\nregisterCommand(new EditorOrNativeTextInputCommand({\n  editorHandler: CoreNavigationCommands.SelectAll,\n  inputHandler: 'selectAll',\n  id: 'editor.action.selectAll',\n  precondition: EditorContextKeys.textInputFocus,\n  kbOpts: {\n    weight: CORE_WEIGHT,\n    kbExpr: null,\n    primary: 2048\n    /* CtrlCmd */\n    | 31\n    /* KEY_A */\n\n  },\n  menuOpts: {\n    menuId: 25\n    /* MenubarSelectionMenu */\n    ,\n    group: '1_basic',\n    title: nls.localize({\n      key: 'miSelectAll',\n      comment: ['&& denotes a mnemonic']\n    }, \"&&Select All\"),\n    order: 1\n  }\n}));\nregisterCommand(new EditorOrNativeTextInputCommand({\n  editorHandler: Handler.Undo,\n  inputHandler: 'undo',\n  id: Handler.Undo,\n  precondition: EditorContextKeys.writable,\n  kbOpts: {\n    weight: CORE_WEIGHT,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 2048\n    /* CtrlCmd */\n    | 56\n    /* KEY_Z */\n\n  },\n  menuOpts: {\n    menuId: 17\n    /* MenubarEditMenu */\n    ,\n    group: '1_do',\n    title: nls.localize({\n      key: 'miUndo',\n      comment: ['&& denotes a mnemonic']\n    }, \"&&Undo\"),\n    order: 1\n  }\n}));\nregisterCommand(new EditorHandlerCommand('default:' + Handler.Undo, Handler.Undo));\nregisterCommand(new EditorOrNativeTextInputCommand({\n  editorHandler: Handler.Redo,\n  inputHandler: 'redo',\n  id: Handler.Redo,\n  precondition: EditorContextKeys.writable,\n  kbOpts: {\n    weight: CORE_WEIGHT,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 2048\n    /* CtrlCmd */\n    | 55\n    /* KEY_Y */\n    ,\n    secondary: [2048\n    /* CtrlCmd */\n    | 1024\n    /* Shift */\n    | 56\n    /* KEY_Z */\n    ],\n    mac: {\n      primary: 2048\n      /* CtrlCmd */\n      | 1024\n      /* Shift */\n      | 56\n      /* KEY_Z */\n\n    }\n  },\n  menuOpts: {\n    menuId: 17\n    /* MenubarEditMenu */\n    ,\n    group: '1_do',\n    title: nls.localize({\n      key: 'miRedo',\n      comment: ['&& denotes a mnemonic']\n    }, \"&&Redo\"),\n    order: 2\n  }\n}));\nregisterCommand(new EditorHandlerCommand('default:' + Handler.Redo, Handler.Redo));\n\nfunction registerOverwritableCommand(handlerId, description) {\n  registerCommand(new EditorHandlerCommand('default:' + handlerId, handlerId));\n  registerCommand(new EditorHandlerCommand(handlerId, handlerId, description));\n}\n\nregisterOverwritableCommand(Handler.Type, {\n  description: \"Type\",\n  args: [{\n    name: 'args',\n    schema: {\n      'type': 'object',\n      'required': ['text'],\n      'properties': {\n        'text': {\n          'type': 'string'\n        }\n      }\n    }\n  }]\n});\nregisterOverwritableCommand(Handler.ReplacePreviousChar);\nregisterOverwritableCommand(Handler.CompositionStart);\nregisterOverwritableCommand(Handler.CompositionEnd);\nregisterOverwritableCommand(Handler.Paste);\nregisterOverwritableCommand(Handler.Cut);","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/browser/controller/coreCommands.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","nls","types","Command","EditorCommand","registerEditorCommand","ICodeEditorService","ColumnSelection","CursorState","DeleteOperations","CursorMove","CursorMove_","CursorMoveCommands","TypeOperations","Position","Range","Handler","EditorContextKeys","ContextKeyExpr","CORE_WEIGHT","CoreEditorCommand","_super","apply","arguments","runEditorCommand","accessor","editor","args","cursors","_getCursors","runCoreEditorCommand","EditorScroll_","isEditorScrollArgs","arg","isObject","scrollArg","isString","to","isUndefined","by","value","isNumber","revealCursor","isBoolean","description","name","constraint","schema","RawDirection","Up","Down","RawUnit","Line","WrappedLine","Page","HalfPage","parse","direction","unit","Math","floor","select","RevealLine_","isRevealLineArgs","reveaLineArg","lineNumber","at","RawAtArgument","Top","Center","Bottom","CoreNavigationCommands","BaseMoveToCommand","opts","_this","call","_inSelectionMode","inSelectionMode","context","model","pushStackElement","setStates","source","moveTo","getPrimaryCursor","position","viewPosition","reveal","MoveTo","id","precondition","undefined","MoveToSelect","ColumnSelectCommand","result","_getColumnSelectResult","getColumnSelectData","viewStates","map","viewState","fromViewState","setColumnSelectData","isReal","fromViewLineNumber","fromLineNumber","fromViewVisualColumn","fromVisualColumn","toViewLineNumber","toLineNumber","toViewVisualColumn","toVisualColumn","reversed","ColumnSelect","class_1","primary","prevColumnSelectData","validatedPosition","validatePosition","validatedViewPosition","validateViewPosition","column","doColumnSelect","mouseColumn","columnSelect","config","viewModel","CursorColumnSelectLeft","class_2","kbOpts","weight","kbExpr","textInputFocus","linux","columnSelectLeft","CursorColumnSelectRight","class_3","columnSelectRight","ColumnSelectUpCommand","_isPaged","isPaged","columnSelectUp","CursorColumnSelectUp","CursorColumnSelectPageUp","ColumnSelectDownCommand","columnSelectDown","CursorColumnSelectDown","CursorColumnSelectPageDown","CursorMoveImpl","parsed","_runCursorMove","move","getAll","CursorMoveBasedCommand","_staticArgs","dynamicArgs","pageSize","CursorLeft","mac","secondary","CursorLeftSelect","CursorRight","CursorRightSelect","CursorUp","CursorUpSelect","CursorPageUp","CursorPageUpSelect","CursorDown","CursorDownSelect","CursorPageDown","CursorPageDownSelect","CreateCursor","class_4","newState","wholeLine","line","states","length","newModelPosition","modelState","newViewPosition","i","len","state","selection","containsPosition","splice","push","LastCursorMoveToSelect","class_5","lastAddedCursorIndex","getLastAddedCursorIndex","newStates","slice","HomeCommand","moveToBeginningOfLine","CursorHome","CursorHomeSelect","CursorLineStart","class_6","_exec","cursor","fromModelState","EndCommand","moveToEndOfLine","CursorEnd","CursorEndSelect","CursorLineEnd","class_7","maxColumn","getLineMaxColumn","TopCommand","moveToBeginningOfBuffer","CursorTop","CursorTopSelect","BottomCommand","moveToEndOfBuffer","CursorBottom","CursorBottomSelect","EditorScrollImpl","_runEditorScroll","desiredScrollTop","_computeDesiredScrollTop","desiredVisibleViewRange","getCompletelyVisibleViewRangeAtScrollTop","findPositionInViewportIfOutside","scrollTo","visibleModelRange","getCompletelyVisibleModelRange","desiredTopModelLineNumber","max","startLineNumber","min","getLineCount","desiredTopViewPosition","convertModelPositionToViewPosition","getVerticalOffsetForViewLine","noOfLines","round","deltaLines","getCurrentScrollTop","lineHeight","EditorScroll","ScrollLineUp","class_8","ScrollPageUp","class_9","win","ScrollLineDown","class_10","ScrollPageDown","class_11","WordCommand","word","WordSelect","WordSelectDrag","LastCursorWordSelect","class_12","lastAddedState","hasSelection","LineCommand","LineSelect","LineSelectDrag","LastCursorLineCommand","LastCursorLineSelect","LastCursorLineSelectDrag","ExpandLineSelection","class_13","expandLineSelection","CancelSelection","class_14","hasNonEmptySelection","cancelSelection","RemoveSecondaryCursors","class_15","hasMultipleSelections","RevealLine","class_16","revealLineArg","lineCount","range","revealAt","viewRange","convertModelRangeToViewRange","revealRange","SelectAll","class_17","selectAll","SetSelection","class_18","fromModelSelection","CoreEditingCommands","CoreEditingCommand","runCoreEditingCommand","LineBreakInsert","class_19","writable","pushUndoStop","executeCommands","lineBreakInsert","s","Outdent","class_20","and","editorTextFocus","tabDoesNotMoveFocus","outdent","Tab","class_21","tab","DeleteLeft","class_22","_a","deleteLeft","getPrevEditOperationType","shouldPushStackElementBefore","commands","setPrevEditOperationType","DeleteRight","class_23","deleteRight","registerCommand","command","register","EditorOrNativeTextInputCommand","_editorHandler","editorHandler","_inputHandler","inputHandler","runCommand","focusedEditor","get","getFocusedCodeEditor","hasTextFocus","_runEditorHandler","activeElement","document","indexOf","tagName","toLowerCase","execCommand","activeEditor","getActiveCodeEditor","focus","HANDLER","trigger","EditorHandlerCommand","handlerId","_handlerId","menuOpts","menuId","group","title","localize","key","comment","order","Undo","Redo","registerOverwritableCommand","Type","ReplacePreviousChar","CompositionStart","CompositionEnd","Paste","Cut"],"mappings":"AAAA;;;;AAIA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;AACrD,MAAIC,aAAa,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChCF,IAAAA,aAAa,GAAGG,MAAM,CAACC,cAAP,IACX;AAAEC,MAAAA,SAAS,EAAE;AAAb,iBAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;AAAED,MAAAA,CAAC,CAACI,SAAF,GAAcH,CAAd;AAAkB,KAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAK,IAAIK,CAAT,IAAcL,CAAd,EAAiB,IAAIA,CAAC,CAACM,cAAF,CAAiBD,CAAjB,CAAJ,EAAyBN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AAAc,KAF9E;;AAGA,WAAOP,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;AACH,GALD;;AAMA,SAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AACnBF,IAAAA,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;AACA,aAASO,EAAT,GAAc;AAAE,WAAKC,WAAL,GAAmBT,CAAnB;AAAuB;;AACvCA,IAAAA,CAAC,CAACU,SAAF,GAAcT,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACS,MAAP,CAAcV,CAAd,CAAb,IAAiCO,EAAE,CAACE,SAAH,GAAeT,CAAC,CAACS,SAAjB,EAA4B,IAAIF,EAAJ,EAA7D,CAAd;AACH,GAJD;AAKH,CAZ2C,EAA5C;;AAaA,OAAO,KAAKI,GAAZ,MAAqB,iBAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,+BAAvB;AACA,SAASC,OAAT,EAAkBC,aAAlB,EAAiCC,qBAAjC,QAA8D,wBAA9D;AACA,SAASC,kBAAT,QAAmC,kCAAnC;AACA,SAASC,eAAT,QAAgC,kDAAhC;AACA,SAASC,WAAT,QAA4B,yCAA5B;AACA,SAASC,gBAAT,QAAiC,mDAAjC;AACA,SAASC,UAAU,IAAIC,WAAvB,EAAoCC,kBAApC,QAA8D,+CAA9D;AACA,SAASC,cAAT,QAA+B,iDAA/B;AACA,SAASC,QAAT,QAAyB,+BAAzB;AACA,SAASC,KAAT,QAAsB,4BAAtB;AACA,SAASC,OAAT,QAAwB,8BAAxB;AACA,SAASC,iBAAT,QAAkC,mCAAlC;AACA,SAASC,cAAT,QAA+B,mDAA/B;AACA,IAAIC,WAAW,GAAG;AAAE;AAApB;;AACA,IAAIC,iBAAiB;AAAG;AAAe,UAAUC,MAAV,EAAkB;AACrDlC,EAAAA,SAAS,CAACiC,iBAAD,EAAoBC,MAApB,CAAT;;AACA,WAASD,iBAAT,GAA6B;AACzB,WAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDH,EAAAA,iBAAiB,CAACrB,SAAlB,CAA4ByB,gBAA5B,GAA+C,UAAUC,QAAV,EAAoBC,MAApB,EAA4BC,IAA5B,EAAkC;AAC7E,QAAIC,OAAO,GAAGF,MAAM,CAACG,WAAP,EAAd;;AACA,QAAI,CAACD,OAAL,EAAc;AACV;AACA;AACH;;AACD,SAAKE,oBAAL,CAA0BF,OAA1B,EAAmCD,IAAI,IAAI,EAA3C;AACH,GAPD;;AAQA,SAAOP,iBAAP;AACH,CAdsC,CAcrChB,aAdqC,CAAvC;;AAeA,SAASgB,iBAAT;AACA,OAAO,IAAIW,aAAJ;;AACP,CAAC,UAAUA,aAAV,EAAyB;AACtB,MAAIC,kBAAkB,GAAG,UAAUC,GAAV,EAAe;AACpC,QAAI,CAAC/B,KAAK,CAACgC,QAAN,CAAeD,GAAf,CAAL,EAA0B;AACtB,aAAO,KAAP;AACH;;AACD,QAAIE,SAAS,GAAGF,GAAhB;;AACA,QAAI,CAAC/B,KAAK,CAACkC,QAAN,CAAeD,SAAS,CAACE,EAAzB,CAAL,EAAmC;AAC/B,aAAO,KAAP;AACH;;AACD,QAAI,CAACnC,KAAK,CAACoC,WAAN,CAAkBH,SAAS,CAACI,EAA5B,CAAD,IAAoC,CAACrC,KAAK,CAACkC,QAAN,CAAeD,SAAS,CAACI,EAAzB,CAAzC,EAAuE;AACnE,aAAO,KAAP;AACH;;AACD,QAAI,CAACrC,KAAK,CAACoC,WAAN,CAAkBH,SAAS,CAACK,KAA5B,CAAD,IAAuC,CAACtC,KAAK,CAACuC,QAAN,CAAeN,SAAS,CAACK,KAAzB,CAA5C,EAA6E;AACzE,aAAO,KAAP;AACH;;AACD,QAAI,CAACtC,KAAK,CAACoC,WAAN,CAAkBH,SAAS,CAACO,YAA5B,CAAD,IAA8C,CAACxC,KAAK,CAACyC,SAAN,CAAgBR,SAAS,CAACO,YAA1B,CAAnD,EAA4F;AACxF,aAAO,KAAP;AACH;;AACD,WAAO,IAAP;AACH,GAlBD;;AAmBAX,EAAAA,aAAa,CAACa,WAAd,GAA4B;AACxBA,IAAAA,WAAW,EAAE,sCADW;AAExBjB,IAAAA,IAAI,EAAE,CACF;AACIkB,MAAAA,IAAI,EAAE,+BADV;AAEID,MAAAA,WAAW,EAAE,8eAFjB;AAGIE,MAAAA,UAAU,EAAEd,kBAHhB;AAIIe,MAAAA,MAAM,EAAE;AACJ,gBAAQ,QADJ;AAEJ,oBAAY,CAAC,IAAD,CAFR;AAGJ,sBAAc;AACV,gBAAM;AACF,oBAAQ,QADN;AAEF,oBAAQ,CAAC,IAAD,EAAO,MAAP;AAFN,WADI;AAKV,gBAAM;AACF,oBAAQ,QADN;AAEF,oBAAQ,CAAC,MAAD,EAAS,aAAT,EAAwB,MAAxB,EAAgC,UAAhC;AAFN,WALI;AASV,mBAAS;AACL,oBAAQ,QADH;AAEL,uBAAW;AAFN,WATC;AAaV,0BAAgB;AACZ,oBAAQ;AADI;AAbN;AAHV;AAJZ,KADE;AAFkB,GAA5B;AA+BA;;;;AAGAhB,EAAAA,aAAa,CAACiB,YAAd,GAA6B;AACzBC,IAAAA,EAAE,EAAE,IADqB;AAEzBC,IAAAA,IAAI,EAAE;AAFmB,GAA7B;AAIA;;;;AAGAnB,EAAAA,aAAa,CAACoB,OAAd,GAAwB;AACpBC,IAAAA,IAAI,EAAE,MADc;AAEpBC,IAAAA,WAAW,EAAE,aAFO;AAGpBC,IAAAA,IAAI,EAAE,MAHc;AAIpBC,IAAAA,QAAQ,EAAE;AAJU,GAAxB;;AAMA,WAASC,KAAT,CAAe7B,IAAf,EAAqB;AACjB,QAAI8B,SAAJ;;AACA,YAAQ9B,IAAI,CAACU,EAAb;AACI,WAAKN,aAAa,CAACiB,YAAd,CAA2BC,EAAhC;AACIQ,QAAAA,SAAS,GAAG;AAAE;AAAd;AACA;;AACJ,WAAK1B,aAAa,CAACiB,YAAd,CAA2BE,IAAhC;AACIO,QAAAA,SAAS,GAAG;AAAE;AAAd;AACA;;AACJ;AACI;AACA,eAAO,IAAP;AATR;;AAWA,QAAIC,IAAJ;;AACA,YAAQ/B,IAAI,CAACY,EAAb;AACI,WAAKR,aAAa,CAACoB,OAAd,CAAsBC,IAA3B;AACIM,QAAAA,IAAI,GAAG;AAAE;AAAT;AACA;;AACJ,WAAK3B,aAAa,CAACoB,OAAd,CAAsBE,WAA3B;AACIK,QAAAA,IAAI,GAAG;AAAE;AAAT;AACA;;AACJ,WAAK3B,aAAa,CAACoB,OAAd,CAAsBG,IAA3B;AACII,QAAAA,IAAI,GAAG;AAAE;AAAT;AACA;;AACJ,WAAK3B,aAAa,CAACoB,OAAd,CAAsBI,QAA3B;AACIG,QAAAA,IAAI,GAAG;AAAE;AAAT;AACA;;AACJ;AACIA,QAAAA,IAAI,GAAG;AAAE;AAAT;AAdR;;AAgBA,QAAIlB,KAAK,GAAGmB,IAAI,CAACC,KAAL,CAAWjC,IAAI,CAACa,KAAL,IAAc,CAAzB,CAAZ;AACA,QAAIE,YAAY,GAAG,CAAC,CAACf,IAAI,CAACe,YAA1B;AACA,WAAO;AACHe,MAAAA,SAAS,EAAEA,SADR;AAEHC,MAAAA,IAAI,EAAEA,IAFH;AAGHlB,MAAAA,KAAK,EAAEA,KAHJ;AAIHE,MAAAA,YAAY,EAAEA,YAJX;AAKHmB,MAAAA,MAAM,EAAG,CAAC,CAAClC,IAAI,CAACkC;AALb,KAAP;AAOH;;AACD9B,EAAAA,aAAa,CAACyB,KAAd,GAAsBA,KAAtB;AACH,CA5GD,EA4GGzB,aAAa,KAAKA,aAAa,GAAG,EAArB,CA5GhB;;AA6GA,OAAO,IAAI+B,WAAJ;;AACP,CAAC,UAAUA,WAAV,EAAuB;AACpB,MAAIC,gBAAgB,GAAG,UAAU9B,GAAV,EAAe;AAClC,QAAI,CAAC/B,KAAK,CAACgC,QAAN,CAAeD,GAAf,CAAL,EAA0B;AACtB,aAAO,KAAP;AACH;;AACD,QAAI+B,YAAY,GAAG/B,GAAnB;;AACA,QAAI,CAAC/B,KAAK,CAACuC,QAAN,CAAeuB,YAAY,CAACC,UAA5B,CAAL,EAA8C;AAC1C,aAAO,KAAP;AACH;;AACD,QAAI,CAAC/D,KAAK,CAACoC,WAAN,CAAkB0B,YAAY,CAACE,EAA/B,CAAD,IAAuC,CAAChE,KAAK,CAACkC,QAAN,CAAe4B,YAAY,CAACE,EAA5B,CAA5C,EAA6E;AACzE,aAAO,KAAP;AACH;;AACD,WAAO,IAAP;AACH,GAZD;;AAaAJ,EAAAA,WAAW,CAAClB,WAAZ,GAA0B;AACtBA,IAAAA,WAAW,EAAE,qDADS;AAEtBjB,IAAAA,IAAI,EAAE,CACF;AACIkB,MAAAA,IAAI,EAAE,6BADV;AAEID,MAAAA,WAAW,EAAE,oRAFjB;AAGIE,MAAAA,UAAU,EAAEiB,gBAHhB;AAIIhB,MAAAA,MAAM,EAAE;AACJ,gBAAQ,QADJ;AAEJ,oBAAY,CAAC,YAAD,CAFR;AAGJ,sBAAc;AACV,wBAAc;AACV,oBAAQ;AADE,WADJ;AAIV,gBAAM;AACF,oBAAQ,QADN;AAEF,oBAAQ,CAAC,KAAD,EAAQ,QAAR,EAAkB,QAAlB;AAFN;AAJI;AAHV;AAJZ,KADE;AAFgB,GAA1B;AAuBA;;;;AAGAe,EAAAA,WAAW,CAACK,aAAZ,GAA4B;AACxBC,IAAAA,GAAG,EAAE,KADmB;AAExBC,IAAAA,MAAM,EAAE,QAFgB;AAGxBC,IAAAA,MAAM,EAAE;AAHgB,GAA5B;AAKH,CA7CD,EA6CGR,WAAW,KAAKA,WAAW,GAAG,EAAnB,CA7Cd;;AA8CA,OAAO,IAAIS,sBAAJ;;AACP,CAAC,UAAUA,sBAAV,EAAkC;AAC/B,MAAIC,iBAAiB;AAAG;AAAe,YAAUnD,MAAV,EAAkB;AACrDlC,IAAAA,SAAS,CAACqF,iBAAD,EAAoBnD,MAApB,CAAT;;AACA,aAASmD,iBAAT,CAA2BC,IAA3B,EAAiC;AAC7B,UAAIC,KAAK,GAAGrD,MAAM,CAACsD,IAAP,CAAY,IAAZ,EAAkBF,IAAlB,KAA2B,IAAvC;;AACAC,MAAAA,KAAK,CAACE,gBAAN,GAAyBH,IAAI,CAACI,eAA9B;AACA,aAAOH,KAAP;AACH;;AACDF,IAAAA,iBAAiB,CAACzE,SAAlB,CAA4B+B,oBAA5B,GAAmD,UAAUF,OAAV,EAAmBD,IAAnB,EAAyB;AACxEC,MAAAA,OAAO,CAACkD,OAAR,CAAgBC,KAAhB,CAAsBC,gBAAtB;AACApD,MAAAA,OAAO,CAACqD,SAAR,CAAkBtD,IAAI,CAACuD,MAAvB,EAA+B;AAAE;AAAjC,QAAiD,CAC7CtE,kBAAkB,CAACuE,MAAnB,CAA0BvD,OAAO,CAACkD,OAAlC,EAA2ClD,OAAO,CAACwD,gBAAR,EAA3C,EAAuE,KAAKR,gBAA5E,EAA8FjD,IAAI,CAAC0D,QAAnG,EAA6G1D,IAAI,CAAC2D,YAAlH,CAD6C,CAAjD;AAGA1D,MAAAA,OAAO,CAAC2D,MAAR,CAAe5D,IAAI,CAACuD,MAApB,EAA4B,IAA5B,EAAkC;AAAE;AAApC,QAAmD;AAAE;AAArD;AACH,KAND;;AAOA,WAAOV,iBAAP;AACH,GAfsC,CAerCpD,iBAfqC,CAAvC;;AAgBAmD,EAAAA,sBAAsB,CAACiB,MAAvB,GAAgCnF,qBAAqB,CAAC,IAAImE,iBAAJ,CAAsB;AACxEiB,IAAAA,EAAE,EAAE,SADoE;AAExEZ,IAAAA,eAAe,EAAE,KAFuD;AAGxEa,IAAAA,YAAY,EAAEC;AAH0D,GAAtB,CAAD,CAArD;AAKApB,EAAAA,sBAAsB,CAACqB,YAAvB,GAAsCvF,qBAAqB,CAAC,IAAImE,iBAAJ,CAAsB;AAC9EiB,IAAAA,EAAE,EAAE,eAD0E;AAE9EZ,IAAAA,eAAe,EAAE,IAF6D;AAG9Ea,IAAAA,YAAY,EAAEC;AAHgE,GAAtB,CAAD,CAA3D;;AAKA,MAAIE,mBAAmB;AAAG;AAAe,YAAUxE,MAAV,EAAkB;AACvDlC,IAAAA,SAAS,CAAC0G,mBAAD,EAAsBxE,MAAtB,CAAT;;AACA,aAASwE,mBAAT,GAA+B;AAC3B,aAAOxE,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDsE,IAAAA,mBAAmB,CAAC9F,SAApB,CAA8B+B,oBAA9B,GAAqD,UAAUF,OAAV,EAAmBD,IAAnB,EAAyB;AAC1EC,MAAAA,OAAO,CAACkD,OAAR,CAAgBC,KAAhB,CAAsBC,gBAAtB;;AACA,UAAIc,MAAM,GAAG,KAAKC,sBAAL,CAA4BnE,OAAO,CAACkD,OAApC,EAA6ClD,OAAO,CAACwD,gBAAR,EAA7C,EAAyExD,OAAO,CAACoE,mBAAR,EAAzE,EAAwGrE,IAAxG,CAAb;;AACAC,MAAAA,OAAO,CAACqD,SAAR,CAAkBtD,IAAI,CAACuD,MAAvB,EAA+B;AAAE;AAAjC,QAAiDY,MAAM,CAACG,UAAP,CAAkBC,GAAlB,CAAsB,UAAUC,SAAV,EAAqB;AAAE,eAAO3F,WAAW,CAAC4F,aAAZ,CAA0BD,SAA1B,CAAP;AAA8C,OAA3F,CAAjD;AACAvE,MAAAA,OAAO,CAACyE,mBAAR,CAA4B;AACxBC,QAAAA,MAAM,EAAE,IADgB;AAExBC,QAAAA,kBAAkB,EAAET,MAAM,CAACU,cAFH;AAGxBC,QAAAA,oBAAoB,EAAEX,MAAM,CAACY,gBAHL;AAIxBC,QAAAA,gBAAgB,EAAEb,MAAM,CAACc,YAJD;AAKxBC,QAAAA,kBAAkB,EAAEf,MAAM,CAACgB;AALH,OAA5B;AAOAlF,MAAAA,OAAO,CAAC2D,MAAR,CAAe5D,IAAI,CAACuD,MAApB,EAA4B,IAA5B,EAAmCY,MAAM,CAACiB,QAAP,GAAkB;AAAE;AAApB,QAAoC;AAAE;AAAzE,QAA4F;AAAE;AAA9F;AACH,KAZD;;AAaA,WAAOlB,mBAAP;AACH,GAnBwC,CAmBvCzE,iBAnBuC,CAAzC;;AAoBAmD,EAAAA,sBAAsB,CAACyC,YAAvB,GAAsC3G,qBAAqB,CAAC;AAAI;AAAe,YAAUgB,MAAV,EAAkB;AAC7FlC,IAAAA,SAAS,CAAC8H,OAAD,EAAU5F,MAAV,CAAT;;AACA,aAAS4F,OAAT,GAAmB;AACf,aAAO5F,MAAM,CAACsD,IAAP,CAAY,IAAZ,EAAkB;AACrBc,QAAAA,EAAE,EAAE,cADiB;AAErBC,QAAAA,YAAY,EAAEC;AAFO,OAAlB,KAGD,IAHN;AAIH;;AACDsB,IAAAA,OAAO,CAAClH,SAAR,CAAkBgG,sBAAlB,GAA2C,UAAUjB,OAAV,EAAmBoC,OAAnB,EAA4BC,oBAA5B,EAAkDxF,IAAlD,EAAwD;AAC/F;AACA,UAAIyF,iBAAiB,GAAGtC,OAAO,CAACC,KAAR,CAAcsC,gBAAd,CAA+B1F,IAAI,CAAC0D,QAApC,CAAxB;AACA,UAAIiC,qBAAqB,GAAGxC,OAAO,CAACyC,oBAAR,CAA6B,IAAIzG,QAAJ,CAAaa,IAAI,CAAC2D,YAAL,CAAkBrB,UAA/B,EAA2CtC,IAAI,CAAC2D,YAAL,CAAkBkC,MAA7D,CAA7B,EAAmGJ,iBAAnG,CAA5B;AACA,UAAIb,kBAAkB,GAAG5E,IAAI,CAAC8F,cAAL,GAAsBN,oBAAoB,CAACZ,kBAA3C,GAAgEe,qBAAqB,CAACrD,UAA/G;AACA,UAAIwC,oBAAoB,GAAG9E,IAAI,CAAC8F,cAAL,GAAsBN,oBAAoB,CAACV,oBAA3C,GAAkE9E,IAAI,CAAC+F,WAAL,GAAmB,CAAhH;AACA,aAAOnH,eAAe,CAACoH,YAAhB,CAA6B7C,OAAO,CAAC8C,MAArC,EAA6C9C,OAAO,CAAC+C,SAArD,EAAgEtB,kBAAhE,EAAoFE,oBAApF,EAA0Ga,qBAAqB,CAACrD,UAAhI,EAA4ItC,IAAI,CAAC+F,WAAL,GAAmB,CAA/J,CAAP;AACH,KAPD;;AAQA,WAAOT,OAAP;AACH,GAjB8E,CAiB7EpB,mBAjB6E,CAAnB,GAAD,CAA3D;AAkBAtB,EAAAA,sBAAsB,CAACuD,sBAAvB,GAAgDzH,qBAAqB,CAAC;AAAI;AAAe,YAAUgB,MAAV,EAAkB;AACvGlC,IAAAA,SAAS,CAAC4I,OAAD,EAAU1G,MAAV,CAAT;;AACA,aAAS0G,OAAT,GAAmB;AACf,aAAO1G,MAAM,CAACsD,IAAP,CAAY,IAAZ,EAAkB;AACrBc,QAAAA,EAAE,EAAE,wBADiB;AAErBC,QAAAA,YAAY,EAAEC,SAFO;AAGrBqC,QAAAA,MAAM,EAAE;AACJC,UAAAA,MAAM,EAAE9G,WADJ;AAEJ+G,UAAAA,MAAM,EAAEjH,iBAAiB,CAACkH,cAFtB;AAGJjB,UAAAA,OAAO,EAAE;AAAK;AAAL,YAAqB;AAAK;AAA1B,YAAwC;AAAI;AAA5C,YAAwD;AAAG;AAHhE;AAIJkB,UAAAA,KAAK,EAAE;AAAElB,YAAAA,OAAO,EAAE;AAAX;AAJH;AAHa,OAAlB,KASD,IATN;AAUH;;AACDa,IAAAA,OAAO,CAAChI,SAAR,CAAkBgG,sBAAlB,GAA2C,UAAUjB,OAAV,EAAmBoC,OAAnB,EAA4BC,oBAA5B,EAAkDxF,IAAlD,EAAwD;AAC/F,aAAOpB,eAAe,CAAC8H,gBAAhB,CAAiCvD,OAAO,CAAC8C,MAAzC,EAAiD9C,OAAO,CAAC+C,SAAzD,EAAoEV,oBAApE,CAAP;AACH,KAFD;;AAGA,WAAOY,OAAP;AACH,GAlBwF,CAkBvFlC,mBAlBuF,CAAnB,GAAD,CAArE;AAmBAtB,EAAAA,sBAAsB,CAAC+D,uBAAvB,GAAiDjI,qBAAqB,CAAC;AAAI;AAAe,YAAUgB,MAAV,EAAkB;AACxGlC,IAAAA,SAAS,CAACoJ,OAAD,EAAUlH,MAAV,CAAT;;AACA,aAASkH,OAAT,GAAmB;AACf,aAAOlH,MAAM,CAACsD,IAAP,CAAY,IAAZ,EAAkB;AACrBc,QAAAA,EAAE,EAAE,yBADiB;AAErBC,QAAAA,YAAY,EAAEC,SAFO;AAGrBqC,QAAAA,MAAM,EAAE;AACJC,UAAAA,MAAM,EAAE9G,WADJ;AAEJ+G,UAAAA,MAAM,EAAEjH,iBAAiB,CAACkH,cAFtB;AAGJjB,UAAAA,OAAO,EAAE;AAAK;AAAL,YAAqB;AAAK;AAA1B,YAAwC;AAAI;AAA5C,YAAwD;AAAG;AAHhE;AAIJkB,UAAAA,KAAK,EAAE;AAAElB,YAAAA,OAAO,EAAE;AAAX;AAJH;AAHa,OAAlB,KASD,IATN;AAUH;;AACDqB,IAAAA,OAAO,CAACxI,SAAR,CAAkBgG,sBAAlB,GAA2C,UAAUjB,OAAV,EAAmBoC,OAAnB,EAA4BC,oBAA5B,EAAkDxF,IAAlD,EAAwD;AAC/F,aAAOpB,eAAe,CAACiI,iBAAhB,CAAkC1D,OAAO,CAAC8C,MAA1C,EAAkD9C,OAAO,CAAC+C,SAA1D,EAAqEV,oBAArE,CAAP;AACH,KAFD;;AAGA,WAAOoB,OAAP;AACH,GAlByF,CAkBxF1C,mBAlBwF,CAAnB,GAAD,CAAtE;;AAmBA,MAAI4C,qBAAqB;AAAG;AAAe,YAAUpH,MAAV,EAAkB;AACzDlC,IAAAA,SAAS,CAACsJ,qBAAD,EAAwBpH,MAAxB,CAAT;;AACA,aAASoH,qBAAT,CAA+BhE,IAA/B,EAAqC;AACjC,UAAIC,KAAK,GAAGrD,MAAM,CAACsD,IAAP,CAAY,IAAZ,EAAkBF,IAAlB,KAA2B,IAAvC;;AACAC,MAAAA,KAAK,CAACgE,QAAN,GAAiBjE,IAAI,CAACkE,OAAtB;AACA,aAAOjE,KAAP;AACH;;AACD+D,IAAAA,qBAAqB,CAAC1I,SAAtB,CAAgCgG,sBAAhC,GAAyD,UAAUjB,OAAV,EAAmBoC,OAAnB,EAA4BC,oBAA5B,EAAkDxF,IAAlD,EAAwD;AAC7G,aAAOpB,eAAe,CAACqI,cAAhB,CAA+B9D,OAAO,CAAC8C,MAAvC,EAA+C9C,OAAO,CAAC+C,SAAvD,EAAkEV,oBAAlE,EAAwF,KAAKuB,QAA7F,CAAP;AACH,KAFD;;AAGA,WAAOD,qBAAP;AACH,GAX0C,CAWzC5C,mBAXyC,CAA3C;;AAYAtB,EAAAA,sBAAsB,CAACsE,oBAAvB,GAA8CxI,qBAAqB,CAAC,IAAIoI,qBAAJ,CAA0B;AAC1FE,IAAAA,OAAO,EAAE,KADiF;AAE1FlD,IAAAA,EAAE,EAAE,sBAFsF;AAG1FC,IAAAA,YAAY,EAAEC,SAH4E;AAI1FqC,IAAAA,MAAM,EAAE;AACJC,MAAAA,MAAM,EAAE9G,WADJ;AAEJ+G,MAAAA,MAAM,EAAEjH,iBAAiB,CAACkH,cAFtB;AAGJjB,MAAAA,OAAO,EAAE;AAAK;AAAL,QAAqB;AAAK;AAA1B,QAAwC;AAAI;AAA5C,QAAwD;AAAG;AAHhE;AAIJkB,MAAAA,KAAK,EAAE;AAAElB,QAAAA,OAAO,EAAE;AAAX;AAJH;AAJkF,GAA1B,CAAD,CAAnE;AAWA3C,EAAAA,sBAAsB,CAACuE,wBAAvB,GAAkDzI,qBAAqB,CAAC,IAAIoI,qBAAJ,CAA0B;AAC9FE,IAAAA,OAAO,EAAE,IADqF;AAE9FlD,IAAAA,EAAE,EAAE,0BAF0F;AAG9FC,IAAAA,YAAY,EAAEC,SAHgF;AAI9FqC,IAAAA,MAAM,EAAE;AACJC,MAAAA,MAAM,EAAE9G,WADJ;AAEJ+G,MAAAA,MAAM,EAAEjH,iBAAiB,CAACkH,cAFtB;AAGJjB,MAAAA,OAAO,EAAE;AAAK;AAAL,QAAqB;AAAK;AAA1B,QAAwC;AAAI;AAA5C,QAAwD;AAAG;AAHhE;AAIJkB,MAAAA,KAAK,EAAE;AAAElB,QAAAA,OAAO,EAAE;AAAX;AAJH;AAJsF,GAA1B,CAAD,CAAvE;;AAWA,MAAI6B,uBAAuB;AAAG;AAAe,YAAU1H,MAAV,EAAkB;AAC3DlC,IAAAA,SAAS,CAAC4J,uBAAD,EAA0B1H,MAA1B,CAAT;;AACA,aAAS0H,uBAAT,CAAiCtE,IAAjC,EAAuC;AACnC,UAAIC,KAAK,GAAGrD,MAAM,CAACsD,IAAP,CAAY,IAAZ,EAAkBF,IAAlB,KAA2B,IAAvC;;AACAC,MAAAA,KAAK,CAACgE,QAAN,GAAiBjE,IAAI,CAACkE,OAAtB;AACA,aAAOjE,KAAP;AACH;;AACDqE,IAAAA,uBAAuB,CAAChJ,SAAxB,CAAkCgG,sBAAlC,GAA2D,UAAUjB,OAAV,EAAmBoC,OAAnB,EAA4BC,oBAA5B,EAAkDxF,IAAlD,EAAwD;AAC/G,aAAOpB,eAAe,CAACyI,gBAAhB,CAAiClE,OAAO,CAAC8C,MAAzC,EAAiD9C,OAAO,CAAC+C,SAAzD,EAAoEV,oBAApE,EAA0F,KAAKuB,QAA/F,CAAP;AACH,KAFD;;AAGA,WAAOK,uBAAP;AACH,GAX4C,CAW3ClD,mBAX2C,CAA7C;;AAYAtB,EAAAA,sBAAsB,CAAC0E,sBAAvB,GAAgD5I,qBAAqB,CAAC,IAAI0I,uBAAJ,CAA4B;AAC9FJ,IAAAA,OAAO,EAAE,KADqF;AAE9FlD,IAAAA,EAAE,EAAE,wBAF0F;AAG9FC,IAAAA,YAAY,EAAEC,SAHgF;AAI9FqC,IAAAA,MAAM,EAAE;AACJC,MAAAA,MAAM,EAAE9G,WADJ;AAEJ+G,MAAAA,MAAM,EAAEjH,iBAAiB,CAACkH,cAFtB;AAGJjB,MAAAA,OAAO,EAAE;AAAK;AAAL,QAAqB;AAAK;AAA1B,QAAwC;AAAI;AAA5C,QAAwD;AAAG;AAHhE;AAIJkB,MAAAA,KAAK,EAAE;AAAElB,QAAAA,OAAO,EAAE;AAAX;AAJH;AAJsF,GAA5B,CAAD,CAArE;AAWA3C,EAAAA,sBAAsB,CAAC2E,0BAAvB,GAAoD7I,qBAAqB,CAAC,IAAI0I,uBAAJ,CAA4B;AAClGJ,IAAAA,OAAO,EAAE,IADyF;AAElGlD,IAAAA,EAAE,EAAE,4BAF8F;AAGlGC,IAAAA,YAAY,EAAEC,SAHoF;AAIlGqC,IAAAA,MAAM,EAAE;AACJC,MAAAA,MAAM,EAAE9G,WADJ;AAEJ+G,MAAAA,MAAM,EAAEjH,iBAAiB,CAACkH,cAFtB;AAGJjB,MAAAA,OAAO,EAAE;AAAK;AAAL,QAAqB;AAAK;AAA1B,QAAwC;AAAI;AAA5C,QAAwD;AAAG;AAHhE;AAIJkB,MAAAA,KAAK,EAAE;AAAElB,QAAAA,OAAO,EAAE;AAAX;AAJH;AAJ0F,GAA5B,CAAD,CAAzE;;AAWA,MAAIiC,cAAc;AAAG;AAAe,YAAU9H,MAAV,EAAkB;AAClDlC,IAAAA,SAAS,CAACgK,cAAD,EAAiB9H,MAAjB,CAAT;;AACA,aAAS8H,cAAT,GAA0B;AACtB,aAAO9H,MAAM,CAACsD,IAAP,CAAY,IAAZ,EAAkB;AACrBc,QAAAA,EAAE,EAAE,YADiB;AAErBC,QAAAA,YAAY,EAAEC,SAFO;AAGrB/C,QAAAA,WAAW,EAAEjC,WAAW,CAACiC;AAHJ,OAAlB,KAID,IAJN;AAKH;;AACDuG,IAAAA,cAAc,CAACpJ,SAAf,CAAyB+B,oBAAzB,GAAgD,UAAUF,OAAV,EAAmBD,IAAnB,EAAyB;AACrE,UAAIyH,MAAM,GAAGzI,WAAW,CAAC6C,KAAZ,CAAkB7B,IAAlB,CAAb;;AACA,UAAI,CAACyH,MAAL,EAAa;AACT;AACA;AACH;;AACD,WAAKC,cAAL,CAAoBzH,OAApB,EAA6BD,IAAI,CAACuD,MAAlC,EAA0CkE,MAA1C;AACH,KAPD;;AAQAD,IAAAA,cAAc,CAACpJ,SAAf,CAAyBsJ,cAAzB,GAA0C,UAAUzH,OAAV,EAAmBsD,MAAnB,EAA2BvD,IAA3B,EAAiC;AACvEC,MAAAA,OAAO,CAACkD,OAAR,CAAgBC,KAAhB,CAAsBC,gBAAtB;AACApD,MAAAA,OAAO,CAACqD,SAAR,CAAkBC,MAAlB,EAA0B;AAAE;AAA5B,QAA4CtE,kBAAkB,CAAC0I,IAAnB,CAAwB1H,OAAO,CAACkD,OAAhC,EAAyClD,OAAO,CAAC2H,MAAR,EAAzC,EAA2D5H,IAA3D,CAA5C;AACAC,MAAAA,OAAO,CAAC2D,MAAR,CAAeL,MAAf,EAAuB,IAAvB,EAA6B;AAAE;AAA/B,QAA8C;AAAE;AAAhD;AACH,KAJD;;AAKA,WAAOiE,cAAP;AACH,GAvBmC,CAuBlC/H,iBAvBkC,CAApC;;AAwBAmD,EAAAA,sBAAsB,CAAC4E,cAAvB,GAAwCA,cAAxC;AACA5E,EAAAA,sBAAsB,CAAC7D,UAAvB,GAAoCL,qBAAqB,CAAC,IAAI8I,cAAJ,EAAD,CAAzD;;AACA,MAAIK,sBAAsB;AAAG;AAAe,YAAUnI,MAAV,EAAkB;AAC1DlC,IAAAA,SAAS,CAACqK,sBAAD,EAAyBnI,MAAzB,CAAT;;AACA,aAASmI,sBAAT,CAAgC/E,IAAhC,EAAsC;AAClC,UAAIC,KAAK,GAAGrD,MAAM,CAACsD,IAAP,CAAY,IAAZ,EAAkBF,IAAlB,KAA2B,IAAvC;;AACAC,MAAAA,KAAK,CAAC+E,WAAN,GAAoBhF,IAAI,CAAC9C,IAAzB;AACA,aAAO+C,KAAP;AACH;;AACD8E,IAAAA,sBAAsB,CAACzJ,SAAvB,CAAiC+B,oBAAjC,GAAwD,UAAUF,OAAV,EAAmB8H,WAAnB,EAAgC;AACpF,UAAI/H,IAAI,GAAG,KAAK8H,WAAhB;;AACA,UAAI,KAAKA,WAAL,CAAiBjH,KAAjB,KAA2B,CAAC;AAAE;AAAlC,QAA0D;AACtD;AACAb,UAAAA,IAAI,GAAG;AACH8B,YAAAA,SAAS,EAAE,KAAKgG,WAAL,CAAiBhG,SADzB;AAEHC,YAAAA,IAAI,EAAE,KAAK+F,WAAL,CAAiB/F,IAFpB;AAGHG,YAAAA,MAAM,EAAE,KAAK4F,WAAL,CAAiB5F,MAHtB;AAIHrB,YAAAA,KAAK,EAAEZ,OAAO,CAACkD,OAAR,CAAgB8C,MAAhB,CAAuB+B;AAJ3B,WAAP;AAMH;;AACDpF,MAAAA,sBAAsB,CAAC7D,UAAvB,CAAkC2I,cAAlC,CAAiDzH,OAAjD,EAA0D8H,WAAW,CAACxE,MAAtE,EAA8EvD,IAA9E;AACH,KAZD;;AAaA,WAAO6H,sBAAP;AACH,GArB2C,CAqB1CpI,iBArB0C,CAA5C;;AAsBAmD,EAAAA,sBAAsB,CAACqF,UAAvB,GAAoCvJ,qBAAqB,CAAC,IAAImJ,sBAAJ,CAA2B;AACjF7H,IAAAA,IAAI,EAAE;AACF8B,MAAAA,SAAS,EAAE;AAAE;AADX;AAEFC,MAAAA,IAAI,EAAE;AAAE;AAFN;AAGFG,MAAAA,MAAM,EAAE,KAHN;AAIFrB,MAAAA,KAAK,EAAE;AAJL,KAD2E;AAOjFiD,IAAAA,EAAE,EAAE,YAP6E;AAQjFC,IAAAA,YAAY,EAAEC,SARmE;AASjFqC,IAAAA,MAAM,EAAE;AACJC,MAAAA,MAAM,EAAE9G,WADJ;AAEJ+G,MAAAA,MAAM,EAAEjH,iBAAiB,CAACkH,cAFtB;AAGJjB,MAAAA,OAAO,EAAE;AAAG;AAHR;AAIJ2C,MAAAA,GAAG,EAAE;AAAE3C,QAAAA,OAAO,EAAE;AAAG;AAAd;AAA+B4C,QAAAA,SAAS,EAAE,CAAC;AAAI;AAAJ,UAAoB;AAAG;AAAxB;AAA1C;AAJD;AATyE,GAA3B,CAAD,CAAzD;AAgBAvF,EAAAA,sBAAsB,CAACwF,gBAAvB,GAA0C1J,qBAAqB,CAAC,IAAImJ,sBAAJ,CAA2B;AACvF7H,IAAAA,IAAI,EAAE;AACF8B,MAAAA,SAAS,EAAE;AAAE;AADX;AAEFC,MAAAA,IAAI,EAAE;AAAE;AAFN;AAGFG,MAAAA,MAAM,EAAE,IAHN;AAIFrB,MAAAA,KAAK,EAAE;AAJL,KADiF;AAOvFiD,IAAAA,EAAE,EAAE,kBAPmF;AAQvFC,IAAAA,YAAY,EAAEC,SARyE;AASvFqC,IAAAA,MAAM,EAAE;AACJC,MAAAA,MAAM,EAAE9G,WADJ;AAEJ+G,MAAAA,MAAM,EAAEjH,iBAAiB,CAACkH,cAFtB;AAGJjB,MAAAA,OAAO,EAAE;AAAK;AAAL,QAAmB;AAAG;;AAH3B;AAT+E,GAA3B,CAAD,CAA/D;AAeA3C,EAAAA,sBAAsB,CAACyF,WAAvB,GAAqC3J,qBAAqB,CAAC,IAAImJ,sBAAJ,CAA2B;AAClF7H,IAAAA,IAAI,EAAE;AACF8B,MAAAA,SAAS,EAAE;AAAE;AADX;AAEFC,MAAAA,IAAI,EAAE;AAAE;AAFN;AAGFG,MAAAA,MAAM,EAAE,KAHN;AAIFrB,MAAAA,KAAK,EAAE;AAJL,KAD4E;AAOlFiD,IAAAA,EAAE,EAAE,aAP8E;AAQlFC,IAAAA,YAAY,EAAEC,SARoE;AASlFqC,IAAAA,MAAM,EAAE;AACJC,MAAAA,MAAM,EAAE9G,WADJ;AAEJ+G,MAAAA,MAAM,EAAEjH,iBAAiB,CAACkH,cAFtB;AAGJjB,MAAAA,OAAO,EAAE;AAAG;AAHR;AAIJ2C,MAAAA,GAAG,EAAE;AAAE3C,QAAAA,OAAO,EAAE;AAAG;AAAd;AAAgC4C,QAAAA,SAAS,EAAE,CAAC;AAAI;AAAJ,UAAoB;AAAG;AAAxB;AAA3C;AAJD;AAT0E,GAA3B,CAAD,CAA1D;AAgBAvF,EAAAA,sBAAsB,CAAC0F,iBAAvB,GAA2C5J,qBAAqB,CAAC,IAAImJ,sBAAJ,CAA2B;AACxF7H,IAAAA,IAAI,EAAE;AACF8B,MAAAA,SAAS,EAAE;AAAE;AADX;AAEFC,MAAAA,IAAI,EAAE;AAAE;AAFN;AAGFG,MAAAA,MAAM,EAAE,IAHN;AAIFrB,MAAAA,KAAK,EAAE;AAJL,KADkF;AAOxFiD,IAAAA,EAAE,EAAE,mBAPoF;AAQxFC,IAAAA,YAAY,EAAEC,SAR0E;AASxFqC,IAAAA,MAAM,EAAE;AACJC,MAAAA,MAAM,EAAE9G,WADJ;AAEJ+G,MAAAA,MAAM,EAAEjH,iBAAiB,CAACkH,cAFtB;AAGJjB,MAAAA,OAAO,EAAE;AAAK;AAAL,QAAmB;AAAG;;AAH3B;AATgF,GAA3B,CAAD,CAAhE;AAeA3C,EAAAA,sBAAsB,CAAC2F,QAAvB,GAAkC7J,qBAAqB,CAAC,IAAImJ,sBAAJ,CAA2B;AAC/E7H,IAAAA,IAAI,EAAE;AACF8B,MAAAA,SAAS,EAAE;AAAE;AADX;AAEFC,MAAAA,IAAI,EAAE;AAAE;AAFN;AAGFG,MAAAA,MAAM,EAAE,KAHN;AAIFrB,MAAAA,KAAK,EAAE;AAJL,KADyE;AAO/EiD,IAAAA,EAAE,EAAE,UAP2E;AAQ/EC,IAAAA,YAAY,EAAEC,SARiE;AAS/EqC,IAAAA,MAAM,EAAE;AACJC,MAAAA,MAAM,EAAE9G,WADJ;AAEJ+G,MAAAA,MAAM,EAAEjH,iBAAiB,CAACkH,cAFtB;AAGJjB,MAAAA,OAAO,EAAE;AAAG;AAHR;AAIJ2C,MAAAA,GAAG,EAAE;AAAE3C,QAAAA,OAAO,EAAE;AAAG;AAAd;AAA6B4C,QAAAA,SAAS,EAAE,CAAC;AAAI;AAAJ,UAAoB;AAAG;AAAxB;AAAxC;AAJD;AATuE,GAA3B,CAAD,CAAvD;AAgBAvF,EAAAA,sBAAsB,CAAC4F,cAAvB,GAAwC9J,qBAAqB,CAAC,IAAImJ,sBAAJ,CAA2B;AACrF7H,IAAAA,IAAI,EAAE;AACF8B,MAAAA,SAAS,EAAE;AAAE;AADX;AAEFC,MAAAA,IAAI,EAAE;AAAE;AAFN;AAGFG,MAAAA,MAAM,EAAE,IAHN;AAIFrB,MAAAA,KAAK,EAAE;AAJL,KAD+E;AAOrFiD,IAAAA,EAAE,EAAE,gBAPiF;AAQrFC,IAAAA,YAAY,EAAEC,SARuE;AASrFqC,IAAAA,MAAM,EAAE;AACJC,MAAAA,MAAM,EAAE9G,WADJ;AAEJ+G,MAAAA,MAAM,EAAEjH,iBAAiB,CAACkH,cAFtB;AAGJjB,MAAAA,OAAO,EAAE;AAAK;AAAL,QAAmB;AAAG;AAH3B;AAIJ4C,MAAAA,SAAS,EAAE,CAAC;AAAK;AAAL,QAAqB;AAAK;AAA1B,QAAwC;AAAG;AAA5C,OAJP;AAKJD,MAAAA,GAAG,EAAE;AAAE3C,QAAAA,OAAO,EAAE;AAAK;AAAL,UAAmB;AAAG;;AAAjC,OALD;AAMJkB,MAAAA,KAAK,EAAE;AAAElB,QAAAA,OAAO,EAAE;AAAK;AAAL,UAAmB;AAAG;;AAAjC;AANH;AAT6E,GAA3B,CAAD,CAA7D;AAkBA3C,EAAAA,sBAAsB,CAAC6F,YAAvB,GAAsC/J,qBAAqB,CAAC,IAAImJ,sBAAJ,CAA2B;AACnF7H,IAAAA,IAAI,EAAE;AACF8B,MAAAA,SAAS,EAAE;AAAE;AADX;AAEFC,MAAAA,IAAI,EAAE;AAAE;AAFN;AAGFG,MAAAA,MAAM,EAAE,KAHN;AAIFrB,MAAAA,KAAK,EAAE,CAAC;AAAE;;AAJR,KAD6E;AAOnFiD,IAAAA,EAAE,EAAE,cAP+E;AAQnFC,IAAAA,YAAY,EAAEC,SARqE;AASnFqC,IAAAA,MAAM,EAAE;AACJC,MAAAA,MAAM,EAAE9G,WADJ;AAEJ+G,MAAAA,MAAM,EAAEjH,iBAAiB,CAACkH,cAFtB;AAGJjB,MAAAA,OAAO,EAAE;AAAG;;AAHR;AAT2E,GAA3B,CAAD,CAA3D;AAeA3C,EAAAA,sBAAsB,CAAC8F,kBAAvB,GAA4ChK,qBAAqB,CAAC,IAAImJ,sBAAJ,CAA2B;AACzF7H,IAAAA,IAAI,EAAE;AACF8B,MAAAA,SAAS,EAAE;AAAE;AADX;AAEFC,MAAAA,IAAI,EAAE;AAAE;AAFN;AAGFG,MAAAA,MAAM,EAAE,IAHN;AAIFrB,MAAAA,KAAK,EAAE,CAAC;AAAE;;AAJR,KADmF;AAOzFiD,IAAAA,EAAE,EAAE,oBAPqF;AAQzFC,IAAAA,YAAY,EAAEC,SAR2E;AASzFqC,IAAAA,MAAM,EAAE;AACJC,MAAAA,MAAM,EAAE9G,WADJ;AAEJ+G,MAAAA,MAAM,EAAEjH,iBAAiB,CAACkH,cAFtB;AAGJjB,MAAAA,OAAO,EAAE;AAAK;AAAL,QAAmB;AAAG;;AAH3B;AATiF,GAA3B,CAAD,CAAjE;AAeA3C,EAAAA,sBAAsB,CAAC+F,UAAvB,GAAoCjK,qBAAqB,CAAC,IAAImJ,sBAAJ,CAA2B;AACjF7H,IAAAA,IAAI,EAAE;AACF8B,MAAAA,SAAS,EAAE;AAAE;AADX;AAEFC,MAAAA,IAAI,EAAE;AAAE;AAFN;AAGFG,MAAAA,MAAM,EAAE,KAHN;AAIFrB,MAAAA,KAAK,EAAE;AAJL,KAD2E;AAOjFiD,IAAAA,EAAE,EAAE,YAP6E;AAQjFC,IAAAA,YAAY,EAAEC,SARmE;AASjFqC,IAAAA,MAAM,EAAE;AACJC,MAAAA,MAAM,EAAE9G,WADJ;AAEJ+G,MAAAA,MAAM,EAAEjH,iBAAiB,CAACkH,cAFtB;AAGJjB,MAAAA,OAAO,EAAE;AAAG;AAHR;AAIJ2C,MAAAA,GAAG,EAAE;AAAE3C,QAAAA,OAAO,EAAE;AAAG;AAAd;AAA+B4C,QAAAA,SAAS,EAAE,CAAC;AAAI;AAAJ,UAAoB;AAAG;AAAxB;AAA1C;AAJD;AATyE,GAA3B,CAAD,CAAzD;AAgBAvF,EAAAA,sBAAsB,CAACgG,gBAAvB,GAA0ClK,qBAAqB,CAAC,IAAImJ,sBAAJ,CAA2B;AACvF7H,IAAAA,IAAI,EAAE;AACF8B,MAAAA,SAAS,EAAE;AAAE;AADX;AAEFC,MAAAA,IAAI,EAAE;AAAE;AAFN;AAGFG,MAAAA,MAAM,EAAE,IAHN;AAIFrB,MAAAA,KAAK,EAAE;AAJL,KADiF;AAOvFiD,IAAAA,EAAE,EAAE,kBAPmF;AAQvFC,IAAAA,YAAY,EAAEC,SARyE;AASvFqC,IAAAA,MAAM,EAAE;AACJC,MAAAA,MAAM,EAAE9G,WADJ;AAEJ+G,MAAAA,MAAM,EAAEjH,iBAAiB,CAACkH,cAFtB;AAGJjB,MAAAA,OAAO,EAAE;AAAK;AAAL,QAAmB;AAAG;AAH3B;AAIJ4C,MAAAA,SAAS,EAAE,CAAC;AAAK;AAAL,QAAqB;AAAK;AAA1B,QAAwC;AAAG;AAA5C,OAJP;AAKJD,MAAAA,GAAG,EAAE;AAAE3C,QAAAA,OAAO,EAAE;AAAK;AAAL,UAAmB;AAAG;;AAAjC,OALD;AAMJkB,MAAAA,KAAK,EAAE;AAAElB,QAAAA,OAAO,EAAE;AAAK;AAAL,UAAmB;AAAG;;AAAjC;AANH;AAT+E,GAA3B,CAAD,CAA/D;AAkBA3C,EAAAA,sBAAsB,CAACiG,cAAvB,GAAwCnK,qBAAqB,CAAC,IAAImJ,sBAAJ,CAA2B;AACrF7H,IAAAA,IAAI,EAAE;AACF8B,MAAAA,SAAS,EAAE;AAAE;AADX;AAEFC,MAAAA,IAAI,EAAE;AAAE;AAFN;AAGFG,MAAAA,MAAM,EAAE,KAHN;AAIFrB,MAAAA,KAAK,EAAE,CAAC;AAAE;;AAJR,KAD+E;AAOrFiD,IAAAA,EAAE,EAAE,gBAPiF;AAQrFC,IAAAA,YAAY,EAAEC,SARuE;AASrFqC,IAAAA,MAAM,EAAE;AACJC,MAAAA,MAAM,EAAE9G,WADJ;AAEJ+G,MAAAA,MAAM,EAAEjH,iBAAiB,CAACkH,cAFtB;AAGJjB,MAAAA,OAAO,EAAE;AAAG;;AAHR;AAT6E,GAA3B,CAAD,CAA7D;AAeA3C,EAAAA,sBAAsB,CAACkG,oBAAvB,GAA8CpK,qBAAqB,CAAC,IAAImJ,sBAAJ,CAA2B;AAC3F7H,IAAAA,IAAI,EAAE;AACF8B,MAAAA,SAAS,EAAE;AAAE;AADX;AAEFC,MAAAA,IAAI,EAAE;AAAE;AAFN;AAGFG,MAAAA,MAAM,EAAE,IAHN;AAIFrB,MAAAA,KAAK,EAAE,CAAC;AAAE;;AAJR,KADqF;AAO3FiD,IAAAA,EAAE,EAAE,sBAPuF;AAQ3FC,IAAAA,YAAY,EAAEC,SAR6E;AAS3FqC,IAAAA,MAAM,EAAE;AACJC,MAAAA,MAAM,EAAE9G,WADJ;AAEJ+G,MAAAA,MAAM,EAAEjH,iBAAiB,CAACkH,cAFtB;AAGJjB,MAAAA,OAAO,EAAE;AAAK;AAAL,QAAmB;AAAG;;AAH3B;AATmF,GAA3B,CAAD,CAAnE;AAeA3C,EAAAA,sBAAsB,CAACmG,YAAvB,GAAsCrK,qBAAqB,CAAC;AAAI;AAAe,YAAUgB,MAAV,EAAkB;AAC7FlC,IAAAA,SAAS,CAACwL,OAAD,EAAUtJ,MAAV,CAAT;;AACA,aAASsJ,OAAT,GAAmB;AACf,aAAOtJ,MAAM,CAACsD,IAAP,CAAY,IAAZ,EAAkB;AACrBc,QAAAA,EAAE,EAAE,cADiB;AAErBC,QAAAA,YAAY,EAAEC;AAFO,OAAlB,KAGD,IAHN;AAIH;;AACDgF,IAAAA,OAAO,CAAC5K,SAAR,CAAkB+B,oBAAlB,GAAyC,UAAUF,OAAV,EAAmBD,IAAnB,EAAyB;AAC9D,UAAImD,OAAO,GAAGlD,OAAO,CAACkD,OAAtB;AACA,UAAI8F,QAAJ;;AACA,UAAIjJ,IAAI,CAACkJ,SAAT,EAAoB;AAChBD,QAAAA,QAAQ,GAAGhK,kBAAkB,CAACkK,IAAnB,CAAwBhG,OAAxB,EAAiClD,OAAO,CAACwD,gBAAR,EAAjC,EAA6D,KAA7D,EAAoEzD,IAAI,CAAC0D,QAAzE,EAAmF1D,IAAI,CAAC2D,YAAxF,CAAX;AACH,OAFD,MAGK;AACDsF,QAAAA,QAAQ,GAAGhK,kBAAkB,CAACuE,MAAnB,CAA0BL,OAA1B,EAAmClD,OAAO,CAACwD,gBAAR,EAAnC,EAA+D,KAA/D,EAAsEzD,IAAI,CAAC0D,QAA3E,EAAqF1D,IAAI,CAAC2D,YAA1F,CAAX;AACH;;AACD,UAAIyF,MAAM,GAAGnJ,OAAO,CAAC2H,MAAR,EAAb,CAT8D,CAU9D;;AACA,UAAIwB,MAAM,CAACC,MAAP,GAAgB,CAApB,EAAuB;AACnB,YAAIC,gBAAgB,GAAIL,QAAQ,CAACM,UAAT,GAAsBN,QAAQ,CAACM,UAAT,CAAoB7F,QAA1C,GAAqD,IAA7E;AACA,YAAI8F,eAAe,GAAIP,QAAQ,CAACzE,SAAT,GAAqByE,QAAQ,CAACzE,SAAT,CAAmBd,QAAxC,GAAmD,IAA1E;;AACA,aAAK,IAAI+F,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGN,MAAM,CAACC,MAA7B,EAAqCI,CAAC,GAAGC,GAAzC,EAA8CD,CAAC,EAA/C,EAAmD;AAC/C,cAAIE,KAAK,GAAGP,MAAM,CAACK,CAAD,CAAlB;;AACA,cAAIH,gBAAgB,IAAI,CAACK,KAAK,CAACJ,UAAN,CAAiBK,SAAjB,CAA2BC,gBAA3B,CAA4CP,gBAA5C,CAAzB,EAAwF;AACpF;AACH;;AACD,cAAIE,eAAe,IAAI,CAACG,KAAK,CAACnF,SAAN,CAAgBoF,SAAhB,CAA0BC,gBAA1B,CAA2CL,eAA3C,CAAxB,EAAqF;AACjF;AACH,WAP8C,CAQ/C;;;AACAJ,UAAAA,MAAM,CAACU,MAAP,CAAcL,CAAd,EAAiB,CAAjB;AACAxJ,UAAAA,OAAO,CAACkD,OAAR,CAAgBC,KAAhB,CAAsBC,gBAAtB;AACApD,UAAAA,OAAO,CAACqD,SAAR,CAAkBtD,IAAI,CAACuD,MAAvB,EAA+B;AAAE;AAAjC,YAAiD6F,MAAjD;AACA;AACH;AACJ,OA5B6D,CA6B9D;;;AACAA,MAAAA,MAAM,CAACW,IAAP,CAAYd,QAAZ;AACAhJ,MAAAA,OAAO,CAACkD,OAAR,CAAgBC,KAAhB,CAAsBC,gBAAtB;AACApD,MAAAA,OAAO,CAACqD,SAAR,CAAkBtD,IAAI,CAACuD,MAAvB,EAA+B;AAAE;AAAjC,QAAiD6F,MAAjD;AACH,KAjCD;;AAkCA,WAAOJ,OAAP;AACH,GA3C8E,CA2C7EvJ,iBA3C6E,CAAnB,GAAD,CAA3D;AA4CAmD,EAAAA,sBAAsB,CAACoH,sBAAvB,GAAgDtL,qBAAqB,CAAC;AAAI;AAAe,YAAUgB,MAAV,EAAkB;AACvGlC,IAAAA,SAAS,CAACyM,OAAD,EAAUvK,MAAV,CAAT;;AACA,aAASuK,OAAT,GAAmB;AACf,aAAOvK,MAAM,CAACsD,IAAP,CAAY,IAAZ,EAAkB;AACrBc,QAAAA,EAAE,EAAE,yBADiB;AAErBC,QAAAA,YAAY,EAAEC;AAFO,OAAlB,KAGD,IAHN;AAIH;;AACDiG,IAAAA,OAAO,CAAC7L,SAAR,CAAkB+B,oBAAlB,GAAyC,UAAUF,OAAV,EAAmBD,IAAnB,EAAyB;AAC9D,UAAImD,OAAO,GAAGlD,OAAO,CAACkD,OAAtB;AACA,UAAI+G,oBAAoB,GAAGjK,OAAO,CAACkK,uBAAR,EAA3B;AACA,UAAIf,MAAM,GAAGnJ,OAAO,CAAC2H,MAAR,EAAb;AACA,UAAIwC,SAAS,GAAGhB,MAAM,CAACiB,KAAP,CAAa,CAAb,CAAhB;AACAD,MAAAA,SAAS,CAACF,oBAAD,CAAT,GAAkCjL,kBAAkB,CAACuE,MAAnB,CAA0BL,OAA1B,EAAmCiG,MAAM,CAACc,oBAAD,CAAzC,EAAiE,IAAjE,EAAuElK,IAAI,CAAC0D,QAA5E,EAAsF1D,IAAI,CAAC2D,YAA3F,CAAlC;AACA1D,MAAAA,OAAO,CAACkD,OAAR,CAAgBC,KAAhB,CAAsBC,gBAAtB;AACApD,MAAAA,OAAO,CAACqD,SAAR,CAAkBtD,IAAI,CAACuD,MAAvB,EAA+B;AAAE;AAAjC,QAAiD6G,SAAjD;AACH,KARD;;AASA,WAAOH,OAAP;AACH,GAlBwF,CAkBvFxK,iBAlBuF,CAAnB,GAAD,CAArE;;AAmBA,MAAI6K,WAAW;AAAG;AAAe,YAAU5K,MAAV,EAAkB;AAC/ClC,IAAAA,SAAS,CAAC8M,WAAD,EAAc5K,MAAd,CAAT;;AACA,aAAS4K,WAAT,CAAqBxH,IAArB,EAA2B;AACvB,UAAIC,KAAK,GAAGrD,MAAM,CAACsD,IAAP,CAAY,IAAZ,EAAkBF,IAAlB,KAA2B,IAAvC;;AACAC,MAAAA,KAAK,CAACE,gBAAN,GAAyBH,IAAI,CAACI,eAA9B;AACA,aAAOH,KAAP;AACH;;AACDuH,IAAAA,WAAW,CAAClM,SAAZ,CAAsB+B,oBAAtB,GAA6C,UAAUF,OAAV,EAAmBD,IAAnB,EAAyB;AAClEC,MAAAA,OAAO,CAACkD,OAAR,CAAgBC,KAAhB,CAAsBC,gBAAtB;AACApD,MAAAA,OAAO,CAACqD,SAAR,CAAkBtD,IAAI,CAACuD,MAAvB,EAA+B;AAAE;AAAjC,QAAiDtE,kBAAkB,CAACsL,qBAAnB,CAAyCtK,OAAO,CAACkD,OAAjD,EAA0DlD,OAAO,CAAC2H,MAAR,EAA1D,EAA4E,KAAK3E,gBAAjF,CAAjD;AACAhD,MAAAA,OAAO,CAAC2D,MAAR,CAAe5D,IAAI,CAACuD,MAApB,EAA4B,IAA5B,EAAkC;AAAE;AAApC,QAAmD;AAAE;AAArD;AACH,KAJD;;AAKA,WAAO+G,WAAP;AACH,GAbgC,CAa/B7K,iBAb+B,CAAjC;;AAcAmD,EAAAA,sBAAsB,CAAC4H,UAAvB,GAAoC9L,qBAAqB,CAAC,IAAI4L,WAAJ,CAAgB;AACtEpH,IAAAA,eAAe,EAAE,KADqD;AAEtEY,IAAAA,EAAE,EAAE,YAFkE;AAGtEC,IAAAA,YAAY,EAAEC,SAHwD;AAItEqC,IAAAA,MAAM,EAAE;AACJC,MAAAA,MAAM,EAAE9G,WADJ;AAEJ+G,MAAAA,MAAM,EAAEjH,iBAAiB,CAACkH,cAFtB;AAGJjB,MAAAA,OAAO,EAAE;AAAG;AAHR;AAIJ2C,MAAAA,GAAG,EAAE;AAAE3C,QAAAA,OAAO,EAAE;AAAG;AAAd;AAA0B4C,QAAAA,SAAS,EAAE,CAAC;AAAK;AAAL,UAAqB;AAAG;AAAzB;AAArC;AAJD;AAJ8D,GAAhB,CAAD,CAAzD;AAWAvF,EAAAA,sBAAsB,CAAC6H,gBAAvB,GAA0C/L,qBAAqB,CAAC,IAAI4L,WAAJ,CAAgB;AAC5EpH,IAAAA,eAAe,EAAE,IAD2D;AAE5EY,IAAAA,EAAE,EAAE,kBAFwE;AAG5EC,IAAAA,YAAY,EAAEC,SAH8D;AAI5EqC,IAAAA,MAAM,EAAE;AACJC,MAAAA,MAAM,EAAE9G,WADJ;AAEJ+G,MAAAA,MAAM,EAAEjH,iBAAiB,CAACkH,cAFtB;AAGJjB,MAAAA,OAAO,EAAE;AAAK;AAAL,QAAmB;AAAG;AAH3B;AAIJ2C,MAAAA,GAAG,EAAE;AAAE3C,QAAAA,OAAO,EAAE;AAAK;AAAL,UAAmB;AAAG;AAAjC;AAA6C4C,QAAAA,SAAS,EAAE,CAAC;AAAK;AAAL,UAAqB;AAAK;AAA1B,UAAwC;AAAG;AAA5C;AAAxD;AAJD;AAJoE,GAAhB,CAAD,CAA/D;AAWAvF,EAAAA,sBAAsB,CAAC8H,eAAvB,GAAyChM,qBAAqB,CAAC;AAAI;AAAe,YAAUgB,MAAV,EAAkB;AAChGlC,IAAAA,SAAS,CAACmN,OAAD,EAAUjL,MAAV,CAAT;;AACA,aAASiL,OAAT,GAAmB;AACf,aAAOjL,MAAM,CAACsD,IAAP,CAAY,IAAZ,EAAkB;AACrBc,QAAAA,EAAE,EAAE,iBADiB;AAErBC,QAAAA,YAAY,EAAEC,SAFO;AAGrBqC,QAAAA,MAAM,EAAE;AACJC,UAAAA,MAAM,EAAE9G,WADJ;AAEJ+G,UAAAA,MAAM,EAAEjH,iBAAiB,CAACkH,cAFtB;AAGJjB,UAAAA,OAAO,EAAE,CAHL;AAIJ2C,UAAAA,GAAG,EAAE;AAAE3C,YAAAA,OAAO,EAAE;AAAI;AAAJ,cAAoB;AAAG;;AAAlC;AAJD;AAHa,OAAlB,KASD,IATN;AAUH;;AACDoF,IAAAA,OAAO,CAACvM,SAAR,CAAkB+B,oBAAlB,GAAyC,UAAUF,OAAV,EAAmBD,IAAnB,EAAyB;AAC9DC,MAAAA,OAAO,CAACkD,OAAR,CAAgBC,KAAhB,CAAsBC,gBAAtB;AACApD,MAAAA,OAAO,CAACqD,SAAR,CAAkBtD,IAAI,CAACuD,MAAvB,EAA+B;AAAE;AAAjC,QAAiD,KAAKqH,KAAL,CAAW3K,OAAO,CAACkD,OAAnB,EAA4BlD,OAAO,CAAC2H,MAAR,EAA5B,CAAjD;AACA3H,MAAAA,OAAO,CAAC2D,MAAR,CAAe5D,IAAI,CAACuD,MAApB,EAA4B,IAA5B,EAAkC;AAAE;AAApC,QAAmD;AAAE;AAArD;AACH,KAJD;;AAKAoH,IAAAA,OAAO,CAACvM,SAAR,CAAkBwM,KAAlB,GAA0B,UAAUzH,OAAV,EAAmBlD,OAAnB,EAA4B;AAClD,UAAIkE,MAAM,GAAG,EAAb;;AACA,WAAK,IAAIsF,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGzJ,OAAO,CAACoJ,MAA9B,EAAsCI,CAAC,GAAGC,GAA1C,EAA+CD,CAAC,EAAhD,EAAoD;AAChD,YAAIoB,MAAM,GAAG5K,OAAO,CAACwJ,CAAD,CAApB;AACA,YAAInH,UAAU,GAAGuI,MAAM,CAACtB,UAAP,CAAkB7F,QAAlB,CAA2BpB,UAA5C;AACA6B,QAAAA,MAAM,CAACsF,CAAD,CAAN,GAAY5K,WAAW,CAACiM,cAAZ,CAA2BD,MAAM,CAACtB,UAAP,CAAkB5B,IAAlB,CAAuB,KAAvB,EAA8BrF,UAA9B,EAA0C,CAA1C,EAA6C,CAA7C,CAA3B,CAAZ;AACH;;AACD,aAAO6B,MAAP;AACH,KARD;;AASA,WAAOwG,OAAP;AACH,GA7BiF,CA6BhFlL,iBA7BgF,CAAnB,GAAD,CAA9D;;AA8BA,MAAIsL,UAAU;AAAG;AAAe,YAAUrL,MAAV,EAAkB;AAC9ClC,IAAAA,SAAS,CAACuN,UAAD,EAAarL,MAAb,CAAT;;AACA,aAASqL,UAAT,CAAoBjI,IAApB,EAA0B;AACtB,UAAIC,KAAK,GAAGrD,MAAM,CAACsD,IAAP,CAAY,IAAZ,EAAkBF,IAAlB,KAA2B,IAAvC;;AACAC,MAAAA,KAAK,CAACE,gBAAN,GAAyBH,IAAI,CAACI,eAA9B;AACA,aAAOH,KAAP;AACH;;AACDgI,IAAAA,UAAU,CAAC3M,SAAX,CAAqB+B,oBAArB,GAA4C,UAAUF,OAAV,EAAmBD,IAAnB,EAAyB;AACjEC,MAAAA,OAAO,CAACkD,OAAR,CAAgBC,KAAhB,CAAsBC,gBAAtB;AACApD,MAAAA,OAAO,CAACqD,SAAR,CAAkBtD,IAAI,CAACuD,MAAvB,EAA+B;AAAE;AAAjC,QAAiDtE,kBAAkB,CAAC+L,eAAnB,CAAmC/K,OAAO,CAACkD,OAA3C,EAAoDlD,OAAO,CAAC2H,MAAR,EAApD,EAAsE,KAAK3E,gBAA3E,CAAjD;AACAhD,MAAAA,OAAO,CAAC2D,MAAR,CAAe5D,IAAI,CAACuD,MAApB,EAA4B,IAA5B,EAAkC;AAAE;AAApC,QAAmD;AAAE;AAArD;AACH,KAJD;;AAKA,WAAOwH,UAAP;AACH,GAb+B,CAa9BtL,iBAb8B,CAAhC;;AAcAmD,EAAAA,sBAAsB,CAACqI,SAAvB,GAAmCvM,qBAAqB,CAAC,IAAIqM,UAAJ,CAAe;AACpE7H,IAAAA,eAAe,EAAE,KADmD;AAEpEY,IAAAA,EAAE,EAAE,WAFgE;AAGpEC,IAAAA,YAAY,EAAEC,SAHsD;AAIpEqC,IAAAA,MAAM,EAAE;AACJC,MAAAA,MAAM,EAAE9G,WADJ;AAEJ+G,MAAAA,MAAM,EAAEjH,iBAAiB,CAACkH,cAFtB;AAGJjB,MAAAA,OAAO,EAAE;AAAG;AAHR;AAIJ2C,MAAAA,GAAG,EAAE;AAAE3C,QAAAA,OAAO,EAAE;AAAG;AAAd;AAAyB4C,QAAAA,SAAS,EAAE,CAAC;AAAK;AAAL,UAAqB;AAAG;AAAzB;AAApC;AAJD;AAJ4D,GAAf,CAAD,CAAxD;AAWAvF,EAAAA,sBAAsB,CAACsI,eAAvB,GAAyCxM,qBAAqB,CAAC,IAAIqM,UAAJ,CAAe;AAC1E7H,IAAAA,eAAe,EAAE,IADyD;AAE1EY,IAAAA,EAAE,EAAE,iBAFsE;AAG1EC,IAAAA,YAAY,EAAEC,SAH4D;AAI1EqC,IAAAA,MAAM,EAAE;AACJC,MAAAA,MAAM,EAAE9G,WADJ;AAEJ+G,MAAAA,MAAM,EAAEjH,iBAAiB,CAACkH,cAFtB;AAGJjB,MAAAA,OAAO,EAAE;AAAK;AAAL,QAAmB;AAAG;AAH3B;AAIJ2C,MAAAA,GAAG,EAAE;AAAE3C,QAAAA,OAAO,EAAE;AAAK;AAAL,UAAmB;AAAG;AAAjC;AAA4C4C,QAAAA,SAAS,EAAE,CAAC;AAAK;AAAL,UAAqB;AAAK;AAA1B,UAAwC;AAAG;AAA5C;AAAvD;AAJD;AAJkE,GAAf,CAAD,CAA9D;AAWAvF,EAAAA,sBAAsB,CAACuI,aAAvB,GAAuCzM,qBAAqB,CAAC;AAAI;AAAe,YAAUgB,MAAV,EAAkB;AAC9FlC,IAAAA,SAAS,CAAC4N,OAAD,EAAU1L,MAAV,CAAT;;AACA,aAAS0L,OAAT,GAAmB;AACf,aAAO1L,MAAM,CAACsD,IAAP,CAAY,IAAZ,EAAkB;AACrBc,QAAAA,EAAE,EAAE,eADiB;AAErBC,QAAAA,YAAY,EAAEC,SAFO;AAGrBqC,QAAAA,MAAM,EAAE;AACJC,UAAAA,MAAM,EAAE9G,WADJ;AAEJ+G,UAAAA,MAAM,EAAEjH,iBAAiB,CAACkH,cAFtB;AAGJjB,UAAAA,OAAO,EAAE,CAHL;AAIJ2C,UAAAA,GAAG,EAAE;AAAE3C,YAAAA,OAAO,EAAE;AAAI;AAAJ,cAAoB;AAAG;;AAAlC;AAJD;AAHa,OAAlB,KASD,IATN;AAUH;;AACD6F,IAAAA,OAAO,CAAChN,SAAR,CAAkB+B,oBAAlB,GAAyC,UAAUF,OAAV,EAAmBD,IAAnB,EAAyB;AAC9DC,MAAAA,OAAO,CAACkD,OAAR,CAAgBC,KAAhB,CAAsBC,gBAAtB;AACApD,MAAAA,OAAO,CAACqD,SAAR,CAAkBtD,IAAI,CAACuD,MAAvB,EAA+B;AAAE;AAAjC,QAAiD,KAAKqH,KAAL,CAAW3K,OAAO,CAACkD,OAAnB,EAA4BlD,OAAO,CAAC2H,MAAR,EAA5B,CAAjD;AACA3H,MAAAA,OAAO,CAAC2D,MAAR,CAAe5D,IAAI,CAACuD,MAApB,EAA4B,IAA5B,EAAkC;AAAE;AAApC,QAAmD;AAAE;AAArD;AACH,KAJD;;AAKA6H,IAAAA,OAAO,CAAChN,SAAR,CAAkBwM,KAAlB,GAA0B,UAAUzH,OAAV,EAAmBlD,OAAnB,EAA4B;AAClD,UAAIkE,MAAM,GAAG,EAAb;;AACA,WAAK,IAAIsF,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGzJ,OAAO,CAACoJ,MAA9B,EAAsCI,CAAC,GAAGC,GAA1C,EAA+CD,CAAC,EAAhD,EAAoD;AAChD,YAAIoB,MAAM,GAAG5K,OAAO,CAACwJ,CAAD,CAApB;AACA,YAAInH,UAAU,GAAGuI,MAAM,CAACtB,UAAP,CAAkB7F,QAAlB,CAA2BpB,UAA5C;AACA,YAAI+I,SAAS,GAAGlI,OAAO,CAACC,KAAR,CAAckI,gBAAd,CAA+BhJ,UAA/B,CAAhB;AACA6B,QAAAA,MAAM,CAACsF,CAAD,CAAN,GAAY5K,WAAW,CAACiM,cAAZ,CAA2BD,MAAM,CAACtB,UAAP,CAAkB5B,IAAlB,CAAuB,KAAvB,EAA8BrF,UAA9B,EAA0C+I,SAA1C,EAAqD,CAArD,CAA3B,CAAZ;AACH;;AACD,aAAOlH,MAAP;AACH,KATD;;AAUA,WAAOiH,OAAP;AACH,GA9B+E,CA8B9E3L,iBA9B8E,CAAnB,GAAD,CAA5D;;AA+BA,MAAI8L,UAAU;AAAG;AAAe,YAAU7L,MAAV,EAAkB;AAC9ClC,IAAAA,SAAS,CAAC+N,UAAD,EAAa7L,MAAb,CAAT;;AACA,aAAS6L,UAAT,CAAoBzI,IAApB,EAA0B;AACtB,UAAIC,KAAK,GAAGrD,MAAM,CAACsD,IAAP,CAAY,IAAZ,EAAkBF,IAAlB,KAA2B,IAAvC;;AACAC,MAAAA,KAAK,CAACE,gBAAN,GAAyBH,IAAI,CAACI,eAA9B;AACA,aAAOH,KAAP;AACH;;AACDwI,IAAAA,UAAU,CAACnN,SAAX,CAAqB+B,oBAArB,GAA4C,UAAUF,OAAV,EAAmBD,IAAnB,EAAyB;AACjEC,MAAAA,OAAO,CAACkD,OAAR,CAAgBC,KAAhB,CAAsBC,gBAAtB;AACApD,MAAAA,OAAO,CAACqD,SAAR,CAAkBtD,IAAI,CAACuD,MAAvB,EAA+B;AAAE;AAAjC,QAAiDtE,kBAAkB,CAACuM,uBAAnB,CAA2CvL,OAAO,CAACkD,OAAnD,EAA4DlD,OAAO,CAAC2H,MAAR,EAA5D,EAA8E,KAAK3E,gBAAnF,CAAjD;AACAhD,MAAAA,OAAO,CAAC2D,MAAR,CAAe5D,IAAI,CAACuD,MAApB,EAA4B,IAA5B,EAAkC;AAAE;AAApC,QAAmD;AAAE;AAArD;AACH,KAJD;;AAKA,WAAOgI,UAAP;AACH,GAb+B,CAa9B9L,iBAb8B,CAAhC;;AAcAmD,EAAAA,sBAAsB,CAAC6I,SAAvB,GAAmC/M,qBAAqB,CAAC,IAAI6M,UAAJ,CAAe;AACpErI,IAAAA,eAAe,EAAE,KADmD;AAEpEY,IAAAA,EAAE,EAAE,WAFgE;AAGpEC,IAAAA,YAAY,EAAEC,SAHsD;AAIpEqC,IAAAA,MAAM,EAAE;AACJC,MAAAA,MAAM,EAAE9G,WADJ;AAEJ+G,MAAAA,MAAM,EAAEjH,iBAAiB,CAACkH,cAFtB;AAGJjB,MAAAA,OAAO,EAAE;AAAK;AAAL,QAAqB;AAAG;AAH7B;AAIJ2C,MAAAA,GAAG,EAAE;AAAE3C,QAAAA,OAAO,EAAE;AAAK;AAAL,UAAqB;AAAG;;AAAnC;AAJD;AAJ4D,GAAf,CAAD,CAAxD;AAWA3C,EAAAA,sBAAsB,CAAC8I,eAAvB,GAAyChN,qBAAqB,CAAC,IAAI6M,UAAJ,CAAe;AAC1ErI,IAAAA,eAAe,EAAE,IADyD;AAE1EY,IAAAA,EAAE,EAAE,iBAFsE;AAG1EC,IAAAA,YAAY,EAAEC,SAH4D;AAI1EqC,IAAAA,MAAM,EAAE;AACJC,MAAAA,MAAM,EAAE9G,WADJ;AAEJ+G,MAAAA,MAAM,EAAEjH,iBAAiB,CAACkH,cAFtB;AAGJjB,MAAAA,OAAO,EAAE;AAAK;AAAL,QAAqB;AAAK;AAA1B,QAAwC;AAAG;AAHhD;AAIJ2C,MAAAA,GAAG,EAAE;AAAE3C,QAAAA,OAAO,EAAE;AAAK;AAAL,UAAqB;AAAK;AAA1B,UAAwC;AAAG;;AAAtD;AAJD;AAJkE,GAAf,CAAD,CAA9D;;AAWA,MAAIoG,aAAa;AAAG;AAAe,YAAUjM,MAAV,EAAkB;AACjDlC,IAAAA,SAAS,CAACmO,aAAD,EAAgBjM,MAAhB,CAAT;;AACA,aAASiM,aAAT,CAAuB7I,IAAvB,EAA6B;AACzB,UAAIC,KAAK,GAAGrD,MAAM,CAACsD,IAAP,CAAY,IAAZ,EAAkBF,IAAlB,KAA2B,IAAvC;;AACAC,MAAAA,KAAK,CAACE,gBAAN,GAAyBH,IAAI,CAACI,eAA9B;AACA,aAAOH,KAAP;AACH;;AACD4I,IAAAA,aAAa,CAACvN,SAAd,CAAwB+B,oBAAxB,GAA+C,UAAUF,OAAV,EAAmBD,IAAnB,EAAyB;AACpEC,MAAAA,OAAO,CAACkD,OAAR,CAAgBC,KAAhB,CAAsBC,gBAAtB;AACApD,MAAAA,OAAO,CAACqD,SAAR,CAAkBtD,IAAI,CAACuD,MAAvB,EAA+B;AAAE;AAAjC,QAAiDtE,kBAAkB,CAAC2M,iBAAnB,CAAqC3L,OAAO,CAACkD,OAA7C,EAAsDlD,OAAO,CAAC2H,MAAR,EAAtD,EAAwE,KAAK3E,gBAA7E,CAAjD;AACAhD,MAAAA,OAAO,CAAC2D,MAAR,CAAe5D,IAAI,CAACuD,MAApB,EAA4B,IAA5B,EAAkC;AAAE;AAApC,QAAmD;AAAE;AAArD;AACH,KAJD;;AAKA,WAAOoI,aAAP;AACH,GAbkC,CAajClM,iBAbiC,CAAnC;;AAcAmD,EAAAA,sBAAsB,CAACiJ,YAAvB,GAAsCnN,qBAAqB,CAAC,IAAIiN,aAAJ,CAAkB;AAC1EzI,IAAAA,eAAe,EAAE,KADyD;AAE1EY,IAAAA,EAAE,EAAE,cAFsE;AAG1EC,IAAAA,YAAY,EAAEC,SAH4D;AAI1EqC,IAAAA,MAAM,EAAE;AACJC,MAAAA,MAAM,EAAE9G,WADJ;AAEJ+G,MAAAA,MAAM,EAAEjH,iBAAiB,CAACkH,cAFtB;AAGJjB,MAAAA,OAAO,EAAE;AAAK;AAAL,QAAqB;AAAG;AAH7B;AAIJ2C,MAAAA,GAAG,EAAE;AAAE3C,QAAAA,OAAO,EAAE;AAAK;AAAL,UAAqB;AAAG;;AAAnC;AAJD;AAJkE,GAAlB,CAAD,CAA3D;AAWA3C,EAAAA,sBAAsB,CAACkJ,kBAAvB,GAA4CpN,qBAAqB,CAAC,IAAIiN,aAAJ,CAAkB;AAChFzI,IAAAA,eAAe,EAAE,IAD+D;AAEhFY,IAAAA,EAAE,EAAE,oBAF4E;AAGhFC,IAAAA,YAAY,EAAEC,SAHkE;AAIhFqC,IAAAA,MAAM,EAAE;AACJC,MAAAA,MAAM,EAAE9G,WADJ;AAEJ+G,MAAAA,MAAM,EAAEjH,iBAAiB,CAACkH,cAFtB;AAGJjB,MAAAA,OAAO,EAAE;AAAK;AAAL,QAAqB;AAAK;AAA1B,QAAwC;AAAG;AAHhD;AAIJ2C,MAAAA,GAAG,EAAE;AAAE3C,QAAAA,OAAO,EAAE;AAAK;AAAL,UAAqB;AAAK;AAA1B,UAAwC;AAAG;;AAAtD;AAJD;AAJwE,GAAlB,CAAD,CAAjE;;AAWA,MAAIwG,gBAAgB;AAAG;AAAe,YAAUrM,MAAV,EAAkB;AACpDlC,IAAAA,SAAS,CAACuO,gBAAD,EAAmBrM,MAAnB,CAAT;;AACA,aAASqM,gBAAT,GAA4B;AACxB,aAAOrM,MAAM,CAACsD,IAAP,CAAY,IAAZ,EAAkB;AACrBc,QAAAA,EAAE,EAAE,cADiB;AAErBC,QAAAA,YAAY,EAAEC,SAFO;AAGrB/C,QAAAA,WAAW,EAAEb,aAAa,CAACa;AAHN,OAAlB,KAID,IAJN;AAKH;;AACD8K,IAAAA,gBAAgB,CAAC3N,SAAjB,CAA2B+B,oBAA3B,GAAkD,UAAUF,OAAV,EAAmBD,IAAnB,EAAyB;AACvE,UAAIyH,MAAM,GAAGrH,aAAa,CAACyB,KAAd,CAAoB7B,IAApB,CAAb;;AACA,UAAI,CAACyH,MAAL,EAAa;AACT;AACA;AACH;;AACD,WAAKuE,gBAAL,CAAsB/L,OAAtB,EAA+BD,IAAI,CAACuD,MAApC,EAA4CkE,MAA5C;AACH,KAPD;;AAQAsE,IAAAA,gBAAgB,CAAC3N,SAAjB,CAA2B4N,gBAA3B,GAA8C,UAAU/L,OAAV,EAAmBsD,MAAnB,EAA2BvD,IAA3B,EAAiC;AAC3E,UAAIiM,gBAAgB,GAAG,KAAKC,wBAAL,CAA8BjM,OAAO,CAACkD,OAAtC,EAA+CnD,IAA/C,CAAvB;;AACA,UAAIA,IAAI,CAACe,YAAT,EAAuB;AACnB;AACA,YAAIoL,uBAAuB,GAAGlM,OAAO,CAACkD,OAAR,CAAgBiJ,wCAAhB,CAAyDH,gBAAzD,CAA9B;AACAhM,QAAAA,OAAO,CAACqD,SAAR,CAAkBC,MAAlB,EAA0B;AAAE;AAA5B,UAA4C,CACxCtE,kBAAkB,CAACoN,+BAAnB,CAAmDpM,OAAO,CAACkD,OAA3D,EAAoElD,OAAO,CAACwD,gBAAR,EAApE,EAAgG0I,uBAAhG,EAAyHnM,IAAI,CAACkC,MAA9H,CADwC,CAA5C;AAGH;;AACDjC,MAAAA,OAAO,CAACqM,QAAR,CAAiBL,gBAAjB;AACH,KAVD;;AAWAF,IAAAA,gBAAgB,CAAC3N,SAAjB,CAA2B8N,wBAA3B,GAAsD,UAAU/I,OAAV,EAAmBnD,IAAnB,EAAyB;AAC3E,UAAIA,IAAI,CAAC+B,IAAL,KAAc;AAAE;AAApB,QAAgC;AAC5B;AACA,cAAIwK,iBAAiB,GAAGpJ,OAAO,CAACqJ,8BAAR,EAAxB;AACA,cAAIC,yBAAyB,GAAG,KAAK,CAArC;;AACA,cAAIzM,IAAI,CAAC8B,SAAL,KAAmB;AAAE;AAAzB,YAAmC;AAC/B;AACA2K,cAAAA,yBAAyB,GAAGzK,IAAI,CAAC0K,GAAL,CAAS,CAAT,EAAYH,iBAAiB,CAACI,eAAlB,GAAoC3M,IAAI,CAACa,KAArD,CAA5B;AACH,aAHD,MAIK;AACD;AACA4L,YAAAA,yBAAyB,GAAGzK,IAAI,CAAC4K,GAAL,CAASzJ,OAAO,CAACC,KAAR,CAAcyJ,YAAd,EAAT,EAAuCN,iBAAiB,CAACI,eAAlB,GAAoC3M,IAAI,CAACa,KAAhF,CAA5B;AACH;;AACD,cAAIiM,sBAAsB,GAAG3J,OAAO,CAAC4J,kCAAR,CAA2C,IAAI5N,QAAJ,CAAasN,yBAAb,EAAwC,CAAxC,CAA3C,CAA7B;AACA,iBAAOtJ,OAAO,CAAC6J,4BAAR,CAAqCF,sBAAsB,CAACxK,UAA5D,CAAP;AACH;;AACD,UAAI2K,SAAJ;;AACA,UAAIjN,IAAI,CAAC+B,IAAL,KAAc;AAAE;AAApB,QAAgC;AAC5BkL,UAAAA,SAAS,GAAG9J,OAAO,CAAC8C,MAAR,CAAe+B,QAAf,GAA0BhI,IAAI,CAACa,KAA3C;AACH,SAFD,MAGK,IAAIb,IAAI,CAAC+B,IAAL,KAAc;AAAE;AAApB,QAAoC;AACrCkL,UAAAA,SAAS,GAAGjL,IAAI,CAACkL,KAAL,CAAW/J,OAAO,CAAC8C,MAAR,CAAe+B,QAAf,GAA0B,CAArC,IAA0ChI,IAAI,CAACa,KAA3D;AACH,SAFI,MAGA;AACDoM,QAAAA,SAAS,GAAGjN,IAAI,CAACa,KAAjB;AACH;;AACD,UAAIsM,UAAU,GAAG,CAACnN,IAAI,CAAC8B,SAAL,KAAmB;AAAE;AAArB,QAAgC,CAAC,CAAjC,GAAqC,CAAtC,IAA2CmL,SAA5D;AACA,aAAO9J,OAAO,CAACiK,mBAAR,KAAgCD,UAAU,GAAGhK,OAAO,CAAC8C,MAAR,CAAeoH,UAAnE;AACH,KA5BD;;AA6BA,WAAOtB,gBAAP;AACH,GA1DqC,CA0DpCtM,iBA1DoC,CAAtC;;AA2DAmD,EAAAA,sBAAsB,CAACmJ,gBAAvB,GAA0CA,gBAA1C;AACAnJ,EAAAA,sBAAsB,CAAC0K,YAAvB,GAAsC5O,qBAAqB,CAAC,IAAIqN,gBAAJ,EAAD,CAA3D;AACAnJ,EAAAA,sBAAsB,CAAC2K,YAAvB,GAAsC7O,qBAAqB,CAAC;AAAI;AAAe,YAAUgB,MAAV,EAAkB;AAC7FlC,IAAAA,SAAS,CAACgQ,OAAD,EAAU9N,MAAV,CAAT;;AACA,aAAS8N,OAAT,GAAmB;AACf,aAAO9N,MAAM,CAACsD,IAAP,CAAY,IAAZ,EAAkB;AACrBc,QAAAA,EAAE,EAAE,cADiB;AAErBC,QAAAA,YAAY,EAAEC,SAFO;AAGrBqC,QAAAA,MAAM,EAAE;AACJC,UAAAA,MAAM,EAAE9G,WADJ;AAEJ+G,UAAAA,MAAM,EAAEjH,iBAAiB,CAACkH,cAFtB;AAGJjB,UAAAA,OAAO,EAAE;AAAK;AAAL,YAAqB;AAAG;AAH7B;AAIJ2C,UAAAA,GAAG,EAAE;AAAE3C,YAAAA,OAAO,EAAE;AAAI;AAAJ,cAAoB;AAAG;;AAAlC;AAJD;AAHa,OAAlB,KASD,IATN;AAUH;;AACDiI,IAAAA,OAAO,CAACpP,SAAR,CAAkB+B,oBAAlB,GAAyC,UAAUF,OAAV,EAAmBD,IAAnB,EAAyB;AAC9D4C,MAAAA,sBAAsB,CAAC0K,YAAvB,CAAoCtB,gBAApC,CAAqD/L,OAArD,EAA8DD,IAAI,CAACuD,MAAnE,EAA2E;AACvEzB,QAAAA,SAAS,EAAE;AAAE;AAD0D;AAEvEC,QAAAA,IAAI,EAAE;AAAE;AAF+D;AAGvElB,QAAAA,KAAK,EAAE,CAHgE;AAIvEE,QAAAA,YAAY,EAAE,KAJyD;AAKvEmB,QAAAA,MAAM,EAAE;AAL+D,OAA3E;AAOH,KARD;;AASA,WAAOsL,OAAP;AACH,GAxB8E,CAwB7E/N,iBAxB6E,CAAnB,GAAD,CAA3D;AAyBAmD,EAAAA,sBAAsB,CAAC6K,YAAvB,GAAsC/O,qBAAqB,CAAC;AAAI;AAAe,YAAUgB,MAAV,EAAkB;AAC7FlC,IAAAA,SAAS,CAACkQ,OAAD,EAAUhO,MAAV,CAAT;;AACA,aAASgO,OAAT,GAAmB;AACf,aAAOhO,MAAM,CAACsD,IAAP,CAAY,IAAZ,EAAkB;AACrBc,QAAAA,EAAE,EAAE,cADiB;AAErBC,QAAAA,YAAY,EAAEC,SAFO;AAGrBqC,QAAAA,MAAM,EAAE;AACJC,UAAAA,MAAM,EAAE9G,WADJ;AAEJ+G,UAAAA,MAAM,EAAEjH,iBAAiB,CAACkH,cAFtB;AAGJjB,UAAAA,OAAO,EAAE;AAAK;AAAL,YAAqB;AAAG;AAH7B;AAIJoI,UAAAA,GAAG,EAAE;AAAEpI,YAAAA,OAAO,EAAE;AAAI;AAAJ,cAAgB;AAAG;;AAA9B,WAJD;AAKJkB,UAAAA,KAAK,EAAE;AAAElB,YAAAA,OAAO,EAAE;AAAI;AAAJ,cAAgB;AAAG;;AAA9B;AALH;AAHa,OAAlB,KAUD,IAVN;AAWH;;AACDmI,IAAAA,OAAO,CAACtP,SAAR,CAAkB+B,oBAAlB,GAAyC,UAAUF,OAAV,EAAmBD,IAAnB,EAAyB;AAC9D4C,MAAAA,sBAAsB,CAAC0K,YAAvB,CAAoCtB,gBAApC,CAAqD/L,OAArD,EAA8DD,IAAI,CAACuD,MAAnE,EAA2E;AACvEzB,QAAAA,SAAS,EAAE;AAAE;AAD0D;AAEvEC,QAAAA,IAAI,EAAE;AAAE;AAF+D;AAGvElB,QAAAA,KAAK,EAAE,CAHgE;AAIvEE,QAAAA,YAAY,EAAE,KAJyD;AAKvEmB,QAAAA,MAAM,EAAE;AAL+D,OAA3E;AAOH,KARD;;AASA,WAAOwL,OAAP;AACH,GAzB8E,CAyB7EjO,iBAzB6E,CAAnB,GAAD,CAA3D;AA0BAmD,EAAAA,sBAAsB,CAACgL,cAAvB,GAAwClP,qBAAqB,CAAC;AAAI;AAAe,YAAUgB,MAAV,EAAkB;AAC/FlC,IAAAA,SAAS,CAACqQ,QAAD,EAAWnO,MAAX,CAAT;;AACA,aAASmO,QAAT,GAAoB;AAChB,aAAOnO,MAAM,CAACsD,IAAP,CAAY,IAAZ,EAAkB;AACrBc,QAAAA,EAAE,EAAE,gBADiB;AAErBC,QAAAA,YAAY,EAAEC,SAFO;AAGrBqC,QAAAA,MAAM,EAAE;AACJC,UAAAA,MAAM,EAAE9G,WADJ;AAEJ+G,UAAAA,MAAM,EAAEjH,iBAAiB,CAACkH,cAFtB;AAGJjB,UAAAA,OAAO,EAAE;AAAK;AAAL,YAAqB;AAAG;AAH7B;AAIJ2C,UAAAA,GAAG,EAAE;AAAE3C,YAAAA,OAAO,EAAE;AAAI;AAAJ,cAAoB;AAAG;;AAAlC;AAJD;AAHa,OAAlB,KASD,IATN;AAUH;;AACDsI,IAAAA,QAAQ,CAACzP,SAAT,CAAmB+B,oBAAnB,GAA0C,UAAUF,OAAV,EAAmBD,IAAnB,EAAyB;AAC/D4C,MAAAA,sBAAsB,CAAC0K,YAAvB,CAAoCtB,gBAApC,CAAqD/L,OAArD,EAA8DD,IAAI,CAACuD,MAAnE,EAA2E;AACvEzB,QAAAA,SAAS,EAAE;AAAE;AAD0D;AAEvEC,QAAAA,IAAI,EAAE;AAAE;AAF+D;AAGvElB,QAAAA,KAAK,EAAE,CAHgE;AAIvEE,QAAAA,YAAY,EAAE,KAJyD;AAKvEmB,QAAAA,MAAM,EAAE;AAL+D,OAA3E;AAOH,KARD;;AASA,WAAO2L,QAAP;AACH,GAxBgF,CAwB/EpO,iBAxB+E,CAAnB,GAAD,CAA7D;AAyBAmD,EAAAA,sBAAsB,CAACkL,cAAvB,GAAwCpP,qBAAqB,CAAC;AAAI;AAAe,YAAUgB,MAAV,EAAkB;AAC/FlC,IAAAA,SAAS,CAACuQ,QAAD,EAAWrO,MAAX,CAAT;;AACA,aAASqO,QAAT,GAAoB;AAChB,aAAOrO,MAAM,CAACsD,IAAP,CAAY,IAAZ,EAAkB;AACrBc,QAAAA,EAAE,EAAE,gBADiB;AAErBC,QAAAA,YAAY,EAAEC,SAFO;AAGrBqC,QAAAA,MAAM,EAAE;AACJC,UAAAA,MAAM,EAAE9G,WADJ;AAEJ+G,UAAAA,MAAM,EAAEjH,iBAAiB,CAACkH,cAFtB;AAGJjB,UAAAA,OAAO,EAAE;AAAK;AAAL,YAAqB;AAAG;AAH7B;AAIJoI,UAAAA,GAAG,EAAE;AAAEpI,YAAAA,OAAO,EAAE;AAAI;AAAJ,cAAgB;AAAG;;AAA9B,WAJD;AAKJkB,UAAAA,KAAK,EAAE;AAAElB,YAAAA,OAAO,EAAE;AAAI;AAAJ,cAAgB;AAAG;;AAA9B;AALH;AAHa,OAAlB,KAUD,IAVN;AAWH;;AACDwI,IAAAA,QAAQ,CAAC3P,SAAT,CAAmB+B,oBAAnB,GAA0C,UAAUF,OAAV,EAAmBD,IAAnB,EAAyB;AAC/D4C,MAAAA,sBAAsB,CAAC0K,YAAvB,CAAoCtB,gBAApC,CAAqD/L,OAArD,EAA8DD,IAAI,CAACuD,MAAnE,EAA2E;AACvEzB,QAAAA,SAAS,EAAE;AAAE;AAD0D;AAEvEC,QAAAA,IAAI,EAAE;AAAE;AAF+D;AAGvElB,QAAAA,KAAK,EAAE,CAHgE;AAIvEE,QAAAA,YAAY,EAAE,KAJyD;AAKvEmB,QAAAA,MAAM,EAAE;AAL+D,OAA3E;AAOH,KARD;;AASA,WAAO6L,QAAP;AACH,GAzBgF,CAyB/EtO,iBAzB+E,CAAnB,GAAD,CAA7D;;AA0BA,MAAIuO,WAAW;AAAG;AAAe,YAAUtO,MAAV,EAAkB;AAC/ClC,IAAAA,SAAS,CAACwQ,WAAD,EAActO,MAAd,CAAT;;AACA,aAASsO,WAAT,CAAqBlL,IAArB,EAA2B;AACvB,UAAIC,KAAK,GAAGrD,MAAM,CAACsD,IAAP,CAAY,IAAZ,EAAkBF,IAAlB,KAA2B,IAAvC;;AACAC,MAAAA,KAAK,CAACE,gBAAN,GAAyBH,IAAI,CAACI,eAA9B;AACA,aAAOH,KAAP;AACH;;AACDiL,IAAAA,WAAW,CAAC5P,SAAZ,CAAsB+B,oBAAtB,GAA6C,UAAUF,OAAV,EAAmBD,IAAnB,EAAyB;AAClEC,MAAAA,OAAO,CAACkD,OAAR,CAAgBC,KAAhB,CAAsBC,gBAAtB;AACApD,MAAAA,OAAO,CAACqD,SAAR,CAAkBtD,IAAI,CAACuD,MAAvB,EAA+B;AAAE;AAAjC,QAAiD,CAC7CtE,kBAAkB,CAACgP,IAAnB,CAAwBhO,OAAO,CAACkD,OAAhC,EAAyClD,OAAO,CAACwD,gBAAR,EAAzC,EAAqE,KAAKR,gBAA1E,EAA4FjD,IAAI,CAAC0D,QAAjG,CAD6C,CAAjD;AAGAzD,MAAAA,OAAO,CAAC2D,MAAR,CAAe5D,IAAI,CAACuD,MAApB,EAA4B,IAA5B,EAAkC;AAAE;AAApC,QAAmD;AAAE;AAArD;AACH,KAND;;AAOA,WAAOyK,WAAP;AACH,GAfgC,CAe/BvO,iBAf+B,CAAjC;;AAgBAmD,EAAAA,sBAAsB,CAACsL,UAAvB,GAAoCxP,qBAAqB,CAAC,IAAIsP,WAAJ,CAAgB;AACtE9K,IAAAA,eAAe,EAAE,KADqD;AAEtEY,IAAAA,EAAE,EAAE,aAFkE;AAGtEC,IAAAA,YAAY,EAAEC;AAHwD,GAAhB,CAAD,CAAzD;AAKApB,EAAAA,sBAAsB,CAACuL,cAAvB,GAAwCzP,qBAAqB,CAAC,IAAIsP,WAAJ,CAAgB;AAC1E9K,IAAAA,eAAe,EAAE,IADyD;AAE1EY,IAAAA,EAAE,EAAE,iBAFsE;AAG1EC,IAAAA,YAAY,EAAEC;AAH4D,GAAhB,CAAD,CAA7D;AAKApB,EAAAA,sBAAsB,CAACwL,oBAAvB,GAA8C1P,qBAAqB,CAAC;AAAI;AAAe,YAAUgB,MAAV,EAAkB;AACrGlC,IAAAA,SAAS,CAAC6Q,QAAD,EAAW3O,MAAX,CAAT;;AACA,aAAS2O,QAAT,GAAoB;AAChB,aAAO3O,MAAM,CAACsD,IAAP,CAAY,IAAZ,EAAkB;AACrBc,QAAAA,EAAE,EAAE,sBADiB;AAErBC,QAAAA,YAAY,EAAEC;AAFO,OAAlB,KAGD,IAHN;AAIH;;AACDqK,IAAAA,QAAQ,CAACjQ,SAAT,CAAmB+B,oBAAnB,GAA0C,UAAUF,OAAV,EAAmBD,IAAnB,EAAyB;AAC/D,UAAImD,OAAO,GAAGlD,OAAO,CAACkD,OAAtB;AACA,UAAI+G,oBAAoB,GAAGjK,OAAO,CAACkK,uBAAR,EAA3B;AACA,UAAIf,MAAM,GAAGnJ,OAAO,CAAC2H,MAAR,EAAb;AACA,UAAIwC,SAAS,GAAGhB,MAAM,CAACiB,KAAP,CAAa,CAAb,CAAhB;AACA,UAAIiE,cAAc,GAAGlF,MAAM,CAACc,oBAAD,CAA3B;AACAE,MAAAA,SAAS,CAACF,oBAAD,CAAT,GAAkCjL,kBAAkB,CAACgP,IAAnB,CAAwB9K,OAAxB,EAAiCmL,cAAjC,EAAiDA,cAAc,CAAC/E,UAAf,CAA0BgF,YAA1B,EAAjD,EAA2FvO,IAAI,CAAC0D,QAAhG,CAAlC;AACAP,MAAAA,OAAO,CAACC,KAAR,CAAcC,gBAAd;AACApD,MAAAA,OAAO,CAACqD,SAAR,CAAkBtD,IAAI,CAACuD,MAAvB,EAA+B;AAAE;AAAjC,QAAiD6G,SAAjD;AACH,KATD;;AAUA,WAAOiE,QAAP;AACH,GAnBsF,CAmBrF5O,iBAnBqF,CAAnB,GAAD,CAAnE;;AAoBA,MAAI+O,WAAW;AAAG;AAAe,YAAU9O,MAAV,EAAkB;AAC/ClC,IAAAA,SAAS,CAACgR,WAAD,EAAc9O,MAAd,CAAT;;AACA,aAAS8O,WAAT,CAAqB1L,IAArB,EAA2B;AACvB,UAAIC,KAAK,GAAGrD,MAAM,CAACsD,IAAP,CAAY,IAAZ,EAAkBF,IAAlB,KAA2B,IAAvC;;AACAC,MAAAA,KAAK,CAACE,gBAAN,GAAyBH,IAAI,CAACI,eAA9B;AACA,aAAOH,KAAP;AACH;;AACDyL,IAAAA,WAAW,CAACpQ,SAAZ,CAAsB+B,oBAAtB,GAA6C,UAAUF,OAAV,EAAmBD,IAAnB,EAAyB;AAClEC,MAAAA,OAAO,CAACkD,OAAR,CAAgBC,KAAhB,CAAsBC,gBAAtB;AACApD,MAAAA,OAAO,CAACqD,SAAR,CAAkBtD,IAAI,CAACuD,MAAvB,EAA+B;AAAE;AAAjC,QAAiD,CAC7CtE,kBAAkB,CAACkK,IAAnB,CAAwBlJ,OAAO,CAACkD,OAAhC,EAAyClD,OAAO,CAACwD,gBAAR,EAAzC,EAAqE,KAAKR,gBAA1E,EAA4FjD,IAAI,CAAC0D,QAAjG,EAA2G1D,IAAI,CAAC2D,YAAhH,CAD6C,CAAjD;AAGA1D,MAAAA,OAAO,CAAC2D,MAAR,CAAe5D,IAAI,CAACuD,MAApB,EAA4B,KAA5B,EAAmC;AAAE;AAArC,QAAoD;AAAE;AAAtD;AACH,KAND;;AAOA,WAAOiL,WAAP;AACH,GAfgC,CAe/B/O,iBAf+B,CAAjC;;AAgBAmD,EAAAA,sBAAsB,CAAC6L,UAAvB,GAAoC/P,qBAAqB,CAAC,IAAI8P,WAAJ,CAAgB;AACtEtL,IAAAA,eAAe,EAAE,KADqD;AAEtEY,IAAAA,EAAE,EAAE,aAFkE;AAGtEC,IAAAA,YAAY,EAAEC;AAHwD,GAAhB,CAAD,CAAzD;AAKApB,EAAAA,sBAAsB,CAAC8L,cAAvB,GAAwChQ,qBAAqB,CAAC,IAAI8P,WAAJ,CAAgB;AAC1EtL,IAAAA,eAAe,EAAE,IADyD;AAE1EY,IAAAA,EAAE,EAAE,iBAFsE;AAG1EC,IAAAA,YAAY,EAAEC;AAH4D,GAAhB,CAAD,CAA7D;;AAKA,MAAI2K,qBAAqB;AAAG;AAAe,YAAUjP,MAAV,EAAkB;AACzDlC,IAAAA,SAAS,CAACmR,qBAAD,EAAwBjP,MAAxB,CAAT;;AACA,aAASiP,qBAAT,CAA+B7L,IAA/B,EAAqC;AACjC,UAAIC,KAAK,GAAGrD,MAAM,CAACsD,IAAP,CAAY,IAAZ,EAAkBF,IAAlB,KAA2B,IAAvC;;AACAC,MAAAA,KAAK,CAACE,gBAAN,GAAyBH,IAAI,CAACI,eAA9B;AACA,aAAOH,KAAP;AACH;;AACD4L,IAAAA,qBAAqB,CAACvQ,SAAtB,CAAgC+B,oBAAhC,GAAuD,UAAUF,OAAV,EAAmBD,IAAnB,EAAyB;AAC5E,UAAIkK,oBAAoB,GAAGjK,OAAO,CAACkK,uBAAR,EAA3B;AACA,UAAIf,MAAM,GAAGnJ,OAAO,CAAC2H,MAAR,EAAb;AACA,UAAIwC,SAAS,GAAGhB,MAAM,CAACiB,KAAP,CAAa,CAAb,CAAhB;AACAD,MAAAA,SAAS,CAACF,oBAAD,CAAT,GAAkCjL,kBAAkB,CAACkK,IAAnB,CAAwBlJ,OAAO,CAACkD,OAAhC,EAAyCiG,MAAM,CAACc,oBAAD,CAA/C,EAAuE,KAAKjH,gBAA5E,EAA8FjD,IAAI,CAAC0D,QAAnG,EAA6G1D,IAAI,CAAC2D,YAAlH,CAAlC;AACA1D,MAAAA,OAAO,CAACkD,OAAR,CAAgBC,KAAhB,CAAsBC,gBAAtB;AACApD,MAAAA,OAAO,CAACqD,SAAR,CAAkBtD,IAAI,CAACuD,MAAvB,EAA+B;AAAE;AAAjC,QAAiD6G,SAAjD;AACH,KAPD;;AAQA,WAAOuE,qBAAP;AACH,GAhB0C,CAgBzClP,iBAhByC,CAA3C;;AAiBAmD,EAAAA,sBAAsB,CAACgM,oBAAvB,GAA8ClQ,qBAAqB,CAAC,IAAIiQ,qBAAJ,CAA0B;AAC1FzL,IAAAA,eAAe,EAAE,KADyE;AAE1FY,IAAAA,EAAE,EAAE,sBAFsF;AAG1FC,IAAAA,YAAY,EAAEC;AAH4E,GAA1B,CAAD,CAAnE;AAKApB,EAAAA,sBAAsB,CAACiM,wBAAvB,GAAkDnQ,qBAAqB,CAAC,IAAIiQ,qBAAJ,CAA0B;AAC9FzL,IAAAA,eAAe,EAAE,IAD6E;AAE9FY,IAAAA,EAAE,EAAE,0BAF0F;AAG9FC,IAAAA,YAAY,EAAEC;AAHgF,GAA1B,CAAD,CAAvE;AAKApB,EAAAA,sBAAsB,CAACkM,mBAAvB,GAA6CpQ,qBAAqB,CAAC;AAAI;AAAe,YAAUgB,MAAV,EAAkB;AACpGlC,IAAAA,SAAS,CAACuR,QAAD,EAAWrP,MAAX,CAAT;;AACA,aAASqP,QAAT,GAAoB;AAChB,aAAOrP,MAAM,CAACsD,IAAP,CAAY,IAAZ,EAAkB;AACrBc,QAAAA,EAAE,EAAE,qBADiB;AAErBC,QAAAA,YAAY,EAAEC,SAFO;AAGrBqC,QAAAA,MAAM,EAAE;AACJC,UAAAA,MAAM,EAAE9G,WADJ;AAEJ+G,UAAAA,MAAM,EAAEjH,iBAAiB,CAACkH,cAFtB;AAGJjB,UAAAA,OAAO,EAAE;AAAK;AAAL,YAAqB;AAAG;;AAH7B;AAHa,OAAlB,KAQD,IARN;AASH;;AACDwJ,IAAAA,QAAQ,CAAC3Q,SAAT,CAAmB+B,oBAAnB,GAA0C,UAAUF,OAAV,EAAmBD,IAAnB,EAAyB;AAC/DC,MAAAA,OAAO,CAACkD,OAAR,CAAgBC,KAAhB,CAAsBC,gBAAtB;AACApD,MAAAA,OAAO,CAACqD,SAAR,CAAkBtD,IAAI,CAACuD,MAAvB,EAA+B;AAAE;AAAjC,QAAiDtE,kBAAkB,CAAC+P,mBAAnB,CAAuC/O,OAAO,CAACkD,OAA/C,EAAwDlD,OAAO,CAAC2H,MAAR,EAAxD,CAAjD;AACA3H,MAAAA,OAAO,CAAC2D,MAAR,CAAe5D,IAAI,CAACuD,MAApB,EAA4B,IAA5B,EAAkC;AAAE;AAApC,QAAmD;AAAE;AAArD;AACH,KAJD;;AAKA,WAAOwL,QAAP;AACH,GAnBqF,CAmBpFtP,iBAnBoF,CAAnB,GAAD,CAAlE;AAoBAmD,EAAAA,sBAAsB,CAACqM,eAAvB,GAAyCvQ,qBAAqB,CAAC;AAAI;AAAe,YAAUgB,MAAV,EAAkB;AAChGlC,IAAAA,SAAS,CAAC0R,QAAD,EAAWxP,MAAX,CAAT;;AACA,aAASwP,QAAT,GAAoB;AAChB,aAAOxP,MAAM,CAACsD,IAAP,CAAY,IAAZ,EAAkB;AACrBc,QAAAA,EAAE,EAAE,iBADiB;AAErBC,QAAAA,YAAY,EAAEzE,iBAAiB,CAAC6P,oBAFX;AAGrB9I,QAAAA,MAAM,EAAE;AACJC,UAAAA,MAAM,EAAE9G,WADJ;AAEJ+G,UAAAA,MAAM,EAAEjH,iBAAiB,CAACkH,cAFtB;AAGJjB,UAAAA,OAAO,EAAE;AAAE;AAHP;AAIJ4C,UAAAA,SAAS,EAAE,CAAC;AAAK;AAAL,YAAmB;AAAE;AAAtB;AAJP;AAHa,OAAlB,KASD,IATN;AAUH;;AACD+G,IAAAA,QAAQ,CAAC9Q,SAAT,CAAmB+B,oBAAnB,GAA0C,UAAUF,OAAV,EAAmBD,IAAnB,EAAyB;AAC/DC,MAAAA,OAAO,CAACkD,OAAR,CAAgBC,KAAhB,CAAsBC,gBAAtB;AACApD,MAAAA,OAAO,CAACqD,SAAR,CAAkBtD,IAAI,CAACuD,MAAvB,EAA+B;AAAE;AAAjC,QAAiD,CAC7CtE,kBAAkB,CAACmQ,eAAnB,CAAmCnP,OAAO,CAACkD,OAA3C,EAAoDlD,OAAO,CAACwD,gBAAR,EAApD,CAD6C,CAAjD;AAGAxD,MAAAA,OAAO,CAAC2D,MAAR,CAAe5D,IAAI,CAACuD,MAApB,EAA4B,IAA5B,EAAkC;AAAE;AAApC,QAAmD;AAAE;AAArD;AACH,KAND;;AAOA,WAAO2L,QAAP;AACH,GAtBiF,CAsBhFzP,iBAtBgF,CAAnB,GAAD,CAA9D;AAuBAmD,EAAAA,sBAAsB,CAACyM,sBAAvB,GAAgD3Q,qBAAqB,CAAC;AAAI;AAAe,YAAUgB,MAAV,EAAkB;AACvGlC,IAAAA,SAAS,CAAC8R,QAAD,EAAW5P,MAAX,CAAT;;AACA,aAAS4P,QAAT,GAAoB;AAChB,aAAO5P,MAAM,CAACsD,IAAP,CAAY,IAAZ,EAAkB;AACrBc,QAAAA,EAAE,EAAE,wBADiB;AAErBC,QAAAA,YAAY,EAAEzE,iBAAiB,CAACiQ,qBAFX;AAGrBlJ,QAAAA,MAAM,EAAE;AACJC,UAAAA,MAAM,EAAE9G,WAAW,GAAG,CADlB;AAEJ+G,UAAAA,MAAM,EAAEjH,iBAAiB,CAACkH,cAFtB;AAGJjB,UAAAA,OAAO,EAAE;AAAE;AAHP;AAIJ4C,UAAAA,SAAS,EAAE,CAAC;AAAK;AAAL,YAAmB;AAAE;AAAtB;AAJP;AAHa,OAAlB,KASD,IATN;AAUH;;AACDmH,IAAAA,QAAQ,CAAClR,SAAT,CAAmB+B,oBAAnB,GAA0C,UAAUF,OAAV,EAAmBD,IAAnB,EAAyB;AAC/DC,MAAAA,OAAO,CAACkD,OAAR,CAAgBC,KAAhB,CAAsBC,gBAAtB;AACApD,MAAAA,OAAO,CAACqD,SAAR,CAAkBtD,IAAI,CAACuD,MAAvB,EAA+B;AAAE;AAAjC,QAAiD,CAC7CtD,OAAO,CAACwD,gBAAR,EAD6C,CAAjD;AAGAxD,MAAAA,OAAO,CAAC2D,MAAR,CAAe5D,IAAI,CAACuD,MAApB,EAA4B,IAA5B,EAAkC;AAAE;AAApC,QAAmD;AAAE;AAArD;AACH,KAND;;AAOA,WAAO+L,QAAP;AACH,GAtBwF,CAsBvF7P,iBAtBuF,CAAnB,GAAD,CAArE;AAuBAmD,EAAAA,sBAAsB,CAAC4M,UAAvB,GAAoC9Q,qBAAqB,CAAC;AAAI;AAAe,YAAUgB,MAAV,EAAkB;AAC3FlC,IAAAA,SAAS,CAACiS,QAAD,EAAW/P,MAAX,CAAT;;AACA,aAAS+P,QAAT,GAAoB;AAChB,aAAO/P,MAAM,CAACsD,IAAP,CAAY,IAAZ,EAAkB;AACrBc,QAAAA,EAAE,EAAE,YADiB;AAErBC,QAAAA,YAAY,EAAEC,SAFO;AAGrB/C,QAAAA,WAAW,EAAEkB,WAAW,CAAClB;AAHJ,OAAlB,KAID,IAJN;AAKH;;AACDwO,IAAAA,QAAQ,CAACrR,SAAT,CAAmB+B,oBAAnB,GAA0C,UAAUF,OAAV,EAAmBD,IAAnB,EAAyB;AAC/D,UAAI0P,aAAa,GAAG1P,IAApB;AACA,UAAIsC,UAAU,GAAG,CAACoN,aAAa,CAACpN,UAAd,IAA4B,CAA7B,IAAkC,CAAnD;;AACA,UAAIA,UAAU,GAAG,CAAjB,EAAoB;AAChBA,QAAAA,UAAU,GAAG,CAAb;AACH;;AACD,UAAIqN,SAAS,GAAG1P,OAAO,CAACkD,OAAR,CAAgBC,KAAhB,CAAsByJ,YAAtB,EAAhB;;AACA,UAAIvK,UAAU,GAAGqN,SAAjB,EAA4B;AACxBrN,QAAAA,UAAU,GAAGqN,SAAb;AACH;;AACD,UAAIC,KAAK,GAAG,IAAIxQ,KAAJ,CAAUkD,UAAV,EAAsB,CAAtB,EAAyBA,UAAzB,EAAqCrC,OAAO,CAACkD,OAAR,CAAgBC,KAAhB,CAAsBkI,gBAAtB,CAAuChJ,UAAvC,CAArC,CAAZ;AACA,UAAIuN,QAAQ,GAAG;AAAE;AAAjB;;AACA,UAAIH,aAAa,CAACnN,EAAlB,EAAsB;AAClB,gBAAQmN,aAAa,CAACnN,EAAtB;AACI,eAAKJ,WAAW,CAACK,aAAZ,CAA0BC,GAA/B;AACIoN,YAAAA,QAAQ,GAAG;AAAE;AAAb;AACA;;AACJ,eAAK1N,WAAW,CAACK,aAAZ,CAA0BE,MAA/B;AACImN,YAAAA,QAAQ,GAAG;AAAE;AAAb;AACA;;AACJ,eAAK1N,WAAW,CAACK,aAAZ,CAA0BG,MAA/B;AACIkN,YAAAA,QAAQ,GAAG;AAAE;AAAb;AACA;;AACJ;AACI;AAXR;AAaH;;AACD,UAAIC,SAAS,GAAG7P,OAAO,CAACkD,OAAR,CAAgB4M,4BAAhB,CAA6CH,KAA7C,CAAhB;AACA3P,MAAAA,OAAO,CAAC+P,WAAR,CAAoBhQ,IAAI,CAACuD,MAAzB,EAAiC,KAAjC,EAAwCuM,SAAxC,EAAmDD,QAAnD,EAA6D;AAAE;AAA/D;AACH,KA7BD;;AA8BA,WAAOJ,QAAP;AACH,GAxC4E,CAwC3EhQ,iBAxC2E,CAAnB,GAAD,CAAzD;AAyCAmD,EAAAA,sBAAsB,CAACqN,SAAvB,GAAmCvR,qBAAqB,CAAC;AAAI;AAAe,YAAUgB,MAAV,EAAkB;AAC1FlC,IAAAA,SAAS,CAAC0S,QAAD,EAAWxQ,MAAX,CAAT;;AACA,aAASwQ,QAAT,GAAoB;AAChB,aAAOxQ,MAAM,CAACsD,IAAP,CAAY,IAAZ,EAAkB;AACrBc,QAAAA,EAAE,EAAE,WADiB;AAErBC,QAAAA,YAAY,EAAEC;AAFO,OAAlB,KAGD,IAHN;AAIH;;AACDkM,IAAAA,QAAQ,CAAC9R,SAAT,CAAmB+B,oBAAnB,GAA0C,UAAUF,OAAV,EAAmBD,IAAnB,EAAyB;AAC/DC,MAAAA,OAAO,CAACkD,OAAR,CAAgBC,KAAhB,CAAsBC,gBAAtB;AACApD,MAAAA,OAAO,CAACqD,SAAR,CAAkBtD,IAAI,CAACuD,MAAvB,EAA+B;AAAE;AAAjC,QAAiD,CAC7CtE,kBAAkB,CAACkR,SAAnB,CAA6BlQ,OAAO,CAACkD,OAArC,EAA8ClD,OAAO,CAACwD,gBAAR,EAA9C,CAD6C,CAAjD;AAGH,KALD;;AAMA,WAAOyM,QAAP;AACH,GAf2E,CAe1EzQ,iBAf0E,CAAnB,GAAD,CAAxD;AAgBAmD,EAAAA,sBAAsB,CAACwN,YAAvB,GAAsC1R,qBAAqB,CAAC;AAAI;AAAe,YAAUgB,MAAV,EAAkB;AAC7FlC,IAAAA,SAAS,CAAC6S,QAAD,EAAW3Q,MAAX,CAAT;;AACA,aAAS2Q,QAAT,GAAoB;AAChB,aAAO3Q,MAAM,CAACsD,IAAP,CAAY,IAAZ,EAAkB;AACrBc,QAAAA,EAAE,EAAE,cADiB;AAErBC,QAAAA,YAAY,EAAEC;AAFO,OAAlB,KAGD,IAHN;AAIH;;AACDqM,IAAAA,QAAQ,CAACjS,SAAT,CAAmB+B,oBAAnB,GAA0C,UAAUF,OAAV,EAAmBD,IAAnB,EAAyB;AAC/DC,MAAAA,OAAO,CAACkD,OAAR,CAAgBC,KAAhB,CAAsBC,gBAAtB;AACApD,MAAAA,OAAO,CAACqD,SAAR,CAAkBtD,IAAI,CAACuD,MAAvB,EAA+B;AAAE;AAAjC,QAAiD,CAC7C1E,WAAW,CAACyR,kBAAZ,CAA+BtQ,IAAI,CAAC4J,SAApC,CAD6C,CAAjD;AAGH,KALD;;AAMA,WAAOyG,QAAP;AACH,GAf8E,CAe7E5Q,iBAf6E,CAAnB,GAAD,CAA3D;AAgBH,CAtjCD,EAsjCGmD,sBAAsB,KAAKA,sBAAsB,GAAG,EAA9B,CAtjCzB;;AAujCA,OAAO,IAAI2N,mBAAJ;;AACP,CAAC,UAAUA,mBAAV,EAA+B;AAC5B,MAAIC,kBAAkB;AAAG;AAAe,YAAU9Q,MAAV,EAAkB;AACtDlC,IAAAA,SAAS,CAACgT,kBAAD,EAAqB9Q,MAArB,CAAT;;AACA,aAAS8Q,kBAAT,GAA8B;AAC1B,aAAO9Q,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACD4Q,IAAAA,kBAAkB,CAACpS,SAAnB,CAA6ByB,gBAA7B,GAAgD,UAAUC,QAAV,EAAoBC,MAApB,EAA4BC,IAA5B,EAAkC;AAC9E,UAAIC,OAAO,GAAGF,MAAM,CAACG,WAAP,EAAd;;AACA,UAAI,CAACD,OAAL,EAAc;AACV;AACA;AACH;;AACD,WAAKwQ,qBAAL,CAA2B1Q,MAA3B,EAAmCE,OAAnC,EAA4CD,IAAI,IAAI,EAApD;AACH,KAPD;;AAQA,WAAOwQ,kBAAP;AACH,GAduC,CActC/R,aAdsC,CAAxC;;AAeA8R,EAAAA,mBAAmB,CAACC,kBAApB,GAAyCA,kBAAzC;AACAD,EAAAA,mBAAmB,CAACG,eAApB,GAAsChS,qBAAqB,CAAC;AAAI;AAAe,YAAUgB,MAAV,EAAkB;AAC7FlC,IAAAA,SAAS,CAACmT,QAAD,EAAWjR,MAAX,CAAT;;AACA,aAASiR,QAAT,GAAoB;AAChB,aAAOjR,MAAM,CAACsD,IAAP,CAAY,IAAZ,EAAkB;AACrBc,QAAAA,EAAE,EAAE,iBADiB;AAErBC,QAAAA,YAAY,EAAEzE,iBAAiB,CAACsR,QAFX;AAGrBvK,QAAAA,MAAM,EAAE;AACJC,UAAAA,MAAM,EAAE9G,WADJ;AAEJ+G,UAAAA,MAAM,EAAEjH,iBAAiB,CAACkH,cAFtB;AAGJjB,UAAAA,OAAO,EAAE,CAHL;AAIJ2C,UAAAA,GAAG,EAAE;AAAE3C,YAAAA,OAAO,EAAE;AAAI;AAAJ,cAAoB;AAAG;;AAAlC;AAJD;AAHa,OAAlB,KASD,IATN;AAUH;;AACDoL,IAAAA,QAAQ,CAACvS,SAAT,CAAmBqS,qBAAnB,GAA2C,UAAU1Q,MAAV,EAAkBE,OAAlB,EAA2BD,IAA3B,EAAiC;AACxED,MAAAA,MAAM,CAAC8Q,YAAP;AACA9Q,MAAAA,MAAM,CAAC+Q,eAAP,CAAuB,KAAKhN,EAA5B,EAAgC5E,cAAc,CAAC6R,eAAf,CAA+B9Q,OAAO,CAACkD,OAAR,CAAgB8C,MAA/C,EAAuDhG,OAAO,CAACkD,OAAR,CAAgBC,KAAvE,EAA8EnD,OAAO,CAAC2H,MAAR,GAAiBrD,GAAjB,CAAqB,UAAUyM,CAAV,EAAa;AAAE,eAAOA,CAAC,CAACzH,UAAF,CAAaK,SAApB;AAAgC,OAApE,CAA9E,CAAhC;AACH,KAHD;;AAIA,WAAO+G,QAAP;AACH,GAnB8E,CAmB7EH,kBAnB6E,CAAnB,GAAD,CAA3D;AAoBAD,EAAAA,mBAAmB,CAACU,OAApB,GAA8BvS,qBAAqB,CAAC;AAAI;AAAe,YAAUgB,MAAV,EAAkB;AACrFlC,IAAAA,SAAS,CAAC0T,QAAD,EAAWxR,MAAX,CAAT;;AACA,aAASwR,QAAT,GAAoB;AAChB,aAAOxR,MAAM,CAACsD,IAAP,CAAY,IAAZ,EAAkB;AACrBc,QAAAA,EAAE,EAAE,SADiB;AAErBC,QAAAA,YAAY,EAAEzE,iBAAiB,CAACsR,QAFX;AAGrBvK,QAAAA,MAAM,EAAE;AACJC,UAAAA,MAAM,EAAE9G,WADJ;AAEJ+G,UAAAA,MAAM,EAAEhH,cAAc,CAAC4R,GAAf,CAAmB7R,iBAAiB,CAAC8R,eAArC,EAAsD9R,iBAAiB,CAAC+R,mBAAxE,CAFJ;AAGJ9L,UAAAA,OAAO,EAAE;AAAK;AAAL,YAAmB;AAAE;;AAH1B;AAHa,OAAlB,KAQD,IARN;AASH;;AACD2L,IAAAA,QAAQ,CAAC9S,SAAT,CAAmBqS,qBAAnB,GAA2C,UAAU1Q,MAAV,EAAkBE,OAAlB,EAA2BD,IAA3B,EAAiC;AACxED,MAAAA,MAAM,CAAC8Q,YAAP;AACA9Q,MAAAA,MAAM,CAAC+Q,eAAP,CAAuB,KAAKhN,EAA5B,EAAgC5E,cAAc,CAACoS,OAAf,CAAuBrR,OAAO,CAACkD,OAAR,CAAgB8C,MAAvC,EAA+ChG,OAAO,CAACkD,OAAR,CAAgBC,KAA/D,EAAsEnD,OAAO,CAAC2H,MAAR,GAAiBrD,GAAjB,CAAqB,UAAUyM,CAAV,EAAa;AAAE,eAAOA,CAAC,CAACzH,UAAF,CAAaK,SAApB;AAAgC,OAApE,CAAtE,CAAhC;AACA7J,MAAAA,MAAM,CAAC8Q,YAAP;AACH,KAJD;;AAKA,WAAOK,QAAP;AACH,GAnBsE,CAmBrEV,kBAnBqE,CAAnB,GAAD,CAAnD;AAoBAD,EAAAA,mBAAmB,CAACgB,GAApB,GAA0B7S,qBAAqB,CAAC;AAAI;AAAe,YAAUgB,MAAV,EAAkB;AACjFlC,IAAAA,SAAS,CAACgU,QAAD,EAAW9R,MAAX,CAAT;;AACA,aAAS8R,QAAT,GAAoB;AAChB,aAAO9R,MAAM,CAACsD,IAAP,CAAY,IAAZ,EAAkB;AACrBc,QAAAA,EAAE,EAAE,KADiB;AAErBC,QAAAA,YAAY,EAAEzE,iBAAiB,CAACsR,QAFX;AAGrBvK,QAAAA,MAAM,EAAE;AACJC,UAAAA,MAAM,EAAE9G,WADJ;AAEJ+G,UAAAA,MAAM,EAAEhH,cAAc,CAAC4R,GAAf,CAAmB7R,iBAAiB,CAAC8R,eAArC,EAAsD9R,iBAAiB,CAAC+R,mBAAxE,CAFJ;AAGJ9L,UAAAA,OAAO,EAAE;AAAE;;AAHP;AAHa,OAAlB,KAQD,IARN;AASH;;AACDiM,IAAAA,QAAQ,CAACpT,SAAT,CAAmBqS,qBAAnB,GAA2C,UAAU1Q,MAAV,EAAkBE,OAAlB,EAA2BD,IAA3B,EAAiC;AACxED,MAAAA,MAAM,CAAC8Q,YAAP;AACA9Q,MAAAA,MAAM,CAAC+Q,eAAP,CAAuB,KAAKhN,EAA5B,EAAgC5E,cAAc,CAACuS,GAAf,CAAmBxR,OAAO,CAACkD,OAAR,CAAgB8C,MAAnC,EAA2ChG,OAAO,CAACkD,OAAR,CAAgBC,KAA3D,EAAkEnD,OAAO,CAAC2H,MAAR,GAAiBrD,GAAjB,CAAqB,UAAUyM,CAAV,EAAa;AAAE,eAAOA,CAAC,CAACzH,UAAF,CAAaK,SAApB;AAAgC,OAApE,CAAlE,CAAhC;AACA7J,MAAAA,MAAM,CAAC8Q,YAAP;AACH,KAJD;;AAKA,WAAOW,QAAP;AACH,GAnBkE,CAmBjEhB,kBAnBiE,CAAnB,GAAD,CAA/C;AAoBAD,EAAAA,mBAAmB,CAACmB,UAApB,GAAiChT,qBAAqB,CAAC;AAAI;AAAe,YAAUgB,MAAV,EAAkB;AACxFlC,IAAAA,SAAS,CAACmU,QAAD,EAAWjS,MAAX,CAAT;;AACA,aAASiS,QAAT,GAAoB;AAChB,aAAOjS,MAAM,CAACsD,IAAP,CAAY,IAAZ,EAAkB;AACrBc,QAAAA,EAAE,EAAE,YADiB;AAErBC,QAAAA,YAAY,EAAEzE,iBAAiB,CAACsR,QAFX;AAGrBvK,QAAAA,MAAM,EAAE;AACJC,UAAAA,MAAM,EAAE9G,WADJ;AAEJ+G,UAAAA,MAAM,EAAEjH,iBAAiB,CAACkH,cAFtB;AAGJjB,UAAAA,OAAO,EAAE;AAAE;AAHP;AAIJ4C,UAAAA,SAAS,EAAE,CAAC;AAAK;AAAL,YAAmB;AAAE;AAAtB,WAJP;AAKJD,UAAAA,GAAG,EAAE;AAAE3C,YAAAA,OAAO,EAAE;AAAE;AAAb;AAA8B4C,YAAAA,SAAS,EAAE,CAAC;AAAK;AAAL,cAAmB;AAAE;AAAtB,cAAuC;AAAI;AAAJ,cAAoB;AAAG;AAA9D,cAA2E;AAAI;AAAJ,cAAoB;AAAE;AAAjG;AAAzC;AALD;AAHa,OAAlB,KAUD,IAVN;AAWH;;AACDwJ,IAAAA,QAAQ,CAACvT,SAAT,CAAmBqS,qBAAnB,GAA2C,UAAU1Q,MAAV,EAAkBE,OAAlB,EAA2BD,IAA3B,EAAiC;AACxE,UAAI4R,EAAE,GAAG9S,gBAAgB,CAAC+S,UAAjB,CAA4B5R,OAAO,CAAC6R,wBAAR,EAA5B,EAAgE7R,OAAO,CAACkD,OAAR,CAAgB8C,MAAhF,EAAwFhG,OAAO,CAACkD,OAAR,CAAgBC,KAAxG,EAA+GnD,OAAO,CAAC2H,MAAR,GAAiBrD,GAAjB,CAAqB,UAAUyM,CAAV,EAAa;AAAE,eAAOA,CAAC,CAACzH,UAAF,CAAaK,SAApB;AAAgC,OAApE,CAA/G,CAAT;AAAA,UAAgMmI,4BAA4B,GAAGH,EAAE,CAAC,CAAD,CAAjO;AAAA,UAAsOI,QAAQ,GAAGJ,EAAE,CAAC,CAAD,CAAnP;;AACA,UAAIG,4BAAJ,EAAkC;AAC9BhS,QAAAA,MAAM,CAAC8Q,YAAP;AACH;;AACD9Q,MAAAA,MAAM,CAAC+Q,eAAP,CAAuB,KAAKhN,EAA5B,EAAgCkO,QAAhC;AACA/R,MAAAA,OAAO,CAACgS,wBAAR,CAAiC;AAAE;AAAnC;AACH,KAPD;;AAQA,WAAON,QAAP;AACH,GAxByE,CAwBxEnB,kBAxBwE,CAAnB,GAAD,CAAtD;AAyBAD,EAAAA,mBAAmB,CAAC2B,WAApB,GAAkCxT,qBAAqB,CAAC;AAAI;AAAe,YAAUgB,MAAV,EAAkB;AACzFlC,IAAAA,SAAS,CAAC2U,QAAD,EAAWzS,MAAX,CAAT;;AACA,aAASyS,QAAT,GAAoB;AAChB,aAAOzS,MAAM,CAACsD,IAAP,CAAY,IAAZ,EAAkB;AACrBc,QAAAA,EAAE,EAAE,aADiB;AAErBC,QAAAA,YAAY,EAAEzE,iBAAiB,CAACsR,QAFX;AAGrBvK,QAAAA,MAAM,EAAE;AACJC,UAAAA,MAAM,EAAE9G,WADJ;AAEJ+G,UAAAA,MAAM,EAAEjH,iBAAiB,CAACkH,cAFtB;AAGJjB,UAAAA,OAAO,EAAE;AAAG;AAHR;AAIJ2C,UAAAA,GAAG,EAAE;AAAE3C,YAAAA,OAAO,EAAE;AAAG;AAAd;AAA4B4C,YAAAA,SAAS,EAAE,CAAC;AAAI;AAAJ,cAAoB;AAAG;AAAxB,cAAqC;AAAI;AAAJ,cAAoB;AAAG;AAA5D;AAAvC;AAJD;AAHa,OAAlB,KASD,IATN;AAUH;;AACDgK,IAAAA,QAAQ,CAAC/T,SAAT,CAAmBqS,qBAAnB,GAA2C,UAAU1Q,MAAV,EAAkBE,OAAlB,EAA2BD,IAA3B,EAAiC;AACxE,UAAI4R,EAAE,GAAG9S,gBAAgB,CAACsT,WAAjB,CAA6BnS,OAAO,CAAC6R,wBAAR,EAA7B,EAAiE7R,OAAO,CAACkD,OAAR,CAAgB8C,MAAjF,EAAyFhG,OAAO,CAACkD,OAAR,CAAgBC,KAAzG,EAAgHnD,OAAO,CAAC2H,MAAR,GAAiBrD,GAAjB,CAAqB,UAAUyM,CAAV,EAAa;AAAE,eAAOA,CAAC,CAACzH,UAAF,CAAaK,SAApB;AAAgC,OAApE,CAAhH,CAAT;AAAA,UAAiMmI,4BAA4B,GAAGH,EAAE,CAAC,CAAD,CAAlO;AAAA,UAAuOI,QAAQ,GAAGJ,EAAE,CAAC,CAAD,CAApP;;AACA,UAAIG,4BAAJ,EAAkC;AAC9BhS,QAAAA,MAAM,CAAC8Q,YAAP;AACH;;AACD9Q,MAAAA,MAAM,CAAC+Q,eAAP,CAAuB,KAAKhN,EAA5B,EAAgCkO,QAAhC;AACA/R,MAAAA,OAAO,CAACgS,wBAAR,CAAiC;AAAE;AAAnC;AACH,KAPD;;AAQA,WAAOE,QAAP;AACH,GAvB0E,CAuBzE3B,kBAvByE,CAAnB,GAAD,CAAvD;AAwBH,CA9HD,EA8HGD,mBAAmB,KAAKA,mBAAmB,GAAG,EAA3B,CA9HtB;;AA+HA,SAAS8B,eAAT,CAAyBC,OAAzB,EAAkC;AAC9BA,EAAAA,OAAO,CAACC,QAAR;AACH;AACD;;;;;;;;AAMA,IAAIC,8BAA8B;AAAG;AAAe,UAAU9S,MAAV,EAAkB;AAClElC,EAAAA,SAAS,CAACgV,8BAAD,EAAiC9S,MAAjC,CAAT;;AACA,WAAS8S,8BAAT,CAAwC1P,IAAxC,EAA8C;AAC1C,QAAIC,KAAK,GAAGrD,MAAM,CAACsD,IAAP,CAAY,IAAZ,EAAkBF,IAAlB,KAA2B,IAAvC;;AACAC,IAAAA,KAAK,CAAC0P,cAAN,GAAuB3P,IAAI,CAAC4P,aAA5B;AACA3P,IAAAA,KAAK,CAAC4P,aAAN,GAAsB7P,IAAI,CAAC8P,YAA3B;AACA,WAAO7P,KAAP;AACH;;AACDyP,EAAAA,8BAA8B,CAACpU,SAA/B,CAAyCyU,UAAzC,GAAsD,UAAU/S,QAAV,EAAoBE,IAApB,EAA0B;AAC5E,QAAI8S,aAAa,GAAGhT,QAAQ,CAACiT,GAAT,CAAapU,kBAAb,EAAiCqU,oBAAjC,EAApB,CAD4E,CAE5E;;AACA,QAAIF,aAAa,IAAIA,aAAa,CAACG,YAAd,EAArB,EAAmD;AAC/C,aAAO,KAAKC,iBAAL,CAAuBpT,QAAvB,EAAiCgT,aAAjC,EAAgD9S,IAAhD,CAAP;AACH,KAL2E,CAM5E;;;AACA,QAAImT,aAAa,GAAGC,QAAQ,CAACD,aAA7B;;AACA,QAAIA,aAAa,IAAI,CAAC,OAAD,EAAU,UAAV,EAAsBE,OAAtB,CAA8BF,aAAa,CAACG,OAAd,CAAsBC,WAAtB,EAA9B,KAAsE,CAA3F,EAA8F;AAC1FH,MAAAA,QAAQ,CAACI,WAAT,CAAqB,KAAKb,aAA1B;AACA;AACH,KAX2E,CAY5E;;;AACA,QAAIc,YAAY,GAAG3T,QAAQ,CAACiT,GAAT,CAAapU,kBAAb,EAAiC+U,mBAAjC,EAAnB;;AACA,QAAID,YAAJ,EAAkB;AACdA,MAAAA,YAAY,CAACE,KAAb;AACA,aAAO,KAAKT,iBAAL,CAAuBpT,QAAvB,EAAiC2T,YAAjC,EAA+CzT,IAA/C,CAAP;AACH;AACJ,GAlBD;;AAmBAwS,EAAAA,8BAA8B,CAACpU,SAA/B,CAAyC8U,iBAAzC,GAA6D,UAAUpT,QAAV,EAAoBC,MAApB,EAA4BC,IAA5B,EAAkC;AAC3F,QAAI4T,OAAO,GAAG,KAAKnB,cAAnB;;AACA,QAAI,OAAOmB,OAAP,KAAmB,QAAvB,EAAiC;AAC7B7T,MAAAA,MAAM,CAAC8T,OAAP,CAAe,UAAf,EAA2BD,OAA3B,EAAoC5T,IAApC;AACH,KAFD,MAGK;AACDA,MAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AACAA,MAAAA,IAAI,CAACuD,MAAL,GAAc,UAAd;AACAqQ,MAAAA,OAAO,CAAC/T,gBAAR,CAAyBC,QAAzB,EAAmCC,MAAnC,EAA2CC,IAA3C;AACH;AACJ,GAVD;;AAWA,SAAOwS,8BAAP;AACH,CAvCmD,CAuClDhU,OAvCkD,CAApD;AAwCA;;;;;AAGA,IAAIsV,oBAAoB;AAAG;AAAe,UAAUpU,MAAV,EAAkB;AACxDlC,EAAAA,SAAS,CAACsW,oBAAD,EAAuBpU,MAAvB,CAAT;;AACA,WAASoU,oBAAT,CAA8BhQ,EAA9B,EAAkCiQ,SAAlC,EAA6C9S,WAA7C,EAA0D;AACtD,QAAI8B,KAAK,GAAGrD,MAAM,CAACsD,IAAP,CAAY,IAAZ,EAAkB;AAC1Bc,MAAAA,EAAE,EAAEA,EADsB;AAE1BC,MAAAA,YAAY,EAAEC,SAFY;AAG1B/C,MAAAA,WAAW,EAAEA;AAHa,KAAlB,KAIN,IAJN;;AAKA8B,IAAAA,KAAK,CAACiR,UAAN,GAAmBD,SAAnB;AACA,WAAOhR,KAAP;AACH;;AACD+Q,EAAAA,oBAAoB,CAAC1V,SAArB,CAA+ByU,UAA/B,GAA4C,UAAU/S,QAAV,EAAoBE,IAApB,EAA0B;AAClE,QAAID,MAAM,GAAGD,QAAQ,CAACiT,GAAT,CAAapU,kBAAb,EAAiCqU,oBAAjC,EAAb;;AACA,QAAI,CAACjT,MAAL,EAAa;AACT;AACH;;AACDA,IAAAA,MAAM,CAAC8T,OAAP,CAAe,UAAf,EAA2B,KAAKG,UAAhC,EAA4ChU,IAA5C;AACH,GAND;;AAOA,SAAO8T,oBAAP;AACH,CAnByC,CAmBxCtV,OAnBwC,CAA1C;;AAoBA6T,eAAe,CAAC,IAAIG,8BAAJ,CAAmC;AAC/CE,EAAAA,aAAa,EAAE9P,sBAAsB,CAACqN,SADS;AAE/C2C,EAAAA,YAAY,EAAE,WAFiC;AAG/C9O,EAAAA,EAAE,EAAE,yBAH2C;AAI/CC,EAAAA,YAAY,EAAEzE,iBAAiB,CAACkH,cAJe;AAK/CH,EAAAA,MAAM,EAAE;AACJC,IAAAA,MAAM,EAAE9G,WADJ;AAEJ+G,IAAAA,MAAM,EAAE,IAFJ;AAGJhB,IAAAA,OAAO,EAAE;AAAK;AAAL,MAAqB;AAAG;;AAH7B,GALuC;AAU/C0O,EAAAA,QAAQ,EAAE;AACNC,IAAAA,MAAM,EAAE;AAAG;AADL;AAENC,IAAAA,KAAK,EAAE,SAFD;AAGNC,IAAAA,KAAK,EAAE9V,GAAG,CAAC+V,QAAJ,CAAa;AAAEC,MAAAA,GAAG,EAAE,aAAP;AAAsBC,MAAAA,OAAO,EAAE,CAAC,uBAAD;AAA/B,KAAb,EAAyE,cAAzE,CAHD;AAINC,IAAAA,KAAK,EAAE;AAJD;AAVqC,CAAnC,CAAD,CAAf;AAiBAnC,eAAe,CAAC,IAAIG,8BAAJ,CAAmC;AAC/CE,EAAAA,aAAa,EAAErT,OAAO,CAACoV,IADwB;AAE/C7B,EAAAA,YAAY,EAAE,MAFiC;AAG/C9O,EAAAA,EAAE,EAAEzE,OAAO,CAACoV,IAHmC;AAI/C1Q,EAAAA,YAAY,EAAEzE,iBAAiB,CAACsR,QAJe;AAK/CvK,EAAAA,MAAM,EAAE;AACJC,IAAAA,MAAM,EAAE9G,WADJ;AAEJ+G,IAAAA,MAAM,EAAEjH,iBAAiB,CAACkH,cAFtB;AAGJjB,IAAAA,OAAO,EAAE;AAAK;AAAL,MAAqB;AAAG;;AAH7B,GALuC;AAU/C0O,EAAAA,QAAQ,EAAE;AACNC,IAAAA,MAAM,EAAE;AAAG;AADL;AAENC,IAAAA,KAAK,EAAE,MAFD;AAGNC,IAAAA,KAAK,EAAE9V,GAAG,CAAC+V,QAAJ,CAAa;AAAEC,MAAAA,GAAG,EAAE,QAAP;AAAiBC,MAAAA,OAAO,EAAE,CAAC,uBAAD;AAA1B,KAAb,EAAoE,QAApE,CAHD;AAINC,IAAAA,KAAK,EAAE;AAJD;AAVqC,CAAnC,CAAD,CAAf;AAiBAnC,eAAe,CAAC,IAAIyB,oBAAJ,CAAyB,aAAazU,OAAO,CAACoV,IAA9C,EAAoDpV,OAAO,CAACoV,IAA5D,CAAD,CAAf;AACApC,eAAe,CAAC,IAAIG,8BAAJ,CAAmC;AAC/CE,EAAAA,aAAa,EAAErT,OAAO,CAACqV,IADwB;AAE/C9B,EAAAA,YAAY,EAAE,MAFiC;AAG/C9O,EAAAA,EAAE,EAAEzE,OAAO,CAACqV,IAHmC;AAI/C3Q,EAAAA,YAAY,EAAEzE,iBAAiB,CAACsR,QAJe;AAK/CvK,EAAAA,MAAM,EAAE;AACJC,IAAAA,MAAM,EAAE9G,WADJ;AAEJ+G,IAAAA,MAAM,EAAEjH,iBAAiB,CAACkH,cAFtB;AAGJjB,IAAAA,OAAO,EAAE;AAAK;AAAL,MAAqB;AAAG;AAH7B;AAIJ4C,IAAAA,SAAS,EAAE,CAAC;AAAK;AAAL,MAAqB;AAAK;AAA1B,MAAwC;AAAG;AAA5C,KAJP;AAKJD,IAAAA,GAAG,EAAE;AAAE3C,MAAAA,OAAO,EAAE;AAAK;AAAL,QAAqB;AAAK;AAA1B,QAAwC;AAAG;;AAAtD;AALD,GALuC;AAY/C0O,EAAAA,QAAQ,EAAE;AACNC,IAAAA,MAAM,EAAE;AAAG;AADL;AAENC,IAAAA,KAAK,EAAE,MAFD;AAGNC,IAAAA,KAAK,EAAE9V,GAAG,CAAC+V,QAAJ,CAAa;AAAEC,MAAAA,GAAG,EAAE,QAAP;AAAiBC,MAAAA,OAAO,EAAE,CAAC,uBAAD;AAA1B,KAAb,EAAoE,QAApE,CAHD;AAINC,IAAAA,KAAK,EAAE;AAJD;AAZqC,CAAnC,CAAD,CAAf;AAmBAnC,eAAe,CAAC,IAAIyB,oBAAJ,CAAyB,aAAazU,OAAO,CAACqV,IAA9C,EAAoDrV,OAAO,CAACqV,IAA5D,CAAD,CAAf;;AACA,SAASC,2BAAT,CAAqCZ,SAArC,EAAgD9S,WAAhD,EAA6D;AACzDoR,EAAAA,eAAe,CAAC,IAAIyB,oBAAJ,CAAyB,aAAaC,SAAtC,EAAiDA,SAAjD,CAAD,CAAf;AACA1B,EAAAA,eAAe,CAAC,IAAIyB,oBAAJ,CAAyBC,SAAzB,EAAoCA,SAApC,EAA+C9S,WAA/C,CAAD,CAAf;AACH;;AACD0T,2BAA2B,CAACtV,OAAO,CAACuV,IAAT,EAAe;AACtC3T,EAAAA,WAAW,EAAE,MADyB;AAEtCjB,EAAAA,IAAI,EAAE,CAAC;AACCkB,IAAAA,IAAI,EAAE,MADP;AAECE,IAAAA,MAAM,EAAE;AACJ,cAAQ,QADJ;AAEJ,kBAAY,CAAC,MAAD,CAFR;AAGJ,oBAAc;AACV,gBAAQ;AACJ,kBAAQ;AADJ;AADE;AAHV;AAFT,GAAD;AAFgC,CAAf,CAA3B;AAeAuT,2BAA2B,CAACtV,OAAO,CAACwV,mBAAT,CAA3B;AACAF,2BAA2B,CAACtV,OAAO,CAACyV,gBAAT,CAA3B;AACAH,2BAA2B,CAACtV,OAAO,CAAC0V,cAAT,CAA3B;AACAJ,2BAA2B,CAACtV,OAAO,CAAC2V,KAAT,CAA3B;AACAL,2BAA2B,CAACtV,OAAO,CAAC4V,GAAT,CAA3B","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport * as nls from '../../../nls.js';\r\nimport * as types from '../../../base/common/types.js';\r\nimport { Command, EditorCommand, registerEditorCommand } from '../editorExtensions.js';\r\nimport { ICodeEditorService } from '../services/codeEditorService.js';\r\nimport { ColumnSelection } from '../../common/controller/cursorColumnSelection.js';\r\nimport { CursorState } from '../../common/controller/cursorCommon.js';\r\nimport { DeleteOperations } from '../../common/controller/cursorDeleteOperations.js';\r\nimport { CursorMove as CursorMove_, CursorMoveCommands } from '../../common/controller/cursorMoveCommands.js';\r\nimport { TypeOperations } from '../../common/controller/cursorTypeOperations.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Handler } from '../../common/editorCommon.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\r\nvar CORE_WEIGHT = 0 /* EditorCore */;\r\nvar CoreEditorCommand = /** @class */ (function (_super) {\r\n    __extends(CoreEditorCommand, _super);\r\n    function CoreEditorCommand() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    CoreEditorCommand.prototype.runEditorCommand = function (accessor, editor, args) {\r\n        var cursors = editor._getCursors();\r\n        if (!cursors) {\r\n            // the editor has no view => has no cursors\r\n            return;\r\n        }\r\n        this.runCoreEditorCommand(cursors, args || {});\r\n    };\r\n    return CoreEditorCommand;\r\n}(EditorCommand));\r\nexport { CoreEditorCommand };\r\nexport var EditorScroll_;\r\n(function (EditorScroll_) {\r\n    var isEditorScrollArgs = function (arg) {\r\n        if (!types.isObject(arg)) {\r\n            return false;\r\n        }\r\n        var scrollArg = arg;\r\n        if (!types.isString(scrollArg.to)) {\r\n            return false;\r\n        }\r\n        if (!types.isUndefined(scrollArg.by) && !types.isString(scrollArg.by)) {\r\n            return false;\r\n        }\r\n        if (!types.isUndefined(scrollArg.value) && !types.isNumber(scrollArg.value)) {\r\n            return false;\r\n        }\r\n        if (!types.isUndefined(scrollArg.revealCursor) && !types.isBoolean(scrollArg.revealCursor)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    EditorScroll_.description = {\r\n        description: 'Scroll editor in the given direction',\r\n        args: [\r\n            {\r\n                name: 'Editor scroll argument object',\r\n                description: \"Property-value pairs that can be passed through this argument:\\n\\t\\t\\t\\t\\t* 'to': A mandatory direction value.\\n\\t\\t\\t\\t\\t\\t```\\n\\t\\t\\t\\t\\t\\t'up', 'down'\\n\\t\\t\\t\\t\\t\\t```\\n\\t\\t\\t\\t\\t* 'by': Unit to move. Default is computed based on 'to' value.\\n\\t\\t\\t\\t\\t\\t```\\n\\t\\t\\t\\t\\t\\t'line', 'wrappedLine', 'page', 'halfPage'\\n\\t\\t\\t\\t\\t\\t```\\n\\t\\t\\t\\t\\t* 'value': Number of units to move. Default is '1'.\\n\\t\\t\\t\\t\\t* 'revealCursor': If 'true' reveals the cursor if it is outside view port.\\n\\t\\t\\t\\t\",\r\n                constraint: isEditorScrollArgs,\r\n                schema: {\r\n                    'type': 'object',\r\n                    'required': ['to'],\r\n                    'properties': {\r\n                        'to': {\r\n                            'type': 'string',\r\n                            'enum': ['up', 'down']\r\n                        },\r\n                        'by': {\r\n                            'type': 'string',\r\n                            'enum': ['line', 'wrappedLine', 'page', 'halfPage']\r\n                        },\r\n                        'value': {\r\n                            'type': 'number',\r\n                            'default': 1\r\n                        },\r\n                        'revealCursor': {\r\n                            'type': 'boolean',\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    };\r\n    /**\r\n     * Directions in the view for editor scroll command.\r\n     */\r\n    EditorScroll_.RawDirection = {\r\n        Up: 'up',\r\n        Down: 'down',\r\n    };\r\n    /**\r\n     * Units for editor scroll 'by' argument\r\n     */\r\n    EditorScroll_.RawUnit = {\r\n        Line: 'line',\r\n        WrappedLine: 'wrappedLine',\r\n        Page: 'page',\r\n        HalfPage: 'halfPage'\r\n    };\r\n    function parse(args) {\r\n        var direction;\r\n        switch (args.to) {\r\n            case EditorScroll_.RawDirection.Up:\r\n                direction = 1 /* Up */;\r\n                break;\r\n            case EditorScroll_.RawDirection.Down:\r\n                direction = 2 /* Down */;\r\n                break;\r\n            default:\r\n                // Illegal arguments\r\n                return null;\r\n        }\r\n        var unit;\r\n        switch (args.by) {\r\n            case EditorScroll_.RawUnit.Line:\r\n                unit = 1 /* Line */;\r\n                break;\r\n            case EditorScroll_.RawUnit.WrappedLine:\r\n                unit = 2 /* WrappedLine */;\r\n                break;\r\n            case EditorScroll_.RawUnit.Page:\r\n                unit = 3 /* Page */;\r\n                break;\r\n            case EditorScroll_.RawUnit.HalfPage:\r\n                unit = 4 /* HalfPage */;\r\n                break;\r\n            default:\r\n                unit = 2 /* WrappedLine */;\r\n        }\r\n        var value = Math.floor(args.value || 1);\r\n        var revealCursor = !!args.revealCursor;\r\n        return {\r\n            direction: direction,\r\n            unit: unit,\r\n            value: value,\r\n            revealCursor: revealCursor,\r\n            select: (!!args.select)\r\n        };\r\n    }\r\n    EditorScroll_.parse = parse;\r\n})(EditorScroll_ || (EditorScroll_ = {}));\r\nexport var RevealLine_;\r\n(function (RevealLine_) {\r\n    var isRevealLineArgs = function (arg) {\r\n        if (!types.isObject(arg)) {\r\n            return false;\r\n        }\r\n        var reveaLineArg = arg;\r\n        if (!types.isNumber(reveaLineArg.lineNumber)) {\r\n            return false;\r\n        }\r\n        if (!types.isUndefined(reveaLineArg.at) && !types.isString(reveaLineArg.at)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    RevealLine_.description = {\r\n        description: 'Reveal the given line at the given logical position',\r\n        args: [\r\n            {\r\n                name: 'Reveal line argument object',\r\n                description: \"Property-value pairs that can be passed through this argument:\\n\\t\\t\\t\\t\\t* 'lineNumber': A mandatory line number value.\\n\\t\\t\\t\\t\\t* 'at': Logical position at which line has to be revealed .\\n\\t\\t\\t\\t\\t\\t```\\n\\t\\t\\t\\t\\t\\t'top', 'center', 'bottom'\\n\\t\\t\\t\\t\\t\\t```\\n\\t\\t\\t\\t\",\r\n                constraint: isRevealLineArgs,\r\n                schema: {\r\n                    'type': 'object',\r\n                    'required': ['lineNumber'],\r\n                    'properties': {\r\n                        'lineNumber': {\r\n                            'type': 'number',\r\n                        },\r\n                        'at': {\r\n                            'type': 'string',\r\n                            'enum': ['top', 'center', 'bottom']\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    };\r\n    /**\r\n     * Values for reveal line 'at' argument\r\n     */\r\n    RevealLine_.RawAtArgument = {\r\n        Top: 'top',\r\n        Center: 'center',\r\n        Bottom: 'bottom'\r\n    };\r\n})(RevealLine_ || (RevealLine_ = {}));\r\nexport var CoreNavigationCommands;\r\n(function (CoreNavigationCommands) {\r\n    var BaseMoveToCommand = /** @class */ (function (_super) {\r\n        __extends(BaseMoveToCommand, _super);\r\n        function BaseMoveToCommand(opts) {\r\n            var _this = _super.call(this, opts) || this;\r\n            _this._inSelectionMode = opts.inSelectionMode;\r\n            return _this;\r\n        }\r\n        BaseMoveToCommand.prototype.runCoreEditorCommand = function (cursors, args) {\r\n            cursors.context.model.pushStackElement();\r\n            cursors.setStates(args.source, 3 /* Explicit */, [\r\n                CursorMoveCommands.moveTo(cursors.context, cursors.getPrimaryCursor(), this._inSelectionMode, args.position, args.viewPosition)\r\n            ]);\r\n            cursors.reveal(args.source, true, 0 /* Primary */, 0 /* Smooth */);\r\n        };\r\n        return BaseMoveToCommand;\r\n    }(CoreEditorCommand));\r\n    CoreNavigationCommands.MoveTo = registerEditorCommand(new BaseMoveToCommand({\r\n        id: '_moveTo',\r\n        inSelectionMode: false,\r\n        precondition: undefined\r\n    }));\r\n    CoreNavigationCommands.MoveToSelect = registerEditorCommand(new BaseMoveToCommand({\r\n        id: '_moveToSelect',\r\n        inSelectionMode: true,\r\n        precondition: undefined\r\n    }));\r\n    var ColumnSelectCommand = /** @class */ (function (_super) {\r\n        __extends(ColumnSelectCommand, _super);\r\n        function ColumnSelectCommand() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        ColumnSelectCommand.prototype.runCoreEditorCommand = function (cursors, args) {\r\n            cursors.context.model.pushStackElement();\r\n            var result = this._getColumnSelectResult(cursors.context, cursors.getPrimaryCursor(), cursors.getColumnSelectData(), args);\r\n            cursors.setStates(args.source, 3 /* Explicit */, result.viewStates.map(function (viewState) { return CursorState.fromViewState(viewState); }));\r\n            cursors.setColumnSelectData({\r\n                isReal: true,\r\n                fromViewLineNumber: result.fromLineNumber,\r\n                fromViewVisualColumn: result.fromVisualColumn,\r\n                toViewLineNumber: result.toLineNumber,\r\n                toViewVisualColumn: result.toVisualColumn\r\n            });\r\n            cursors.reveal(args.source, true, (result.reversed ? 1 /* TopMost */ : 2 /* BottomMost */), 0 /* Smooth */);\r\n        };\r\n        return ColumnSelectCommand;\r\n    }(CoreEditorCommand));\r\n    CoreNavigationCommands.ColumnSelect = registerEditorCommand(new /** @class */ (function (_super) {\r\n        __extends(class_1, _super);\r\n        function class_1() {\r\n            return _super.call(this, {\r\n                id: 'columnSelect',\r\n                precondition: undefined\r\n            }) || this;\r\n        }\r\n        class_1.prototype._getColumnSelectResult = function (context, primary, prevColumnSelectData, args) {\r\n            // validate `args`\r\n            var validatedPosition = context.model.validatePosition(args.position);\r\n            var validatedViewPosition = context.validateViewPosition(new Position(args.viewPosition.lineNumber, args.viewPosition.column), validatedPosition);\r\n            var fromViewLineNumber = args.doColumnSelect ? prevColumnSelectData.fromViewLineNumber : validatedViewPosition.lineNumber;\r\n            var fromViewVisualColumn = args.doColumnSelect ? prevColumnSelectData.fromViewVisualColumn : args.mouseColumn - 1;\r\n            return ColumnSelection.columnSelect(context.config, context.viewModel, fromViewLineNumber, fromViewVisualColumn, validatedViewPosition.lineNumber, args.mouseColumn - 1);\r\n        };\r\n        return class_1;\r\n    }(ColumnSelectCommand)));\r\n    CoreNavigationCommands.CursorColumnSelectLeft = registerEditorCommand(new /** @class */ (function (_super) {\r\n        __extends(class_2, _super);\r\n        function class_2() {\r\n            return _super.call(this, {\r\n                id: 'cursorColumnSelectLeft',\r\n                precondition: undefined,\r\n                kbOpts: {\r\n                    weight: CORE_WEIGHT,\r\n                    kbExpr: EditorContextKeys.textInputFocus,\r\n                    primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 512 /* Alt */ | 15 /* LeftArrow */,\r\n                    linux: { primary: 0 }\r\n                }\r\n            }) || this;\r\n        }\r\n        class_2.prototype._getColumnSelectResult = function (context, primary, prevColumnSelectData, args) {\r\n            return ColumnSelection.columnSelectLeft(context.config, context.viewModel, prevColumnSelectData);\r\n        };\r\n        return class_2;\r\n    }(ColumnSelectCommand)));\r\n    CoreNavigationCommands.CursorColumnSelectRight = registerEditorCommand(new /** @class */ (function (_super) {\r\n        __extends(class_3, _super);\r\n        function class_3() {\r\n            return _super.call(this, {\r\n                id: 'cursorColumnSelectRight',\r\n                precondition: undefined,\r\n                kbOpts: {\r\n                    weight: CORE_WEIGHT,\r\n                    kbExpr: EditorContextKeys.textInputFocus,\r\n                    primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 512 /* Alt */ | 17 /* RightArrow */,\r\n                    linux: { primary: 0 }\r\n                }\r\n            }) || this;\r\n        }\r\n        class_3.prototype._getColumnSelectResult = function (context, primary, prevColumnSelectData, args) {\r\n            return ColumnSelection.columnSelectRight(context.config, context.viewModel, prevColumnSelectData);\r\n        };\r\n        return class_3;\r\n    }(ColumnSelectCommand)));\r\n    var ColumnSelectUpCommand = /** @class */ (function (_super) {\r\n        __extends(ColumnSelectUpCommand, _super);\r\n        function ColumnSelectUpCommand(opts) {\r\n            var _this = _super.call(this, opts) || this;\r\n            _this._isPaged = opts.isPaged;\r\n            return _this;\r\n        }\r\n        ColumnSelectUpCommand.prototype._getColumnSelectResult = function (context, primary, prevColumnSelectData, args) {\r\n            return ColumnSelection.columnSelectUp(context.config, context.viewModel, prevColumnSelectData, this._isPaged);\r\n        };\r\n        return ColumnSelectUpCommand;\r\n    }(ColumnSelectCommand));\r\n    CoreNavigationCommands.CursorColumnSelectUp = registerEditorCommand(new ColumnSelectUpCommand({\r\n        isPaged: false,\r\n        id: 'cursorColumnSelectUp',\r\n        precondition: undefined,\r\n        kbOpts: {\r\n            weight: CORE_WEIGHT,\r\n            kbExpr: EditorContextKeys.textInputFocus,\r\n            primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 512 /* Alt */ | 16 /* UpArrow */,\r\n            linux: { primary: 0 }\r\n        }\r\n    }));\r\n    CoreNavigationCommands.CursorColumnSelectPageUp = registerEditorCommand(new ColumnSelectUpCommand({\r\n        isPaged: true,\r\n        id: 'cursorColumnSelectPageUp',\r\n        precondition: undefined,\r\n        kbOpts: {\r\n            weight: CORE_WEIGHT,\r\n            kbExpr: EditorContextKeys.textInputFocus,\r\n            primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 512 /* Alt */ | 11 /* PageUp */,\r\n            linux: { primary: 0 }\r\n        }\r\n    }));\r\n    var ColumnSelectDownCommand = /** @class */ (function (_super) {\r\n        __extends(ColumnSelectDownCommand, _super);\r\n        function ColumnSelectDownCommand(opts) {\r\n            var _this = _super.call(this, opts) || this;\r\n            _this._isPaged = opts.isPaged;\r\n            return _this;\r\n        }\r\n        ColumnSelectDownCommand.prototype._getColumnSelectResult = function (context, primary, prevColumnSelectData, args) {\r\n            return ColumnSelection.columnSelectDown(context.config, context.viewModel, prevColumnSelectData, this._isPaged);\r\n        };\r\n        return ColumnSelectDownCommand;\r\n    }(ColumnSelectCommand));\r\n    CoreNavigationCommands.CursorColumnSelectDown = registerEditorCommand(new ColumnSelectDownCommand({\r\n        isPaged: false,\r\n        id: 'cursorColumnSelectDown',\r\n        precondition: undefined,\r\n        kbOpts: {\r\n            weight: CORE_WEIGHT,\r\n            kbExpr: EditorContextKeys.textInputFocus,\r\n            primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 512 /* Alt */ | 18 /* DownArrow */,\r\n            linux: { primary: 0 }\r\n        }\r\n    }));\r\n    CoreNavigationCommands.CursorColumnSelectPageDown = registerEditorCommand(new ColumnSelectDownCommand({\r\n        isPaged: true,\r\n        id: 'cursorColumnSelectPageDown',\r\n        precondition: undefined,\r\n        kbOpts: {\r\n            weight: CORE_WEIGHT,\r\n            kbExpr: EditorContextKeys.textInputFocus,\r\n            primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 512 /* Alt */ | 12 /* PageDown */,\r\n            linux: { primary: 0 }\r\n        }\r\n    }));\r\n    var CursorMoveImpl = /** @class */ (function (_super) {\r\n        __extends(CursorMoveImpl, _super);\r\n        function CursorMoveImpl() {\r\n            return _super.call(this, {\r\n                id: 'cursorMove',\r\n                precondition: undefined,\r\n                description: CursorMove_.description\r\n            }) || this;\r\n        }\r\n        CursorMoveImpl.prototype.runCoreEditorCommand = function (cursors, args) {\r\n            var parsed = CursorMove_.parse(args);\r\n            if (!parsed) {\r\n                // illegal arguments\r\n                return;\r\n            }\r\n            this._runCursorMove(cursors, args.source, parsed);\r\n        };\r\n        CursorMoveImpl.prototype._runCursorMove = function (cursors, source, args) {\r\n            cursors.context.model.pushStackElement();\r\n            cursors.setStates(source, 3 /* Explicit */, CursorMoveCommands.move(cursors.context, cursors.getAll(), args));\r\n            cursors.reveal(source, true, 0 /* Primary */, 0 /* Smooth */);\r\n        };\r\n        return CursorMoveImpl;\r\n    }(CoreEditorCommand));\r\n    CoreNavigationCommands.CursorMoveImpl = CursorMoveImpl;\r\n    CoreNavigationCommands.CursorMove = registerEditorCommand(new CursorMoveImpl());\r\n    var CursorMoveBasedCommand = /** @class */ (function (_super) {\r\n        __extends(CursorMoveBasedCommand, _super);\r\n        function CursorMoveBasedCommand(opts) {\r\n            var _this = _super.call(this, opts) || this;\r\n            _this._staticArgs = opts.args;\r\n            return _this;\r\n        }\r\n        CursorMoveBasedCommand.prototype.runCoreEditorCommand = function (cursors, dynamicArgs) {\r\n            var args = this._staticArgs;\r\n            if (this._staticArgs.value === -1 /* PAGE_SIZE_MARKER */) {\r\n                // -1 is a marker for page size\r\n                args = {\r\n                    direction: this._staticArgs.direction,\r\n                    unit: this._staticArgs.unit,\r\n                    select: this._staticArgs.select,\r\n                    value: cursors.context.config.pageSize\r\n                };\r\n            }\r\n            CoreNavigationCommands.CursorMove._runCursorMove(cursors, dynamicArgs.source, args);\r\n        };\r\n        return CursorMoveBasedCommand;\r\n    }(CoreEditorCommand));\r\n    CoreNavigationCommands.CursorLeft = registerEditorCommand(new CursorMoveBasedCommand({\r\n        args: {\r\n            direction: 0 /* Left */,\r\n            unit: 0 /* None */,\r\n            select: false,\r\n            value: 1\r\n        },\r\n        id: 'cursorLeft',\r\n        precondition: undefined,\r\n        kbOpts: {\r\n            weight: CORE_WEIGHT,\r\n            kbExpr: EditorContextKeys.textInputFocus,\r\n            primary: 15 /* LeftArrow */,\r\n            mac: { primary: 15 /* LeftArrow */, secondary: [256 /* WinCtrl */ | 32 /* KEY_B */] }\r\n        }\r\n    }));\r\n    CoreNavigationCommands.CursorLeftSelect = registerEditorCommand(new CursorMoveBasedCommand({\r\n        args: {\r\n            direction: 0 /* Left */,\r\n            unit: 0 /* None */,\r\n            select: true,\r\n            value: 1\r\n        },\r\n        id: 'cursorLeftSelect',\r\n        precondition: undefined,\r\n        kbOpts: {\r\n            weight: CORE_WEIGHT,\r\n            kbExpr: EditorContextKeys.textInputFocus,\r\n            primary: 1024 /* Shift */ | 15 /* LeftArrow */\r\n        }\r\n    }));\r\n    CoreNavigationCommands.CursorRight = registerEditorCommand(new CursorMoveBasedCommand({\r\n        args: {\r\n            direction: 1 /* Right */,\r\n            unit: 0 /* None */,\r\n            select: false,\r\n            value: 1\r\n        },\r\n        id: 'cursorRight',\r\n        precondition: undefined,\r\n        kbOpts: {\r\n            weight: CORE_WEIGHT,\r\n            kbExpr: EditorContextKeys.textInputFocus,\r\n            primary: 17 /* RightArrow */,\r\n            mac: { primary: 17 /* RightArrow */, secondary: [256 /* WinCtrl */ | 36 /* KEY_F */] }\r\n        }\r\n    }));\r\n    CoreNavigationCommands.CursorRightSelect = registerEditorCommand(new CursorMoveBasedCommand({\r\n        args: {\r\n            direction: 1 /* Right */,\r\n            unit: 0 /* None */,\r\n            select: true,\r\n            value: 1\r\n        },\r\n        id: 'cursorRightSelect',\r\n        precondition: undefined,\r\n        kbOpts: {\r\n            weight: CORE_WEIGHT,\r\n            kbExpr: EditorContextKeys.textInputFocus,\r\n            primary: 1024 /* Shift */ | 17 /* RightArrow */\r\n        }\r\n    }));\r\n    CoreNavigationCommands.CursorUp = registerEditorCommand(new CursorMoveBasedCommand({\r\n        args: {\r\n            direction: 2 /* Up */,\r\n            unit: 2 /* WrappedLine */,\r\n            select: false,\r\n            value: 1\r\n        },\r\n        id: 'cursorUp',\r\n        precondition: undefined,\r\n        kbOpts: {\r\n            weight: CORE_WEIGHT,\r\n            kbExpr: EditorContextKeys.textInputFocus,\r\n            primary: 16 /* UpArrow */,\r\n            mac: { primary: 16 /* UpArrow */, secondary: [256 /* WinCtrl */ | 46 /* KEY_P */] }\r\n        }\r\n    }));\r\n    CoreNavigationCommands.CursorUpSelect = registerEditorCommand(new CursorMoveBasedCommand({\r\n        args: {\r\n            direction: 2 /* Up */,\r\n            unit: 2 /* WrappedLine */,\r\n            select: true,\r\n            value: 1\r\n        },\r\n        id: 'cursorUpSelect',\r\n        precondition: undefined,\r\n        kbOpts: {\r\n            weight: CORE_WEIGHT,\r\n            kbExpr: EditorContextKeys.textInputFocus,\r\n            primary: 1024 /* Shift */ | 16 /* UpArrow */,\r\n            secondary: [2048 /* CtrlCmd */ | 1024 /* Shift */ | 16 /* UpArrow */],\r\n            mac: { primary: 1024 /* Shift */ | 16 /* UpArrow */ },\r\n            linux: { primary: 1024 /* Shift */ | 16 /* UpArrow */ }\r\n        }\r\n    }));\r\n    CoreNavigationCommands.CursorPageUp = registerEditorCommand(new CursorMoveBasedCommand({\r\n        args: {\r\n            direction: 2 /* Up */,\r\n            unit: 2 /* WrappedLine */,\r\n            select: false,\r\n            value: -1 /* PAGE_SIZE_MARKER */\r\n        },\r\n        id: 'cursorPageUp',\r\n        precondition: undefined,\r\n        kbOpts: {\r\n            weight: CORE_WEIGHT,\r\n            kbExpr: EditorContextKeys.textInputFocus,\r\n            primary: 11 /* PageUp */\r\n        }\r\n    }));\r\n    CoreNavigationCommands.CursorPageUpSelect = registerEditorCommand(new CursorMoveBasedCommand({\r\n        args: {\r\n            direction: 2 /* Up */,\r\n            unit: 2 /* WrappedLine */,\r\n            select: true,\r\n            value: -1 /* PAGE_SIZE_MARKER */\r\n        },\r\n        id: 'cursorPageUpSelect',\r\n        precondition: undefined,\r\n        kbOpts: {\r\n            weight: CORE_WEIGHT,\r\n            kbExpr: EditorContextKeys.textInputFocus,\r\n            primary: 1024 /* Shift */ | 11 /* PageUp */\r\n        }\r\n    }));\r\n    CoreNavigationCommands.CursorDown = registerEditorCommand(new CursorMoveBasedCommand({\r\n        args: {\r\n            direction: 3 /* Down */,\r\n            unit: 2 /* WrappedLine */,\r\n            select: false,\r\n            value: 1\r\n        },\r\n        id: 'cursorDown',\r\n        precondition: undefined,\r\n        kbOpts: {\r\n            weight: CORE_WEIGHT,\r\n            kbExpr: EditorContextKeys.textInputFocus,\r\n            primary: 18 /* DownArrow */,\r\n            mac: { primary: 18 /* DownArrow */, secondary: [256 /* WinCtrl */ | 44 /* KEY_N */] }\r\n        }\r\n    }));\r\n    CoreNavigationCommands.CursorDownSelect = registerEditorCommand(new CursorMoveBasedCommand({\r\n        args: {\r\n            direction: 3 /* Down */,\r\n            unit: 2 /* WrappedLine */,\r\n            select: true,\r\n            value: 1\r\n        },\r\n        id: 'cursorDownSelect',\r\n        precondition: undefined,\r\n        kbOpts: {\r\n            weight: CORE_WEIGHT,\r\n            kbExpr: EditorContextKeys.textInputFocus,\r\n            primary: 1024 /* Shift */ | 18 /* DownArrow */,\r\n            secondary: [2048 /* CtrlCmd */ | 1024 /* Shift */ | 18 /* DownArrow */],\r\n            mac: { primary: 1024 /* Shift */ | 18 /* DownArrow */ },\r\n            linux: { primary: 1024 /* Shift */ | 18 /* DownArrow */ }\r\n        }\r\n    }));\r\n    CoreNavigationCommands.CursorPageDown = registerEditorCommand(new CursorMoveBasedCommand({\r\n        args: {\r\n            direction: 3 /* Down */,\r\n            unit: 2 /* WrappedLine */,\r\n            select: false,\r\n            value: -1 /* PAGE_SIZE_MARKER */\r\n        },\r\n        id: 'cursorPageDown',\r\n        precondition: undefined,\r\n        kbOpts: {\r\n            weight: CORE_WEIGHT,\r\n            kbExpr: EditorContextKeys.textInputFocus,\r\n            primary: 12 /* PageDown */\r\n        }\r\n    }));\r\n    CoreNavigationCommands.CursorPageDownSelect = registerEditorCommand(new CursorMoveBasedCommand({\r\n        args: {\r\n            direction: 3 /* Down */,\r\n            unit: 2 /* WrappedLine */,\r\n            select: true,\r\n            value: -1 /* PAGE_SIZE_MARKER */\r\n        },\r\n        id: 'cursorPageDownSelect',\r\n        precondition: undefined,\r\n        kbOpts: {\r\n            weight: CORE_WEIGHT,\r\n            kbExpr: EditorContextKeys.textInputFocus,\r\n            primary: 1024 /* Shift */ | 12 /* PageDown */\r\n        }\r\n    }));\r\n    CoreNavigationCommands.CreateCursor = registerEditorCommand(new /** @class */ (function (_super) {\r\n        __extends(class_4, _super);\r\n        function class_4() {\r\n            return _super.call(this, {\r\n                id: 'createCursor',\r\n                precondition: undefined\r\n            }) || this;\r\n        }\r\n        class_4.prototype.runCoreEditorCommand = function (cursors, args) {\r\n            var context = cursors.context;\r\n            var newState;\r\n            if (args.wholeLine) {\r\n                newState = CursorMoveCommands.line(context, cursors.getPrimaryCursor(), false, args.position, args.viewPosition);\r\n            }\r\n            else {\r\n                newState = CursorMoveCommands.moveTo(context, cursors.getPrimaryCursor(), false, args.position, args.viewPosition);\r\n            }\r\n            var states = cursors.getAll();\r\n            // Check if we should remove a cursor (sort of like a toggle)\r\n            if (states.length > 1) {\r\n                var newModelPosition = (newState.modelState ? newState.modelState.position : null);\r\n                var newViewPosition = (newState.viewState ? newState.viewState.position : null);\r\n                for (var i = 0, len = states.length; i < len; i++) {\r\n                    var state = states[i];\r\n                    if (newModelPosition && !state.modelState.selection.containsPosition(newModelPosition)) {\r\n                        continue;\r\n                    }\r\n                    if (newViewPosition && !state.viewState.selection.containsPosition(newViewPosition)) {\r\n                        continue;\r\n                    }\r\n                    // => Remove the cursor\r\n                    states.splice(i, 1);\r\n                    cursors.context.model.pushStackElement();\r\n                    cursors.setStates(args.source, 3 /* Explicit */, states);\r\n                    return;\r\n                }\r\n            }\r\n            // => Add the new cursor\r\n            states.push(newState);\r\n            cursors.context.model.pushStackElement();\r\n            cursors.setStates(args.source, 3 /* Explicit */, states);\r\n        };\r\n        return class_4;\r\n    }(CoreEditorCommand)));\r\n    CoreNavigationCommands.LastCursorMoveToSelect = registerEditorCommand(new /** @class */ (function (_super) {\r\n        __extends(class_5, _super);\r\n        function class_5() {\r\n            return _super.call(this, {\r\n                id: '_lastCursorMoveToSelect',\r\n                precondition: undefined\r\n            }) || this;\r\n        }\r\n        class_5.prototype.runCoreEditorCommand = function (cursors, args) {\r\n            var context = cursors.context;\r\n            var lastAddedCursorIndex = cursors.getLastAddedCursorIndex();\r\n            var states = cursors.getAll();\r\n            var newStates = states.slice(0);\r\n            newStates[lastAddedCursorIndex] = CursorMoveCommands.moveTo(context, states[lastAddedCursorIndex], true, args.position, args.viewPosition);\r\n            cursors.context.model.pushStackElement();\r\n            cursors.setStates(args.source, 3 /* Explicit */, newStates);\r\n        };\r\n        return class_5;\r\n    }(CoreEditorCommand)));\r\n    var HomeCommand = /** @class */ (function (_super) {\r\n        __extends(HomeCommand, _super);\r\n        function HomeCommand(opts) {\r\n            var _this = _super.call(this, opts) || this;\r\n            _this._inSelectionMode = opts.inSelectionMode;\r\n            return _this;\r\n        }\r\n        HomeCommand.prototype.runCoreEditorCommand = function (cursors, args) {\r\n            cursors.context.model.pushStackElement();\r\n            cursors.setStates(args.source, 3 /* Explicit */, CursorMoveCommands.moveToBeginningOfLine(cursors.context, cursors.getAll(), this._inSelectionMode));\r\n            cursors.reveal(args.source, true, 0 /* Primary */, 0 /* Smooth */);\r\n        };\r\n        return HomeCommand;\r\n    }(CoreEditorCommand));\r\n    CoreNavigationCommands.CursorHome = registerEditorCommand(new HomeCommand({\r\n        inSelectionMode: false,\r\n        id: 'cursorHome',\r\n        precondition: undefined,\r\n        kbOpts: {\r\n            weight: CORE_WEIGHT,\r\n            kbExpr: EditorContextKeys.textInputFocus,\r\n            primary: 14 /* Home */,\r\n            mac: { primary: 14 /* Home */, secondary: [2048 /* CtrlCmd */ | 15 /* LeftArrow */] }\r\n        }\r\n    }));\r\n    CoreNavigationCommands.CursorHomeSelect = registerEditorCommand(new HomeCommand({\r\n        inSelectionMode: true,\r\n        id: 'cursorHomeSelect',\r\n        precondition: undefined,\r\n        kbOpts: {\r\n            weight: CORE_WEIGHT,\r\n            kbExpr: EditorContextKeys.textInputFocus,\r\n            primary: 1024 /* Shift */ | 14 /* Home */,\r\n            mac: { primary: 1024 /* Shift */ | 14 /* Home */, secondary: [2048 /* CtrlCmd */ | 1024 /* Shift */ | 15 /* LeftArrow */] }\r\n        }\r\n    }));\r\n    CoreNavigationCommands.CursorLineStart = registerEditorCommand(new /** @class */ (function (_super) {\r\n        __extends(class_6, _super);\r\n        function class_6() {\r\n            return _super.call(this, {\r\n                id: 'cursorLineStart',\r\n                precondition: undefined,\r\n                kbOpts: {\r\n                    weight: CORE_WEIGHT,\r\n                    kbExpr: EditorContextKeys.textInputFocus,\r\n                    primary: 0,\r\n                    mac: { primary: 256 /* WinCtrl */ | 31 /* KEY_A */ }\r\n                }\r\n            }) || this;\r\n        }\r\n        class_6.prototype.runCoreEditorCommand = function (cursors, args) {\r\n            cursors.context.model.pushStackElement();\r\n            cursors.setStates(args.source, 3 /* Explicit */, this._exec(cursors.context, cursors.getAll()));\r\n            cursors.reveal(args.source, true, 0 /* Primary */, 0 /* Smooth */);\r\n        };\r\n        class_6.prototype._exec = function (context, cursors) {\r\n            var result = [];\r\n            for (var i = 0, len = cursors.length; i < len; i++) {\r\n                var cursor = cursors[i];\r\n                var lineNumber = cursor.modelState.position.lineNumber;\r\n                result[i] = CursorState.fromModelState(cursor.modelState.move(false, lineNumber, 1, 0));\r\n            }\r\n            return result;\r\n        };\r\n        return class_6;\r\n    }(CoreEditorCommand)));\r\n    var EndCommand = /** @class */ (function (_super) {\r\n        __extends(EndCommand, _super);\r\n        function EndCommand(opts) {\r\n            var _this = _super.call(this, opts) || this;\r\n            _this._inSelectionMode = opts.inSelectionMode;\r\n            return _this;\r\n        }\r\n        EndCommand.prototype.runCoreEditorCommand = function (cursors, args) {\r\n            cursors.context.model.pushStackElement();\r\n            cursors.setStates(args.source, 3 /* Explicit */, CursorMoveCommands.moveToEndOfLine(cursors.context, cursors.getAll(), this._inSelectionMode));\r\n            cursors.reveal(args.source, true, 0 /* Primary */, 0 /* Smooth */);\r\n        };\r\n        return EndCommand;\r\n    }(CoreEditorCommand));\r\n    CoreNavigationCommands.CursorEnd = registerEditorCommand(new EndCommand({\r\n        inSelectionMode: false,\r\n        id: 'cursorEnd',\r\n        precondition: undefined,\r\n        kbOpts: {\r\n            weight: CORE_WEIGHT,\r\n            kbExpr: EditorContextKeys.textInputFocus,\r\n            primary: 13 /* End */,\r\n            mac: { primary: 13 /* End */, secondary: [2048 /* CtrlCmd */ | 17 /* RightArrow */] }\r\n        }\r\n    }));\r\n    CoreNavigationCommands.CursorEndSelect = registerEditorCommand(new EndCommand({\r\n        inSelectionMode: true,\r\n        id: 'cursorEndSelect',\r\n        precondition: undefined,\r\n        kbOpts: {\r\n            weight: CORE_WEIGHT,\r\n            kbExpr: EditorContextKeys.textInputFocus,\r\n            primary: 1024 /* Shift */ | 13 /* End */,\r\n            mac: { primary: 1024 /* Shift */ | 13 /* End */, secondary: [2048 /* CtrlCmd */ | 1024 /* Shift */ | 17 /* RightArrow */] }\r\n        }\r\n    }));\r\n    CoreNavigationCommands.CursorLineEnd = registerEditorCommand(new /** @class */ (function (_super) {\r\n        __extends(class_7, _super);\r\n        function class_7() {\r\n            return _super.call(this, {\r\n                id: 'cursorLineEnd',\r\n                precondition: undefined,\r\n                kbOpts: {\r\n                    weight: CORE_WEIGHT,\r\n                    kbExpr: EditorContextKeys.textInputFocus,\r\n                    primary: 0,\r\n                    mac: { primary: 256 /* WinCtrl */ | 35 /* KEY_E */ }\r\n                }\r\n            }) || this;\r\n        }\r\n        class_7.prototype.runCoreEditorCommand = function (cursors, args) {\r\n            cursors.context.model.pushStackElement();\r\n            cursors.setStates(args.source, 3 /* Explicit */, this._exec(cursors.context, cursors.getAll()));\r\n            cursors.reveal(args.source, true, 0 /* Primary */, 0 /* Smooth */);\r\n        };\r\n        class_7.prototype._exec = function (context, cursors) {\r\n            var result = [];\r\n            for (var i = 0, len = cursors.length; i < len; i++) {\r\n                var cursor = cursors[i];\r\n                var lineNumber = cursor.modelState.position.lineNumber;\r\n                var maxColumn = context.model.getLineMaxColumn(lineNumber);\r\n                result[i] = CursorState.fromModelState(cursor.modelState.move(false, lineNumber, maxColumn, 0));\r\n            }\r\n            return result;\r\n        };\r\n        return class_7;\r\n    }(CoreEditorCommand)));\r\n    var TopCommand = /** @class */ (function (_super) {\r\n        __extends(TopCommand, _super);\r\n        function TopCommand(opts) {\r\n            var _this = _super.call(this, opts) || this;\r\n            _this._inSelectionMode = opts.inSelectionMode;\r\n            return _this;\r\n        }\r\n        TopCommand.prototype.runCoreEditorCommand = function (cursors, args) {\r\n            cursors.context.model.pushStackElement();\r\n            cursors.setStates(args.source, 3 /* Explicit */, CursorMoveCommands.moveToBeginningOfBuffer(cursors.context, cursors.getAll(), this._inSelectionMode));\r\n            cursors.reveal(args.source, true, 0 /* Primary */, 0 /* Smooth */);\r\n        };\r\n        return TopCommand;\r\n    }(CoreEditorCommand));\r\n    CoreNavigationCommands.CursorTop = registerEditorCommand(new TopCommand({\r\n        inSelectionMode: false,\r\n        id: 'cursorTop',\r\n        precondition: undefined,\r\n        kbOpts: {\r\n            weight: CORE_WEIGHT,\r\n            kbExpr: EditorContextKeys.textInputFocus,\r\n            primary: 2048 /* CtrlCmd */ | 14 /* Home */,\r\n            mac: { primary: 2048 /* CtrlCmd */ | 16 /* UpArrow */ }\r\n        }\r\n    }));\r\n    CoreNavigationCommands.CursorTopSelect = registerEditorCommand(new TopCommand({\r\n        inSelectionMode: true,\r\n        id: 'cursorTopSelect',\r\n        precondition: undefined,\r\n        kbOpts: {\r\n            weight: CORE_WEIGHT,\r\n            kbExpr: EditorContextKeys.textInputFocus,\r\n            primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 14 /* Home */,\r\n            mac: { primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 16 /* UpArrow */ }\r\n        }\r\n    }));\r\n    var BottomCommand = /** @class */ (function (_super) {\r\n        __extends(BottomCommand, _super);\r\n        function BottomCommand(opts) {\r\n            var _this = _super.call(this, opts) || this;\r\n            _this._inSelectionMode = opts.inSelectionMode;\r\n            return _this;\r\n        }\r\n        BottomCommand.prototype.runCoreEditorCommand = function (cursors, args) {\r\n            cursors.context.model.pushStackElement();\r\n            cursors.setStates(args.source, 3 /* Explicit */, CursorMoveCommands.moveToEndOfBuffer(cursors.context, cursors.getAll(), this._inSelectionMode));\r\n            cursors.reveal(args.source, true, 0 /* Primary */, 0 /* Smooth */);\r\n        };\r\n        return BottomCommand;\r\n    }(CoreEditorCommand));\r\n    CoreNavigationCommands.CursorBottom = registerEditorCommand(new BottomCommand({\r\n        inSelectionMode: false,\r\n        id: 'cursorBottom',\r\n        precondition: undefined,\r\n        kbOpts: {\r\n            weight: CORE_WEIGHT,\r\n            kbExpr: EditorContextKeys.textInputFocus,\r\n            primary: 2048 /* CtrlCmd */ | 13 /* End */,\r\n            mac: { primary: 2048 /* CtrlCmd */ | 18 /* DownArrow */ }\r\n        }\r\n    }));\r\n    CoreNavigationCommands.CursorBottomSelect = registerEditorCommand(new BottomCommand({\r\n        inSelectionMode: true,\r\n        id: 'cursorBottomSelect',\r\n        precondition: undefined,\r\n        kbOpts: {\r\n            weight: CORE_WEIGHT,\r\n            kbExpr: EditorContextKeys.textInputFocus,\r\n            primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 13 /* End */,\r\n            mac: { primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 18 /* DownArrow */ }\r\n        }\r\n    }));\r\n    var EditorScrollImpl = /** @class */ (function (_super) {\r\n        __extends(EditorScrollImpl, _super);\r\n        function EditorScrollImpl() {\r\n            return _super.call(this, {\r\n                id: 'editorScroll',\r\n                precondition: undefined,\r\n                description: EditorScroll_.description\r\n            }) || this;\r\n        }\r\n        EditorScrollImpl.prototype.runCoreEditorCommand = function (cursors, args) {\r\n            var parsed = EditorScroll_.parse(args);\r\n            if (!parsed) {\r\n                // illegal arguments\r\n                return;\r\n            }\r\n            this._runEditorScroll(cursors, args.source, parsed);\r\n        };\r\n        EditorScrollImpl.prototype._runEditorScroll = function (cursors, source, args) {\r\n            var desiredScrollTop = this._computeDesiredScrollTop(cursors.context, args);\r\n            if (args.revealCursor) {\r\n                // must ensure cursor is in new visible range\r\n                var desiredVisibleViewRange = cursors.context.getCompletelyVisibleViewRangeAtScrollTop(desiredScrollTop);\r\n                cursors.setStates(source, 3 /* Explicit */, [\r\n                    CursorMoveCommands.findPositionInViewportIfOutside(cursors.context, cursors.getPrimaryCursor(), desiredVisibleViewRange, args.select)\r\n                ]);\r\n            }\r\n            cursors.scrollTo(desiredScrollTop);\r\n        };\r\n        EditorScrollImpl.prototype._computeDesiredScrollTop = function (context, args) {\r\n            if (args.unit === 1 /* Line */) {\r\n                // scrolling by model lines\r\n                var visibleModelRange = context.getCompletelyVisibleModelRange();\r\n                var desiredTopModelLineNumber = void 0;\r\n                if (args.direction === 1 /* Up */) {\r\n                    // must go x model lines up\r\n                    desiredTopModelLineNumber = Math.max(1, visibleModelRange.startLineNumber - args.value);\r\n                }\r\n                else {\r\n                    // must go x model lines down\r\n                    desiredTopModelLineNumber = Math.min(context.model.getLineCount(), visibleModelRange.startLineNumber + args.value);\r\n                }\r\n                var desiredTopViewPosition = context.convertModelPositionToViewPosition(new Position(desiredTopModelLineNumber, 1));\r\n                return context.getVerticalOffsetForViewLine(desiredTopViewPosition.lineNumber);\r\n            }\r\n            var noOfLines;\r\n            if (args.unit === 3 /* Page */) {\r\n                noOfLines = context.config.pageSize * args.value;\r\n            }\r\n            else if (args.unit === 4 /* HalfPage */) {\r\n                noOfLines = Math.round(context.config.pageSize / 2) * args.value;\r\n            }\r\n            else {\r\n                noOfLines = args.value;\r\n            }\r\n            var deltaLines = (args.direction === 1 /* Up */ ? -1 : 1) * noOfLines;\r\n            return context.getCurrentScrollTop() + deltaLines * context.config.lineHeight;\r\n        };\r\n        return EditorScrollImpl;\r\n    }(CoreEditorCommand));\r\n    CoreNavigationCommands.EditorScrollImpl = EditorScrollImpl;\r\n    CoreNavigationCommands.EditorScroll = registerEditorCommand(new EditorScrollImpl());\r\n    CoreNavigationCommands.ScrollLineUp = registerEditorCommand(new /** @class */ (function (_super) {\r\n        __extends(class_8, _super);\r\n        function class_8() {\r\n            return _super.call(this, {\r\n                id: 'scrollLineUp',\r\n                precondition: undefined,\r\n                kbOpts: {\r\n                    weight: CORE_WEIGHT,\r\n                    kbExpr: EditorContextKeys.textInputFocus,\r\n                    primary: 2048 /* CtrlCmd */ | 16 /* UpArrow */,\r\n                    mac: { primary: 256 /* WinCtrl */ | 11 /* PageUp */ }\r\n                }\r\n            }) || this;\r\n        }\r\n        class_8.prototype.runCoreEditorCommand = function (cursors, args) {\r\n            CoreNavigationCommands.EditorScroll._runEditorScroll(cursors, args.source, {\r\n                direction: 1 /* Up */,\r\n                unit: 2 /* WrappedLine */,\r\n                value: 1,\r\n                revealCursor: false,\r\n                select: false\r\n            });\r\n        };\r\n        return class_8;\r\n    }(CoreEditorCommand)));\r\n    CoreNavigationCommands.ScrollPageUp = registerEditorCommand(new /** @class */ (function (_super) {\r\n        __extends(class_9, _super);\r\n        function class_9() {\r\n            return _super.call(this, {\r\n                id: 'scrollPageUp',\r\n                precondition: undefined,\r\n                kbOpts: {\r\n                    weight: CORE_WEIGHT,\r\n                    kbExpr: EditorContextKeys.textInputFocus,\r\n                    primary: 2048 /* CtrlCmd */ | 11 /* PageUp */,\r\n                    win: { primary: 512 /* Alt */ | 11 /* PageUp */ },\r\n                    linux: { primary: 512 /* Alt */ | 11 /* PageUp */ }\r\n                }\r\n            }) || this;\r\n        }\r\n        class_9.prototype.runCoreEditorCommand = function (cursors, args) {\r\n            CoreNavigationCommands.EditorScroll._runEditorScroll(cursors, args.source, {\r\n                direction: 1 /* Up */,\r\n                unit: 3 /* Page */,\r\n                value: 1,\r\n                revealCursor: false,\r\n                select: false\r\n            });\r\n        };\r\n        return class_9;\r\n    }(CoreEditorCommand)));\r\n    CoreNavigationCommands.ScrollLineDown = registerEditorCommand(new /** @class */ (function (_super) {\r\n        __extends(class_10, _super);\r\n        function class_10() {\r\n            return _super.call(this, {\r\n                id: 'scrollLineDown',\r\n                precondition: undefined,\r\n                kbOpts: {\r\n                    weight: CORE_WEIGHT,\r\n                    kbExpr: EditorContextKeys.textInputFocus,\r\n                    primary: 2048 /* CtrlCmd */ | 18 /* DownArrow */,\r\n                    mac: { primary: 256 /* WinCtrl */ | 12 /* PageDown */ }\r\n                }\r\n            }) || this;\r\n        }\r\n        class_10.prototype.runCoreEditorCommand = function (cursors, args) {\r\n            CoreNavigationCommands.EditorScroll._runEditorScroll(cursors, args.source, {\r\n                direction: 2 /* Down */,\r\n                unit: 2 /* WrappedLine */,\r\n                value: 1,\r\n                revealCursor: false,\r\n                select: false\r\n            });\r\n        };\r\n        return class_10;\r\n    }(CoreEditorCommand)));\r\n    CoreNavigationCommands.ScrollPageDown = registerEditorCommand(new /** @class */ (function (_super) {\r\n        __extends(class_11, _super);\r\n        function class_11() {\r\n            return _super.call(this, {\r\n                id: 'scrollPageDown',\r\n                precondition: undefined,\r\n                kbOpts: {\r\n                    weight: CORE_WEIGHT,\r\n                    kbExpr: EditorContextKeys.textInputFocus,\r\n                    primary: 2048 /* CtrlCmd */ | 12 /* PageDown */,\r\n                    win: { primary: 512 /* Alt */ | 12 /* PageDown */ },\r\n                    linux: { primary: 512 /* Alt */ | 12 /* PageDown */ }\r\n                }\r\n            }) || this;\r\n        }\r\n        class_11.prototype.runCoreEditorCommand = function (cursors, args) {\r\n            CoreNavigationCommands.EditorScroll._runEditorScroll(cursors, args.source, {\r\n                direction: 2 /* Down */,\r\n                unit: 3 /* Page */,\r\n                value: 1,\r\n                revealCursor: false,\r\n                select: false\r\n            });\r\n        };\r\n        return class_11;\r\n    }(CoreEditorCommand)));\r\n    var WordCommand = /** @class */ (function (_super) {\r\n        __extends(WordCommand, _super);\r\n        function WordCommand(opts) {\r\n            var _this = _super.call(this, opts) || this;\r\n            _this._inSelectionMode = opts.inSelectionMode;\r\n            return _this;\r\n        }\r\n        WordCommand.prototype.runCoreEditorCommand = function (cursors, args) {\r\n            cursors.context.model.pushStackElement();\r\n            cursors.setStates(args.source, 3 /* Explicit */, [\r\n                CursorMoveCommands.word(cursors.context, cursors.getPrimaryCursor(), this._inSelectionMode, args.position)\r\n            ]);\r\n            cursors.reveal(args.source, true, 0 /* Primary */, 0 /* Smooth */);\r\n        };\r\n        return WordCommand;\r\n    }(CoreEditorCommand));\r\n    CoreNavigationCommands.WordSelect = registerEditorCommand(new WordCommand({\r\n        inSelectionMode: false,\r\n        id: '_wordSelect',\r\n        precondition: undefined\r\n    }));\r\n    CoreNavigationCommands.WordSelectDrag = registerEditorCommand(new WordCommand({\r\n        inSelectionMode: true,\r\n        id: '_wordSelectDrag',\r\n        precondition: undefined\r\n    }));\r\n    CoreNavigationCommands.LastCursorWordSelect = registerEditorCommand(new /** @class */ (function (_super) {\r\n        __extends(class_12, _super);\r\n        function class_12() {\r\n            return _super.call(this, {\r\n                id: 'lastCursorWordSelect',\r\n                precondition: undefined\r\n            }) || this;\r\n        }\r\n        class_12.prototype.runCoreEditorCommand = function (cursors, args) {\r\n            var context = cursors.context;\r\n            var lastAddedCursorIndex = cursors.getLastAddedCursorIndex();\r\n            var states = cursors.getAll();\r\n            var newStates = states.slice(0);\r\n            var lastAddedState = states[lastAddedCursorIndex];\r\n            newStates[lastAddedCursorIndex] = CursorMoveCommands.word(context, lastAddedState, lastAddedState.modelState.hasSelection(), args.position);\r\n            context.model.pushStackElement();\r\n            cursors.setStates(args.source, 3 /* Explicit */, newStates);\r\n        };\r\n        return class_12;\r\n    }(CoreEditorCommand)));\r\n    var LineCommand = /** @class */ (function (_super) {\r\n        __extends(LineCommand, _super);\r\n        function LineCommand(opts) {\r\n            var _this = _super.call(this, opts) || this;\r\n            _this._inSelectionMode = opts.inSelectionMode;\r\n            return _this;\r\n        }\r\n        LineCommand.prototype.runCoreEditorCommand = function (cursors, args) {\r\n            cursors.context.model.pushStackElement();\r\n            cursors.setStates(args.source, 3 /* Explicit */, [\r\n                CursorMoveCommands.line(cursors.context, cursors.getPrimaryCursor(), this._inSelectionMode, args.position, args.viewPosition)\r\n            ]);\r\n            cursors.reveal(args.source, false, 0 /* Primary */, 0 /* Smooth */);\r\n        };\r\n        return LineCommand;\r\n    }(CoreEditorCommand));\r\n    CoreNavigationCommands.LineSelect = registerEditorCommand(new LineCommand({\r\n        inSelectionMode: false,\r\n        id: '_lineSelect',\r\n        precondition: undefined\r\n    }));\r\n    CoreNavigationCommands.LineSelectDrag = registerEditorCommand(new LineCommand({\r\n        inSelectionMode: true,\r\n        id: '_lineSelectDrag',\r\n        precondition: undefined\r\n    }));\r\n    var LastCursorLineCommand = /** @class */ (function (_super) {\r\n        __extends(LastCursorLineCommand, _super);\r\n        function LastCursorLineCommand(opts) {\r\n            var _this = _super.call(this, opts) || this;\r\n            _this._inSelectionMode = opts.inSelectionMode;\r\n            return _this;\r\n        }\r\n        LastCursorLineCommand.prototype.runCoreEditorCommand = function (cursors, args) {\r\n            var lastAddedCursorIndex = cursors.getLastAddedCursorIndex();\r\n            var states = cursors.getAll();\r\n            var newStates = states.slice(0);\r\n            newStates[lastAddedCursorIndex] = CursorMoveCommands.line(cursors.context, states[lastAddedCursorIndex], this._inSelectionMode, args.position, args.viewPosition);\r\n            cursors.context.model.pushStackElement();\r\n            cursors.setStates(args.source, 3 /* Explicit */, newStates);\r\n        };\r\n        return LastCursorLineCommand;\r\n    }(CoreEditorCommand));\r\n    CoreNavigationCommands.LastCursorLineSelect = registerEditorCommand(new LastCursorLineCommand({\r\n        inSelectionMode: false,\r\n        id: 'lastCursorLineSelect',\r\n        precondition: undefined\r\n    }));\r\n    CoreNavigationCommands.LastCursorLineSelectDrag = registerEditorCommand(new LastCursorLineCommand({\r\n        inSelectionMode: true,\r\n        id: 'lastCursorLineSelectDrag',\r\n        precondition: undefined\r\n    }));\r\n    CoreNavigationCommands.ExpandLineSelection = registerEditorCommand(new /** @class */ (function (_super) {\r\n        __extends(class_13, _super);\r\n        function class_13() {\r\n            return _super.call(this, {\r\n                id: 'expandLineSelection',\r\n                precondition: undefined,\r\n                kbOpts: {\r\n                    weight: CORE_WEIGHT,\r\n                    kbExpr: EditorContextKeys.textInputFocus,\r\n                    primary: 2048 /* CtrlCmd */ | 42 /* KEY_L */\r\n                }\r\n            }) || this;\r\n        }\r\n        class_13.prototype.runCoreEditorCommand = function (cursors, args) {\r\n            cursors.context.model.pushStackElement();\r\n            cursors.setStates(args.source, 3 /* Explicit */, CursorMoveCommands.expandLineSelection(cursors.context, cursors.getAll()));\r\n            cursors.reveal(args.source, true, 0 /* Primary */, 0 /* Smooth */);\r\n        };\r\n        return class_13;\r\n    }(CoreEditorCommand)));\r\n    CoreNavigationCommands.CancelSelection = registerEditorCommand(new /** @class */ (function (_super) {\r\n        __extends(class_14, _super);\r\n        function class_14() {\r\n            return _super.call(this, {\r\n                id: 'cancelSelection',\r\n                precondition: EditorContextKeys.hasNonEmptySelection,\r\n                kbOpts: {\r\n                    weight: CORE_WEIGHT,\r\n                    kbExpr: EditorContextKeys.textInputFocus,\r\n                    primary: 9 /* Escape */,\r\n                    secondary: [1024 /* Shift */ | 9 /* Escape */]\r\n                }\r\n            }) || this;\r\n        }\r\n        class_14.prototype.runCoreEditorCommand = function (cursors, args) {\r\n            cursors.context.model.pushStackElement();\r\n            cursors.setStates(args.source, 3 /* Explicit */, [\r\n                CursorMoveCommands.cancelSelection(cursors.context, cursors.getPrimaryCursor())\r\n            ]);\r\n            cursors.reveal(args.source, true, 0 /* Primary */, 0 /* Smooth */);\r\n        };\r\n        return class_14;\r\n    }(CoreEditorCommand)));\r\n    CoreNavigationCommands.RemoveSecondaryCursors = registerEditorCommand(new /** @class */ (function (_super) {\r\n        __extends(class_15, _super);\r\n        function class_15() {\r\n            return _super.call(this, {\r\n                id: 'removeSecondaryCursors',\r\n                precondition: EditorContextKeys.hasMultipleSelections,\r\n                kbOpts: {\r\n                    weight: CORE_WEIGHT + 1,\r\n                    kbExpr: EditorContextKeys.textInputFocus,\r\n                    primary: 9 /* Escape */,\r\n                    secondary: [1024 /* Shift */ | 9 /* Escape */]\r\n                }\r\n            }) || this;\r\n        }\r\n        class_15.prototype.runCoreEditorCommand = function (cursors, args) {\r\n            cursors.context.model.pushStackElement();\r\n            cursors.setStates(args.source, 3 /* Explicit */, [\r\n                cursors.getPrimaryCursor()\r\n            ]);\r\n            cursors.reveal(args.source, true, 0 /* Primary */, 0 /* Smooth */);\r\n        };\r\n        return class_15;\r\n    }(CoreEditorCommand)));\r\n    CoreNavigationCommands.RevealLine = registerEditorCommand(new /** @class */ (function (_super) {\r\n        __extends(class_16, _super);\r\n        function class_16() {\r\n            return _super.call(this, {\r\n                id: 'revealLine',\r\n                precondition: undefined,\r\n                description: RevealLine_.description\r\n            }) || this;\r\n        }\r\n        class_16.prototype.runCoreEditorCommand = function (cursors, args) {\r\n            var revealLineArg = args;\r\n            var lineNumber = (revealLineArg.lineNumber || 0) + 1;\r\n            if (lineNumber < 1) {\r\n                lineNumber = 1;\r\n            }\r\n            var lineCount = cursors.context.model.getLineCount();\r\n            if (lineNumber > lineCount) {\r\n                lineNumber = lineCount;\r\n            }\r\n            var range = new Range(lineNumber, 1, lineNumber, cursors.context.model.getLineMaxColumn(lineNumber));\r\n            var revealAt = 0 /* Simple */;\r\n            if (revealLineArg.at) {\r\n                switch (revealLineArg.at) {\r\n                    case RevealLine_.RawAtArgument.Top:\r\n                        revealAt = 3 /* Top */;\r\n                        break;\r\n                    case RevealLine_.RawAtArgument.Center:\r\n                        revealAt = 1 /* Center */;\r\n                        break;\r\n                    case RevealLine_.RawAtArgument.Bottom:\r\n                        revealAt = 4 /* Bottom */;\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n            var viewRange = cursors.context.convertModelRangeToViewRange(range);\r\n            cursors.revealRange(args.source, false, viewRange, revealAt, 0 /* Smooth */);\r\n        };\r\n        return class_16;\r\n    }(CoreEditorCommand)));\r\n    CoreNavigationCommands.SelectAll = registerEditorCommand(new /** @class */ (function (_super) {\r\n        __extends(class_17, _super);\r\n        function class_17() {\r\n            return _super.call(this, {\r\n                id: 'selectAll',\r\n                precondition: undefined\r\n            }) || this;\r\n        }\r\n        class_17.prototype.runCoreEditorCommand = function (cursors, args) {\r\n            cursors.context.model.pushStackElement();\r\n            cursors.setStates(args.source, 3 /* Explicit */, [\r\n                CursorMoveCommands.selectAll(cursors.context, cursors.getPrimaryCursor())\r\n            ]);\r\n        };\r\n        return class_17;\r\n    }(CoreEditorCommand)));\r\n    CoreNavigationCommands.SetSelection = registerEditorCommand(new /** @class */ (function (_super) {\r\n        __extends(class_18, _super);\r\n        function class_18() {\r\n            return _super.call(this, {\r\n                id: 'setSelection',\r\n                precondition: undefined\r\n            }) || this;\r\n        }\r\n        class_18.prototype.runCoreEditorCommand = function (cursors, args) {\r\n            cursors.context.model.pushStackElement();\r\n            cursors.setStates(args.source, 3 /* Explicit */, [\r\n                CursorState.fromModelSelection(args.selection)\r\n            ]);\r\n        };\r\n        return class_18;\r\n    }(CoreEditorCommand)));\r\n})(CoreNavigationCommands || (CoreNavigationCommands = {}));\r\nexport var CoreEditingCommands;\r\n(function (CoreEditingCommands) {\r\n    var CoreEditingCommand = /** @class */ (function (_super) {\r\n        __extends(CoreEditingCommand, _super);\r\n        function CoreEditingCommand() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        CoreEditingCommand.prototype.runEditorCommand = function (accessor, editor, args) {\r\n            var cursors = editor._getCursors();\r\n            if (!cursors) {\r\n                // the editor has no view => has no cursors\r\n                return;\r\n            }\r\n            this.runCoreEditingCommand(editor, cursors, args || {});\r\n        };\r\n        return CoreEditingCommand;\r\n    }(EditorCommand));\r\n    CoreEditingCommands.CoreEditingCommand = CoreEditingCommand;\r\n    CoreEditingCommands.LineBreakInsert = registerEditorCommand(new /** @class */ (function (_super) {\r\n        __extends(class_19, _super);\r\n        function class_19() {\r\n            return _super.call(this, {\r\n                id: 'lineBreakInsert',\r\n                precondition: EditorContextKeys.writable,\r\n                kbOpts: {\r\n                    weight: CORE_WEIGHT,\r\n                    kbExpr: EditorContextKeys.textInputFocus,\r\n                    primary: 0,\r\n                    mac: { primary: 256 /* WinCtrl */ | 45 /* KEY_O */ }\r\n                }\r\n            }) || this;\r\n        }\r\n        class_19.prototype.runCoreEditingCommand = function (editor, cursors, args) {\r\n            editor.pushUndoStop();\r\n            editor.executeCommands(this.id, TypeOperations.lineBreakInsert(cursors.context.config, cursors.context.model, cursors.getAll().map(function (s) { return s.modelState.selection; })));\r\n        };\r\n        return class_19;\r\n    }(CoreEditingCommand)));\r\n    CoreEditingCommands.Outdent = registerEditorCommand(new /** @class */ (function (_super) {\r\n        __extends(class_20, _super);\r\n        function class_20() {\r\n            return _super.call(this, {\r\n                id: 'outdent',\r\n                precondition: EditorContextKeys.writable,\r\n                kbOpts: {\r\n                    weight: CORE_WEIGHT,\r\n                    kbExpr: ContextKeyExpr.and(EditorContextKeys.editorTextFocus, EditorContextKeys.tabDoesNotMoveFocus),\r\n                    primary: 1024 /* Shift */ | 2 /* Tab */\r\n                }\r\n            }) || this;\r\n        }\r\n        class_20.prototype.runCoreEditingCommand = function (editor, cursors, args) {\r\n            editor.pushUndoStop();\r\n            editor.executeCommands(this.id, TypeOperations.outdent(cursors.context.config, cursors.context.model, cursors.getAll().map(function (s) { return s.modelState.selection; })));\r\n            editor.pushUndoStop();\r\n        };\r\n        return class_20;\r\n    }(CoreEditingCommand)));\r\n    CoreEditingCommands.Tab = registerEditorCommand(new /** @class */ (function (_super) {\r\n        __extends(class_21, _super);\r\n        function class_21() {\r\n            return _super.call(this, {\r\n                id: 'tab',\r\n                precondition: EditorContextKeys.writable,\r\n                kbOpts: {\r\n                    weight: CORE_WEIGHT,\r\n                    kbExpr: ContextKeyExpr.and(EditorContextKeys.editorTextFocus, EditorContextKeys.tabDoesNotMoveFocus),\r\n                    primary: 2 /* Tab */\r\n                }\r\n            }) || this;\r\n        }\r\n        class_21.prototype.runCoreEditingCommand = function (editor, cursors, args) {\r\n            editor.pushUndoStop();\r\n            editor.executeCommands(this.id, TypeOperations.tab(cursors.context.config, cursors.context.model, cursors.getAll().map(function (s) { return s.modelState.selection; })));\r\n            editor.pushUndoStop();\r\n        };\r\n        return class_21;\r\n    }(CoreEditingCommand)));\r\n    CoreEditingCommands.DeleteLeft = registerEditorCommand(new /** @class */ (function (_super) {\r\n        __extends(class_22, _super);\r\n        function class_22() {\r\n            return _super.call(this, {\r\n                id: 'deleteLeft',\r\n                precondition: EditorContextKeys.writable,\r\n                kbOpts: {\r\n                    weight: CORE_WEIGHT,\r\n                    kbExpr: EditorContextKeys.textInputFocus,\r\n                    primary: 1 /* Backspace */,\r\n                    secondary: [1024 /* Shift */ | 1 /* Backspace */],\r\n                    mac: { primary: 1 /* Backspace */, secondary: [1024 /* Shift */ | 1 /* Backspace */, 256 /* WinCtrl */ | 38 /* KEY_H */, 256 /* WinCtrl */ | 1 /* Backspace */] }\r\n                }\r\n            }) || this;\r\n        }\r\n        class_22.prototype.runCoreEditingCommand = function (editor, cursors, args) {\r\n            var _a = DeleteOperations.deleteLeft(cursors.getPrevEditOperationType(), cursors.context.config, cursors.context.model, cursors.getAll().map(function (s) { return s.modelState.selection; })), shouldPushStackElementBefore = _a[0], commands = _a[1];\r\n            if (shouldPushStackElementBefore) {\r\n                editor.pushUndoStop();\r\n            }\r\n            editor.executeCommands(this.id, commands);\r\n            cursors.setPrevEditOperationType(2 /* DeletingLeft */);\r\n        };\r\n        return class_22;\r\n    }(CoreEditingCommand)));\r\n    CoreEditingCommands.DeleteRight = registerEditorCommand(new /** @class */ (function (_super) {\r\n        __extends(class_23, _super);\r\n        function class_23() {\r\n            return _super.call(this, {\r\n                id: 'deleteRight',\r\n                precondition: EditorContextKeys.writable,\r\n                kbOpts: {\r\n                    weight: CORE_WEIGHT,\r\n                    kbExpr: EditorContextKeys.textInputFocus,\r\n                    primary: 20 /* Delete */,\r\n                    mac: { primary: 20 /* Delete */, secondary: [256 /* WinCtrl */ | 34 /* KEY_D */, 256 /* WinCtrl */ | 20 /* Delete */] }\r\n                }\r\n            }) || this;\r\n        }\r\n        class_23.prototype.runCoreEditingCommand = function (editor, cursors, args) {\r\n            var _a = DeleteOperations.deleteRight(cursors.getPrevEditOperationType(), cursors.context.config, cursors.context.model, cursors.getAll().map(function (s) { return s.modelState.selection; })), shouldPushStackElementBefore = _a[0], commands = _a[1];\r\n            if (shouldPushStackElementBefore) {\r\n                editor.pushUndoStop();\r\n            }\r\n            editor.executeCommands(this.id, commands);\r\n            cursors.setPrevEditOperationType(3 /* DeletingRight */);\r\n        };\r\n        return class_23;\r\n    }(CoreEditingCommand)));\r\n})(CoreEditingCommands || (CoreEditingCommands = {}));\r\nfunction registerCommand(command) {\r\n    command.register();\r\n}\r\n/**\r\n * A command that will:\r\n *  1. invoke a command on the focused editor.\r\n *  2. otherwise, invoke a browser built-in command on the `activeElement`.\r\n *  3. otherwise, invoke a command on the workbench active editor.\r\n */\r\nvar EditorOrNativeTextInputCommand = /** @class */ (function (_super) {\r\n    __extends(EditorOrNativeTextInputCommand, _super);\r\n    function EditorOrNativeTextInputCommand(opts) {\r\n        var _this = _super.call(this, opts) || this;\r\n        _this._editorHandler = opts.editorHandler;\r\n        _this._inputHandler = opts.inputHandler;\r\n        return _this;\r\n    }\r\n    EditorOrNativeTextInputCommand.prototype.runCommand = function (accessor, args) {\r\n        var focusedEditor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\r\n        // Only if editor text focus (i.e. not if editor has widget focus).\r\n        if (focusedEditor && focusedEditor.hasTextFocus()) {\r\n            return this._runEditorHandler(accessor, focusedEditor, args);\r\n        }\r\n        // Ignore this action when user is focused on an element that allows for entering text\r\n        var activeElement = document.activeElement;\r\n        if (activeElement && ['input', 'textarea'].indexOf(activeElement.tagName.toLowerCase()) >= 0) {\r\n            document.execCommand(this._inputHandler);\r\n            return;\r\n        }\r\n        // Redirecting to active editor\r\n        var activeEditor = accessor.get(ICodeEditorService).getActiveCodeEditor();\r\n        if (activeEditor) {\r\n            activeEditor.focus();\r\n            return this._runEditorHandler(accessor, activeEditor, args);\r\n        }\r\n    };\r\n    EditorOrNativeTextInputCommand.prototype._runEditorHandler = function (accessor, editor, args) {\r\n        var HANDLER = this._editorHandler;\r\n        if (typeof HANDLER === 'string') {\r\n            editor.trigger('keyboard', HANDLER, args);\r\n        }\r\n        else {\r\n            args = args || {};\r\n            args.source = 'keyboard';\r\n            HANDLER.runEditorCommand(accessor, editor, args);\r\n        }\r\n    };\r\n    return EditorOrNativeTextInputCommand;\r\n}(Command));\r\n/**\r\n * A command that will invoke a command on the focused editor.\r\n */\r\nvar EditorHandlerCommand = /** @class */ (function (_super) {\r\n    __extends(EditorHandlerCommand, _super);\r\n    function EditorHandlerCommand(id, handlerId, description) {\r\n        var _this = _super.call(this, {\r\n            id: id,\r\n            precondition: undefined,\r\n            description: description\r\n        }) || this;\r\n        _this._handlerId = handlerId;\r\n        return _this;\r\n    }\r\n    EditorHandlerCommand.prototype.runCommand = function (accessor, args) {\r\n        var editor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\r\n        if (!editor) {\r\n            return;\r\n        }\r\n        editor.trigger('keyboard', this._handlerId, args);\r\n    };\r\n    return EditorHandlerCommand;\r\n}(Command));\r\nregisterCommand(new EditorOrNativeTextInputCommand({\r\n    editorHandler: CoreNavigationCommands.SelectAll,\r\n    inputHandler: 'selectAll',\r\n    id: 'editor.action.selectAll',\r\n    precondition: EditorContextKeys.textInputFocus,\r\n    kbOpts: {\r\n        weight: CORE_WEIGHT,\r\n        kbExpr: null,\r\n        primary: 2048 /* CtrlCmd */ | 31 /* KEY_A */\r\n    },\r\n    menuOpts: {\r\n        menuId: 25 /* MenubarSelectionMenu */,\r\n        group: '1_basic',\r\n        title: nls.localize({ key: 'miSelectAll', comment: ['&& denotes a mnemonic'] }, \"&&Select All\"),\r\n        order: 1\r\n    }\r\n}));\r\nregisterCommand(new EditorOrNativeTextInputCommand({\r\n    editorHandler: Handler.Undo,\r\n    inputHandler: 'undo',\r\n    id: Handler.Undo,\r\n    precondition: EditorContextKeys.writable,\r\n    kbOpts: {\r\n        weight: CORE_WEIGHT,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 2048 /* CtrlCmd */ | 56 /* KEY_Z */\r\n    },\r\n    menuOpts: {\r\n        menuId: 17 /* MenubarEditMenu */,\r\n        group: '1_do',\r\n        title: nls.localize({ key: 'miUndo', comment: ['&& denotes a mnemonic'] }, \"&&Undo\"),\r\n        order: 1\r\n    }\r\n}));\r\nregisterCommand(new EditorHandlerCommand('default:' + Handler.Undo, Handler.Undo));\r\nregisterCommand(new EditorOrNativeTextInputCommand({\r\n    editorHandler: Handler.Redo,\r\n    inputHandler: 'redo',\r\n    id: Handler.Redo,\r\n    precondition: EditorContextKeys.writable,\r\n    kbOpts: {\r\n        weight: CORE_WEIGHT,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 2048 /* CtrlCmd */ | 55 /* KEY_Y */,\r\n        secondary: [2048 /* CtrlCmd */ | 1024 /* Shift */ | 56 /* KEY_Z */],\r\n        mac: { primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 56 /* KEY_Z */ }\r\n    },\r\n    menuOpts: {\r\n        menuId: 17 /* MenubarEditMenu */,\r\n        group: '1_do',\r\n        title: nls.localize({ key: 'miRedo', comment: ['&& denotes a mnemonic'] }, \"&&Redo\"),\r\n        order: 2\r\n    }\r\n}));\r\nregisterCommand(new EditorHandlerCommand('default:' + Handler.Redo, Handler.Redo));\r\nfunction registerOverwritableCommand(handlerId, description) {\r\n    registerCommand(new EditorHandlerCommand('default:' + handlerId, handlerId));\r\n    registerCommand(new EditorHandlerCommand(handlerId, handlerId, description));\r\n}\r\nregisterOverwritableCommand(Handler.Type, {\r\n    description: \"Type\",\r\n    args: [{\r\n            name: 'args',\r\n            schema: {\r\n                'type': 'object',\r\n                'required': ['text'],\r\n                'properties': {\r\n                    'text': {\r\n                        'type': 'string'\r\n                    }\r\n                },\r\n            }\r\n        }]\r\n});\r\nregisterOverwritableCommand(Handler.ReplacePreviousChar);\r\nregisterOverwritableCommand(Handler.CompositionStart);\r\nregisterOverwritableCommand(Handler.CompositionEnd);\r\nregisterOverwritableCommand(Handler.Paste);\r\nregisterOverwritableCommand(Handler.Cut);\r\n"]},"metadata":{},"sourceType":"module"}