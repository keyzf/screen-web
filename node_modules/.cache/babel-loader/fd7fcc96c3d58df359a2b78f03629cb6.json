{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { fuzzyScore, fuzzyScoreGracefulAggressive, FuzzyScore, anyScore } from '../../../base/common/filters.js';\nimport { compareIgnoreCase } from '../../../base/common/strings.js';\n\nvar LineContext =\n/** @class */\nfunction () {\n  function LineContext(leadingLineContent, characterCountDelta) {\n    this.leadingLineContent = leadingLineContent;\n    this.characterCountDelta = characterCountDelta;\n  }\n\n  return LineContext;\n}();\n\nexport { LineContext };\n\nvar CompletionModel =\n/** @class */\nfunction () {\n  function CompletionModel(items, column, lineContext, wordDistance, options, snippetSuggestions) {\n    this._snippetCompareFn = CompletionModel._compareCompletionItems;\n    this._items = items;\n    this._column = column;\n    this._wordDistance = wordDistance;\n    this._options = options;\n    this._refilterKind = 1\n    /* All */\n    ;\n    this._lineContext = lineContext;\n\n    if (snippetSuggestions === 'top') {\n      this._snippetCompareFn = CompletionModel._compareCompletionItemsSnippetsUp;\n    } else if (snippetSuggestions === 'bottom') {\n      this._snippetCompareFn = CompletionModel._compareCompletionItemsSnippetsDown;\n    }\n  }\n\n  Object.defineProperty(CompletionModel.prototype, \"lineContext\", {\n    get: function () {\n      return this._lineContext;\n    },\n    set: function (value) {\n      if (this._lineContext.leadingLineContent !== value.leadingLineContent || this._lineContext.characterCountDelta !== value.characterCountDelta) {\n        this._refilterKind = this._lineContext.characterCountDelta < value.characterCountDelta && this._filteredItems ? 2\n        /* Incr */\n        : 1\n        /* All */\n        ;\n        this._lineContext = value;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CompletionModel.prototype, \"items\", {\n    get: function () {\n      this._ensureCachedState();\n\n      return this._filteredItems;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CompletionModel.prototype, \"incomplete\", {\n    get: function () {\n      this._ensureCachedState();\n\n      return this._isIncomplete;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  CompletionModel.prototype.adopt = function (except) {\n    var res = new Array();\n\n    for (var i = 0; i < this._items.length;) {\n      if (!except.has(this._items[i].provider)) {\n        res.push(this._items[i]); // unordered removed\n\n        this._items[i] = this._items[this._items.length - 1];\n\n        this._items.pop();\n      } else {\n        // continue with next item\n        i++;\n      }\n    }\n\n    this._refilterKind = 1\n    /* All */\n    ;\n    return res;\n  };\n\n  Object.defineProperty(CompletionModel.prototype, \"stats\", {\n    get: function () {\n      this._ensureCachedState();\n\n      return this._stats;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  CompletionModel.prototype._ensureCachedState = function () {\n    if (this._refilterKind !== 0\n    /* Nothing */\n    ) {\n        this._createCachedState();\n      }\n  };\n\n  CompletionModel.prototype._createCachedState = function () {\n    this._isIncomplete = new Set();\n    this._stats = {\n      suggestionCount: 0,\n      snippetCount: 0,\n      textCount: 0\n    };\n    var _a = this._lineContext,\n        leadingLineContent = _a.leadingLineContent,\n        characterCountDelta = _a.characterCountDelta;\n    var word = '';\n    var wordLow = ''; // incrementally filter less\n\n    var source = this._refilterKind === 1\n    /* All */\n    ? this._items : this._filteredItems;\n    var target = []; // picks a score function based on the number of\n    // items that we have to score/filter and based on the\n    // user-configuration\n\n    var scoreFn = !this._options.filterGraceful || source.length > 2000 ? fuzzyScore : fuzzyScoreGracefulAggressive;\n\n    for (var i = 0; i < source.length; i++) {\n      var item = source[i]; // collect those supports that signaled having\n      // an incomplete result\n\n      if (item.container.incomplete) {\n        this._isIncomplete.add(item.provider);\n      } // 'word' is that remainder of the current line that we\n      // filter and score against. In theory each suggestion uses a\n      // different word, but in practice not - that's why we cache\n\n\n      var overwriteBefore = item.position.column - item.editStart.column;\n      var wordLen = overwriteBefore + characterCountDelta - (item.position.column - this._column);\n\n      if (word.length !== wordLen) {\n        word = wordLen === 0 ? '' : leadingLineContent.slice(-wordLen);\n        wordLow = word.toLowerCase();\n      } // remember the word against which this item was\n      // scored\n\n\n      item.word = word;\n\n      if (wordLen === 0) {\n        // when there is nothing to score against, don't\n        // event try to do. Use a const rank and rely on\n        // the fallback-sort using the initial sort order.\n        // use a score of `-100` because that is out of the\n        // bound of values `fuzzyScore` will return\n        item.score = FuzzyScore.Default;\n      } else {\n        // skip word characters that are whitespace until\n        // we have hit the replace range (overwriteBefore)\n        var wordPos = 0;\n\n        while (wordPos < overwriteBefore) {\n          var ch = word.charCodeAt(wordPos);\n\n          if (ch === 32\n          /* Space */\n          || ch === 9\n          /* Tab */\n          ) {\n              wordPos += 1;\n            } else {\n            break;\n          }\n        }\n\n        var textLabel = typeof item.completion.label === 'string' ? item.completion.label : item.completion.label.name;\n\n        if (wordPos >= wordLen) {\n          // the wordPos at which scoring starts is the whole word\n          // and therefore the same rules as not having a word apply\n          item.score = FuzzyScore.Default;\n        } else if (typeof item.completion.filterText === 'string') {\n          // when there is a `filterText` it must match the `word`.\n          // if it matches we check with the label to compute highlights\n          // and if that doesn't yield a result we have no highlights,\n          // despite having the match\n          var match = scoreFn(word, wordLow, wordPos, item.completion.filterText, item.filterTextLow, 0, false);\n\n          if (!match) {\n            continue; // NO match\n          }\n\n          if (compareIgnoreCase(item.completion.filterText, textLabel) === 0) {\n            // filterText and label are actually the same -> use good highlights\n            item.score = match;\n          } else {\n            // re-run the scorer on the label in the hope of a result BUT use the rank\n            // of the filterText-match\n            item.score = anyScore(word, wordLow, wordPos, textLabel, item.labelLow, 0);\n            item.score[0] = match[0]; // use score from filterText\n          }\n        } else {\n          // by default match `word` against the `label`\n          var match = scoreFn(word, wordLow, wordPos, textLabel, item.labelLow, 0, false);\n\n          if (!match) {\n            continue; // NO match\n          }\n\n          item.score = match;\n        }\n      }\n\n      item.idx = i;\n      item.distance = this._wordDistance.distance(item.position, item.completion);\n      target.push(item); // update stats\n\n      this._stats.suggestionCount++;\n\n      switch (item.completion.kind) {\n        case 25\n        /* Snippet */\n        :\n          this._stats.snippetCount++;\n          break;\n\n        case 18\n        /* Text */\n        :\n          this._stats.textCount++;\n          break;\n      }\n    }\n\n    this._filteredItems = target.sort(this._snippetCompareFn);\n    this._refilterKind = 0\n    /* Nothing */\n    ;\n  };\n\n  CompletionModel._compareCompletionItems = function (a, b) {\n    if (a.score[0] > b.score[0]) {\n      return -1;\n    } else if (a.score[0] < b.score[0]) {\n      return 1;\n    } else if (a.distance < b.distance) {\n      return -1;\n    } else if (a.distance > b.distance) {\n      return 1;\n    } else if (a.idx < b.idx) {\n      return -1;\n    } else if (a.idx > b.idx) {\n      return 1;\n    } else {\n      return 0;\n    }\n  };\n\n  CompletionModel._compareCompletionItemsSnippetsDown = function (a, b) {\n    if (a.completion.kind !== b.completion.kind) {\n      if (a.completion.kind === 25\n      /* Snippet */\n      ) {\n          return 1;\n        } else if (b.completion.kind === 25\n      /* Snippet */\n      ) {\n          return -1;\n        }\n    }\n\n    return CompletionModel._compareCompletionItems(a, b);\n  };\n\n  CompletionModel._compareCompletionItemsSnippetsUp = function (a, b) {\n    if (a.completion.kind !== b.completion.kind) {\n      if (a.completion.kind === 25\n      /* Snippet */\n      ) {\n          return -1;\n        } else if (b.completion.kind === 25\n      /* Snippet */\n      ) {\n          return 1;\n        }\n    }\n\n    return CompletionModel._compareCompletionItems(a, b);\n  };\n\n  return CompletionModel;\n}();\n\nexport { CompletionModel };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/contrib/suggest/completionModel.js"],"names":["fuzzyScore","fuzzyScoreGracefulAggressive","FuzzyScore","anyScore","compareIgnoreCase","LineContext","leadingLineContent","characterCountDelta","CompletionModel","items","column","lineContext","wordDistance","options","snippetSuggestions","_snippetCompareFn","_compareCompletionItems","_items","_column","_wordDistance","_options","_refilterKind","_lineContext","_compareCompletionItemsSnippetsUp","_compareCompletionItemsSnippetsDown","Object","defineProperty","prototype","get","set","value","_filteredItems","enumerable","configurable","_ensureCachedState","_isIncomplete","adopt","except","res","Array","i","length","has","provider","push","pop","_stats","_createCachedState","Set","suggestionCount","snippetCount","textCount","_a","word","wordLow","source","target","scoreFn","filterGraceful","item","container","incomplete","add","overwriteBefore","position","editStart","wordLen","slice","toLowerCase","score","Default","wordPos","ch","charCodeAt","textLabel","completion","label","name","filterText","match","filterTextLow","labelLow","idx","distance","kind","sort","a","b"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { fuzzyScore, fuzzyScoreGracefulAggressive, FuzzyScore, anyScore } from '../../../base/common/filters.js';\r\nimport { compareIgnoreCase } from '../../../base/common/strings.js';\r\nvar LineContext = /** @class */ (function () {\r\n    function LineContext(leadingLineContent, characterCountDelta) {\r\n        this.leadingLineContent = leadingLineContent;\r\n        this.characterCountDelta = characterCountDelta;\r\n    }\r\n    return LineContext;\r\n}());\r\nexport { LineContext };\r\nvar CompletionModel = /** @class */ (function () {\r\n    function CompletionModel(items, column, lineContext, wordDistance, options, snippetSuggestions) {\r\n        this._snippetCompareFn = CompletionModel._compareCompletionItems;\r\n        this._items = items;\r\n        this._column = column;\r\n        this._wordDistance = wordDistance;\r\n        this._options = options;\r\n        this._refilterKind = 1 /* All */;\r\n        this._lineContext = lineContext;\r\n        if (snippetSuggestions === 'top') {\r\n            this._snippetCompareFn = CompletionModel._compareCompletionItemsSnippetsUp;\r\n        }\r\n        else if (snippetSuggestions === 'bottom') {\r\n            this._snippetCompareFn = CompletionModel._compareCompletionItemsSnippetsDown;\r\n        }\r\n    }\r\n    Object.defineProperty(CompletionModel.prototype, \"lineContext\", {\r\n        get: function () {\r\n            return this._lineContext;\r\n        },\r\n        set: function (value) {\r\n            if (this._lineContext.leadingLineContent !== value.leadingLineContent\r\n                || this._lineContext.characterCountDelta !== value.characterCountDelta) {\r\n                this._refilterKind = this._lineContext.characterCountDelta < value.characterCountDelta && this._filteredItems ? 2 /* Incr */ : 1 /* All */;\r\n                this._lineContext = value;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CompletionModel.prototype, \"items\", {\r\n        get: function () {\r\n            this._ensureCachedState();\r\n            return this._filteredItems;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CompletionModel.prototype, \"incomplete\", {\r\n        get: function () {\r\n            this._ensureCachedState();\r\n            return this._isIncomplete;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CompletionModel.prototype.adopt = function (except) {\r\n        var res = new Array();\r\n        for (var i = 0; i < this._items.length;) {\r\n            if (!except.has(this._items[i].provider)) {\r\n                res.push(this._items[i]);\r\n                // unordered removed\r\n                this._items[i] = this._items[this._items.length - 1];\r\n                this._items.pop();\r\n            }\r\n            else {\r\n                // continue with next item\r\n                i++;\r\n            }\r\n        }\r\n        this._refilterKind = 1 /* All */;\r\n        return res;\r\n    };\r\n    Object.defineProperty(CompletionModel.prototype, \"stats\", {\r\n        get: function () {\r\n            this._ensureCachedState();\r\n            return this._stats;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CompletionModel.prototype._ensureCachedState = function () {\r\n        if (this._refilterKind !== 0 /* Nothing */) {\r\n            this._createCachedState();\r\n        }\r\n    };\r\n    CompletionModel.prototype._createCachedState = function () {\r\n        this._isIncomplete = new Set();\r\n        this._stats = { suggestionCount: 0, snippetCount: 0, textCount: 0 };\r\n        var _a = this._lineContext, leadingLineContent = _a.leadingLineContent, characterCountDelta = _a.characterCountDelta;\r\n        var word = '';\r\n        var wordLow = '';\r\n        // incrementally filter less\r\n        var source = this._refilterKind === 1 /* All */ ? this._items : this._filteredItems;\r\n        var target = [];\r\n        // picks a score function based on the number of\r\n        // items that we have to score/filter and based on the\r\n        // user-configuration\r\n        var scoreFn = (!this._options.filterGraceful || source.length > 2000) ? fuzzyScore : fuzzyScoreGracefulAggressive;\r\n        for (var i = 0; i < source.length; i++) {\r\n            var item = source[i];\r\n            // collect those supports that signaled having\r\n            // an incomplete result\r\n            if (item.container.incomplete) {\r\n                this._isIncomplete.add(item.provider);\r\n            }\r\n            // 'word' is that remainder of the current line that we\r\n            // filter and score against. In theory each suggestion uses a\r\n            // different word, but in practice not - that's why we cache\r\n            var overwriteBefore = item.position.column - item.editStart.column;\r\n            var wordLen = overwriteBefore + characterCountDelta - (item.position.column - this._column);\r\n            if (word.length !== wordLen) {\r\n                word = wordLen === 0 ? '' : leadingLineContent.slice(-wordLen);\r\n                wordLow = word.toLowerCase();\r\n            }\r\n            // remember the word against which this item was\r\n            // scored\r\n            item.word = word;\r\n            if (wordLen === 0) {\r\n                // when there is nothing to score against, don't\r\n                // event try to do. Use a const rank and rely on\r\n                // the fallback-sort using the initial sort order.\r\n                // use a score of `-100` because that is out of the\r\n                // bound of values `fuzzyScore` will return\r\n                item.score = FuzzyScore.Default;\r\n            }\r\n            else {\r\n                // skip word characters that are whitespace until\r\n                // we have hit the replace range (overwriteBefore)\r\n                var wordPos = 0;\r\n                while (wordPos < overwriteBefore) {\r\n                    var ch = word.charCodeAt(wordPos);\r\n                    if (ch === 32 /* Space */ || ch === 9 /* Tab */) {\r\n                        wordPos += 1;\r\n                    }\r\n                    else {\r\n                        break;\r\n                    }\r\n                }\r\n                var textLabel = typeof item.completion.label === 'string' ? item.completion.label : item.completion.label.name;\r\n                if (wordPos >= wordLen) {\r\n                    // the wordPos at which scoring starts is the whole word\r\n                    // and therefore the same rules as not having a word apply\r\n                    item.score = FuzzyScore.Default;\r\n                }\r\n                else if (typeof item.completion.filterText === 'string') {\r\n                    // when there is a `filterText` it must match the `word`.\r\n                    // if it matches we check with the label to compute highlights\r\n                    // and if that doesn't yield a result we have no highlights,\r\n                    // despite having the match\r\n                    var match = scoreFn(word, wordLow, wordPos, item.completion.filterText, item.filterTextLow, 0, false);\r\n                    if (!match) {\r\n                        continue; // NO match\r\n                    }\r\n                    if (compareIgnoreCase(item.completion.filterText, textLabel) === 0) {\r\n                        // filterText and label are actually the same -> use good highlights\r\n                        item.score = match;\r\n                    }\r\n                    else {\r\n                        // re-run the scorer on the label in the hope of a result BUT use the rank\r\n                        // of the filterText-match\r\n                        item.score = anyScore(word, wordLow, wordPos, textLabel, item.labelLow, 0);\r\n                        item.score[0] = match[0]; // use score from filterText\r\n                    }\r\n                }\r\n                else {\r\n                    // by default match `word` against the `label`\r\n                    var match = scoreFn(word, wordLow, wordPos, textLabel, item.labelLow, 0, false);\r\n                    if (!match) {\r\n                        continue; // NO match\r\n                    }\r\n                    item.score = match;\r\n                }\r\n            }\r\n            item.idx = i;\r\n            item.distance = this._wordDistance.distance(item.position, item.completion);\r\n            target.push(item);\r\n            // update stats\r\n            this._stats.suggestionCount++;\r\n            switch (item.completion.kind) {\r\n                case 25 /* Snippet */:\r\n                    this._stats.snippetCount++;\r\n                    break;\r\n                case 18 /* Text */:\r\n                    this._stats.textCount++;\r\n                    break;\r\n            }\r\n        }\r\n        this._filteredItems = target.sort(this._snippetCompareFn);\r\n        this._refilterKind = 0 /* Nothing */;\r\n    };\r\n    CompletionModel._compareCompletionItems = function (a, b) {\r\n        if (a.score[0] > b.score[0]) {\r\n            return -1;\r\n        }\r\n        else if (a.score[0] < b.score[0]) {\r\n            return 1;\r\n        }\r\n        else if (a.distance < b.distance) {\r\n            return -1;\r\n        }\r\n        else if (a.distance > b.distance) {\r\n            return 1;\r\n        }\r\n        else if (a.idx < b.idx) {\r\n            return -1;\r\n        }\r\n        else if (a.idx > b.idx) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    };\r\n    CompletionModel._compareCompletionItemsSnippetsDown = function (a, b) {\r\n        if (a.completion.kind !== b.completion.kind) {\r\n            if (a.completion.kind === 25 /* Snippet */) {\r\n                return 1;\r\n            }\r\n            else if (b.completion.kind === 25 /* Snippet */) {\r\n                return -1;\r\n            }\r\n        }\r\n        return CompletionModel._compareCompletionItems(a, b);\r\n    };\r\n    CompletionModel._compareCompletionItemsSnippetsUp = function (a, b) {\r\n        if (a.completion.kind !== b.completion.kind) {\r\n            if (a.completion.kind === 25 /* Snippet */) {\r\n                return -1;\r\n            }\r\n            else if (b.completion.kind === 25 /* Snippet */) {\r\n                return 1;\r\n            }\r\n        }\r\n        return CompletionModel._compareCompletionItems(a, b);\r\n    };\r\n    return CompletionModel;\r\n}());\r\nexport { CompletionModel };\r\n"]},"metadata":{},"sourceType":"module"}