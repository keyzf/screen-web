{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nimport { Iterator, getSequenceIterator } from '../../../common/iterator.js';\nimport { IndexTreeModel } from './indexTreeModel.js';\nimport { TreeError } from './tree.js';\nimport { mergeSort } from '../../../common/arrays.js';\n\nvar ObjectTreeModel =\n/** @class */\nfunction () {\n  function ObjectTreeModel(user, list, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.user = user;\n    this.nodes = new Map();\n    this.nodesByIdentity = new Map();\n    this.model = new IndexTreeModel(user, list, null, options);\n    this.onDidSplice = this.model.onDidSplice;\n    this.onDidChangeCollapseState = this.model.onDidChangeCollapseState;\n    this.onDidChangeRenderNodeCount = this.model.onDidChangeRenderNodeCount;\n\n    if (options.sorter) {\n      this.sorter = {\n        compare: function (a, b) {\n          return options.sorter.compare(a.element, b.element);\n        }\n      };\n    }\n\n    this.identityProvider = options.identityProvider;\n  }\n\n  ObjectTreeModel.prototype.setChildren = function (element, children, onDidCreateNode, onDidDeleteNode) {\n    var location = this.getElementLocation(element);\n\n    this._setChildren(location, this.preserveCollapseState(children), onDidCreateNode, onDidDeleteNode);\n  };\n\n  ObjectTreeModel.prototype._setChildren = function (location, children, onDidCreateNode, onDidDeleteNode) {\n    var _this = this;\n\n    var insertedElements = new Set();\n    var insertedElementIds = new Set();\n\n    var _onDidCreateNode = function (node) {\n      insertedElements.add(node.element);\n\n      _this.nodes.set(node.element, node);\n\n      if (_this.identityProvider) {\n        var id = _this.identityProvider.getId(node.element).toString();\n\n        insertedElementIds.add(id);\n\n        _this.nodesByIdentity.set(id, node);\n      }\n\n      if (onDidCreateNode) {\n        onDidCreateNode(node);\n      }\n    };\n\n    var _onDidDeleteNode = function (node) {\n      if (!insertedElements.has(node.element)) {\n        _this.nodes.delete(node.element);\n      }\n\n      if (_this.identityProvider) {\n        var id = _this.identityProvider.getId(node.element).toString();\n\n        if (!insertedElementIds.has(id)) {\n          _this.nodesByIdentity.delete(id);\n        }\n      }\n\n      if (onDidDeleteNode) {\n        onDidDeleteNode(node);\n      }\n    };\n\n    this.model.splice(__spreadArrays(location, [0]), Number.MAX_VALUE, children, _onDidCreateNode, _onDidDeleteNode);\n  };\n\n  ObjectTreeModel.prototype.preserveCollapseState = function (elements) {\n    var _this = this;\n\n    var iterator = elements ? getSequenceIterator(elements) : Iterator.empty();\n\n    if (this.sorter) {\n      iterator = Iterator.fromArray(mergeSort(Iterator.collect(iterator), this.sorter.compare.bind(this.sorter)));\n    }\n\n    return Iterator.map(iterator, function (treeElement) {\n      var node = _this.nodes.get(treeElement.element);\n\n      if (!node && _this.identityProvider) {\n        var id = _this.identityProvider.getId(treeElement.element).toString();\n\n        node = _this.nodesByIdentity.get(id);\n      }\n\n      if (!node) {\n        return __assign(__assign({}, treeElement), {\n          children: _this.preserveCollapseState(treeElement.children)\n        });\n      }\n\n      var collapsible = typeof treeElement.collapsible === 'boolean' ? treeElement.collapsible : node.collapsible;\n      var collapsed = typeof treeElement.collapsed !== 'undefined' ? treeElement.collapsed : node.collapsed;\n      return __assign(__assign({}, treeElement), {\n        collapsible: collapsible,\n        collapsed: collapsed,\n        children: _this.preserveCollapseState(treeElement.children)\n      });\n    });\n  };\n\n  ObjectTreeModel.prototype.rerender = function (element) {\n    var location = this.getElementLocation(element);\n    this.model.rerender(location);\n  };\n\n  ObjectTreeModel.prototype.has = function (element) {\n    return this.nodes.has(element);\n  };\n\n  ObjectTreeModel.prototype.getListIndex = function (element) {\n    var location = this.getElementLocation(element);\n    return this.model.getListIndex(location);\n  };\n\n  ObjectTreeModel.prototype.getListRenderCount = function (element) {\n    var location = this.getElementLocation(element);\n    return this.model.getListRenderCount(location);\n  };\n\n  ObjectTreeModel.prototype.isCollapsible = function (element) {\n    var location = this.getElementLocation(element);\n    return this.model.isCollapsible(location);\n  };\n\n  ObjectTreeModel.prototype.setCollapsible = function (element, collapsible) {\n    var location = this.getElementLocation(element);\n    return this.model.setCollapsible(location, collapsible);\n  };\n\n  ObjectTreeModel.prototype.isCollapsed = function (element) {\n    var location = this.getElementLocation(element);\n    return this.model.isCollapsed(location);\n  };\n\n  ObjectTreeModel.prototype.setCollapsed = function (element, collapsed, recursive) {\n    var location = this.getElementLocation(element);\n    return this.model.setCollapsed(location, collapsed, recursive);\n  };\n\n  ObjectTreeModel.prototype.expandTo = function (element) {\n    var location = this.getElementLocation(element);\n    this.model.expandTo(location);\n  };\n\n  ObjectTreeModel.prototype.refilter = function () {\n    this.model.refilter();\n  };\n\n  ObjectTreeModel.prototype.getNode = function (element) {\n    if (element === void 0) {\n      element = null;\n    }\n\n    if (element === null) {\n      return this.model.getNode(this.model.rootRef);\n    }\n\n    var node = this.nodes.get(element);\n\n    if (!node) {\n      throw new TreeError(this.user, \"Tree element not found: \" + element);\n    }\n\n    return node;\n  };\n\n  ObjectTreeModel.prototype.getNodeLocation = function (node) {\n    return node.element;\n  };\n\n  ObjectTreeModel.prototype.getParentNodeLocation = function (element) {\n    if (element === null) {\n      throw new TreeError(this.user, \"Invalid getParentNodeLocation call\");\n    }\n\n    var node = this.nodes.get(element);\n\n    if (!node) {\n      throw new TreeError(this.user, \"Tree element not found: \" + element);\n    }\n\n    var location = this.model.getNodeLocation(node);\n    var parentLocation = this.model.getParentNodeLocation(location);\n    var parent = this.model.getNode(parentLocation);\n    return parent.element;\n  };\n\n  ObjectTreeModel.prototype.getElementLocation = function (element) {\n    if (element === null) {\n      return [];\n    }\n\n    var node = this.nodes.get(element);\n\n    if (!node) {\n      throw new TreeError(this.user, \"Tree element not found: \" + element);\n    }\n\n    return this.model.getNodeLocation(node);\n  };\n\n  return ObjectTreeModel;\n}();\n\nexport { ObjectTreeModel };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/base/browser/ui/tree/objectTreeModel.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__spreadArrays","il","r","Array","k","a","j","jl","Iterator","getSequenceIterator","IndexTreeModel","TreeError","mergeSort","ObjectTreeModel","user","list","options","nodes","Map","nodesByIdentity","model","onDidSplice","onDidChangeCollapseState","onDidChangeRenderNodeCount","sorter","compare","b","element","identityProvider","setChildren","children","onDidCreateNode","onDidDeleteNode","location","getElementLocation","_setChildren","preserveCollapseState","_this","insertedElements","Set","insertedElementIds","_onDidCreateNode","node","add","set","id","getId","toString","_onDidDeleteNode","has","delete","splice","Number","MAX_VALUE","elements","iterator","empty","fromArray","collect","bind","map","treeElement","get","collapsible","collapsed","rerender","getListIndex","getListRenderCount","isCollapsible","setCollapsible","isCollapsed","setCollapsed","recursive","expandTo","refilter","getNode","rootRef","getNodeLocation","getParentNodeLocation","parentLocation","parent"],"mappings":"AAAA;;;;AAIA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;AAClDA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;AACpC,SAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;AACjDD,MAAAA,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;AACA,WAAK,IAAII,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AACP;;AACD,WAAON,CAAP;AACH,GAPD;;AAQA,SAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,IAAIO,cAAc,GAAI,QAAQ,KAAKA,cAAd,IAAiC,YAAY;AAC9D,OAAK,IAAIV,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG,CAAf,EAAkBU,EAAE,GAAGR,SAAS,CAACC,MAAtC,EAA8CH,CAAC,GAAGU,EAAlD,EAAsDV,CAAC,EAAvD,EAA2DD,CAAC,IAAIG,SAAS,CAACF,CAAD,CAAT,CAAaG,MAAlB;;AAC3D,OAAK,IAAIQ,CAAC,GAAGC,KAAK,CAACb,CAAD,CAAb,EAAkBc,CAAC,GAAG,CAAtB,EAAyBb,CAAC,GAAG,CAAlC,EAAqCA,CAAC,GAAGU,EAAzC,EAA6CV,CAAC,EAA9C,EACI,KAAK,IAAIc,CAAC,GAAGZ,SAAS,CAACF,CAAD,CAAjB,EAAsBe,CAAC,GAAG,CAA1B,EAA6BC,EAAE,GAAGF,CAAC,CAACX,MAAzC,EAAiDY,CAAC,GAAGC,EAArD,EAAyDD,CAAC,IAAIF,CAAC,EAA/D,EACIF,CAAC,CAACE,CAAD,CAAD,GAAOC,CAAC,CAACC,CAAD,CAAR;;AACR,SAAOJ,CAAP;AACH,CAND;;AAOA,SAASM,QAAT,EAAmBC,mBAAnB,QAA8C,6BAA9C;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,SAAT,QAA0B,WAA1B;AACA,SAASC,SAAT,QAA0B,2BAA1B;;AACA,IAAIC,eAAe;AAAG;AAAe,YAAY;AAC7C,WAASA,eAAT,CAAyBC,IAAzB,EAA+BC,IAA/B,EAAqCC,OAArC,EAA8C;AAC1C,QAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AAAEA,MAAAA,OAAO,GAAG,EAAV;AAAe;;AACzC,SAAKF,IAAL,GAAYA,IAAZ;AACA,SAAKG,KAAL,GAAa,IAAIC,GAAJ,EAAb;AACA,SAAKC,eAAL,GAAuB,IAAID,GAAJ,EAAvB;AACA,SAAKE,KAAL,GAAa,IAAIV,cAAJ,CAAmBI,IAAnB,EAAyBC,IAAzB,EAA+B,IAA/B,EAAqCC,OAArC,CAAb;AACA,SAAKK,WAAL,GAAmB,KAAKD,KAAL,CAAWC,WAA9B;AACA,SAAKC,wBAAL,GAAgC,KAAKF,KAAL,CAAWE,wBAA3C;AACA,SAAKC,0BAAL,GAAkC,KAAKH,KAAL,CAAWG,0BAA7C;;AACA,QAAIP,OAAO,CAACQ,MAAZ,EAAoB;AAChB,WAAKA,MAAL,GAAc;AACVC,QAAAA,OAAO,EAAE,UAAUpB,CAAV,EAAaqB,CAAb,EAAgB;AACrB,iBAAOV,OAAO,CAACQ,MAAR,CAAeC,OAAf,CAAuBpB,CAAC,CAACsB,OAAzB,EAAkCD,CAAC,CAACC,OAApC,CAAP;AACH;AAHS,OAAd;AAKH;;AACD,SAAKC,gBAAL,GAAwBZ,OAAO,CAACY,gBAAhC;AACH;;AACDf,EAAAA,eAAe,CAACjB,SAAhB,CAA0BiC,WAA1B,GAAwC,UAAUF,OAAV,EAAmBG,QAAnB,EAA6BC,eAA7B,EAA8CC,eAA9C,EAA+D;AACnG,QAAIC,QAAQ,GAAG,KAAKC,kBAAL,CAAwBP,OAAxB,CAAf;;AACA,SAAKQ,YAAL,CAAkBF,QAAlB,EAA4B,KAAKG,qBAAL,CAA2BN,QAA3B,CAA5B,EAAkEC,eAAlE,EAAmFC,eAAnF;AACH,GAHD;;AAIAnB,EAAAA,eAAe,CAACjB,SAAhB,CAA0BuC,YAA1B,GAAyC,UAAUF,QAAV,EAAoBH,QAApB,EAA8BC,eAA9B,EAA+CC,eAA/C,EAAgE;AACrG,QAAIK,KAAK,GAAG,IAAZ;;AACA,QAAIC,gBAAgB,GAAG,IAAIC,GAAJ,EAAvB;AACA,QAAIC,kBAAkB,GAAG,IAAID,GAAJ,EAAzB;;AACA,QAAIE,gBAAgB,GAAG,UAAUC,IAAV,EAAgB;AACnCJ,MAAAA,gBAAgB,CAACK,GAAjB,CAAqBD,IAAI,CAACf,OAA1B;;AACAU,MAAAA,KAAK,CAACpB,KAAN,CAAY2B,GAAZ,CAAgBF,IAAI,CAACf,OAArB,EAA8Be,IAA9B;;AACA,UAAIL,KAAK,CAACT,gBAAV,EAA4B;AACxB,YAAIiB,EAAE,GAAGR,KAAK,CAACT,gBAAN,CAAuBkB,KAAvB,CAA6BJ,IAAI,CAACf,OAAlC,EAA2CoB,QAA3C,EAAT;;AACAP,QAAAA,kBAAkB,CAACG,GAAnB,CAAuBE,EAAvB;;AACAR,QAAAA,KAAK,CAAClB,eAAN,CAAsByB,GAAtB,CAA0BC,EAA1B,EAA8BH,IAA9B;AACH;;AACD,UAAIX,eAAJ,EAAqB;AACjBA,QAAAA,eAAe,CAACW,IAAD,CAAf;AACH;AACJ,KAXD;;AAYA,QAAIM,gBAAgB,GAAG,UAAUN,IAAV,EAAgB;AACnC,UAAI,CAACJ,gBAAgB,CAACW,GAAjB,CAAqBP,IAAI,CAACf,OAA1B,CAAL,EAAyC;AACrCU,QAAAA,KAAK,CAACpB,KAAN,CAAYiC,MAAZ,CAAmBR,IAAI,CAACf,OAAxB;AACH;;AACD,UAAIU,KAAK,CAACT,gBAAV,EAA4B;AACxB,YAAIiB,EAAE,GAAGR,KAAK,CAACT,gBAAN,CAAuBkB,KAAvB,CAA6BJ,IAAI,CAACf,OAAlC,EAA2CoB,QAA3C,EAAT;;AACA,YAAI,CAACP,kBAAkB,CAACS,GAAnB,CAAuBJ,EAAvB,CAAL,EAAiC;AAC7BR,UAAAA,KAAK,CAAClB,eAAN,CAAsB+B,MAAtB,CAA6BL,EAA7B;AACH;AACJ;;AACD,UAAIb,eAAJ,EAAqB;AACjBA,QAAAA,eAAe,CAACU,IAAD,CAAf;AACH;AACJ,KAbD;;AAcA,SAAKtB,KAAL,CAAW+B,MAAX,CAAkBnD,cAAc,CAACiC,QAAD,EAAW,CAAC,CAAD,CAAX,CAAhC,EAAiDmB,MAAM,CAACC,SAAxD,EAAmEvB,QAAnE,EAA6EW,gBAA7E,EAA+FO,gBAA/F;AACH,GA/BD;;AAgCAnC,EAAAA,eAAe,CAACjB,SAAhB,CAA0BwC,qBAA1B,GAAkD,UAAUkB,QAAV,EAAoB;AAClE,QAAIjB,KAAK,GAAG,IAAZ;;AACA,QAAIkB,QAAQ,GAAGD,QAAQ,GAAG7C,mBAAmB,CAAC6C,QAAD,CAAtB,GAAmC9C,QAAQ,CAACgD,KAAT,EAA1D;;AACA,QAAI,KAAKhC,MAAT,EAAiB;AACb+B,MAAAA,QAAQ,GAAG/C,QAAQ,CAACiD,SAAT,CAAmB7C,SAAS,CAACJ,QAAQ,CAACkD,OAAT,CAAiBH,QAAjB,CAAD,EAA6B,KAAK/B,MAAL,CAAYC,OAAZ,CAAoBkC,IAApB,CAAyB,KAAKnC,MAA9B,CAA7B,CAA5B,CAAX;AACH;;AACD,WAAOhB,QAAQ,CAACoD,GAAT,CAAaL,QAAb,EAAuB,UAAUM,WAAV,EAAuB;AACjD,UAAInB,IAAI,GAAGL,KAAK,CAACpB,KAAN,CAAY6C,GAAZ,CAAgBD,WAAW,CAAClC,OAA5B,CAAX;;AACA,UAAI,CAACe,IAAD,IAASL,KAAK,CAACT,gBAAnB,EAAqC;AACjC,YAAIiB,EAAE,GAAGR,KAAK,CAACT,gBAAN,CAAuBkB,KAAvB,CAA6Be,WAAW,CAAClC,OAAzC,EAAkDoB,QAAlD,EAAT;;AACAL,QAAAA,IAAI,GAAGL,KAAK,CAAClB,eAAN,CAAsB2C,GAAtB,CAA0BjB,EAA1B,CAAP;AACH;;AACD,UAAI,CAACH,IAAL,EAAW;AACP,eAAOxD,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAK2E,WAAL,CAAT,EAA4B;AAAE/B,UAAAA,QAAQ,EAAEO,KAAK,CAACD,qBAAN,CAA4ByB,WAAW,CAAC/B,QAAxC;AAAZ,SAA5B,CAAf;AACH;;AACD,UAAIiC,WAAW,GAAG,OAAOF,WAAW,CAACE,WAAnB,KAAmC,SAAnC,GAA+CF,WAAW,CAACE,WAA3D,GAAyErB,IAAI,CAACqB,WAAhG;AACA,UAAIC,SAAS,GAAG,OAAOH,WAAW,CAACG,SAAnB,KAAiC,WAAjC,GAA+CH,WAAW,CAACG,SAA3D,GAAuEtB,IAAI,CAACsB,SAA5F;AACA,aAAO9E,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAK2E,WAAL,CAAT,EAA4B;AAAEE,QAAAA,WAAW,EAAEA,WAAf;AACvCC,QAAAA,SAAS,EAAEA,SAD4B;AACjBlC,QAAAA,QAAQ,EAAEO,KAAK,CAACD,qBAAN,CAA4ByB,WAAW,CAAC/B,QAAxC;AADO,OAA5B,CAAf;AAEH,KAbM,CAAP;AAcH,GApBD;;AAqBAjB,EAAAA,eAAe,CAACjB,SAAhB,CAA0BqE,QAA1B,GAAqC,UAAUtC,OAAV,EAAmB;AACpD,QAAIM,QAAQ,GAAG,KAAKC,kBAAL,CAAwBP,OAAxB,CAAf;AACA,SAAKP,KAAL,CAAW6C,QAAX,CAAoBhC,QAApB;AACH,GAHD;;AAIApB,EAAAA,eAAe,CAACjB,SAAhB,CAA0BqD,GAA1B,GAAgC,UAAUtB,OAAV,EAAmB;AAC/C,WAAO,KAAKV,KAAL,CAAWgC,GAAX,CAAetB,OAAf,CAAP;AACH,GAFD;;AAGAd,EAAAA,eAAe,CAACjB,SAAhB,CAA0BsE,YAA1B,GAAyC,UAAUvC,OAAV,EAAmB;AACxD,QAAIM,QAAQ,GAAG,KAAKC,kBAAL,CAAwBP,OAAxB,CAAf;AACA,WAAO,KAAKP,KAAL,CAAW8C,YAAX,CAAwBjC,QAAxB,CAAP;AACH,GAHD;;AAIApB,EAAAA,eAAe,CAACjB,SAAhB,CAA0BuE,kBAA1B,GAA+C,UAAUxC,OAAV,EAAmB;AAC9D,QAAIM,QAAQ,GAAG,KAAKC,kBAAL,CAAwBP,OAAxB,CAAf;AACA,WAAO,KAAKP,KAAL,CAAW+C,kBAAX,CAA8BlC,QAA9B,CAAP;AACH,GAHD;;AAIApB,EAAAA,eAAe,CAACjB,SAAhB,CAA0BwE,aAA1B,GAA0C,UAAUzC,OAAV,EAAmB;AACzD,QAAIM,QAAQ,GAAG,KAAKC,kBAAL,CAAwBP,OAAxB,CAAf;AACA,WAAO,KAAKP,KAAL,CAAWgD,aAAX,CAAyBnC,QAAzB,CAAP;AACH,GAHD;;AAIApB,EAAAA,eAAe,CAACjB,SAAhB,CAA0ByE,cAA1B,GAA2C,UAAU1C,OAAV,EAAmBoC,WAAnB,EAAgC;AACvE,QAAI9B,QAAQ,GAAG,KAAKC,kBAAL,CAAwBP,OAAxB,CAAf;AACA,WAAO,KAAKP,KAAL,CAAWiD,cAAX,CAA0BpC,QAA1B,EAAoC8B,WAApC,CAAP;AACH,GAHD;;AAIAlD,EAAAA,eAAe,CAACjB,SAAhB,CAA0B0E,WAA1B,GAAwC,UAAU3C,OAAV,EAAmB;AACvD,QAAIM,QAAQ,GAAG,KAAKC,kBAAL,CAAwBP,OAAxB,CAAf;AACA,WAAO,KAAKP,KAAL,CAAWkD,WAAX,CAAuBrC,QAAvB,CAAP;AACH,GAHD;;AAIApB,EAAAA,eAAe,CAACjB,SAAhB,CAA0B2E,YAA1B,GAAyC,UAAU5C,OAAV,EAAmBqC,SAAnB,EAA8BQ,SAA9B,EAAyC;AAC9E,QAAIvC,QAAQ,GAAG,KAAKC,kBAAL,CAAwBP,OAAxB,CAAf;AACA,WAAO,KAAKP,KAAL,CAAWmD,YAAX,CAAwBtC,QAAxB,EAAkC+B,SAAlC,EAA6CQ,SAA7C,CAAP;AACH,GAHD;;AAIA3D,EAAAA,eAAe,CAACjB,SAAhB,CAA0B6E,QAA1B,GAAqC,UAAU9C,OAAV,EAAmB;AACpD,QAAIM,QAAQ,GAAG,KAAKC,kBAAL,CAAwBP,OAAxB,CAAf;AACA,SAAKP,KAAL,CAAWqD,QAAX,CAAoBxC,QAApB;AACH,GAHD;;AAIApB,EAAAA,eAAe,CAACjB,SAAhB,CAA0B8E,QAA1B,GAAqC,YAAY;AAC7C,SAAKtD,KAAL,CAAWsD,QAAX;AACH,GAFD;;AAGA7D,EAAAA,eAAe,CAACjB,SAAhB,CAA0B+E,OAA1B,GAAoC,UAAUhD,OAAV,EAAmB;AACnD,QAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AAAEA,MAAAA,OAAO,GAAG,IAAV;AAAiB;;AAC3C,QAAIA,OAAO,KAAK,IAAhB,EAAsB;AAClB,aAAO,KAAKP,KAAL,CAAWuD,OAAX,CAAmB,KAAKvD,KAAL,CAAWwD,OAA9B,CAAP;AACH;;AACD,QAAIlC,IAAI,GAAG,KAAKzB,KAAL,CAAW6C,GAAX,CAAenC,OAAf,CAAX;;AACA,QAAI,CAACe,IAAL,EAAW;AACP,YAAM,IAAI/B,SAAJ,CAAc,KAAKG,IAAnB,EAAyB,6BAA6Ba,OAAtD,CAAN;AACH;;AACD,WAAOe,IAAP;AACH,GAVD;;AAWA7B,EAAAA,eAAe,CAACjB,SAAhB,CAA0BiF,eAA1B,GAA4C,UAAUnC,IAAV,EAAgB;AACxD,WAAOA,IAAI,CAACf,OAAZ;AACH,GAFD;;AAGAd,EAAAA,eAAe,CAACjB,SAAhB,CAA0BkF,qBAA1B,GAAkD,UAAUnD,OAAV,EAAmB;AACjE,QAAIA,OAAO,KAAK,IAAhB,EAAsB;AAClB,YAAM,IAAIhB,SAAJ,CAAc,KAAKG,IAAnB,EAAyB,oCAAzB,CAAN;AACH;;AACD,QAAI4B,IAAI,GAAG,KAAKzB,KAAL,CAAW6C,GAAX,CAAenC,OAAf,CAAX;;AACA,QAAI,CAACe,IAAL,EAAW;AACP,YAAM,IAAI/B,SAAJ,CAAc,KAAKG,IAAnB,EAAyB,6BAA6Ba,OAAtD,CAAN;AACH;;AACD,QAAIM,QAAQ,GAAG,KAAKb,KAAL,CAAWyD,eAAX,CAA2BnC,IAA3B,CAAf;AACA,QAAIqC,cAAc,GAAG,KAAK3D,KAAL,CAAW0D,qBAAX,CAAiC7C,QAAjC,CAArB;AACA,QAAI+C,MAAM,GAAG,KAAK5D,KAAL,CAAWuD,OAAX,CAAmBI,cAAnB,CAAb;AACA,WAAOC,MAAM,CAACrD,OAAd;AACH,GAZD;;AAaAd,EAAAA,eAAe,CAACjB,SAAhB,CAA0BsC,kBAA1B,GAA+C,UAAUP,OAAV,EAAmB;AAC9D,QAAIA,OAAO,KAAK,IAAhB,EAAsB;AAClB,aAAO,EAAP;AACH;;AACD,QAAIe,IAAI,GAAG,KAAKzB,KAAL,CAAW6C,GAAX,CAAenC,OAAf,CAAX;;AACA,QAAI,CAACe,IAAL,EAAW;AACP,YAAM,IAAI/B,SAAJ,CAAc,KAAKG,IAAnB,EAAyB,6BAA6Ba,OAAtD,CAAN;AACH;;AACD,WAAO,KAAKP,KAAL,CAAWyD,eAAX,CAA2BnC,IAA3B,CAAP;AACH,GATD;;AAUA,SAAO7B,eAAP;AACH,CAxJoC,EAArC;;AAyJA,SAASA,eAAT","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\nimport { Iterator, getSequenceIterator } from '../../../common/iterator.js';\r\nimport { IndexTreeModel } from './indexTreeModel.js';\r\nimport { TreeError } from './tree.js';\r\nimport { mergeSort } from '../../../common/arrays.js';\r\nvar ObjectTreeModel = /** @class */ (function () {\r\n    function ObjectTreeModel(user, list, options) {\r\n        if (options === void 0) { options = {}; }\r\n        this.user = user;\r\n        this.nodes = new Map();\r\n        this.nodesByIdentity = new Map();\r\n        this.model = new IndexTreeModel(user, list, null, options);\r\n        this.onDidSplice = this.model.onDidSplice;\r\n        this.onDidChangeCollapseState = this.model.onDidChangeCollapseState;\r\n        this.onDidChangeRenderNodeCount = this.model.onDidChangeRenderNodeCount;\r\n        if (options.sorter) {\r\n            this.sorter = {\r\n                compare: function (a, b) {\r\n                    return options.sorter.compare(a.element, b.element);\r\n                }\r\n            };\r\n        }\r\n        this.identityProvider = options.identityProvider;\r\n    }\r\n    ObjectTreeModel.prototype.setChildren = function (element, children, onDidCreateNode, onDidDeleteNode) {\r\n        var location = this.getElementLocation(element);\r\n        this._setChildren(location, this.preserveCollapseState(children), onDidCreateNode, onDidDeleteNode);\r\n    };\r\n    ObjectTreeModel.prototype._setChildren = function (location, children, onDidCreateNode, onDidDeleteNode) {\r\n        var _this = this;\r\n        var insertedElements = new Set();\r\n        var insertedElementIds = new Set();\r\n        var _onDidCreateNode = function (node) {\r\n            insertedElements.add(node.element);\r\n            _this.nodes.set(node.element, node);\r\n            if (_this.identityProvider) {\r\n                var id = _this.identityProvider.getId(node.element).toString();\r\n                insertedElementIds.add(id);\r\n                _this.nodesByIdentity.set(id, node);\r\n            }\r\n            if (onDidCreateNode) {\r\n                onDidCreateNode(node);\r\n            }\r\n        };\r\n        var _onDidDeleteNode = function (node) {\r\n            if (!insertedElements.has(node.element)) {\r\n                _this.nodes.delete(node.element);\r\n            }\r\n            if (_this.identityProvider) {\r\n                var id = _this.identityProvider.getId(node.element).toString();\r\n                if (!insertedElementIds.has(id)) {\r\n                    _this.nodesByIdentity.delete(id);\r\n                }\r\n            }\r\n            if (onDidDeleteNode) {\r\n                onDidDeleteNode(node);\r\n            }\r\n        };\r\n        this.model.splice(__spreadArrays(location, [0]), Number.MAX_VALUE, children, _onDidCreateNode, _onDidDeleteNode);\r\n    };\r\n    ObjectTreeModel.prototype.preserveCollapseState = function (elements) {\r\n        var _this = this;\r\n        var iterator = elements ? getSequenceIterator(elements) : Iterator.empty();\r\n        if (this.sorter) {\r\n            iterator = Iterator.fromArray(mergeSort(Iterator.collect(iterator), this.sorter.compare.bind(this.sorter)));\r\n        }\r\n        return Iterator.map(iterator, function (treeElement) {\r\n            var node = _this.nodes.get(treeElement.element);\r\n            if (!node && _this.identityProvider) {\r\n                var id = _this.identityProvider.getId(treeElement.element).toString();\r\n                node = _this.nodesByIdentity.get(id);\r\n            }\r\n            if (!node) {\r\n                return __assign(__assign({}, treeElement), { children: _this.preserveCollapseState(treeElement.children) });\r\n            }\r\n            var collapsible = typeof treeElement.collapsible === 'boolean' ? treeElement.collapsible : node.collapsible;\r\n            var collapsed = typeof treeElement.collapsed !== 'undefined' ? treeElement.collapsed : node.collapsed;\r\n            return __assign(__assign({}, treeElement), { collapsible: collapsible,\r\n                collapsed: collapsed, children: _this.preserveCollapseState(treeElement.children) });\r\n        });\r\n    };\r\n    ObjectTreeModel.prototype.rerender = function (element) {\r\n        var location = this.getElementLocation(element);\r\n        this.model.rerender(location);\r\n    };\r\n    ObjectTreeModel.prototype.has = function (element) {\r\n        return this.nodes.has(element);\r\n    };\r\n    ObjectTreeModel.prototype.getListIndex = function (element) {\r\n        var location = this.getElementLocation(element);\r\n        return this.model.getListIndex(location);\r\n    };\r\n    ObjectTreeModel.prototype.getListRenderCount = function (element) {\r\n        var location = this.getElementLocation(element);\r\n        return this.model.getListRenderCount(location);\r\n    };\r\n    ObjectTreeModel.prototype.isCollapsible = function (element) {\r\n        var location = this.getElementLocation(element);\r\n        return this.model.isCollapsible(location);\r\n    };\r\n    ObjectTreeModel.prototype.setCollapsible = function (element, collapsible) {\r\n        var location = this.getElementLocation(element);\r\n        return this.model.setCollapsible(location, collapsible);\r\n    };\r\n    ObjectTreeModel.prototype.isCollapsed = function (element) {\r\n        var location = this.getElementLocation(element);\r\n        return this.model.isCollapsed(location);\r\n    };\r\n    ObjectTreeModel.prototype.setCollapsed = function (element, collapsed, recursive) {\r\n        var location = this.getElementLocation(element);\r\n        return this.model.setCollapsed(location, collapsed, recursive);\r\n    };\r\n    ObjectTreeModel.prototype.expandTo = function (element) {\r\n        var location = this.getElementLocation(element);\r\n        this.model.expandTo(location);\r\n    };\r\n    ObjectTreeModel.prototype.refilter = function () {\r\n        this.model.refilter();\r\n    };\r\n    ObjectTreeModel.prototype.getNode = function (element) {\r\n        if (element === void 0) { element = null; }\r\n        if (element === null) {\r\n            return this.model.getNode(this.model.rootRef);\r\n        }\r\n        var node = this.nodes.get(element);\r\n        if (!node) {\r\n            throw new TreeError(this.user, \"Tree element not found: \" + element);\r\n        }\r\n        return node;\r\n    };\r\n    ObjectTreeModel.prototype.getNodeLocation = function (node) {\r\n        return node.element;\r\n    };\r\n    ObjectTreeModel.prototype.getParentNodeLocation = function (element) {\r\n        if (element === null) {\r\n            throw new TreeError(this.user, \"Invalid getParentNodeLocation call\");\r\n        }\r\n        var node = this.nodes.get(element);\r\n        if (!node) {\r\n            throw new TreeError(this.user, \"Tree element not found: \" + element);\r\n        }\r\n        var location = this.model.getNodeLocation(node);\r\n        var parentLocation = this.model.getParentNodeLocation(location);\r\n        var parent = this.model.getNode(parentLocation);\r\n        return parent.element;\r\n    };\r\n    ObjectTreeModel.prototype.getElementLocation = function (element) {\r\n        if (element === null) {\r\n            return [];\r\n        }\r\n        var node = this.nodes.get(element);\r\n        if (!node) {\r\n            throw new TreeError(this.user, \"Tree element not found: \" + element);\r\n        }\r\n        return this.model.getNodeLocation(node);\r\n    };\r\n    return ObjectTreeModel;\r\n}());\r\nexport { ObjectTreeModel };\r\n"]},"metadata":{},"sourceType":"module"}