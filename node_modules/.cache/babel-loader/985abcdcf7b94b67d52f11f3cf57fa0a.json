{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { CursorState } from './cursorCommon.js';\nimport { OneCursor } from './oneCursor.js';\nimport { Selection } from '../core/selection.js';\n\nvar CursorCollection =\n/** @class */\nfunction () {\n  function CursorCollection(context) {\n    this.context = context;\n    this.primaryCursor = new OneCursor(context);\n    this.secondaryCursors = [];\n    this.lastAddedCursorIndex = 0;\n  }\n\n  CursorCollection.prototype.dispose = function () {\n    this.primaryCursor.dispose(this.context);\n    this.killSecondaryCursors();\n  };\n\n  CursorCollection.prototype.startTrackingSelections = function () {\n    this.primaryCursor.startTrackingSelection(this.context);\n\n    for (var i = 0, len = this.secondaryCursors.length; i < len; i++) {\n      this.secondaryCursors[i].startTrackingSelection(this.context);\n    }\n  };\n\n  CursorCollection.prototype.stopTrackingSelections = function () {\n    this.primaryCursor.stopTrackingSelection(this.context);\n\n    for (var i = 0, len = this.secondaryCursors.length; i < len; i++) {\n      this.secondaryCursors[i].stopTrackingSelection(this.context);\n    }\n  };\n\n  CursorCollection.prototype.updateContext = function (context) {\n    this.context = context;\n  };\n\n  CursorCollection.prototype.ensureValidState = function () {\n    this.primaryCursor.ensureValidState(this.context);\n\n    for (var i = 0, len = this.secondaryCursors.length; i < len; i++) {\n      this.secondaryCursors[i].ensureValidState(this.context);\n    }\n  };\n\n  CursorCollection.prototype.readSelectionFromMarkers = function () {\n    var result = [];\n    result[0] = this.primaryCursor.readSelectionFromMarkers(this.context);\n\n    for (var i = 0, len = this.secondaryCursors.length; i < len; i++) {\n      result[i + 1] = this.secondaryCursors[i].readSelectionFromMarkers(this.context);\n    }\n\n    return result;\n  };\n\n  CursorCollection.prototype.getAll = function () {\n    var result = [];\n    result[0] = this.primaryCursor.asCursorState();\n\n    for (var i = 0, len = this.secondaryCursors.length; i < len; i++) {\n      result[i + 1] = this.secondaryCursors[i].asCursorState();\n    }\n\n    return result;\n  };\n\n  CursorCollection.prototype.getViewPositions = function () {\n    var result = [];\n    result[0] = this.primaryCursor.viewState.position;\n\n    for (var i = 0, len = this.secondaryCursors.length; i < len; i++) {\n      result[i + 1] = this.secondaryCursors[i].viewState.position;\n    }\n\n    return result;\n  };\n\n  CursorCollection.prototype.getSelections = function () {\n    var result = [];\n    result[0] = this.primaryCursor.modelState.selection;\n\n    for (var i = 0, len = this.secondaryCursors.length; i < len; i++) {\n      result[i + 1] = this.secondaryCursors[i].modelState.selection;\n    }\n\n    return result;\n  };\n\n  CursorCollection.prototype.getViewSelections = function () {\n    var result = [];\n    result[0] = this.primaryCursor.viewState.selection;\n\n    for (var i = 0, len = this.secondaryCursors.length; i < len; i++) {\n      result[i + 1] = this.secondaryCursors[i].viewState.selection;\n    }\n\n    return result;\n  };\n\n  CursorCollection.prototype.setSelections = function (selections) {\n    this.setStates(CursorState.fromModelSelections(selections));\n  };\n\n  CursorCollection.prototype.getPrimaryCursor = function () {\n    return this.primaryCursor.asCursorState();\n  };\n\n  CursorCollection.prototype.setStates = function (states) {\n    if (states === null) {\n      return;\n    }\n\n    this.primaryCursor.setState(this.context, states[0].modelState, states[0].viewState);\n\n    this._setSecondaryStates(states.slice(1));\n  };\n  /**\r\n   * Creates or disposes secondary cursors as necessary to match the number of `secondarySelections`.\r\n   */\n\n\n  CursorCollection.prototype._setSecondaryStates = function (secondaryStates) {\n    var secondaryCursorsLength = this.secondaryCursors.length;\n    var secondaryStatesLength = secondaryStates.length;\n\n    if (secondaryCursorsLength < secondaryStatesLength) {\n      var createCnt = secondaryStatesLength - secondaryCursorsLength;\n\n      for (var i = 0; i < createCnt; i++) {\n        this._addSecondaryCursor();\n      }\n    } else if (secondaryCursorsLength > secondaryStatesLength) {\n      var removeCnt = secondaryCursorsLength - secondaryStatesLength;\n\n      for (var i = 0; i < removeCnt; i++) {\n        this._removeSecondaryCursor(this.secondaryCursors.length - 1);\n      }\n    }\n\n    for (var i = 0; i < secondaryStatesLength; i++) {\n      this.secondaryCursors[i].setState(this.context, secondaryStates[i].modelState, secondaryStates[i].viewState);\n    }\n  };\n\n  CursorCollection.prototype.killSecondaryCursors = function () {\n    this._setSecondaryStates([]);\n  };\n\n  CursorCollection.prototype._addSecondaryCursor = function () {\n    this.secondaryCursors.push(new OneCursor(this.context));\n    this.lastAddedCursorIndex = this.secondaryCursors.length;\n  };\n\n  CursorCollection.prototype.getLastAddedCursorIndex = function () {\n    if (this.secondaryCursors.length === 0 || this.lastAddedCursorIndex === 0) {\n      return 0;\n    }\n\n    return this.lastAddedCursorIndex;\n  };\n\n  CursorCollection.prototype._removeSecondaryCursor = function (removeIndex) {\n    if (this.lastAddedCursorIndex >= removeIndex + 1) {\n      this.lastAddedCursorIndex--;\n    }\n\n    this.secondaryCursors[removeIndex].dispose(this.context);\n    this.secondaryCursors.splice(removeIndex, 1);\n  };\n\n  CursorCollection.prototype._getAll = function () {\n    var result = [];\n    result[0] = this.primaryCursor;\n\n    for (var i = 0, len = this.secondaryCursors.length; i < len; i++) {\n      result[i + 1] = this.secondaryCursors[i];\n    }\n\n    return result;\n  };\n\n  CursorCollection.prototype.normalize = function () {\n    if (this.secondaryCursors.length === 0) {\n      return;\n    }\n\n    var cursors = this._getAll();\n\n    var sortedCursors = [];\n\n    for (var i = 0, len = cursors.length; i < len; i++) {\n      sortedCursors.push({\n        index: i,\n        selection: cursors[i].modelState.selection\n      });\n    }\n\n    sortedCursors.sort(function (a, b) {\n      if (a.selection.startLineNumber === b.selection.startLineNumber) {\n        return a.selection.startColumn - b.selection.startColumn;\n      }\n\n      return a.selection.startLineNumber - b.selection.startLineNumber;\n    });\n\n    for (var sortedCursorIndex = 0; sortedCursorIndex < sortedCursors.length - 1; sortedCursorIndex++) {\n      var current = sortedCursors[sortedCursorIndex];\n      var next = sortedCursors[sortedCursorIndex + 1];\n      var currentSelection = current.selection;\n      var nextSelection = next.selection;\n\n      if (!this.context.config.multiCursorMergeOverlapping) {\n        continue;\n      }\n\n      var shouldMergeCursors = void 0;\n\n      if (nextSelection.isEmpty() || currentSelection.isEmpty()) {\n        // Merge touching cursors if one of them is collapsed\n        shouldMergeCursors = nextSelection.getStartPosition().isBeforeOrEqual(currentSelection.getEndPosition());\n      } else {\n        // Merge only overlapping cursors (i.e. allow touching ranges)\n        shouldMergeCursors = nextSelection.getStartPosition().isBefore(currentSelection.getEndPosition());\n      }\n\n      if (shouldMergeCursors) {\n        var winnerSortedCursorIndex = current.index < next.index ? sortedCursorIndex : sortedCursorIndex + 1;\n        var looserSortedCursorIndex = current.index < next.index ? sortedCursorIndex + 1 : sortedCursorIndex;\n        var looserIndex = sortedCursors[looserSortedCursorIndex].index;\n        var winnerIndex = sortedCursors[winnerSortedCursorIndex].index;\n        var looserSelection = sortedCursors[looserSortedCursorIndex].selection;\n        var winnerSelection = sortedCursors[winnerSortedCursorIndex].selection;\n\n        if (!looserSelection.equalsSelection(winnerSelection)) {\n          var resultingRange = looserSelection.plusRange(winnerSelection);\n          var looserSelectionIsLTR = looserSelection.selectionStartLineNumber === looserSelection.startLineNumber && looserSelection.selectionStartColumn === looserSelection.startColumn;\n          var winnerSelectionIsLTR = winnerSelection.selectionStartLineNumber === winnerSelection.startLineNumber && winnerSelection.selectionStartColumn === winnerSelection.startColumn; // Give more importance to the last added cursor (think Ctrl-dragging + hitting another cursor)\n\n          var resultingSelectionIsLTR = void 0;\n\n          if (looserIndex === this.lastAddedCursorIndex) {\n            resultingSelectionIsLTR = looserSelectionIsLTR;\n            this.lastAddedCursorIndex = winnerIndex;\n          } else {\n            // Winner takes it all\n            resultingSelectionIsLTR = winnerSelectionIsLTR;\n          }\n\n          var resultingSelection = void 0;\n\n          if (resultingSelectionIsLTR) {\n            resultingSelection = new Selection(resultingRange.startLineNumber, resultingRange.startColumn, resultingRange.endLineNumber, resultingRange.endColumn);\n          } else {\n            resultingSelection = new Selection(resultingRange.endLineNumber, resultingRange.endColumn, resultingRange.startLineNumber, resultingRange.startColumn);\n          }\n\n          sortedCursors[winnerSortedCursorIndex].selection = resultingSelection;\n          var resultingState = CursorState.fromModelSelection(resultingSelection);\n          cursors[winnerIndex].setState(this.context, resultingState.modelState, resultingState.viewState);\n        }\n\n        for (var _i = 0, sortedCursors_1 = sortedCursors; _i < sortedCursors_1.length; _i++) {\n          var sortedCursor = sortedCursors_1[_i];\n\n          if (sortedCursor.index > looserIndex) {\n            sortedCursor.index--;\n          }\n        }\n\n        cursors.splice(looserIndex, 1);\n        sortedCursors.splice(looserSortedCursorIndex, 1);\n\n        this._removeSecondaryCursor(looserIndex - 1);\n\n        sortedCursorIndex--;\n      }\n    }\n  };\n\n  return CursorCollection;\n}();\n\nexport { CursorCollection };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/common/controller/cursorCollection.js"],"names":["CursorState","OneCursor","Selection","CursorCollection","context","primaryCursor","secondaryCursors","lastAddedCursorIndex","prototype","dispose","killSecondaryCursors","startTrackingSelections","startTrackingSelection","i","len","length","stopTrackingSelections","stopTrackingSelection","updateContext","ensureValidState","readSelectionFromMarkers","result","getAll","asCursorState","getViewPositions","viewState","position","getSelections","modelState","selection","getViewSelections","setSelections","selections","setStates","fromModelSelections","getPrimaryCursor","states","setState","_setSecondaryStates","slice","secondaryStates","secondaryCursorsLength","secondaryStatesLength","createCnt","_addSecondaryCursor","removeCnt","_removeSecondaryCursor","push","getLastAddedCursorIndex","removeIndex","splice","_getAll","normalize","cursors","sortedCursors","index","sort","a","b","startLineNumber","startColumn","sortedCursorIndex","current","next","currentSelection","nextSelection","config","multiCursorMergeOverlapping","shouldMergeCursors","isEmpty","getStartPosition","isBeforeOrEqual","getEndPosition","isBefore","winnerSortedCursorIndex","looserSortedCursorIndex","looserIndex","winnerIndex","looserSelection","winnerSelection","equalsSelection","resultingRange","plusRange","looserSelectionIsLTR","selectionStartLineNumber","selectionStartColumn","winnerSelectionIsLTR","resultingSelectionIsLTR","resultingSelection","endLineNumber","endColumn","resultingState","fromModelSelection","_i","sortedCursors_1","sortedCursor"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { CursorState } from './cursorCommon.js';\r\nimport { OneCursor } from './oneCursor.js';\r\nimport { Selection } from '../core/selection.js';\r\nvar CursorCollection = /** @class */ (function () {\r\n    function CursorCollection(context) {\r\n        this.context = context;\r\n        this.primaryCursor = new OneCursor(context);\r\n        this.secondaryCursors = [];\r\n        this.lastAddedCursorIndex = 0;\r\n    }\r\n    CursorCollection.prototype.dispose = function () {\r\n        this.primaryCursor.dispose(this.context);\r\n        this.killSecondaryCursors();\r\n    };\r\n    CursorCollection.prototype.startTrackingSelections = function () {\r\n        this.primaryCursor.startTrackingSelection(this.context);\r\n        for (var i = 0, len = this.secondaryCursors.length; i < len; i++) {\r\n            this.secondaryCursors[i].startTrackingSelection(this.context);\r\n        }\r\n    };\r\n    CursorCollection.prototype.stopTrackingSelections = function () {\r\n        this.primaryCursor.stopTrackingSelection(this.context);\r\n        for (var i = 0, len = this.secondaryCursors.length; i < len; i++) {\r\n            this.secondaryCursors[i].stopTrackingSelection(this.context);\r\n        }\r\n    };\r\n    CursorCollection.prototype.updateContext = function (context) {\r\n        this.context = context;\r\n    };\r\n    CursorCollection.prototype.ensureValidState = function () {\r\n        this.primaryCursor.ensureValidState(this.context);\r\n        for (var i = 0, len = this.secondaryCursors.length; i < len; i++) {\r\n            this.secondaryCursors[i].ensureValidState(this.context);\r\n        }\r\n    };\r\n    CursorCollection.prototype.readSelectionFromMarkers = function () {\r\n        var result = [];\r\n        result[0] = this.primaryCursor.readSelectionFromMarkers(this.context);\r\n        for (var i = 0, len = this.secondaryCursors.length; i < len; i++) {\r\n            result[i + 1] = this.secondaryCursors[i].readSelectionFromMarkers(this.context);\r\n        }\r\n        return result;\r\n    };\r\n    CursorCollection.prototype.getAll = function () {\r\n        var result = [];\r\n        result[0] = this.primaryCursor.asCursorState();\r\n        for (var i = 0, len = this.secondaryCursors.length; i < len; i++) {\r\n            result[i + 1] = this.secondaryCursors[i].asCursorState();\r\n        }\r\n        return result;\r\n    };\r\n    CursorCollection.prototype.getViewPositions = function () {\r\n        var result = [];\r\n        result[0] = this.primaryCursor.viewState.position;\r\n        for (var i = 0, len = this.secondaryCursors.length; i < len; i++) {\r\n            result[i + 1] = this.secondaryCursors[i].viewState.position;\r\n        }\r\n        return result;\r\n    };\r\n    CursorCollection.prototype.getSelections = function () {\r\n        var result = [];\r\n        result[0] = this.primaryCursor.modelState.selection;\r\n        for (var i = 0, len = this.secondaryCursors.length; i < len; i++) {\r\n            result[i + 1] = this.secondaryCursors[i].modelState.selection;\r\n        }\r\n        return result;\r\n    };\r\n    CursorCollection.prototype.getViewSelections = function () {\r\n        var result = [];\r\n        result[0] = this.primaryCursor.viewState.selection;\r\n        for (var i = 0, len = this.secondaryCursors.length; i < len; i++) {\r\n            result[i + 1] = this.secondaryCursors[i].viewState.selection;\r\n        }\r\n        return result;\r\n    };\r\n    CursorCollection.prototype.setSelections = function (selections) {\r\n        this.setStates(CursorState.fromModelSelections(selections));\r\n    };\r\n    CursorCollection.prototype.getPrimaryCursor = function () {\r\n        return this.primaryCursor.asCursorState();\r\n    };\r\n    CursorCollection.prototype.setStates = function (states) {\r\n        if (states === null) {\r\n            return;\r\n        }\r\n        this.primaryCursor.setState(this.context, states[0].modelState, states[0].viewState);\r\n        this._setSecondaryStates(states.slice(1));\r\n    };\r\n    /**\r\n     * Creates or disposes secondary cursors as necessary to match the number of `secondarySelections`.\r\n     */\r\n    CursorCollection.prototype._setSecondaryStates = function (secondaryStates) {\r\n        var secondaryCursorsLength = this.secondaryCursors.length;\r\n        var secondaryStatesLength = secondaryStates.length;\r\n        if (secondaryCursorsLength < secondaryStatesLength) {\r\n            var createCnt = secondaryStatesLength - secondaryCursorsLength;\r\n            for (var i = 0; i < createCnt; i++) {\r\n                this._addSecondaryCursor();\r\n            }\r\n        }\r\n        else if (secondaryCursorsLength > secondaryStatesLength) {\r\n            var removeCnt = secondaryCursorsLength - secondaryStatesLength;\r\n            for (var i = 0; i < removeCnt; i++) {\r\n                this._removeSecondaryCursor(this.secondaryCursors.length - 1);\r\n            }\r\n        }\r\n        for (var i = 0; i < secondaryStatesLength; i++) {\r\n            this.secondaryCursors[i].setState(this.context, secondaryStates[i].modelState, secondaryStates[i].viewState);\r\n        }\r\n    };\r\n    CursorCollection.prototype.killSecondaryCursors = function () {\r\n        this._setSecondaryStates([]);\r\n    };\r\n    CursorCollection.prototype._addSecondaryCursor = function () {\r\n        this.secondaryCursors.push(new OneCursor(this.context));\r\n        this.lastAddedCursorIndex = this.secondaryCursors.length;\r\n    };\r\n    CursorCollection.prototype.getLastAddedCursorIndex = function () {\r\n        if (this.secondaryCursors.length === 0 || this.lastAddedCursorIndex === 0) {\r\n            return 0;\r\n        }\r\n        return this.lastAddedCursorIndex;\r\n    };\r\n    CursorCollection.prototype._removeSecondaryCursor = function (removeIndex) {\r\n        if (this.lastAddedCursorIndex >= removeIndex + 1) {\r\n            this.lastAddedCursorIndex--;\r\n        }\r\n        this.secondaryCursors[removeIndex].dispose(this.context);\r\n        this.secondaryCursors.splice(removeIndex, 1);\r\n    };\r\n    CursorCollection.prototype._getAll = function () {\r\n        var result = [];\r\n        result[0] = this.primaryCursor;\r\n        for (var i = 0, len = this.secondaryCursors.length; i < len; i++) {\r\n            result[i + 1] = this.secondaryCursors[i];\r\n        }\r\n        return result;\r\n    };\r\n    CursorCollection.prototype.normalize = function () {\r\n        if (this.secondaryCursors.length === 0) {\r\n            return;\r\n        }\r\n        var cursors = this._getAll();\r\n        var sortedCursors = [];\r\n        for (var i = 0, len = cursors.length; i < len; i++) {\r\n            sortedCursors.push({\r\n                index: i,\r\n                selection: cursors[i].modelState.selection,\r\n            });\r\n        }\r\n        sortedCursors.sort(function (a, b) {\r\n            if (a.selection.startLineNumber === b.selection.startLineNumber) {\r\n                return a.selection.startColumn - b.selection.startColumn;\r\n            }\r\n            return a.selection.startLineNumber - b.selection.startLineNumber;\r\n        });\r\n        for (var sortedCursorIndex = 0; sortedCursorIndex < sortedCursors.length - 1; sortedCursorIndex++) {\r\n            var current = sortedCursors[sortedCursorIndex];\r\n            var next = sortedCursors[sortedCursorIndex + 1];\r\n            var currentSelection = current.selection;\r\n            var nextSelection = next.selection;\r\n            if (!this.context.config.multiCursorMergeOverlapping) {\r\n                continue;\r\n            }\r\n            var shouldMergeCursors = void 0;\r\n            if (nextSelection.isEmpty() || currentSelection.isEmpty()) {\r\n                // Merge touching cursors if one of them is collapsed\r\n                shouldMergeCursors = nextSelection.getStartPosition().isBeforeOrEqual(currentSelection.getEndPosition());\r\n            }\r\n            else {\r\n                // Merge only overlapping cursors (i.e. allow touching ranges)\r\n                shouldMergeCursors = nextSelection.getStartPosition().isBefore(currentSelection.getEndPosition());\r\n            }\r\n            if (shouldMergeCursors) {\r\n                var winnerSortedCursorIndex = current.index < next.index ? sortedCursorIndex : sortedCursorIndex + 1;\r\n                var looserSortedCursorIndex = current.index < next.index ? sortedCursorIndex + 1 : sortedCursorIndex;\r\n                var looserIndex = sortedCursors[looserSortedCursorIndex].index;\r\n                var winnerIndex = sortedCursors[winnerSortedCursorIndex].index;\r\n                var looserSelection = sortedCursors[looserSortedCursorIndex].selection;\r\n                var winnerSelection = sortedCursors[winnerSortedCursorIndex].selection;\r\n                if (!looserSelection.equalsSelection(winnerSelection)) {\r\n                    var resultingRange = looserSelection.plusRange(winnerSelection);\r\n                    var looserSelectionIsLTR = (looserSelection.selectionStartLineNumber === looserSelection.startLineNumber && looserSelection.selectionStartColumn === looserSelection.startColumn);\r\n                    var winnerSelectionIsLTR = (winnerSelection.selectionStartLineNumber === winnerSelection.startLineNumber && winnerSelection.selectionStartColumn === winnerSelection.startColumn);\r\n                    // Give more importance to the last added cursor (think Ctrl-dragging + hitting another cursor)\r\n                    var resultingSelectionIsLTR = void 0;\r\n                    if (looserIndex === this.lastAddedCursorIndex) {\r\n                        resultingSelectionIsLTR = looserSelectionIsLTR;\r\n                        this.lastAddedCursorIndex = winnerIndex;\r\n                    }\r\n                    else {\r\n                        // Winner takes it all\r\n                        resultingSelectionIsLTR = winnerSelectionIsLTR;\r\n                    }\r\n                    var resultingSelection = void 0;\r\n                    if (resultingSelectionIsLTR) {\r\n                        resultingSelection = new Selection(resultingRange.startLineNumber, resultingRange.startColumn, resultingRange.endLineNumber, resultingRange.endColumn);\r\n                    }\r\n                    else {\r\n                        resultingSelection = new Selection(resultingRange.endLineNumber, resultingRange.endColumn, resultingRange.startLineNumber, resultingRange.startColumn);\r\n                    }\r\n                    sortedCursors[winnerSortedCursorIndex].selection = resultingSelection;\r\n                    var resultingState = CursorState.fromModelSelection(resultingSelection);\r\n                    cursors[winnerIndex].setState(this.context, resultingState.modelState, resultingState.viewState);\r\n                }\r\n                for (var _i = 0, sortedCursors_1 = sortedCursors; _i < sortedCursors_1.length; _i++) {\r\n                    var sortedCursor = sortedCursors_1[_i];\r\n                    if (sortedCursor.index > looserIndex) {\r\n                        sortedCursor.index--;\r\n                    }\r\n                }\r\n                cursors.splice(looserIndex, 1);\r\n                sortedCursors.splice(looserSortedCursorIndex, 1);\r\n                this._removeSecondaryCursor(looserIndex - 1);\r\n                sortedCursorIndex--;\r\n            }\r\n        }\r\n    };\r\n    return CursorCollection;\r\n}());\r\nexport { CursorCollection };\r\n"]},"metadata":{},"sourceType":"module"}