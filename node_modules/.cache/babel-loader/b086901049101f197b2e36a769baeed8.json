{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nimport { registerSingleton } from '../../../platform/instantiation/common/extensions.js';\nimport { CodeLensModel } from './codelens.js';\nimport { LRUCache, values } from '../../../base/common/map.js';\nimport { IStorageService, WillSaveStateReason } from '../../../platform/storage/common/storage.js';\nimport { Range } from '../../common/core/range.js';\nimport { runWhenIdle } from '../../../base/common/async.js';\nimport { once } from '../../../base/common/functional.js';\nexport var ICodeLensCache = createDecorator('ICodeLensCache');\n\nvar CacheItem =\n/** @class */\nfunction () {\n  function CacheItem(lineCount, data) {\n    this.lineCount = lineCount;\n    this.data = data;\n  }\n\n  return CacheItem;\n}();\n\nvar CodeLensCache =\n/** @class */\nfunction () {\n  function CodeLensCache(storageService) {\n    var _this = this;\n\n    this._fakeProvider = new (\n    /** @class */\n    function () {\n      function class_1() {}\n\n      class_1.prototype.provideCodeLenses = function () {\n        throw new Error('not supported');\n      };\n\n      return class_1;\n    }())();\n    this._cache = new LRUCache(20, 0.75); // remove old data\n\n    var oldkey = 'codelens/cache';\n    runWhenIdle(function () {\n      return storageService.remove(oldkey, 1\n      /* WORKSPACE */\n      );\n    }); // restore lens data on start\n\n    var key = 'codelens/cache2';\n    var raw = storageService.get(key, 1\n    /* WORKSPACE */\n    , '{}');\n\n    this._deserialize(raw); // store lens data on shutdown\n\n\n    once(storageService.onWillSaveState)(function (e) {\n      if (e.reason === WillSaveStateReason.SHUTDOWN) {\n        storageService.store(key, _this._serialize(), 1\n        /* WORKSPACE */\n        );\n      }\n    });\n  }\n\n  CodeLensCache.prototype.put = function (model, data) {\n    // create a copy of the model that is without command-ids\n    // but with comand-labels\n    var copyItems = data.lenses.map(function (item) {\n      var _a;\n\n      return {\n        range: item.symbol.range,\n        command: item.symbol.command && {\n          id: '',\n          title: (_a = item.symbol.command) === null || _a === void 0 ? void 0 : _a.title\n        }\n      };\n    });\n    var copyModel = new CodeLensModel();\n    copyModel.add({\n      lenses: copyItems,\n      dispose: function () {}\n    }, this._fakeProvider);\n    var item = new CacheItem(model.getLineCount(), copyModel);\n\n    this._cache.set(model.uri.toString(), item);\n  };\n\n  CodeLensCache.prototype.get = function (model) {\n    var item = this._cache.get(model.uri.toString());\n\n    return item && item.lineCount === model.getLineCount() ? item.data : undefined;\n  };\n\n  CodeLensCache.prototype.delete = function (model) {\n    this._cache.delete(model.uri.toString());\n  }; // --- persistence\n\n\n  CodeLensCache.prototype._serialize = function () {\n    var data = Object.create(null);\n\n    this._cache.forEach(function (value, key) {\n      var lines = new Set();\n\n      for (var _i = 0, _a = value.data.lenses; _i < _a.length; _i++) {\n        var d = _a[_i];\n        lines.add(d.symbol.range.startLineNumber);\n      }\n\n      data[key] = {\n        lineCount: value.lineCount,\n        lines: values(lines)\n      };\n    });\n\n    return JSON.stringify(data);\n  };\n\n  CodeLensCache.prototype._deserialize = function (raw) {\n    try {\n      var data = JSON.parse(raw);\n\n      for (var key in data) {\n        var element = data[key];\n        var lenses = [];\n\n        for (var _i = 0, _a = element.lines; _i < _a.length; _i++) {\n          var line = _a[_i];\n          lenses.push({\n            range: new Range(line, 1, line, 11)\n          });\n        }\n\n        var model = new CodeLensModel();\n        model.add({\n          lenses: lenses,\n          dispose: function () {}\n        }, this._fakeProvider);\n\n        this._cache.set(key, new CacheItem(element.lineCount, model));\n      }\n    } catch (_b) {// ignore...\n    }\n  };\n\n  CodeLensCache = __decorate([__param(0, IStorageService)], CodeLensCache);\n  return CodeLensCache;\n}();\n\nexport { CodeLensCache };\nregisterSingleton(ICodeLensCache, CodeLensCache);","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/contrib/codelens/codeLensCache.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","createDecorator","registerSingleton","CodeLensModel","LRUCache","values","IStorageService","WillSaveStateReason","Range","runWhenIdle","once","ICodeLensCache","CacheItem","lineCount","data","CodeLensCache","storageService","_this","_fakeProvider","class_1","prototype","provideCodeLenses","Error","_cache","oldkey","remove","raw","get","_deserialize","onWillSaveState","e","reason","SHUTDOWN","store","_serialize","put","model","copyItems","lenses","map","item","_a","range","symbol","command","id","title","copyModel","add","dispose","getLineCount","set","uri","toString","undefined","delete","create","forEach","value","lines","Set","_i","startLineNumber","JSON","stringify","parse","element","line","push","_b"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { registerSingleton } from '../../../platform/instantiation/common/extensions.js';\r\nimport { CodeLensModel } from './codelens.js';\r\nimport { LRUCache, values } from '../../../base/common/map.js';\r\nimport { IStorageService, WillSaveStateReason } from '../../../platform/storage/common/storage.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { runWhenIdle } from '../../../base/common/async.js';\r\nimport { once } from '../../../base/common/functional.js';\r\nexport var ICodeLensCache = createDecorator('ICodeLensCache');\r\nvar CacheItem = /** @class */ (function () {\r\n    function CacheItem(lineCount, data) {\r\n        this.lineCount = lineCount;\r\n        this.data = data;\r\n    }\r\n    return CacheItem;\r\n}());\r\nvar CodeLensCache = /** @class */ (function () {\r\n    function CodeLensCache(storageService) {\r\n        var _this = this;\r\n        this._fakeProvider = new /** @class */ (function () {\r\n            function class_1() {\r\n            }\r\n            class_1.prototype.provideCodeLenses = function () {\r\n                throw new Error('not supported');\r\n            };\r\n            return class_1;\r\n        }());\r\n        this._cache = new LRUCache(20, 0.75);\r\n        // remove old data\r\n        var oldkey = 'codelens/cache';\r\n        runWhenIdle(function () { return storageService.remove(oldkey, 1 /* WORKSPACE */); });\r\n        // restore lens data on start\r\n        var key = 'codelens/cache2';\r\n        var raw = storageService.get(key, 1 /* WORKSPACE */, '{}');\r\n        this._deserialize(raw);\r\n        // store lens data on shutdown\r\n        once(storageService.onWillSaveState)(function (e) {\r\n            if (e.reason === WillSaveStateReason.SHUTDOWN) {\r\n                storageService.store(key, _this._serialize(), 1 /* WORKSPACE */);\r\n            }\r\n        });\r\n    }\r\n    CodeLensCache.prototype.put = function (model, data) {\r\n        // create a copy of the model that is without command-ids\r\n        // but with comand-labels\r\n        var copyItems = data.lenses.map(function (item) {\r\n            var _a;\r\n            return {\r\n                range: item.symbol.range,\r\n                command: item.symbol.command && { id: '', title: (_a = item.symbol.command) === null || _a === void 0 ? void 0 : _a.title },\r\n            };\r\n        });\r\n        var copyModel = new CodeLensModel();\r\n        copyModel.add({ lenses: copyItems, dispose: function () { } }, this._fakeProvider);\r\n        var item = new CacheItem(model.getLineCount(), copyModel);\r\n        this._cache.set(model.uri.toString(), item);\r\n    };\r\n    CodeLensCache.prototype.get = function (model) {\r\n        var item = this._cache.get(model.uri.toString());\r\n        return item && item.lineCount === model.getLineCount() ? item.data : undefined;\r\n    };\r\n    CodeLensCache.prototype.delete = function (model) {\r\n        this._cache.delete(model.uri.toString());\r\n    };\r\n    // --- persistence\r\n    CodeLensCache.prototype._serialize = function () {\r\n        var data = Object.create(null);\r\n        this._cache.forEach(function (value, key) {\r\n            var lines = new Set();\r\n            for (var _i = 0, _a = value.data.lenses; _i < _a.length; _i++) {\r\n                var d = _a[_i];\r\n                lines.add(d.symbol.range.startLineNumber);\r\n            }\r\n            data[key] = {\r\n                lineCount: value.lineCount,\r\n                lines: values(lines)\r\n            };\r\n        });\r\n        return JSON.stringify(data);\r\n    };\r\n    CodeLensCache.prototype._deserialize = function (raw) {\r\n        try {\r\n            var data = JSON.parse(raw);\r\n            for (var key in data) {\r\n                var element = data[key];\r\n                var lenses = [];\r\n                for (var _i = 0, _a = element.lines; _i < _a.length; _i++) {\r\n                    var line = _a[_i];\r\n                    lenses.push({ range: new Range(line, 1, line, 11) });\r\n                }\r\n                var model = new CodeLensModel();\r\n                model.add({ lenses: lenses, dispose: function () { } }, this._fakeProvider);\r\n                this._cache.set(key, new CacheItem(element.lineCount, model));\r\n            }\r\n        }\r\n        catch (_b) {\r\n            // ignore...\r\n        }\r\n    };\r\n    CodeLensCache = __decorate([\r\n        __param(0, IStorageService)\r\n    ], CodeLensCache);\r\n    return CodeLensCache;\r\n}());\r\nexport { CodeLensCache };\r\nregisterSingleton(ICodeLensCache, CodeLensCache);\r\n"]},"metadata":{},"sourceType":"module"}