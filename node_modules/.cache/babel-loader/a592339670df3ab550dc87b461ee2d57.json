{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport './countBadge.css';\nimport { $, append } from '../../dom.js';\nimport { format } from '../../../common/strings.js';\nimport { Color } from '../../../common/color.js';\nimport { mixin } from '../../../common/objects.js';\nvar defaultOpts = {\n  badgeBackground: Color.fromHex('#4D4D4D'),\n  badgeForeground: Color.fromHex('#FFFFFF')\n};\n\nvar CountBadge =\n/** @class */\nfunction () {\n  function CountBadge(container, options) {\n    this.count = 0;\n    this.options = options || Object.create(null);\n    mixin(this.options, defaultOpts, false);\n    this.badgeBackground = this.options.badgeBackground;\n    this.badgeForeground = this.options.badgeForeground;\n    this.badgeBorder = this.options.badgeBorder;\n    this.element = append(container, $('.monaco-count-badge'));\n    this.countFormat = this.options.countFormat || '{0}';\n    this.titleFormat = this.options.titleFormat || '';\n    this.setCount(this.options.count || 0);\n  }\n\n  CountBadge.prototype.setCount = function (count) {\n    this.count = count;\n    this.render();\n  };\n\n  CountBadge.prototype.setTitleFormat = function (titleFormat) {\n    this.titleFormat = titleFormat;\n    this.render();\n  };\n\n  CountBadge.prototype.render = function () {\n    this.element.textContent = format(this.countFormat, this.count);\n    this.element.title = format(this.titleFormat, this.count);\n    this.applyStyles();\n  };\n\n  CountBadge.prototype.style = function (styles) {\n    this.badgeBackground = styles.badgeBackground;\n    this.badgeForeground = styles.badgeForeground;\n    this.badgeBorder = styles.badgeBorder;\n    this.applyStyles();\n  };\n\n  CountBadge.prototype.applyStyles = function () {\n    if (this.element) {\n      var background = this.badgeBackground ? this.badgeBackground.toString() : '';\n      var foreground = this.badgeForeground ? this.badgeForeground.toString() : '';\n      var border = this.badgeBorder ? this.badgeBorder.toString() : '';\n      this.element.style.backgroundColor = background;\n      this.element.style.color = foreground;\n      this.element.style.borderWidth = border ? '1px' : '';\n      this.element.style.borderStyle = border ? 'solid' : '';\n      this.element.style.borderColor = border;\n    }\n  };\n\n  return CountBadge;\n}();\n\nexport { CountBadge };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/base/browser/ui/countBadge/countBadge.js"],"names":["$","append","format","Color","mixin","defaultOpts","badgeBackground","fromHex","badgeForeground","CountBadge","container","options","count","Object","create","badgeBorder","element","countFormat","titleFormat","setCount","prototype","render","setTitleFormat","textContent","title","applyStyles","style","styles","background","toString","foreground","border","backgroundColor","color","borderWidth","borderStyle","borderColor"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './countBadge.css';\r\nimport { $, append } from '../../dom.js';\r\nimport { format } from '../../../common/strings.js';\r\nimport { Color } from '../../../common/color.js';\r\nimport { mixin } from '../../../common/objects.js';\r\nvar defaultOpts = {\r\n    badgeBackground: Color.fromHex('#4D4D4D'),\r\n    badgeForeground: Color.fromHex('#FFFFFF')\r\n};\r\nvar CountBadge = /** @class */ (function () {\r\n    function CountBadge(container, options) {\r\n        this.count = 0;\r\n        this.options = options || Object.create(null);\r\n        mixin(this.options, defaultOpts, false);\r\n        this.badgeBackground = this.options.badgeBackground;\r\n        this.badgeForeground = this.options.badgeForeground;\r\n        this.badgeBorder = this.options.badgeBorder;\r\n        this.element = append(container, $('.monaco-count-badge'));\r\n        this.countFormat = this.options.countFormat || '{0}';\r\n        this.titleFormat = this.options.titleFormat || '';\r\n        this.setCount(this.options.count || 0);\r\n    }\r\n    CountBadge.prototype.setCount = function (count) {\r\n        this.count = count;\r\n        this.render();\r\n    };\r\n    CountBadge.prototype.setTitleFormat = function (titleFormat) {\r\n        this.titleFormat = titleFormat;\r\n        this.render();\r\n    };\r\n    CountBadge.prototype.render = function () {\r\n        this.element.textContent = format(this.countFormat, this.count);\r\n        this.element.title = format(this.titleFormat, this.count);\r\n        this.applyStyles();\r\n    };\r\n    CountBadge.prototype.style = function (styles) {\r\n        this.badgeBackground = styles.badgeBackground;\r\n        this.badgeForeground = styles.badgeForeground;\r\n        this.badgeBorder = styles.badgeBorder;\r\n        this.applyStyles();\r\n    };\r\n    CountBadge.prototype.applyStyles = function () {\r\n        if (this.element) {\r\n            var background = this.badgeBackground ? this.badgeBackground.toString() : '';\r\n            var foreground = this.badgeForeground ? this.badgeForeground.toString() : '';\r\n            var border = this.badgeBorder ? this.badgeBorder.toString() : '';\r\n            this.element.style.backgroundColor = background;\r\n            this.element.style.color = foreground;\r\n            this.element.style.borderWidth = border ? '1px' : '';\r\n            this.element.style.borderStyle = border ? 'solid' : '';\r\n            this.element.style.borderColor = border;\r\n        }\r\n    };\r\n    return CountBadge;\r\n}());\r\nexport { CountBadge };\r\n"]},"metadata":{},"sourceType":"module"}