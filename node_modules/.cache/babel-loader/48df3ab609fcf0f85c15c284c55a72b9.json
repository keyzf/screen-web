{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { illegalArgument } from '../../base/common/errors.js';\nimport { URI } from '../../base/common/uri.js';\nimport { ICodeEditorService } from './services/codeEditorService.js';\nimport { Position } from '../common/core/position.js';\nimport { IModelService } from '../common/services/modelService.js';\nimport { ITextModelService } from '../common/services/resolverService.js';\nimport { MenuRegistry } from '../../platform/actions/common/actions.js';\nimport { CommandsRegistry } from '../../platform/commands/common/commands.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../platform/contextkey/common/contextkey.js';\nimport { KeybindingsRegistry } from '../../platform/keybinding/common/keybindingsRegistry.js';\nimport { Registry } from '../../platform/registry/common/platform.js';\nimport { ITelemetryService } from '../../platform/telemetry/common/telemetry.js';\nimport { withNullAsUndefined, assertType } from '../../base/common/types.js';\n\nvar Command =\n/** @class */\nfunction () {\n  function Command(opts) {\n    this.id = opts.id;\n    this.precondition = opts.precondition;\n    this._kbOpts = opts.kbOpts;\n    this._menuOpts = opts.menuOpts;\n    this._description = opts.description;\n  }\n\n  Command.prototype.register = function () {\n    var _this = this;\n\n    if (Array.isArray(this._menuOpts)) {\n      this._menuOpts.forEach(this._registerMenuItem, this);\n    } else if (this._menuOpts) {\n      this._registerMenuItem(this._menuOpts);\n    }\n\n    if (this._kbOpts) {\n      var kbWhen = this._kbOpts.kbExpr;\n\n      if (this.precondition) {\n        if (kbWhen) {\n          kbWhen = ContextKeyExpr.and(kbWhen, this.precondition);\n        } else {\n          kbWhen = this.precondition;\n        }\n      }\n\n      KeybindingsRegistry.registerCommandAndKeybindingRule({\n        id: this.id,\n        handler: function (accessor, args) {\n          return _this.runCommand(accessor, args);\n        },\n        weight: this._kbOpts.weight,\n        when: kbWhen,\n        primary: this._kbOpts.primary,\n        secondary: this._kbOpts.secondary,\n        win: this._kbOpts.win,\n        linux: this._kbOpts.linux,\n        mac: this._kbOpts.mac,\n        description: this._description\n      });\n    } else {\n      CommandsRegistry.registerCommand({\n        id: this.id,\n        handler: function (accessor, args) {\n          return _this.runCommand(accessor, args);\n        },\n        description: this._description\n      });\n    }\n  };\n\n  Command.prototype._registerMenuItem = function (item) {\n    MenuRegistry.appendMenuItem(item.menuId, {\n      group: item.group,\n      command: {\n        id: this.id,\n        title: item.title\n      },\n      when: item.when,\n      order: item.order\n    });\n  };\n\n  return Command;\n}();\n\nexport { Command };\n\nvar EditorCommand =\n/** @class */\nfunction (_super) {\n  __extends(EditorCommand, _super);\n\n  function EditorCommand() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\r\n   * Create a command class that is bound to a certain editor contribution.\r\n   */\n\n\n  EditorCommand.bindToContribution = function (controllerGetter) {\n    return (\n      /** @class */\n      function (_super) {\n        __extends(EditorControllerCommandImpl, _super);\n\n        function EditorControllerCommandImpl(opts) {\n          var _this = _super.call(this, opts) || this;\n\n          _this._callback = opts.handler;\n          return _this;\n        }\n\n        EditorControllerCommandImpl.prototype.runEditorCommand = function (accessor, editor, args) {\n          var controller = controllerGetter(editor);\n\n          if (controller) {\n            this._callback(controllerGetter(editor), args);\n          }\n        };\n\n        return EditorControllerCommandImpl;\n      }(EditorCommand)\n    );\n  };\n\n  EditorCommand.prototype.runCommand = function (accessor, args) {\n    var _this = this;\n\n    var codeEditorService = accessor.get(ICodeEditorService); // Find the editor with text focus or active\n\n    var editor = codeEditorService.getFocusedCodeEditor() || codeEditorService.getActiveCodeEditor();\n\n    if (!editor) {\n      // well, at least we tried...\n      return;\n    }\n\n    return editor.invokeWithinContext(function (editorAccessor) {\n      var kbService = editorAccessor.get(IContextKeyService);\n\n      if (!kbService.contextMatchesRules(withNullAsUndefined(_this.precondition))) {\n        // precondition does not hold\n        return;\n      }\n\n      return _this.runEditorCommand(editorAccessor, editor, args);\n    });\n  };\n\n  return EditorCommand;\n}(Command);\n\nexport { EditorCommand };\n\nvar EditorAction =\n/** @class */\nfunction (_super) {\n  __extends(EditorAction, _super);\n\n  function EditorAction(opts) {\n    var _this = _super.call(this, EditorAction.convertOptions(opts)) || this;\n\n    _this.label = opts.label;\n    _this.alias = opts.alias;\n    return _this;\n  }\n\n  EditorAction.convertOptions = function (opts) {\n    var menuOpts;\n\n    if (Array.isArray(opts.menuOpts)) {\n      menuOpts = opts.menuOpts;\n    } else if (opts.menuOpts) {\n      menuOpts = [opts.menuOpts];\n    } else {\n      menuOpts = [];\n    }\n\n    function withDefaults(item) {\n      if (!item.menuId) {\n        item.menuId = 7\n        /* EditorContext */\n        ;\n      }\n\n      if (!item.title) {\n        item.title = opts.label;\n      }\n\n      item.when = ContextKeyExpr.and(opts.precondition, item.when);\n      return item;\n    }\n\n    if (Array.isArray(opts.contextMenuOpts)) {\n      menuOpts.push.apply(menuOpts, opts.contextMenuOpts.map(withDefaults));\n    } else if (opts.contextMenuOpts) {\n      menuOpts.push(withDefaults(opts.contextMenuOpts));\n    }\n\n    opts.menuOpts = menuOpts;\n    return opts;\n  };\n\n  EditorAction.prototype.runEditorCommand = function (accessor, editor, args) {\n    this.reportTelemetry(accessor, editor);\n    return this.run(accessor, editor, args || {});\n  };\n\n  EditorAction.prototype.reportTelemetry = function (accessor, editor) {\n    accessor.get(ITelemetryService).publicLog2('editorActionInvoked', {\n      name: this.label,\n      id: this.id\n    });\n  };\n\n  return EditorAction;\n}(EditorCommand);\n\nexport { EditorAction }; //#endregion EditorAction\n// --- Registration of commands and actions\n\nexport function registerLanguageCommand(id, handler) {\n  CommandsRegistry.registerCommand(id, function (accessor, args) {\n    return handler(accessor, args || {});\n  });\n}\nexport function registerDefaultLanguageCommand(id, handler) {\n  registerLanguageCommand(id, function (accessor, args) {\n    var resource = args.resource,\n        position = args.position;\n\n    if (!(resource instanceof URI)) {\n      throw illegalArgument('resource');\n    }\n\n    if (!Position.isIPosition(position)) {\n      throw illegalArgument('position');\n    }\n\n    var model = accessor.get(IModelService).getModel(resource);\n\n    if (model) {\n      var editorPosition = Position.lift(position);\n      return handler(model, editorPosition, args);\n    }\n\n    return accessor.get(ITextModelService).createModelReference(resource).then(function (reference) {\n      return new Promise(function (resolve, reject) {\n        try {\n          var result = handler(reference.object.textEditorModel, Position.lift(position), args);\n          resolve(result);\n        } catch (err) {\n          reject(err);\n        }\n      }).finally(function () {\n        reference.dispose();\n      });\n    });\n  });\n}\nexport function registerModelAndPositionCommand(id, handler) {\n  CommandsRegistry.registerCommand(id, function (accessor) {\n    var args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n\n    var resource = args[0],\n        position = args[1];\n    assertType(URI.isUri(resource));\n    assertType(Position.isIPosition(position));\n    var model = accessor.get(IModelService).getModel(resource);\n\n    if (model) {\n      var editorPosition = Position.lift(position);\n      return handler(model, editorPosition, args.slice(2));\n    }\n\n    return accessor.get(ITextModelService).createModelReference(resource).then(function (reference) {\n      return new Promise(function (resolve, reject) {\n        try {\n          var result = handler(reference.object.textEditorModel, Position.lift(position), args.slice(2));\n          resolve(result);\n        } catch (err) {\n          reject(err);\n        }\n      }).finally(function () {\n        reference.dispose();\n      });\n    });\n  });\n}\nexport function registerModelCommand(id, handler) {\n  CommandsRegistry.registerCommand(id, function (accessor) {\n    var args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n\n    var resource = args[0];\n    assertType(URI.isUri(resource));\n    var model = accessor.get(IModelService).getModel(resource);\n\n    if (model) {\n      return handler(model, args.slice(1));\n    }\n\n    return accessor.get(ITextModelService).createModelReference(resource).then(function (reference) {\n      return new Promise(function (resolve, reject) {\n        try {\n          var result = handler(reference.object.textEditorModel, args.slice(1));\n          resolve(result);\n        } catch (err) {\n          reject(err);\n        }\n      }).finally(function () {\n        reference.dispose();\n      });\n    });\n  });\n}\nexport function registerEditorCommand(editorCommand) {\n  EditorContributionRegistry.INSTANCE.registerEditorCommand(editorCommand);\n  return editorCommand;\n}\nexport function registerEditorAction(ctor) {\n  EditorContributionRegistry.INSTANCE.registerEditorAction(new ctor());\n}\nexport function registerInstantiatedEditorAction(editorAction) {\n  EditorContributionRegistry.INSTANCE.registerEditorAction(editorAction);\n}\nexport function registerEditorContribution(id, ctor) {\n  EditorContributionRegistry.INSTANCE.registerEditorContribution(id, ctor);\n}\nexport var EditorExtensionsRegistry;\n\n(function (EditorExtensionsRegistry) {\n  function getEditorCommand(commandId) {\n    return EditorContributionRegistry.INSTANCE.getEditorCommand(commandId);\n  }\n\n  EditorExtensionsRegistry.getEditorCommand = getEditorCommand;\n\n  function getEditorActions() {\n    return EditorContributionRegistry.INSTANCE.getEditorActions();\n  }\n\n  EditorExtensionsRegistry.getEditorActions = getEditorActions;\n\n  function getEditorContributions() {\n    return EditorContributionRegistry.INSTANCE.getEditorContributions();\n  }\n\n  EditorExtensionsRegistry.getEditorContributions = getEditorContributions;\n\n  function getSomeEditorContributions(ids) {\n    return EditorContributionRegistry.INSTANCE.getEditorContributions().filter(function (c) {\n      return ids.indexOf(c.id) >= 0;\n    });\n  }\n\n  EditorExtensionsRegistry.getSomeEditorContributions = getSomeEditorContributions;\n\n  function getDiffEditorContributions() {\n    return EditorContributionRegistry.INSTANCE.getDiffEditorContributions();\n  }\n\n  EditorExtensionsRegistry.getDiffEditorContributions = getDiffEditorContributions;\n})(EditorExtensionsRegistry || (EditorExtensionsRegistry = {})); // Editor extension points\n\n\nvar Extensions = {\n  EditorCommonContributions: 'editor.contributions'\n};\n\nvar EditorContributionRegistry =\n/** @class */\nfunction () {\n  function EditorContributionRegistry() {\n    this.editorContributions = [];\n    this.diffEditorContributions = [];\n    this.editorActions = [];\n    this.editorCommands = Object.create(null);\n  }\n\n  EditorContributionRegistry.prototype.registerEditorContribution = function (id, ctor) {\n    this.editorContributions.push({\n      id: id,\n      ctor: ctor\n    });\n  };\n\n  EditorContributionRegistry.prototype.getEditorContributions = function () {\n    return this.editorContributions.slice(0);\n  };\n\n  EditorContributionRegistry.prototype.getDiffEditorContributions = function () {\n    return this.diffEditorContributions.slice(0);\n  };\n\n  EditorContributionRegistry.prototype.registerEditorAction = function (action) {\n    action.register();\n    this.editorActions.push(action);\n  };\n\n  EditorContributionRegistry.prototype.getEditorActions = function () {\n    return this.editorActions.slice(0);\n  };\n\n  EditorContributionRegistry.prototype.registerEditorCommand = function (editorCommand) {\n    editorCommand.register();\n    this.editorCommands[editorCommand.id] = editorCommand;\n  };\n\n  EditorContributionRegistry.prototype.getEditorCommand = function (commandId) {\n    return this.editorCommands[commandId] || null;\n  };\n\n  EditorContributionRegistry.INSTANCE = new EditorContributionRegistry();\n  return EditorContributionRegistry;\n}();\n\nRegistry.add(Extensions.EditorCommonContributions, EditorContributionRegistry.INSTANCE);","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/browser/editorExtensions.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","illegalArgument","URI","ICodeEditorService","Position","IModelService","ITextModelService","MenuRegistry","CommandsRegistry","ContextKeyExpr","IContextKeyService","KeybindingsRegistry","Registry","ITelemetryService","withNullAsUndefined","assertType","Command","opts","id","precondition","_kbOpts","kbOpts","_menuOpts","menuOpts","_description","description","register","_this","isArray","forEach","_registerMenuItem","kbWhen","kbExpr","and","registerCommandAndKeybindingRule","handler","accessor","args","runCommand","weight","when","primary","secondary","win","linux","mac","registerCommand","item","appendMenuItem","menuId","group","command","title","order","EditorCommand","_super","apply","arguments","bindToContribution","controllerGetter","EditorControllerCommandImpl","call","_callback","runEditorCommand","editor","controller","codeEditorService","get","getFocusedCodeEditor","getActiveCodeEditor","invokeWithinContext","editorAccessor","kbService","contextMatchesRules","EditorAction","convertOptions","label","alias","withDefaults","contextMenuOpts","push","map","reportTelemetry","run","publicLog2","name","registerLanguageCommand","registerDefaultLanguageCommand","resource","position","isIPosition","model","getModel","editorPosition","lift","createModelReference","then","reference","Promise","resolve","reject","result","object","textEditorModel","err","finally","dispose","registerModelAndPositionCommand","_i","length","isUri","slice","registerModelCommand","registerEditorCommand","editorCommand","EditorContributionRegistry","INSTANCE","registerEditorAction","ctor","registerInstantiatedEditorAction","editorAction","registerEditorContribution","EditorExtensionsRegistry","getEditorCommand","commandId","getEditorActions","getEditorContributions","getSomeEditorContributions","ids","filter","c","indexOf","getDiffEditorContributions","Extensions","EditorCommonContributions","editorContributions","diffEditorContributions","editorActions","editorCommands","action","add"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { illegalArgument } from '../../base/common/errors.js';\r\nimport { URI } from '../../base/common/uri.js';\r\nimport { ICodeEditorService } from './services/codeEditorService.js';\r\nimport { Position } from '../common/core/position.js';\r\nimport { IModelService } from '../common/services/modelService.js';\r\nimport { ITextModelService } from '../common/services/resolverService.js';\r\nimport { MenuRegistry } from '../../platform/actions/common/actions.js';\r\nimport { CommandsRegistry } from '../../platform/commands/common/commands.js';\r\nimport { ContextKeyExpr, IContextKeyService } from '../../platform/contextkey/common/contextkey.js';\r\nimport { KeybindingsRegistry } from '../../platform/keybinding/common/keybindingsRegistry.js';\r\nimport { Registry } from '../../platform/registry/common/platform.js';\r\nimport { ITelemetryService } from '../../platform/telemetry/common/telemetry.js';\r\nimport { withNullAsUndefined, assertType } from '../../base/common/types.js';\r\nvar Command = /** @class */ (function () {\r\n    function Command(opts) {\r\n        this.id = opts.id;\r\n        this.precondition = opts.precondition;\r\n        this._kbOpts = opts.kbOpts;\r\n        this._menuOpts = opts.menuOpts;\r\n        this._description = opts.description;\r\n    }\r\n    Command.prototype.register = function () {\r\n        var _this = this;\r\n        if (Array.isArray(this._menuOpts)) {\r\n            this._menuOpts.forEach(this._registerMenuItem, this);\r\n        }\r\n        else if (this._menuOpts) {\r\n            this._registerMenuItem(this._menuOpts);\r\n        }\r\n        if (this._kbOpts) {\r\n            var kbWhen = this._kbOpts.kbExpr;\r\n            if (this.precondition) {\r\n                if (kbWhen) {\r\n                    kbWhen = ContextKeyExpr.and(kbWhen, this.precondition);\r\n                }\r\n                else {\r\n                    kbWhen = this.precondition;\r\n                }\r\n            }\r\n            KeybindingsRegistry.registerCommandAndKeybindingRule({\r\n                id: this.id,\r\n                handler: function (accessor, args) { return _this.runCommand(accessor, args); },\r\n                weight: this._kbOpts.weight,\r\n                when: kbWhen,\r\n                primary: this._kbOpts.primary,\r\n                secondary: this._kbOpts.secondary,\r\n                win: this._kbOpts.win,\r\n                linux: this._kbOpts.linux,\r\n                mac: this._kbOpts.mac,\r\n                description: this._description\r\n            });\r\n        }\r\n        else {\r\n            CommandsRegistry.registerCommand({\r\n                id: this.id,\r\n                handler: function (accessor, args) { return _this.runCommand(accessor, args); },\r\n                description: this._description\r\n            });\r\n        }\r\n    };\r\n    Command.prototype._registerMenuItem = function (item) {\r\n        MenuRegistry.appendMenuItem(item.menuId, {\r\n            group: item.group,\r\n            command: {\r\n                id: this.id,\r\n                title: item.title,\r\n            },\r\n            when: item.when,\r\n            order: item.order\r\n        });\r\n    };\r\n    return Command;\r\n}());\r\nexport { Command };\r\nvar EditorCommand = /** @class */ (function (_super) {\r\n    __extends(EditorCommand, _super);\r\n    function EditorCommand() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Create a command class that is bound to a certain editor contribution.\r\n     */\r\n    EditorCommand.bindToContribution = function (controllerGetter) {\r\n        return /** @class */ (function (_super) {\r\n            __extends(EditorControllerCommandImpl, _super);\r\n            function EditorControllerCommandImpl(opts) {\r\n                var _this = _super.call(this, opts) || this;\r\n                _this._callback = opts.handler;\r\n                return _this;\r\n            }\r\n            EditorControllerCommandImpl.prototype.runEditorCommand = function (accessor, editor, args) {\r\n                var controller = controllerGetter(editor);\r\n                if (controller) {\r\n                    this._callback(controllerGetter(editor), args);\r\n                }\r\n            };\r\n            return EditorControllerCommandImpl;\r\n        }(EditorCommand));\r\n    };\r\n    EditorCommand.prototype.runCommand = function (accessor, args) {\r\n        var _this = this;\r\n        var codeEditorService = accessor.get(ICodeEditorService);\r\n        // Find the editor with text focus or active\r\n        var editor = codeEditorService.getFocusedCodeEditor() || codeEditorService.getActiveCodeEditor();\r\n        if (!editor) {\r\n            // well, at least we tried...\r\n            return;\r\n        }\r\n        return editor.invokeWithinContext(function (editorAccessor) {\r\n            var kbService = editorAccessor.get(IContextKeyService);\r\n            if (!kbService.contextMatchesRules(withNullAsUndefined(_this.precondition))) {\r\n                // precondition does not hold\r\n                return;\r\n            }\r\n            return _this.runEditorCommand(editorAccessor, editor, args);\r\n        });\r\n    };\r\n    return EditorCommand;\r\n}(Command));\r\nexport { EditorCommand };\r\nvar EditorAction = /** @class */ (function (_super) {\r\n    __extends(EditorAction, _super);\r\n    function EditorAction(opts) {\r\n        var _this = _super.call(this, EditorAction.convertOptions(opts)) || this;\r\n        _this.label = opts.label;\r\n        _this.alias = opts.alias;\r\n        return _this;\r\n    }\r\n    EditorAction.convertOptions = function (opts) {\r\n        var menuOpts;\r\n        if (Array.isArray(opts.menuOpts)) {\r\n            menuOpts = opts.menuOpts;\r\n        }\r\n        else if (opts.menuOpts) {\r\n            menuOpts = [opts.menuOpts];\r\n        }\r\n        else {\r\n            menuOpts = [];\r\n        }\r\n        function withDefaults(item) {\r\n            if (!item.menuId) {\r\n                item.menuId = 7 /* EditorContext */;\r\n            }\r\n            if (!item.title) {\r\n                item.title = opts.label;\r\n            }\r\n            item.when = ContextKeyExpr.and(opts.precondition, item.when);\r\n            return item;\r\n        }\r\n        if (Array.isArray(opts.contextMenuOpts)) {\r\n            menuOpts.push.apply(menuOpts, opts.contextMenuOpts.map(withDefaults));\r\n        }\r\n        else if (opts.contextMenuOpts) {\r\n            menuOpts.push(withDefaults(opts.contextMenuOpts));\r\n        }\r\n        opts.menuOpts = menuOpts;\r\n        return opts;\r\n    };\r\n    EditorAction.prototype.runEditorCommand = function (accessor, editor, args) {\r\n        this.reportTelemetry(accessor, editor);\r\n        return this.run(accessor, editor, args || {});\r\n    };\r\n    EditorAction.prototype.reportTelemetry = function (accessor, editor) {\r\n        accessor.get(ITelemetryService).publicLog2('editorActionInvoked', { name: this.label, id: this.id });\r\n    };\r\n    return EditorAction;\r\n}(EditorCommand));\r\nexport { EditorAction };\r\n//#endregion EditorAction\r\n// --- Registration of commands and actions\r\nexport function registerLanguageCommand(id, handler) {\r\n    CommandsRegistry.registerCommand(id, function (accessor, args) { return handler(accessor, args || {}); });\r\n}\r\nexport function registerDefaultLanguageCommand(id, handler) {\r\n    registerLanguageCommand(id, function (accessor, args) {\r\n        var resource = args.resource, position = args.position;\r\n        if (!(resource instanceof URI)) {\r\n            throw illegalArgument('resource');\r\n        }\r\n        if (!Position.isIPosition(position)) {\r\n            throw illegalArgument('position');\r\n        }\r\n        var model = accessor.get(IModelService).getModel(resource);\r\n        if (model) {\r\n            var editorPosition = Position.lift(position);\r\n            return handler(model, editorPosition, args);\r\n        }\r\n        return accessor.get(ITextModelService).createModelReference(resource).then(function (reference) {\r\n            return new Promise(function (resolve, reject) {\r\n                try {\r\n                    var result = handler(reference.object.textEditorModel, Position.lift(position), args);\r\n                    resolve(result);\r\n                }\r\n                catch (err) {\r\n                    reject(err);\r\n                }\r\n            }).finally(function () {\r\n                reference.dispose();\r\n            });\r\n        });\r\n    });\r\n}\r\nexport function registerModelAndPositionCommand(id, handler) {\r\n    CommandsRegistry.registerCommand(id, function (accessor) {\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        var resource = args[0], position = args[1];\r\n        assertType(URI.isUri(resource));\r\n        assertType(Position.isIPosition(position));\r\n        var model = accessor.get(IModelService).getModel(resource);\r\n        if (model) {\r\n            var editorPosition = Position.lift(position);\r\n            return handler(model, editorPosition, args.slice(2));\r\n        }\r\n        return accessor.get(ITextModelService).createModelReference(resource).then(function (reference) {\r\n            return new Promise(function (resolve, reject) {\r\n                try {\r\n                    var result = handler(reference.object.textEditorModel, Position.lift(position), args.slice(2));\r\n                    resolve(result);\r\n                }\r\n                catch (err) {\r\n                    reject(err);\r\n                }\r\n            }).finally(function () {\r\n                reference.dispose();\r\n            });\r\n        });\r\n    });\r\n}\r\nexport function registerModelCommand(id, handler) {\r\n    CommandsRegistry.registerCommand(id, function (accessor) {\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        var resource = args[0];\r\n        assertType(URI.isUri(resource));\r\n        var model = accessor.get(IModelService).getModel(resource);\r\n        if (model) {\r\n            return handler(model, args.slice(1));\r\n        }\r\n        return accessor.get(ITextModelService).createModelReference(resource).then(function (reference) {\r\n            return new Promise(function (resolve, reject) {\r\n                try {\r\n                    var result = handler(reference.object.textEditorModel, args.slice(1));\r\n                    resolve(result);\r\n                }\r\n                catch (err) {\r\n                    reject(err);\r\n                }\r\n            }).finally(function () {\r\n                reference.dispose();\r\n            });\r\n        });\r\n    });\r\n}\r\nexport function registerEditorCommand(editorCommand) {\r\n    EditorContributionRegistry.INSTANCE.registerEditorCommand(editorCommand);\r\n    return editorCommand;\r\n}\r\nexport function registerEditorAction(ctor) {\r\n    EditorContributionRegistry.INSTANCE.registerEditorAction(new ctor());\r\n}\r\nexport function registerInstantiatedEditorAction(editorAction) {\r\n    EditorContributionRegistry.INSTANCE.registerEditorAction(editorAction);\r\n}\r\nexport function registerEditorContribution(id, ctor) {\r\n    EditorContributionRegistry.INSTANCE.registerEditorContribution(id, ctor);\r\n}\r\nexport var EditorExtensionsRegistry;\r\n(function (EditorExtensionsRegistry) {\r\n    function getEditorCommand(commandId) {\r\n        return EditorContributionRegistry.INSTANCE.getEditorCommand(commandId);\r\n    }\r\n    EditorExtensionsRegistry.getEditorCommand = getEditorCommand;\r\n    function getEditorActions() {\r\n        return EditorContributionRegistry.INSTANCE.getEditorActions();\r\n    }\r\n    EditorExtensionsRegistry.getEditorActions = getEditorActions;\r\n    function getEditorContributions() {\r\n        return EditorContributionRegistry.INSTANCE.getEditorContributions();\r\n    }\r\n    EditorExtensionsRegistry.getEditorContributions = getEditorContributions;\r\n    function getSomeEditorContributions(ids) {\r\n        return EditorContributionRegistry.INSTANCE.getEditorContributions().filter(function (c) { return ids.indexOf(c.id) >= 0; });\r\n    }\r\n    EditorExtensionsRegistry.getSomeEditorContributions = getSomeEditorContributions;\r\n    function getDiffEditorContributions() {\r\n        return EditorContributionRegistry.INSTANCE.getDiffEditorContributions();\r\n    }\r\n    EditorExtensionsRegistry.getDiffEditorContributions = getDiffEditorContributions;\r\n})(EditorExtensionsRegistry || (EditorExtensionsRegistry = {}));\r\n// Editor extension points\r\nvar Extensions = {\r\n    EditorCommonContributions: 'editor.contributions'\r\n};\r\nvar EditorContributionRegistry = /** @class */ (function () {\r\n    function EditorContributionRegistry() {\r\n        this.editorContributions = [];\r\n        this.diffEditorContributions = [];\r\n        this.editorActions = [];\r\n        this.editorCommands = Object.create(null);\r\n    }\r\n    EditorContributionRegistry.prototype.registerEditorContribution = function (id, ctor) {\r\n        this.editorContributions.push({ id: id, ctor: ctor });\r\n    };\r\n    EditorContributionRegistry.prototype.getEditorContributions = function () {\r\n        return this.editorContributions.slice(0);\r\n    };\r\n    EditorContributionRegistry.prototype.getDiffEditorContributions = function () {\r\n        return this.diffEditorContributions.slice(0);\r\n    };\r\n    EditorContributionRegistry.prototype.registerEditorAction = function (action) {\r\n        action.register();\r\n        this.editorActions.push(action);\r\n    };\r\n    EditorContributionRegistry.prototype.getEditorActions = function () {\r\n        return this.editorActions.slice(0);\r\n    };\r\n    EditorContributionRegistry.prototype.registerEditorCommand = function (editorCommand) {\r\n        editorCommand.register();\r\n        this.editorCommands[editorCommand.id] = editorCommand;\r\n    };\r\n    EditorContributionRegistry.prototype.getEditorCommand = function (commandId) {\r\n        return (this.editorCommands[commandId] || null);\r\n    };\r\n    EditorContributionRegistry.INSTANCE = new EditorContributionRegistry();\r\n    return EditorContributionRegistry;\r\n}());\r\nRegistry.add(Extensions.EditorCommonContributions, EditorContributionRegistry.INSTANCE);\r\n"]},"metadata":{},"sourceType":"module"}