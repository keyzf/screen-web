{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../common/core/range.js';\n\nvar ReplaceAllCommand =\n/** @class */\nfunction () {\n  function ReplaceAllCommand(editorSelection, ranges, replaceStrings) {\n    this._editorSelection = editorSelection;\n    this._ranges = ranges;\n    this._replaceStrings = replaceStrings;\n    this._trackedEditorSelectionId = null;\n  }\n\n  ReplaceAllCommand.prototype.getEditOperations = function (model, builder) {\n    if (this._ranges.length > 0) {\n      // Collect all edit operations\n      var ops = [];\n\n      for (var i = 0; i < this._ranges.length; i++) {\n        ops.push({\n          range: this._ranges[i],\n          text: this._replaceStrings[i]\n        });\n      } // Sort them in ascending order by range starts\n\n\n      ops.sort(function (o1, o2) {\n        return Range.compareRangesUsingStarts(o1.range, o2.range);\n      }); // Merge operations that touch each other\n\n      var resultOps = [];\n      var previousOp = ops[0];\n\n      for (var i = 1; i < ops.length; i++) {\n        if (previousOp.range.endLineNumber === ops[i].range.startLineNumber && previousOp.range.endColumn === ops[i].range.startColumn) {\n          // These operations are one after another and can be merged\n          previousOp.range = previousOp.range.plusRange(ops[i].range);\n          previousOp.text = previousOp.text + ops[i].text;\n        } else {\n          resultOps.push(previousOp);\n          previousOp = ops[i];\n        }\n      }\n\n      resultOps.push(previousOp);\n\n      for (var _i = 0, resultOps_1 = resultOps; _i < resultOps_1.length; _i++) {\n        var op = resultOps_1[_i];\n        builder.addEditOperation(op.range, op.text);\n      }\n    }\n\n    this._trackedEditorSelectionId = builder.trackSelection(this._editorSelection);\n  };\n\n  ReplaceAllCommand.prototype.computeCursorState = function (model, helper) {\n    return helper.getTrackedSelection(this._trackedEditorSelectionId);\n  };\n\n  return ReplaceAllCommand;\n}();\n\nexport { ReplaceAllCommand };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/contrib/find/replaceAllCommand.js"],"names":["Range","ReplaceAllCommand","editorSelection","ranges","replaceStrings","_editorSelection","_ranges","_replaceStrings","_trackedEditorSelectionId","prototype","getEditOperations","model","builder","length","ops","i","push","range","text","sort","o1","o2","compareRangesUsingStarts","resultOps","previousOp","endLineNumber","startLineNumber","endColumn","startColumn","plusRange","_i","resultOps_1","op","addEditOperation","trackSelection","computeCursorState","helper","getTrackedSelection"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Range } from '../../common/core/range.js';\r\nvar ReplaceAllCommand = /** @class */ (function () {\r\n    function ReplaceAllCommand(editorSelection, ranges, replaceStrings) {\r\n        this._editorSelection = editorSelection;\r\n        this._ranges = ranges;\r\n        this._replaceStrings = replaceStrings;\r\n        this._trackedEditorSelectionId = null;\r\n    }\r\n    ReplaceAllCommand.prototype.getEditOperations = function (model, builder) {\r\n        if (this._ranges.length > 0) {\r\n            // Collect all edit operations\r\n            var ops = [];\r\n            for (var i = 0; i < this._ranges.length; i++) {\r\n                ops.push({\r\n                    range: this._ranges[i],\r\n                    text: this._replaceStrings[i]\r\n                });\r\n            }\r\n            // Sort them in ascending order by range starts\r\n            ops.sort(function (o1, o2) {\r\n                return Range.compareRangesUsingStarts(o1.range, o2.range);\r\n            });\r\n            // Merge operations that touch each other\r\n            var resultOps = [];\r\n            var previousOp = ops[0];\r\n            for (var i = 1; i < ops.length; i++) {\r\n                if (previousOp.range.endLineNumber === ops[i].range.startLineNumber && previousOp.range.endColumn === ops[i].range.startColumn) {\r\n                    // These operations are one after another and can be merged\r\n                    previousOp.range = previousOp.range.plusRange(ops[i].range);\r\n                    previousOp.text = previousOp.text + ops[i].text;\r\n                }\r\n                else {\r\n                    resultOps.push(previousOp);\r\n                    previousOp = ops[i];\r\n                }\r\n            }\r\n            resultOps.push(previousOp);\r\n            for (var _i = 0, resultOps_1 = resultOps; _i < resultOps_1.length; _i++) {\r\n                var op = resultOps_1[_i];\r\n                builder.addEditOperation(op.range, op.text);\r\n            }\r\n        }\r\n        this._trackedEditorSelectionId = builder.trackSelection(this._editorSelection);\r\n    };\r\n    ReplaceAllCommand.prototype.computeCursorState = function (model, helper) {\r\n        return helper.getTrackedSelection(this._trackedEditorSelectionId);\r\n    };\r\n    return ReplaceAllCommand;\r\n}());\r\nexport { ReplaceAllCommand };\r\n"]},"metadata":{},"sourceType":"module"}