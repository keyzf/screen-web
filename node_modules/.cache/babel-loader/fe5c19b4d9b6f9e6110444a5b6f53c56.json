{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nfunction roundFloat(number, decimalPoints) {\n  var decimal = Math.pow(10, decimalPoints);\n  return Math.round(number * decimal) / decimal;\n}\n\nvar RGBA =\n/** @class */\nfunction () {\n  function RGBA(r, g, b, a) {\n    if (a === void 0) {\n      a = 1;\n    }\n\n    this.r = Math.min(255, Math.max(0, r)) | 0;\n    this.g = Math.min(255, Math.max(0, g)) | 0;\n    this.b = Math.min(255, Math.max(0, b)) | 0;\n    this.a = roundFloat(Math.max(Math.min(1, a), 0), 3);\n  }\n\n  RGBA.equals = function (a, b) {\n    return a.r === b.r && a.g === b.g && a.b === b.b && a.a === b.a;\n  };\n\n  return RGBA;\n}();\n\nexport { RGBA };\n\nvar HSLA =\n/** @class */\nfunction () {\n  function HSLA(h, s, l, a) {\n    this.h = Math.max(Math.min(360, h), 0) | 0;\n    this.s = roundFloat(Math.max(Math.min(1, s), 0), 3);\n    this.l = roundFloat(Math.max(Math.min(1, l), 0), 3);\n    this.a = roundFloat(Math.max(Math.min(1, a), 0), 3);\n  }\n\n  HSLA.equals = function (a, b) {\n    return a.h === b.h && a.s === b.s && a.l === b.l && a.a === b.a;\n  };\n  /**\r\n   * Converts an RGB color value to HSL. Conversion formula\r\n   * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n   * Assumes r, g, and b are contained in the set [0, 255] and\r\n   * returns h in the set [0, 360], s, and l in the set [0, 1].\r\n   */\n\n\n  HSLA.fromRGBA = function (rgba) {\n    var r = rgba.r / 255;\n    var g = rgba.g / 255;\n    var b = rgba.b / 255;\n    var a = rgba.a;\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var h = 0;\n    var s = 0;\n    var l = (min + max) / 2;\n    var chroma = max - min;\n\n    if (chroma > 0) {\n      s = Math.min(l <= 0.5 ? chroma / (2 * l) : chroma / (2 - 2 * l), 1);\n\n      switch (max) {\n        case r:\n          h = (g - b) / chroma + (g < b ? 6 : 0);\n          break;\n\n        case g:\n          h = (b - r) / chroma + 2;\n          break;\n\n        case b:\n          h = (r - g) / chroma + 4;\n          break;\n      }\n\n      h *= 60;\n      h = Math.round(h);\n    }\n\n    return new HSLA(h, s, l, a);\n  };\n\n  HSLA._hue2rgb = function (p, q, t) {\n    if (t < 0) {\n      t += 1;\n    }\n\n    if (t > 1) {\n      t -= 1;\n    }\n\n    if (t < 1 / 6) {\n      return p + (q - p) * 6 * t;\n    }\n\n    if (t < 1 / 2) {\n      return q;\n    }\n\n    if (t < 2 / 3) {\n      return p + (q - p) * (2 / 3 - t) * 6;\n    }\n\n    return p;\n  };\n  /**\r\n   * Converts an HSL color value to RGB. Conversion formula\r\n   * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n   * Assumes h in the set [0, 360] s, and l are contained in the set [0, 1] and\r\n   * returns r, g, and b in the set [0, 255].\r\n   */\n\n\n  HSLA.toRGBA = function (hsla) {\n    var h = hsla.h / 360;\n    var s = hsla.s,\n        l = hsla.l,\n        a = hsla.a;\n    var r, g, b;\n\n    if (s === 0) {\n      r = g = b = l; // achromatic\n    } else {\n      var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      var p = 2 * l - q;\n      r = HSLA._hue2rgb(p, q, h + 1 / 3);\n      g = HSLA._hue2rgb(p, q, h);\n      b = HSLA._hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return new RGBA(Math.round(r * 255), Math.round(g * 255), Math.round(b * 255), a);\n  };\n\n  return HSLA;\n}();\n\nexport { HSLA };\n\nvar HSVA =\n/** @class */\nfunction () {\n  function HSVA(h, s, v, a) {\n    this.h = Math.max(Math.min(360, h), 0) | 0;\n    this.s = roundFloat(Math.max(Math.min(1, s), 0), 3);\n    this.v = roundFloat(Math.max(Math.min(1, v), 0), 3);\n    this.a = roundFloat(Math.max(Math.min(1, a), 0), 3);\n  }\n\n  HSVA.equals = function (a, b) {\n    return a.h === b.h && a.s === b.s && a.v === b.v && a.a === b.a;\n  }; // from http://www.rapidtables.com/convert/color/rgb-to-hsv.htm\n\n\n  HSVA.fromRGBA = function (rgba) {\n    var r = rgba.r / 255;\n    var g = rgba.g / 255;\n    var b = rgba.b / 255;\n    var cmax = Math.max(r, g, b);\n    var cmin = Math.min(r, g, b);\n    var delta = cmax - cmin;\n    var s = cmax === 0 ? 0 : delta / cmax;\n    var m;\n\n    if (delta === 0) {\n      m = 0;\n    } else if (cmax === r) {\n      m = ((g - b) / delta % 6 + 6) % 6;\n    } else if (cmax === g) {\n      m = (b - r) / delta + 2;\n    } else {\n      m = (r - g) / delta + 4;\n    }\n\n    return new HSVA(Math.round(m * 60), s, cmax, rgba.a);\n  }; // from http://www.rapidtables.com/convert/color/hsv-to-rgb.htm\n\n\n  HSVA.toRGBA = function (hsva) {\n    var h = hsva.h,\n        s = hsva.s,\n        v = hsva.v,\n        a = hsva.a;\n    var c = v * s;\n    var x = c * (1 - Math.abs(h / 60 % 2 - 1));\n    var m = v - c;\n    var _a = [0, 0, 0],\n        r = _a[0],\n        g = _a[1],\n        b = _a[2];\n\n    if (h < 60) {\n      r = c;\n      g = x;\n    } else if (h < 120) {\n      r = x;\n      g = c;\n    } else if (h < 180) {\n      g = c;\n      b = x;\n    } else if (h < 240) {\n      g = x;\n      b = c;\n    } else if (h < 300) {\n      r = x;\n      b = c;\n    } else if (h < 360) {\n      r = c;\n      b = x;\n    }\n\n    r = Math.round((r + m) * 255);\n    g = Math.round((g + m) * 255);\n    b = Math.round((b + m) * 255);\n    return new RGBA(r, g, b, a);\n  };\n\n  return HSVA;\n}();\n\nexport { HSVA };\n\nvar Color =\n/** @class */\nfunction () {\n  function Color(arg) {\n    if (!arg) {\n      throw new Error('Color needs a value');\n    } else if (arg instanceof RGBA) {\n      this.rgba = arg;\n    } else if (arg instanceof HSLA) {\n      this._hsla = arg;\n      this.rgba = HSLA.toRGBA(arg);\n    } else if (arg instanceof HSVA) {\n      this._hsva = arg;\n      this.rgba = HSVA.toRGBA(arg);\n    } else {\n      throw new Error('Invalid color ctor argument');\n    }\n  }\n\n  Color.fromHex = function (hex) {\n    return Color.Format.CSS.parseHex(hex) || Color.red;\n  };\n\n  Object.defineProperty(Color.prototype, \"hsla\", {\n    get: function () {\n      if (this._hsla) {\n        return this._hsla;\n      } else {\n        return HSLA.fromRGBA(this.rgba);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Color.prototype, \"hsva\", {\n    get: function () {\n      if (this._hsva) {\n        return this._hsva;\n      }\n\n      return HSVA.fromRGBA(this.rgba);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Color.prototype.equals = function (other) {\n    return !!other && RGBA.equals(this.rgba, other.rgba) && HSLA.equals(this.hsla, other.hsla) && HSVA.equals(this.hsva, other.hsva);\n  };\n  /**\r\n   * http://www.w3.org/TR/WCAG20/#relativeluminancedef\r\n   * Returns the number in the set [0, 1]. O => Darkest Black. 1 => Lightest white.\r\n   */\n\n\n  Color.prototype.getRelativeLuminance = function () {\n    var R = Color._relativeLuminanceForComponent(this.rgba.r);\n\n    var G = Color._relativeLuminanceForComponent(this.rgba.g);\n\n    var B = Color._relativeLuminanceForComponent(this.rgba.b);\n\n    var luminance = 0.2126 * R + 0.7152 * G + 0.0722 * B;\n    return roundFloat(luminance, 4);\n  };\n\n  Color._relativeLuminanceForComponent = function (color) {\n    var c = color / 255;\n    return c <= 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  };\n  /**\r\n   *\thttp://24ways.org/2010/calculating-color-contrast\r\n   *  Return 'true' if lighter color otherwise 'false'\r\n   */\n\n\n  Color.prototype.isLighter = function () {\n    var yiq = (this.rgba.r * 299 + this.rgba.g * 587 + this.rgba.b * 114) / 1000;\n    return yiq >= 128;\n  };\n\n  Color.prototype.isLighterThan = function (another) {\n    var lum1 = this.getRelativeLuminance();\n    var lum2 = another.getRelativeLuminance();\n    return lum1 > lum2;\n  };\n\n  Color.prototype.isDarkerThan = function (another) {\n    var lum1 = this.getRelativeLuminance();\n    var lum2 = another.getRelativeLuminance();\n    return lum1 < lum2;\n  };\n\n  Color.prototype.lighten = function (factor) {\n    return new Color(new HSLA(this.hsla.h, this.hsla.s, this.hsla.l + this.hsla.l * factor, this.hsla.a));\n  };\n\n  Color.prototype.darken = function (factor) {\n    return new Color(new HSLA(this.hsla.h, this.hsla.s, this.hsla.l - this.hsla.l * factor, this.hsla.a));\n  };\n\n  Color.prototype.transparent = function (factor) {\n    var _a = this.rgba,\n        r = _a.r,\n        g = _a.g,\n        b = _a.b,\n        a = _a.a;\n    return new Color(new RGBA(r, g, b, a * factor));\n  };\n\n  Color.prototype.isTransparent = function () {\n    return this.rgba.a === 0;\n  };\n\n  Color.prototype.isOpaque = function () {\n    return this.rgba.a === 1;\n  };\n\n  Color.prototype.opposite = function () {\n    return new Color(new RGBA(255 - this.rgba.r, 255 - this.rgba.g, 255 - this.rgba.b, this.rgba.a));\n  };\n\n  Color.prototype.toString = function () {\n    return '' + Color.Format.CSS.format(this);\n  };\n\n  Color.getLighterColor = function (of, relative, factor) {\n    if (of.isLighterThan(relative)) {\n      return of;\n    }\n\n    factor = factor ? factor : 0.5;\n    var lum1 = of.getRelativeLuminance();\n    var lum2 = relative.getRelativeLuminance();\n    factor = factor * (lum2 - lum1) / lum2;\n    return of.lighten(factor);\n  };\n\n  Color.getDarkerColor = function (of, relative, factor) {\n    if (of.isDarkerThan(relative)) {\n      return of;\n    }\n\n    factor = factor ? factor : 0.5;\n    var lum1 = of.getRelativeLuminance();\n    var lum2 = relative.getRelativeLuminance();\n    factor = factor * (lum1 - lum2) / lum1;\n    return of.darken(factor);\n  };\n\n  Color.white = new Color(new RGBA(255, 255, 255, 1));\n  Color.black = new Color(new RGBA(0, 0, 0, 1));\n  Color.red = new Color(new RGBA(255, 0, 0, 1));\n  Color.blue = new Color(new RGBA(0, 0, 255, 1));\n  Color.cyan = new Color(new RGBA(0, 255, 255, 1));\n  Color.lightgrey = new Color(new RGBA(211, 211, 211, 1));\n  Color.transparent = new Color(new RGBA(0, 0, 0, 0));\n  return Color;\n}();\n\nexport { Color };\n\n(function (Color) {\n  var Format;\n\n  (function (Format) {\n    var CSS;\n\n    (function (CSS) {\n      function formatRGB(color) {\n        if (color.rgba.a === 1) {\n          return \"rgb(\" + color.rgba.r + \", \" + color.rgba.g + \", \" + color.rgba.b + \")\";\n        }\n\n        return Color.Format.CSS.formatRGBA(color);\n      }\n\n      CSS.formatRGB = formatRGB;\n\n      function formatRGBA(color) {\n        return \"rgba(\" + color.rgba.r + \", \" + color.rgba.g + \", \" + color.rgba.b + \", \" + +color.rgba.a.toFixed(2) + \")\";\n      }\n\n      CSS.formatRGBA = formatRGBA;\n\n      function formatHSL(color) {\n        if (color.hsla.a === 1) {\n          return \"hsl(\" + color.hsla.h + \", \" + (color.hsla.s * 100).toFixed(2) + \"%, \" + (color.hsla.l * 100).toFixed(2) + \"%)\";\n        }\n\n        return Color.Format.CSS.formatHSLA(color);\n      }\n\n      CSS.formatHSL = formatHSL;\n\n      function formatHSLA(color) {\n        return \"hsla(\" + color.hsla.h + \", \" + (color.hsla.s * 100).toFixed(2) + \"%, \" + (color.hsla.l * 100).toFixed(2) + \"%, \" + color.hsla.a.toFixed(2) + \")\";\n      }\n\n      CSS.formatHSLA = formatHSLA;\n\n      function _toTwoDigitHex(n) {\n        var r = n.toString(16);\n        return r.length !== 2 ? '0' + r : r;\n      }\n      /**\r\n       * Formats the color as #RRGGBB\r\n       */\n\n\n      function formatHex(color) {\n        return \"#\" + _toTwoDigitHex(color.rgba.r) + _toTwoDigitHex(color.rgba.g) + _toTwoDigitHex(color.rgba.b);\n      }\n\n      CSS.formatHex = formatHex;\n      /**\r\n       * Formats the color as #RRGGBBAA\r\n       * If 'compact' is set, colors without transparancy will be printed as #RRGGBB\r\n       */\n\n      function formatHexA(color, compact) {\n        if (compact === void 0) {\n          compact = false;\n        }\n\n        if (compact && color.rgba.a === 1) {\n          return Color.Format.CSS.formatHex(color);\n        }\n\n        return \"#\" + _toTwoDigitHex(color.rgba.r) + _toTwoDigitHex(color.rgba.g) + _toTwoDigitHex(color.rgba.b) + _toTwoDigitHex(Math.round(color.rgba.a * 255));\n      }\n\n      CSS.formatHexA = formatHexA;\n      /**\r\n       * The default format will use HEX if opaque and RGBA otherwise.\r\n       */\n\n      function format(color) {\n        if (color.isOpaque()) {\n          return Color.Format.CSS.formatHex(color);\n        }\n\n        return Color.Format.CSS.formatRGBA(color);\n      }\n\n      CSS.format = format;\n      /**\r\n       * Converts an Hex color value to a Color.\r\n       * returns r, g, and b are contained in the set [0, 255]\r\n       * @param hex string (#RGB, #RGBA, #RRGGBB or #RRGGBBAA).\r\n       */\n\n      function parseHex(hex) {\n        var length = hex.length;\n\n        if (length === 0) {\n          // Invalid color\n          return null;\n        }\n\n        if (hex.charCodeAt(0) !== 35\n        /* Hash */\n        ) {\n            // Does not begin with a #\n            return null;\n          }\n\n        if (length === 7) {\n          // #RRGGBB format\n          var r = 16 * _parseHexDigit(hex.charCodeAt(1)) + _parseHexDigit(hex.charCodeAt(2));\n\n          var g = 16 * _parseHexDigit(hex.charCodeAt(3)) + _parseHexDigit(hex.charCodeAt(4));\n\n          var b = 16 * _parseHexDigit(hex.charCodeAt(5)) + _parseHexDigit(hex.charCodeAt(6));\n\n          return new Color(new RGBA(r, g, b, 1));\n        }\n\n        if (length === 9) {\n          // #RRGGBBAA format\n          var r = 16 * _parseHexDigit(hex.charCodeAt(1)) + _parseHexDigit(hex.charCodeAt(2));\n\n          var g = 16 * _parseHexDigit(hex.charCodeAt(3)) + _parseHexDigit(hex.charCodeAt(4));\n\n          var b = 16 * _parseHexDigit(hex.charCodeAt(5)) + _parseHexDigit(hex.charCodeAt(6));\n\n          var a = 16 * _parseHexDigit(hex.charCodeAt(7)) + _parseHexDigit(hex.charCodeAt(8));\n\n          return new Color(new RGBA(r, g, b, a / 255));\n        }\n\n        if (length === 4) {\n          // #RGB format\n          var r = _parseHexDigit(hex.charCodeAt(1));\n\n          var g = _parseHexDigit(hex.charCodeAt(2));\n\n          var b = _parseHexDigit(hex.charCodeAt(3));\n\n          return new Color(new RGBA(16 * r + r, 16 * g + g, 16 * b + b));\n        }\n\n        if (length === 5) {\n          // #RGBA format\n          var r = _parseHexDigit(hex.charCodeAt(1));\n\n          var g = _parseHexDigit(hex.charCodeAt(2));\n\n          var b = _parseHexDigit(hex.charCodeAt(3));\n\n          var a = _parseHexDigit(hex.charCodeAt(4));\n\n          return new Color(new RGBA(16 * r + r, 16 * g + g, 16 * b + b, (16 * a + a) / 255));\n        } // Invalid color\n\n\n        return null;\n      }\n\n      CSS.parseHex = parseHex;\n\n      function _parseHexDigit(charCode) {\n        switch (charCode) {\n          case 48\n          /* Digit0 */\n          :\n            return 0;\n\n          case 49\n          /* Digit1 */\n          :\n            return 1;\n\n          case 50\n          /* Digit2 */\n          :\n            return 2;\n\n          case 51\n          /* Digit3 */\n          :\n            return 3;\n\n          case 52\n          /* Digit4 */\n          :\n            return 4;\n\n          case 53\n          /* Digit5 */\n          :\n            return 5;\n\n          case 54\n          /* Digit6 */\n          :\n            return 6;\n\n          case 55\n          /* Digit7 */\n          :\n            return 7;\n\n          case 56\n          /* Digit8 */\n          :\n            return 8;\n\n          case 57\n          /* Digit9 */\n          :\n            return 9;\n\n          case 97\n          /* a */\n          :\n            return 10;\n\n          case 65\n          /* A */\n          :\n            return 10;\n\n          case 98\n          /* b */\n          :\n            return 11;\n\n          case 66\n          /* B */\n          :\n            return 11;\n\n          case 99\n          /* c */\n          :\n            return 12;\n\n          case 67\n          /* C */\n          :\n            return 12;\n\n          case 100\n          /* d */\n          :\n            return 13;\n\n          case 68\n          /* D */\n          :\n            return 13;\n\n          case 101\n          /* e */\n          :\n            return 14;\n\n          case 69\n          /* E */\n          :\n            return 14;\n\n          case 102\n          /* f */\n          :\n            return 15;\n\n          case 70\n          /* F */\n          :\n            return 15;\n        }\n\n        return 0;\n      }\n    })(CSS = Format.CSS || (Format.CSS = {}));\n  })(Format = Color.Format || (Color.Format = {}));\n})(Color || (Color = {}));","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/base/common/color.js"],"names":["roundFloat","number","decimalPoints","decimal","Math","pow","round","RGBA","r","g","b","a","min","max","equals","HSLA","h","s","l","fromRGBA","rgba","chroma","_hue2rgb","p","q","t","toRGBA","hsla","HSVA","v","cmax","cmin","delta","m","hsva","c","x","abs","_a","Color","arg","Error","_hsla","_hsva","fromHex","hex","Format","CSS","parseHex","red","Object","defineProperty","prototype","get","enumerable","configurable","other","getRelativeLuminance","R","_relativeLuminanceForComponent","G","B","luminance","color","isLighter","yiq","isLighterThan","another","lum1","lum2","isDarkerThan","lighten","factor","darken","transparent","isTransparent","isOpaque","opposite","toString","format","getLighterColor","of","relative","getDarkerColor","white","black","blue","cyan","lightgrey","formatRGB","formatRGBA","toFixed","formatHSL","formatHSLA","_toTwoDigitHex","n","length","formatHex","formatHexA","compact","charCodeAt","_parseHexDigit","charCode"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nfunction roundFloat(number, decimalPoints) {\r\n    var decimal = Math.pow(10, decimalPoints);\r\n    return Math.round(number * decimal) / decimal;\r\n}\r\nvar RGBA = /** @class */ (function () {\r\n    function RGBA(r, g, b, a) {\r\n        if (a === void 0) { a = 1; }\r\n        this.r = Math.min(255, Math.max(0, r)) | 0;\r\n        this.g = Math.min(255, Math.max(0, g)) | 0;\r\n        this.b = Math.min(255, Math.max(0, b)) | 0;\r\n        this.a = roundFloat(Math.max(Math.min(1, a), 0), 3);\r\n    }\r\n    RGBA.equals = function (a, b) {\r\n        return a.r === b.r && a.g === b.g && a.b === b.b && a.a === b.a;\r\n    };\r\n    return RGBA;\r\n}());\r\nexport { RGBA };\r\nvar HSLA = /** @class */ (function () {\r\n    function HSLA(h, s, l, a) {\r\n        this.h = Math.max(Math.min(360, h), 0) | 0;\r\n        this.s = roundFloat(Math.max(Math.min(1, s), 0), 3);\r\n        this.l = roundFloat(Math.max(Math.min(1, l), 0), 3);\r\n        this.a = roundFloat(Math.max(Math.min(1, a), 0), 3);\r\n    }\r\n    HSLA.equals = function (a, b) {\r\n        return a.h === b.h && a.s === b.s && a.l === b.l && a.a === b.a;\r\n    };\r\n    /**\r\n     * Converts an RGB color value to HSL. Conversion formula\r\n     * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n     * Assumes r, g, and b are contained in the set [0, 255] and\r\n     * returns h in the set [0, 360], s, and l in the set [0, 1].\r\n     */\r\n    HSLA.fromRGBA = function (rgba) {\r\n        var r = rgba.r / 255;\r\n        var g = rgba.g / 255;\r\n        var b = rgba.b / 255;\r\n        var a = rgba.a;\r\n        var max = Math.max(r, g, b);\r\n        var min = Math.min(r, g, b);\r\n        var h = 0;\r\n        var s = 0;\r\n        var l = (min + max) / 2;\r\n        var chroma = max - min;\r\n        if (chroma > 0) {\r\n            s = Math.min((l <= 0.5 ? chroma / (2 * l) : chroma / (2 - (2 * l))), 1);\r\n            switch (max) {\r\n                case r:\r\n                    h = (g - b) / chroma + (g < b ? 6 : 0);\r\n                    break;\r\n                case g:\r\n                    h = (b - r) / chroma + 2;\r\n                    break;\r\n                case b:\r\n                    h = (r - g) / chroma + 4;\r\n                    break;\r\n            }\r\n            h *= 60;\r\n            h = Math.round(h);\r\n        }\r\n        return new HSLA(h, s, l, a);\r\n    };\r\n    HSLA._hue2rgb = function (p, q, t) {\r\n        if (t < 0) {\r\n            t += 1;\r\n        }\r\n        if (t > 1) {\r\n            t -= 1;\r\n        }\r\n        if (t < 1 / 6) {\r\n            return p + (q - p) * 6 * t;\r\n        }\r\n        if (t < 1 / 2) {\r\n            return q;\r\n        }\r\n        if (t < 2 / 3) {\r\n            return p + (q - p) * (2 / 3 - t) * 6;\r\n        }\r\n        return p;\r\n    };\r\n    /**\r\n     * Converts an HSL color value to RGB. Conversion formula\r\n     * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n     * Assumes h in the set [0, 360] s, and l are contained in the set [0, 1] and\r\n     * returns r, g, and b in the set [0, 255].\r\n     */\r\n    HSLA.toRGBA = function (hsla) {\r\n        var h = hsla.h / 360;\r\n        var s = hsla.s, l = hsla.l, a = hsla.a;\r\n        var r, g, b;\r\n        if (s === 0) {\r\n            r = g = b = l; // achromatic\r\n        }\r\n        else {\r\n            var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n            var p = 2 * l - q;\r\n            r = HSLA._hue2rgb(p, q, h + 1 / 3);\r\n            g = HSLA._hue2rgb(p, q, h);\r\n            b = HSLA._hue2rgb(p, q, h - 1 / 3);\r\n        }\r\n        return new RGBA(Math.round(r * 255), Math.round(g * 255), Math.round(b * 255), a);\r\n    };\r\n    return HSLA;\r\n}());\r\nexport { HSLA };\r\nvar HSVA = /** @class */ (function () {\r\n    function HSVA(h, s, v, a) {\r\n        this.h = Math.max(Math.min(360, h), 0) | 0;\r\n        this.s = roundFloat(Math.max(Math.min(1, s), 0), 3);\r\n        this.v = roundFloat(Math.max(Math.min(1, v), 0), 3);\r\n        this.a = roundFloat(Math.max(Math.min(1, a), 0), 3);\r\n    }\r\n    HSVA.equals = function (a, b) {\r\n        return a.h === b.h && a.s === b.s && a.v === b.v && a.a === b.a;\r\n    };\r\n    // from http://www.rapidtables.com/convert/color/rgb-to-hsv.htm\r\n    HSVA.fromRGBA = function (rgba) {\r\n        var r = rgba.r / 255;\r\n        var g = rgba.g / 255;\r\n        var b = rgba.b / 255;\r\n        var cmax = Math.max(r, g, b);\r\n        var cmin = Math.min(r, g, b);\r\n        var delta = cmax - cmin;\r\n        var s = cmax === 0 ? 0 : (delta / cmax);\r\n        var m;\r\n        if (delta === 0) {\r\n            m = 0;\r\n        }\r\n        else if (cmax === r) {\r\n            m = ((((g - b) / delta) % 6) + 6) % 6;\r\n        }\r\n        else if (cmax === g) {\r\n            m = ((b - r) / delta) + 2;\r\n        }\r\n        else {\r\n            m = ((r - g) / delta) + 4;\r\n        }\r\n        return new HSVA(Math.round(m * 60), s, cmax, rgba.a);\r\n    };\r\n    // from http://www.rapidtables.com/convert/color/hsv-to-rgb.htm\r\n    HSVA.toRGBA = function (hsva) {\r\n        var h = hsva.h, s = hsva.s, v = hsva.v, a = hsva.a;\r\n        var c = v * s;\r\n        var x = c * (1 - Math.abs((h / 60) % 2 - 1));\r\n        var m = v - c;\r\n        var _a = [0, 0, 0], r = _a[0], g = _a[1], b = _a[2];\r\n        if (h < 60) {\r\n            r = c;\r\n            g = x;\r\n        }\r\n        else if (h < 120) {\r\n            r = x;\r\n            g = c;\r\n        }\r\n        else if (h < 180) {\r\n            g = c;\r\n            b = x;\r\n        }\r\n        else if (h < 240) {\r\n            g = x;\r\n            b = c;\r\n        }\r\n        else if (h < 300) {\r\n            r = x;\r\n            b = c;\r\n        }\r\n        else if (h < 360) {\r\n            r = c;\r\n            b = x;\r\n        }\r\n        r = Math.round((r + m) * 255);\r\n        g = Math.round((g + m) * 255);\r\n        b = Math.round((b + m) * 255);\r\n        return new RGBA(r, g, b, a);\r\n    };\r\n    return HSVA;\r\n}());\r\nexport { HSVA };\r\nvar Color = /** @class */ (function () {\r\n    function Color(arg) {\r\n        if (!arg) {\r\n            throw new Error('Color needs a value');\r\n        }\r\n        else if (arg instanceof RGBA) {\r\n            this.rgba = arg;\r\n        }\r\n        else if (arg instanceof HSLA) {\r\n            this._hsla = arg;\r\n            this.rgba = HSLA.toRGBA(arg);\r\n        }\r\n        else if (arg instanceof HSVA) {\r\n            this._hsva = arg;\r\n            this.rgba = HSVA.toRGBA(arg);\r\n        }\r\n        else {\r\n            throw new Error('Invalid color ctor argument');\r\n        }\r\n    }\r\n    Color.fromHex = function (hex) {\r\n        return Color.Format.CSS.parseHex(hex) || Color.red;\r\n    };\r\n    Object.defineProperty(Color.prototype, \"hsla\", {\r\n        get: function () {\r\n            if (this._hsla) {\r\n                return this._hsla;\r\n            }\r\n            else {\r\n                return HSLA.fromRGBA(this.rgba);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Color.prototype, \"hsva\", {\r\n        get: function () {\r\n            if (this._hsva) {\r\n                return this._hsva;\r\n            }\r\n            return HSVA.fromRGBA(this.rgba);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Color.prototype.equals = function (other) {\r\n        return !!other && RGBA.equals(this.rgba, other.rgba) && HSLA.equals(this.hsla, other.hsla) && HSVA.equals(this.hsva, other.hsva);\r\n    };\r\n    /**\r\n     * http://www.w3.org/TR/WCAG20/#relativeluminancedef\r\n     * Returns the number in the set [0, 1]. O => Darkest Black. 1 => Lightest white.\r\n     */\r\n    Color.prototype.getRelativeLuminance = function () {\r\n        var R = Color._relativeLuminanceForComponent(this.rgba.r);\r\n        var G = Color._relativeLuminanceForComponent(this.rgba.g);\r\n        var B = Color._relativeLuminanceForComponent(this.rgba.b);\r\n        var luminance = 0.2126 * R + 0.7152 * G + 0.0722 * B;\r\n        return roundFloat(luminance, 4);\r\n    };\r\n    Color._relativeLuminanceForComponent = function (color) {\r\n        var c = color / 255;\r\n        return (c <= 0.03928) ? c / 12.92 : Math.pow(((c + 0.055) / 1.055), 2.4);\r\n    };\r\n    /**\r\n     *\thttp://24ways.org/2010/calculating-color-contrast\r\n     *  Return 'true' if lighter color otherwise 'false'\r\n     */\r\n    Color.prototype.isLighter = function () {\r\n        var yiq = (this.rgba.r * 299 + this.rgba.g * 587 + this.rgba.b * 114) / 1000;\r\n        return yiq >= 128;\r\n    };\r\n    Color.prototype.isLighterThan = function (another) {\r\n        var lum1 = this.getRelativeLuminance();\r\n        var lum2 = another.getRelativeLuminance();\r\n        return lum1 > lum2;\r\n    };\r\n    Color.prototype.isDarkerThan = function (another) {\r\n        var lum1 = this.getRelativeLuminance();\r\n        var lum2 = another.getRelativeLuminance();\r\n        return lum1 < lum2;\r\n    };\r\n    Color.prototype.lighten = function (factor) {\r\n        return new Color(new HSLA(this.hsla.h, this.hsla.s, this.hsla.l + this.hsla.l * factor, this.hsla.a));\r\n    };\r\n    Color.prototype.darken = function (factor) {\r\n        return new Color(new HSLA(this.hsla.h, this.hsla.s, this.hsla.l - this.hsla.l * factor, this.hsla.a));\r\n    };\r\n    Color.prototype.transparent = function (factor) {\r\n        var _a = this.rgba, r = _a.r, g = _a.g, b = _a.b, a = _a.a;\r\n        return new Color(new RGBA(r, g, b, a * factor));\r\n    };\r\n    Color.prototype.isTransparent = function () {\r\n        return this.rgba.a === 0;\r\n    };\r\n    Color.prototype.isOpaque = function () {\r\n        return this.rgba.a === 1;\r\n    };\r\n    Color.prototype.opposite = function () {\r\n        return new Color(new RGBA(255 - this.rgba.r, 255 - this.rgba.g, 255 - this.rgba.b, this.rgba.a));\r\n    };\r\n    Color.prototype.toString = function () {\r\n        return '' + Color.Format.CSS.format(this);\r\n    };\r\n    Color.getLighterColor = function (of, relative, factor) {\r\n        if (of.isLighterThan(relative)) {\r\n            return of;\r\n        }\r\n        factor = factor ? factor : 0.5;\r\n        var lum1 = of.getRelativeLuminance();\r\n        var lum2 = relative.getRelativeLuminance();\r\n        factor = factor * (lum2 - lum1) / lum2;\r\n        return of.lighten(factor);\r\n    };\r\n    Color.getDarkerColor = function (of, relative, factor) {\r\n        if (of.isDarkerThan(relative)) {\r\n            return of;\r\n        }\r\n        factor = factor ? factor : 0.5;\r\n        var lum1 = of.getRelativeLuminance();\r\n        var lum2 = relative.getRelativeLuminance();\r\n        factor = factor * (lum1 - lum2) / lum1;\r\n        return of.darken(factor);\r\n    };\r\n    Color.white = new Color(new RGBA(255, 255, 255, 1));\r\n    Color.black = new Color(new RGBA(0, 0, 0, 1));\r\n    Color.red = new Color(new RGBA(255, 0, 0, 1));\r\n    Color.blue = new Color(new RGBA(0, 0, 255, 1));\r\n    Color.cyan = new Color(new RGBA(0, 255, 255, 1));\r\n    Color.lightgrey = new Color(new RGBA(211, 211, 211, 1));\r\n    Color.transparent = new Color(new RGBA(0, 0, 0, 0));\r\n    return Color;\r\n}());\r\nexport { Color };\r\n(function (Color) {\r\n    var Format;\r\n    (function (Format) {\r\n        var CSS;\r\n        (function (CSS) {\r\n            function formatRGB(color) {\r\n                if (color.rgba.a === 1) {\r\n                    return \"rgb(\" + color.rgba.r + \", \" + color.rgba.g + \", \" + color.rgba.b + \")\";\r\n                }\r\n                return Color.Format.CSS.formatRGBA(color);\r\n            }\r\n            CSS.formatRGB = formatRGB;\r\n            function formatRGBA(color) {\r\n                return \"rgba(\" + color.rgba.r + \", \" + color.rgba.g + \", \" + color.rgba.b + \", \" + +(color.rgba.a).toFixed(2) + \")\";\r\n            }\r\n            CSS.formatRGBA = formatRGBA;\r\n            function formatHSL(color) {\r\n                if (color.hsla.a === 1) {\r\n                    return \"hsl(\" + color.hsla.h + \", \" + (color.hsla.s * 100).toFixed(2) + \"%, \" + (color.hsla.l * 100).toFixed(2) + \"%)\";\r\n                }\r\n                return Color.Format.CSS.formatHSLA(color);\r\n            }\r\n            CSS.formatHSL = formatHSL;\r\n            function formatHSLA(color) {\r\n                return \"hsla(\" + color.hsla.h + \", \" + (color.hsla.s * 100).toFixed(2) + \"%, \" + (color.hsla.l * 100).toFixed(2) + \"%, \" + color.hsla.a.toFixed(2) + \")\";\r\n            }\r\n            CSS.formatHSLA = formatHSLA;\r\n            function _toTwoDigitHex(n) {\r\n                var r = n.toString(16);\r\n                return r.length !== 2 ? '0' + r : r;\r\n            }\r\n            /**\r\n             * Formats the color as #RRGGBB\r\n             */\r\n            function formatHex(color) {\r\n                return \"#\" + _toTwoDigitHex(color.rgba.r) + _toTwoDigitHex(color.rgba.g) + _toTwoDigitHex(color.rgba.b);\r\n            }\r\n            CSS.formatHex = formatHex;\r\n            /**\r\n             * Formats the color as #RRGGBBAA\r\n             * If 'compact' is set, colors without transparancy will be printed as #RRGGBB\r\n             */\r\n            function formatHexA(color, compact) {\r\n                if (compact === void 0) { compact = false; }\r\n                if (compact && color.rgba.a === 1) {\r\n                    return Color.Format.CSS.formatHex(color);\r\n                }\r\n                return \"#\" + _toTwoDigitHex(color.rgba.r) + _toTwoDigitHex(color.rgba.g) + _toTwoDigitHex(color.rgba.b) + _toTwoDigitHex(Math.round(color.rgba.a * 255));\r\n            }\r\n            CSS.formatHexA = formatHexA;\r\n            /**\r\n             * The default format will use HEX if opaque and RGBA otherwise.\r\n             */\r\n            function format(color) {\r\n                if (color.isOpaque()) {\r\n                    return Color.Format.CSS.formatHex(color);\r\n                }\r\n                return Color.Format.CSS.formatRGBA(color);\r\n            }\r\n            CSS.format = format;\r\n            /**\r\n             * Converts an Hex color value to a Color.\r\n             * returns r, g, and b are contained in the set [0, 255]\r\n             * @param hex string (#RGB, #RGBA, #RRGGBB or #RRGGBBAA).\r\n             */\r\n            function parseHex(hex) {\r\n                var length = hex.length;\r\n                if (length === 0) {\r\n                    // Invalid color\r\n                    return null;\r\n                }\r\n                if (hex.charCodeAt(0) !== 35 /* Hash */) {\r\n                    // Does not begin with a #\r\n                    return null;\r\n                }\r\n                if (length === 7) {\r\n                    // #RRGGBB format\r\n                    var r = 16 * _parseHexDigit(hex.charCodeAt(1)) + _parseHexDigit(hex.charCodeAt(2));\r\n                    var g = 16 * _parseHexDigit(hex.charCodeAt(3)) + _parseHexDigit(hex.charCodeAt(4));\r\n                    var b = 16 * _parseHexDigit(hex.charCodeAt(5)) + _parseHexDigit(hex.charCodeAt(6));\r\n                    return new Color(new RGBA(r, g, b, 1));\r\n                }\r\n                if (length === 9) {\r\n                    // #RRGGBBAA format\r\n                    var r = 16 * _parseHexDigit(hex.charCodeAt(1)) + _parseHexDigit(hex.charCodeAt(2));\r\n                    var g = 16 * _parseHexDigit(hex.charCodeAt(3)) + _parseHexDigit(hex.charCodeAt(4));\r\n                    var b = 16 * _parseHexDigit(hex.charCodeAt(5)) + _parseHexDigit(hex.charCodeAt(6));\r\n                    var a = 16 * _parseHexDigit(hex.charCodeAt(7)) + _parseHexDigit(hex.charCodeAt(8));\r\n                    return new Color(new RGBA(r, g, b, a / 255));\r\n                }\r\n                if (length === 4) {\r\n                    // #RGB format\r\n                    var r = _parseHexDigit(hex.charCodeAt(1));\r\n                    var g = _parseHexDigit(hex.charCodeAt(2));\r\n                    var b = _parseHexDigit(hex.charCodeAt(3));\r\n                    return new Color(new RGBA(16 * r + r, 16 * g + g, 16 * b + b));\r\n                }\r\n                if (length === 5) {\r\n                    // #RGBA format\r\n                    var r = _parseHexDigit(hex.charCodeAt(1));\r\n                    var g = _parseHexDigit(hex.charCodeAt(2));\r\n                    var b = _parseHexDigit(hex.charCodeAt(3));\r\n                    var a = _parseHexDigit(hex.charCodeAt(4));\r\n                    return new Color(new RGBA(16 * r + r, 16 * g + g, 16 * b + b, (16 * a + a) / 255));\r\n                }\r\n                // Invalid color\r\n                return null;\r\n            }\r\n            CSS.parseHex = parseHex;\r\n            function _parseHexDigit(charCode) {\r\n                switch (charCode) {\r\n                    case 48 /* Digit0 */: return 0;\r\n                    case 49 /* Digit1 */: return 1;\r\n                    case 50 /* Digit2 */: return 2;\r\n                    case 51 /* Digit3 */: return 3;\r\n                    case 52 /* Digit4 */: return 4;\r\n                    case 53 /* Digit5 */: return 5;\r\n                    case 54 /* Digit6 */: return 6;\r\n                    case 55 /* Digit7 */: return 7;\r\n                    case 56 /* Digit8 */: return 8;\r\n                    case 57 /* Digit9 */: return 9;\r\n                    case 97 /* a */: return 10;\r\n                    case 65 /* A */: return 10;\r\n                    case 98 /* b */: return 11;\r\n                    case 66 /* B */: return 11;\r\n                    case 99 /* c */: return 12;\r\n                    case 67 /* C */: return 12;\r\n                    case 100 /* d */: return 13;\r\n                    case 68 /* D */: return 13;\r\n                    case 101 /* e */: return 14;\r\n                    case 69 /* E */: return 14;\r\n                    case 102 /* f */: return 15;\r\n                    case 70 /* F */: return 15;\r\n                }\r\n                return 0;\r\n            }\r\n        })(CSS = Format.CSS || (Format.CSS = {}));\r\n    })(Format = Color.Format || (Color.Format = {}));\r\n})(Color || (Color = {}));\r\n"]},"metadata":{},"sourceType":"module"}