{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../common/core/range.js';\nimport { isUpperAsciiLetter, isLowerAsciiLetter } from '../../../base/common/strings.js';\n\nvar WordSelectionRangeProvider =\n/** @class */\nfunction () {\n  function WordSelectionRangeProvider() {}\n\n  WordSelectionRangeProvider.prototype.provideSelectionRanges = function (model, positions) {\n    var result = [];\n\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\n      var position = positions_1[_i];\n      var bucket = [];\n      result.push(bucket);\n\n      this._addInWordRanges(bucket, model, position);\n\n      this._addWordRanges(bucket, model, position);\n\n      this._addWhitespaceLine(bucket, model, position);\n\n      bucket.push({\n        range: model.getFullModelRange()\n      });\n    }\n\n    return result;\n  };\n\n  WordSelectionRangeProvider.prototype._addInWordRanges = function (bucket, model, pos) {\n    var obj = model.getWordAtPosition(pos);\n\n    if (!obj) {\n      return;\n    }\n\n    var word = obj.word,\n        startColumn = obj.startColumn;\n    var offset = pos.column - startColumn;\n    var start = offset;\n    var end = offset;\n    var lastCh = 0; // LEFT anchor (start)\n\n    for (; start >= 0; start--) {\n      var ch = word.charCodeAt(start);\n\n      if (ch === 95\n      /* Underline */\n      || ch === 45\n      /* Dash */\n      ) {\n          // foo-bar OR foo_bar\n          break;\n        } else if (isLowerAsciiLetter(ch) && isUpperAsciiLetter(lastCh)) {\n        // fooBar\n        break;\n      }\n\n      lastCh = ch;\n    }\n\n    start += 1; // RIGHT anchor (end)\n\n    for (; end < word.length; end++) {\n      var ch = word.charCodeAt(end);\n\n      if (isUpperAsciiLetter(ch) && isLowerAsciiLetter(lastCh)) {\n        // fooBar\n        break;\n      } else if (ch === 95\n      /* Underline */\n      || ch === 45\n      /* Dash */\n      ) {\n          // foo-bar OR foo_bar\n          break;\n        }\n\n      lastCh = ch;\n    }\n\n    if (start < end) {\n      bucket.push({\n        range: new Range(pos.lineNumber, startColumn + start, pos.lineNumber, startColumn + end)\n      });\n    }\n  };\n\n  WordSelectionRangeProvider.prototype._addWordRanges = function (bucket, model, pos) {\n    var word = model.getWordAtPosition(pos);\n\n    if (word) {\n      bucket.push({\n        range: new Range(pos.lineNumber, word.startColumn, pos.lineNumber, word.endColumn)\n      });\n    }\n  };\n\n  WordSelectionRangeProvider.prototype._addWhitespaceLine = function (bucket, model, pos) {\n    if (model.getLineLength(pos.lineNumber) > 0 && model.getLineFirstNonWhitespaceColumn(pos.lineNumber) === 0 && model.getLineLastNonWhitespaceColumn(pos.lineNumber) === 0) {\n      bucket.push({\n        range: new Range(pos.lineNumber, 1, pos.lineNumber, model.getLineMaxColumn(pos.lineNumber))\n      });\n    }\n  };\n\n  return WordSelectionRangeProvider;\n}();\n\nexport { WordSelectionRangeProvider };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/contrib/smartSelect/wordSelections.js"],"names":["Range","isUpperAsciiLetter","isLowerAsciiLetter","WordSelectionRangeProvider","prototype","provideSelectionRanges","model","positions","result","_i","positions_1","length","position","bucket","push","_addInWordRanges","_addWordRanges","_addWhitespaceLine","range","getFullModelRange","pos","obj","getWordAtPosition","word","startColumn","offset","column","start","end","lastCh","ch","charCodeAt","lineNumber","endColumn","getLineLength","getLineFirstNonWhitespaceColumn","getLineLastNonWhitespaceColumn","getLineMaxColumn"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Range } from '../../common/core/range.js';\r\nimport { isUpperAsciiLetter, isLowerAsciiLetter } from '../../../base/common/strings.js';\r\nvar WordSelectionRangeProvider = /** @class */ (function () {\r\n    function WordSelectionRangeProvider() {\r\n    }\r\n    WordSelectionRangeProvider.prototype.provideSelectionRanges = function (model, positions) {\r\n        var result = [];\r\n        for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n            var position = positions_1[_i];\r\n            var bucket = [];\r\n            result.push(bucket);\r\n            this._addInWordRanges(bucket, model, position);\r\n            this._addWordRanges(bucket, model, position);\r\n            this._addWhitespaceLine(bucket, model, position);\r\n            bucket.push({ range: model.getFullModelRange() });\r\n        }\r\n        return result;\r\n    };\r\n    WordSelectionRangeProvider.prototype._addInWordRanges = function (bucket, model, pos) {\r\n        var obj = model.getWordAtPosition(pos);\r\n        if (!obj) {\r\n            return;\r\n        }\r\n        var word = obj.word, startColumn = obj.startColumn;\r\n        var offset = pos.column - startColumn;\r\n        var start = offset;\r\n        var end = offset;\r\n        var lastCh = 0;\r\n        // LEFT anchor (start)\r\n        for (; start >= 0; start--) {\r\n            var ch = word.charCodeAt(start);\r\n            if (ch === 95 /* Underline */ || ch === 45 /* Dash */) {\r\n                // foo-bar OR foo_bar\r\n                break;\r\n            }\r\n            else if (isLowerAsciiLetter(ch) && isUpperAsciiLetter(lastCh)) {\r\n                // fooBar\r\n                break;\r\n            }\r\n            lastCh = ch;\r\n        }\r\n        start += 1;\r\n        // RIGHT anchor (end)\r\n        for (; end < word.length; end++) {\r\n            var ch = word.charCodeAt(end);\r\n            if (isUpperAsciiLetter(ch) && isLowerAsciiLetter(lastCh)) {\r\n                // fooBar\r\n                break;\r\n            }\r\n            else if (ch === 95 /* Underline */ || ch === 45 /* Dash */) {\r\n                // foo-bar OR foo_bar\r\n                break;\r\n            }\r\n            lastCh = ch;\r\n        }\r\n        if (start < end) {\r\n            bucket.push({ range: new Range(pos.lineNumber, startColumn + start, pos.lineNumber, startColumn + end) });\r\n        }\r\n    };\r\n    WordSelectionRangeProvider.prototype._addWordRanges = function (bucket, model, pos) {\r\n        var word = model.getWordAtPosition(pos);\r\n        if (word) {\r\n            bucket.push({ range: new Range(pos.lineNumber, word.startColumn, pos.lineNumber, word.endColumn) });\r\n        }\r\n    };\r\n    WordSelectionRangeProvider.prototype._addWhitespaceLine = function (bucket, model, pos) {\r\n        if (model.getLineLength(pos.lineNumber) > 0\r\n            && model.getLineFirstNonWhitespaceColumn(pos.lineNumber) === 0\r\n            && model.getLineLastNonWhitespaceColumn(pos.lineNumber) === 0) {\r\n            bucket.push({ range: new Range(pos.lineNumber, 1, pos.lineNumber, model.getLineMaxColumn(pos.lineNumber)) });\r\n        }\r\n    };\r\n    return WordSelectionRangeProvider;\r\n}());\r\nexport { WordSelectionRangeProvider };\r\n"]},"metadata":{},"sourceType":"module"}