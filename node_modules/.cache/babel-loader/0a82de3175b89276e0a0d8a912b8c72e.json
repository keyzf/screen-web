{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport './textAreaHandler.css';\nimport * as nls from '../../../nls.js';\nimport * as browser from '../../../base/browser/browser.js';\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport * as platform from '../../../base/common/platform.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { Configuration } from '../config/configuration.js';\nimport { CopyOptions, TextAreaInput } from './textAreaInput.js';\nimport { PagedScreenReaderStrategy, TextAreaState } from './textAreaState.js';\nimport { PartFingerprints, ViewPart } from '../view/viewPart.js';\nimport { LineNumbersOverlay } from '../viewParts/lineNumbers/lineNumbers.js';\nimport { Margin } from '../viewParts/margin/margin.js';\nimport { EditorOptions } from '../../common/config/editorOptions.js';\nimport { getMapForWordSeparators } from '../../common/controller/wordCharacterClassifier.js';\nimport { Position } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { Selection } from '../../common/core/selection.js';\nimport * as viewEvents from '../../common/view/viewEvents.js';\n\nvar VisibleTextAreaData =\n/** @class */\nfunction () {\n  function VisibleTextAreaData(top, left, width) {\n    this.top = top;\n    this.left = left;\n    this.width = width;\n  }\n\n  VisibleTextAreaData.prototype.setWidth = function (width) {\n    return new VisibleTextAreaData(this.top, this.left, width);\n  };\n\n  return VisibleTextAreaData;\n}();\n\nvar canUseZeroSizeTextarea = browser.isEdgeOrIE || browser.isFirefox;\n\nvar TextAreaHandler =\n/** @class */\nfunction (_super) {\n  __extends(TextAreaHandler, _super);\n\n  function TextAreaHandler(context, viewController, viewHelper) {\n    var _this = _super.call(this, context) || this; // --- end view API\n\n\n    _this._primaryCursorPosition = new Position(1, 1);\n    _this._primaryCursorVisibleRange = null;\n    _this._viewController = viewController;\n    _this._viewHelper = viewHelper;\n    _this._scrollLeft = 0;\n    _this._scrollTop = 0;\n    var options = _this._context.configuration.options;\n    var layoutInfo = options.get(107\n    /* layoutInfo */\n    );\n\n    _this._setAccessibilityOptions(options);\n\n    _this._contentLeft = layoutInfo.contentLeft;\n    _this._contentWidth = layoutInfo.contentWidth;\n    _this._contentHeight = layoutInfo.height;\n    _this._fontInfo = options.get(34\n    /* fontInfo */\n    );\n    _this._lineHeight = options.get(49\n    /* lineHeight */\n    );\n    _this._emptySelectionClipboard = options.get(25\n    /* emptySelectionClipboard */\n    );\n    _this._copyWithSyntaxHighlighting = options.get(15\n    /* copyWithSyntaxHighlighting */\n    );\n    _this._visibleTextArea = null;\n    _this._selections = [new Selection(1, 1, 1, 1)];\n    _this._modelSelections = [new Selection(1, 1, 1, 1)];\n    _this._lastRenderPosition = null; // Text Area (The focus will always be in the textarea when the cursor is blinking)\n\n    _this.textArea = createFastDomNode(document.createElement('textarea'));\n    PartFingerprints.write(_this.textArea, 6\n    /* TextArea */\n    );\n\n    _this.textArea.setClassName('inputarea');\n\n    _this.textArea.setAttribute('wrap', 'off');\n\n    _this.textArea.setAttribute('autocorrect', 'off');\n\n    _this.textArea.setAttribute('autocapitalize', 'off');\n\n    _this.textArea.setAttribute('autocomplete', 'off');\n\n    _this.textArea.setAttribute('spellcheck', 'false');\n\n    _this.textArea.setAttribute('aria-label', _this._getAriaLabel(options));\n\n    _this.textArea.setAttribute('role', 'textbox');\n\n    _this.textArea.setAttribute('aria-multiline', 'true');\n\n    _this.textArea.setAttribute('aria-haspopup', 'false');\n\n    _this.textArea.setAttribute('aria-autocomplete', 'both');\n\n    if (platform.isWeb && options.get(68\n    /* readOnly */\n    )) {\n      _this.textArea.setAttribute('readonly', 'true');\n    }\n\n    _this.textAreaCover = createFastDomNode(document.createElement('div'));\n\n    _this.textAreaCover.setPosition('absolute');\n\n    var simpleModel = {\n      getLineCount: function () {\n        return _this._context.model.getLineCount();\n      },\n      getLineMaxColumn: function (lineNumber) {\n        return _this._context.model.getLineMaxColumn(lineNumber);\n      },\n      getValueInRange: function (range, eol) {\n        return _this._context.model.getValueInRange(range, eol);\n      }\n    };\n    var textAreaInputHost = {\n      getDataToCopy: function (generateHTML) {\n        var rawTextToCopy = _this._context.model.getPlainTextToCopy(_this._modelSelections, _this._emptySelectionClipboard, platform.isWindows);\n\n        var newLineCharacter = _this._context.model.getEOL();\n\n        var isFromEmptySelection = _this._emptySelectionClipboard && _this._modelSelections.length === 1 && _this._modelSelections[0].isEmpty();\n\n        var multicursorText = Array.isArray(rawTextToCopy) ? rawTextToCopy : null;\n        var text = Array.isArray(rawTextToCopy) ? rawTextToCopy.join(newLineCharacter) : rawTextToCopy;\n        var html = undefined;\n        var mode = null;\n\n        if (generateHTML) {\n          if (CopyOptions.forceCopyWithSyntaxHighlighting || _this._copyWithSyntaxHighlighting && text.length < 65536) {\n            var richText = _this._context.model.getRichTextToCopy(_this._modelSelections, _this._emptySelectionClipboard);\n\n            if (richText) {\n              html = richText.html;\n              mode = richText.mode;\n            }\n          }\n        }\n\n        return {\n          isFromEmptySelection: isFromEmptySelection,\n          multicursorText: multicursorText,\n          text: text,\n          html: html,\n          mode: mode\n        };\n      },\n      getScreenReaderContent: function (currentState) {\n        if (browser.isIPad) {\n          // Do not place anything in the textarea for the iPad\n          return TextAreaState.EMPTY;\n        }\n\n        if (_this._accessibilitySupport === 1\n        /* Disabled */\n        ) {\n            // We know for a fact that a screen reader is not attached\n            // On OSX, we write the character before the cursor to allow for \"long-press\" composition\n            // Also on OSX, we write the word before the cursor to allow for the Accessibility Keyboard to give good hints\n            if (platform.isMacintosh) {\n              var selection = _this._selections[0];\n\n              if (selection.isEmpty()) {\n                var position = selection.getStartPosition();\n\n                var textBefore = _this._getWordBeforePosition(position);\n\n                if (textBefore.length === 0) {\n                  textBefore = _this._getCharacterBeforePosition(position);\n                }\n\n                if (textBefore.length > 0) {\n                  return new TextAreaState(textBefore, textBefore.length, textBefore.length, position, position);\n                }\n              }\n            }\n\n            return TextAreaState.EMPTY;\n          }\n\n        return PagedScreenReaderStrategy.fromEditorSelection(currentState, simpleModel, _this._selections[0], _this._accessibilityPageSize, _this._accessibilitySupport === 0\n        /* Unknown */\n        );\n      },\n      deduceModelPosition: function (viewAnchorPosition, deltaOffset, lineFeedCnt) {\n        return _this._context.model.deduceModelPositionRelativeToViewPosition(viewAnchorPosition, deltaOffset, lineFeedCnt);\n      }\n    };\n    _this._textAreaInput = _this._register(new TextAreaInput(textAreaInputHost, _this.textArea));\n\n    _this._register(_this._textAreaInput.onKeyDown(function (e) {\n      _this._viewController.emitKeyDown(e);\n    }));\n\n    _this._register(_this._textAreaInput.onKeyUp(function (e) {\n      _this._viewController.emitKeyUp(e);\n    }));\n\n    _this._register(_this._textAreaInput.onPaste(function (e) {\n      var pasteOnNewLine = false;\n      var multicursorText = null;\n      var mode = null;\n\n      if (e.metadata) {\n        pasteOnNewLine = _this._emptySelectionClipboard && !!e.metadata.isFromEmptySelection;\n        multicursorText = typeof e.metadata.multicursorText !== 'undefined' ? e.metadata.multicursorText : null;\n        mode = e.metadata.mode;\n      }\n\n      _this._viewController.paste('keyboard', e.text, pasteOnNewLine, multicursorText, mode);\n    }));\n\n    _this._register(_this._textAreaInput.onCut(function () {\n      _this._viewController.cut('keyboard');\n    }));\n\n    _this._register(_this._textAreaInput.onType(function (e) {\n      if (e.replaceCharCnt) {\n        _this._viewController.replacePreviousChar('keyboard', e.text, e.replaceCharCnt);\n      } else {\n        _this._viewController.type('keyboard', e.text);\n      }\n    }));\n\n    _this._register(_this._textAreaInput.onSelectionChangeRequest(function (modelSelection) {\n      _this._viewController.setSelection('keyboard', modelSelection);\n    }));\n\n    _this._register(_this._textAreaInput.onCompositionStart(function () {\n      var lineNumber = _this._selections[0].startLineNumber;\n      var column = _this._selections[0].startColumn;\n\n      _this._context.privateViewEventBus.emit(new viewEvents.ViewRevealRangeRequestEvent('keyboard', new Range(lineNumber, column, lineNumber, column), 0\n      /* Simple */\n      , true, 1\n      /* Immediate */\n      )); // Find range pixel position\n\n\n      var visibleRange = _this._viewHelper.visibleRangeForPositionRelativeToEditor(lineNumber, column);\n\n      if (visibleRange) {\n        _this._visibleTextArea = new VisibleTextAreaData(_this._context.viewLayout.getVerticalOffsetForLineNumber(lineNumber), visibleRange.left, canUseZeroSizeTextarea ? 0 : 1);\n\n        _this._render();\n      } // Show the textarea\n\n\n      _this.textArea.setClassName('inputarea ime-input');\n\n      _this._viewController.compositionStart('keyboard');\n    }));\n\n    _this._register(_this._textAreaInput.onCompositionUpdate(function (e) {\n      if (browser.isEdgeOrIE) {\n        // Due to isEdgeOrIE (where the textarea was not cleared initially)\n        // we cannot assume the text consists only of the composited text\n        _this._visibleTextArea = _this._visibleTextArea.setWidth(0);\n      } else {\n        // adjust width by its size\n        _this._visibleTextArea = _this._visibleTextArea.setWidth(measureText(e.data, _this._fontInfo));\n      }\n\n      _this._render();\n    }));\n\n    _this._register(_this._textAreaInput.onCompositionEnd(function () {\n      _this._visibleTextArea = null;\n\n      _this._render();\n\n      _this.textArea.setClassName('inputarea');\n\n      _this._viewController.compositionEnd('keyboard');\n    }));\n\n    _this._register(_this._textAreaInput.onFocus(function () {\n      _this._context.privateViewEventBus.emit(new viewEvents.ViewFocusChangedEvent(true));\n    }));\n\n    _this._register(_this._textAreaInput.onBlur(function () {\n      _this._context.privateViewEventBus.emit(new viewEvents.ViewFocusChangedEvent(false));\n    }));\n\n    return _this;\n  }\n\n  TextAreaHandler.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n  };\n\n  TextAreaHandler.prototype._getWordBeforePosition = function (position) {\n    var lineContent = this._context.model.getLineContent(position.lineNumber);\n\n    var wordSeparators = getMapForWordSeparators(this._context.configuration.options.get(96\n    /* wordSeparators */\n    ));\n    var column = position.column;\n    var distance = 0;\n\n    while (column > 1) {\n      var charCode = lineContent.charCodeAt(column - 2);\n      var charClass = wordSeparators.get(charCode);\n\n      if (charClass !== 0\n      /* Regular */\n      || distance > 50) {\n        return lineContent.substring(column - 1, position.column - 1);\n      }\n\n      distance++;\n      column--;\n    }\n\n    return lineContent.substring(0, position.column - 1);\n  };\n\n  TextAreaHandler.prototype._getCharacterBeforePosition = function (position) {\n    if (position.column > 1) {\n      var lineContent = this._context.model.getLineContent(position.lineNumber);\n\n      var charBefore = lineContent.charAt(position.column - 2);\n\n      if (!strings.isHighSurrogate(charBefore.charCodeAt(0))) {\n        return charBefore;\n      }\n    }\n\n    return '';\n  };\n\n  TextAreaHandler.prototype._getAriaLabel = function (options) {\n    var accessibilitySupport = options.get(2\n    /* accessibilitySupport */\n    );\n\n    if (accessibilitySupport === 1\n    /* Disabled */\n    ) {\n        return nls.localize('accessibilityOffAriaLabel', \"The editor is not accessible at this time. Press Alt+F1 for options.\");\n      }\n\n    return options.get(4\n    /* ariaLabel */\n    );\n  };\n\n  TextAreaHandler.prototype._setAccessibilityOptions = function (options) {\n    this._accessibilitySupport = options.get(2\n    /* accessibilitySupport */\n    );\n    var accessibilityPageSize = options.get(3\n    /* accessibilityPageSize */\n    );\n\n    if (this._accessibilitySupport === 2\n    /* Enabled */\n    && accessibilityPageSize === EditorOptions.accessibilityPageSize.defaultValue) {\n      // If a screen reader is attached and the default value is not set we shuold automatically increase the page size to 160 for a better experience\n      // If we put more than 160 lines the nvda can not handle this https://github.com/microsoft/vscode/issues/89717\n      this._accessibilityPageSize = 160;\n    } else {\n      this._accessibilityPageSize = accessibilityPageSize;\n    }\n  }; // --- begin event handlers\n\n\n  TextAreaHandler.prototype.onConfigurationChanged = function (e) {\n    var options = this._context.configuration.options;\n    var layoutInfo = options.get(107\n    /* layoutInfo */\n    );\n\n    this._setAccessibilityOptions(options);\n\n    this._contentLeft = layoutInfo.contentLeft;\n    this._contentWidth = layoutInfo.contentWidth;\n    this._contentHeight = layoutInfo.height;\n    this._fontInfo = options.get(34\n    /* fontInfo */\n    );\n    this._lineHeight = options.get(49\n    /* lineHeight */\n    );\n    this._emptySelectionClipboard = options.get(25\n    /* emptySelectionClipboard */\n    );\n    this._copyWithSyntaxHighlighting = options.get(15\n    /* copyWithSyntaxHighlighting */\n    );\n    this.textArea.setAttribute('aria-label', this._getAriaLabel(options));\n\n    if (platform.isWeb && e.hasChanged(68\n    /* readOnly */\n    )) {\n      if (options.get(68\n      /* readOnly */\n      )) {\n        this.textArea.setAttribute('readonly', 'true');\n      } else {\n        this.textArea.removeAttribute('readonly');\n      }\n    }\n\n    if (e.hasChanged(2\n    /* accessibilitySupport */\n    )) {\n      this._textAreaInput.writeScreenReaderContent('strategy changed');\n    }\n\n    return true;\n  };\n\n  TextAreaHandler.prototype.onCursorStateChanged = function (e) {\n    this._selections = e.selections.slice(0);\n    this._modelSelections = e.modelSelections.slice(0);\n\n    this._textAreaInput.writeScreenReaderContent('selection changed');\n\n    return true;\n  };\n\n  TextAreaHandler.prototype.onDecorationsChanged = function (e) {\n    // true for inline decorations that can end up relayouting text\n    return true;\n  };\n\n  TextAreaHandler.prototype.onFlushed = function (e) {\n    return true;\n  };\n\n  TextAreaHandler.prototype.onLinesChanged = function (e) {\n    return true;\n  };\n\n  TextAreaHandler.prototype.onLinesDeleted = function (e) {\n    return true;\n  };\n\n  TextAreaHandler.prototype.onLinesInserted = function (e) {\n    return true;\n  };\n\n  TextAreaHandler.prototype.onScrollChanged = function (e) {\n    this._scrollLeft = e.scrollLeft;\n    this._scrollTop = e.scrollTop;\n    return true;\n  };\n\n  TextAreaHandler.prototype.onZonesChanged = function (e) {\n    return true;\n  }; // --- end event handlers\n  // --- begin view API\n\n\n  TextAreaHandler.prototype.isFocused = function () {\n    return this._textAreaInput.isFocused();\n  };\n\n  TextAreaHandler.prototype.focusTextArea = function () {\n    this._textAreaInput.focusTextArea();\n  };\n\n  TextAreaHandler.prototype.getLastRenderData = function () {\n    return this._lastRenderPosition;\n  };\n\n  TextAreaHandler.prototype.setAriaOptions = function (options) {\n    if (options.activeDescendant) {\n      this.textArea.setAttribute('aria-haspopup', 'true');\n      this.textArea.setAttribute('aria-autocomplete', 'list');\n      this.textArea.setAttribute('aria-activedescendant', options.activeDescendant);\n    } else {\n      this.textArea.setAttribute('aria-haspopup', 'false');\n      this.textArea.setAttribute('aria-autocomplete', 'both');\n      this.textArea.removeAttribute('aria-activedescendant');\n    }\n  };\n\n  TextAreaHandler.prototype.prepareRender = function (ctx) {\n    this._primaryCursorPosition = new Position(this._selections[0].positionLineNumber, this._selections[0].positionColumn);\n    this._primaryCursorVisibleRange = ctx.visibleRangeForPosition(this._primaryCursorPosition);\n  };\n\n  TextAreaHandler.prototype.render = function (ctx) {\n    this._textAreaInput.writeScreenReaderContent('render');\n\n    this._render();\n  };\n\n  TextAreaHandler.prototype._render = function () {\n    if (this._visibleTextArea) {\n      // The text area is visible for composition reasons\n      this._renderInsideEditor(null, this._visibleTextArea.top - this._scrollTop, this._contentLeft + this._visibleTextArea.left - this._scrollLeft, this._visibleTextArea.width, this._lineHeight);\n\n      return;\n    }\n\n    if (!this._primaryCursorVisibleRange) {\n      // The primary cursor is outside the viewport => place textarea to the top left\n      this._renderAtTopLeft();\n\n      return;\n    }\n\n    var left = this._contentLeft + this._primaryCursorVisibleRange.left - this._scrollLeft;\n\n    if (left < this._contentLeft || left > this._contentLeft + this._contentWidth) {\n      // cursor is outside the viewport\n      this._renderAtTopLeft();\n\n      return;\n    }\n\n    var top = this._context.viewLayout.getVerticalOffsetForLineNumber(this._selections[0].positionLineNumber) - this._scrollTop;\n\n    if (top < 0 || top > this._contentHeight) {\n      // cursor is outside the viewport\n      this._renderAtTopLeft();\n\n      return;\n    } // The primary cursor is in the viewport (at least vertically) => place textarea on the cursor\n\n\n    if (platform.isMacintosh) {\n      // For the popup emoji input, we will make the text area as high as the line height\n      // We will also make the fontSize and lineHeight the correct dimensions to help with the placement of these pickers\n      this._renderInsideEditor(this._primaryCursorPosition, top, left, canUseZeroSizeTextarea ? 0 : 1, this._lineHeight);\n\n      return;\n    }\n\n    this._renderInsideEditor(this._primaryCursorPosition, top, left, canUseZeroSizeTextarea ? 0 : 1, canUseZeroSizeTextarea ? 0 : 1);\n  };\n\n  TextAreaHandler.prototype._renderInsideEditor = function (renderedPosition, top, left, width, height) {\n    this._lastRenderPosition = renderedPosition;\n    var ta = this.textArea;\n    var tac = this.textAreaCover;\n    Configuration.applyFontInfo(ta, this._fontInfo);\n    ta.setTop(top);\n    ta.setLeft(left);\n    ta.setWidth(width);\n    ta.setHeight(height);\n    tac.setTop(0);\n    tac.setLeft(0);\n    tac.setWidth(0);\n    tac.setHeight(0);\n  };\n\n  TextAreaHandler.prototype._renderAtTopLeft = function () {\n    this._lastRenderPosition = null;\n    var ta = this.textArea;\n    var tac = this.textAreaCover;\n    Configuration.applyFontInfo(ta, this._fontInfo);\n    ta.setTop(0);\n    ta.setLeft(0);\n    tac.setTop(0);\n    tac.setLeft(0);\n\n    if (canUseZeroSizeTextarea) {\n      ta.setWidth(0);\n      ta.setHeight(0);\n      tac.setWidth(0);\n      tac.setHeight(0);\n      return;\n    } // (in WebKit the textarea is 1px by 1px because it cannot handle input to a 0x0 textarea)\n    // specifically, when doing Korean IME, setting the textarea to 0x0 breaks IME badly.\n\n\n    ta.setWidth(1);\n    ta.setHeight(1);\n    tac.setWidth(1);\n    tac.setHeight(1);\n    var options = this._context.configuration.options;\n\n    if (options.get(40\n    /* glyphMargin */\n    )) {\n      tac.setClassName('monaco-editor-background textAreaCover ' + Margin.OUTER_CLASS_NAME);\n    } else {\n      if (options.get(50\n      /* lineNumbers */\n      ).renderType !== 0\n      /* Off */\n      ) {\n          tac.setClassName('monaco-editor-background textAreaCover ' + LineNumbersOverlay.CLASS_NAME);\n        } else {\n        tac.setClassName('monaco-editor-background textAreaCover');\n      }\n    }\n  };\n\n  return TextAreaHandler;\n}(ViewPart);\n\nexport { TextAreaHandler };\n\nfunction measureText(text, fontInfo) {\n  // adjust width by its size\n  var canvasElem = document.createElement('canvas');\n  var context = canvasElem.getContext('2d');\n  context.font = createFontString(fontInfo);\n  var metrics = context.measureText(text);\n\n  if (browser.isFirefox) {\n    return metrics.width + 2; // +2 for Japanese...\n  } else {\n    return metrics.width;\n  }\n}\n\nfunction createFontString(bareFontInfo) {\n  return doCreateFontString('normal', bareFontInfo.fontWeight, bareFontInfo.fontSize, bareFontInfo.lineHeight, bareFontInfo.fontFamily);\n}\n\nfunction doCreateFontString(fontStyle, fontWeight, fontSize, lineHeight, fontFamily) {\n  // The full font syntax is:\n  // style | variant | weight | stretch | size/line-height | fontFamily\n  // (https://developer.mozilla.org/en-US/docs/Web/CSS/font)\n  // But it appears Edge and IE11 cannot properly parse `stretch`.\n  return fontStyle + \" normal \" + fontWeight + \" \" + fontSize + \"px / \" + lineHeight + \"px \" + fontFamily;\n}","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/browser/controller/textAreaHandler.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","nls","browser","createFastDomNode","platform","strings","Configuration","CopyOptions","TextAreaInput","PagedScreenReaderStrategy","TextAreaState","PartFingerprints","ViewPart","LineNumbersOverlay","Margin","EditorOptions","getMapForWordSeparators","Position","Range","Selection","viewEvents","VisibleTextAreaData","top","left","width","setWidth","canUseZeroSizeTextarea","isEdgeOrIE","isFirefox","TextAreaHandler","_super","context","viewController","viewHelper","_this","call","_primaryCursorPosition","_primaryCursorVisibleRange","_viewController","_viewHelper","_scrollLeft","_scrollTop","options","_context","configuration","layoutInfo","get","_setAccessibilityOptions","_contentLeft","contentLeft","_contentWidth","contentWidth","_contentHeight","height","_fontInfo","_lineHeight","_emptySelectionClipboard","_copyWithSyntaxHighlighting","_visibleTextArea","_selections","_modelSelections","_lastRenderPosition","textArea","document","createElement","write","setClassName","setAttribute","_getAriaLabel","isWeb","textAreaCover","setPosition","simpleModel","getLineCount","model","getLineMaxColumn","lineNumber","getValueInRange","range","eol","textAreaInputHost","getDataToCopy","generateHTML","rawTextToCopy","getPlainTextToCopy","isWindows","newLineCharacter","getEOL","isFromEmptySelection","length","isEmpty","multicursorText","isArray","text","join","html","undefined","mode","forceCopyWithSyntaxHighlighting","richText","getRichTextToCopy","getScreenReaderContent","currentState","isIPad","EMPTY","_accessibilitySupport","isMacintosh","selection","position","getStartPosition","textBefore","_getWordBeforePosition","_getCharacterBeforePosition","fromEditorSelection","_accessibilityPageSize","deduceModelPosition","viewAnchorPosition","deltaOffset","lineFeedCnt","deduceModelPositionRelativeToViewPosition","_textAreaInput","_register","onKeyDown","e","emitKeyDown","onKeyUp","emitKeyUp","onPaste","pasteOnNewLine","metadata","paste","onCut","cut","onType","replaceCharCnt","replacePreviousChar","type","onSelectionChangeRequest","modelSelection","setSelection","onCompositionStart","startLineNumber","column","startColumn","privateViewEventBus","emit","ViewRevealRangeRequestEvent","visibleRange","visibleRangeForPositionRelativeToEditor","viewLayout","getVerticalOffsetForLineNumber","_render","compositionStart","onCompositionUpdate","measureText","data","onCompositionEnd","compositionEnd","onFocus","ViewFocusChangedEvent","onBlur","dispose","lineContent","getLineContent","wordSeparators","distance","charCode","charCodeAt","charClass","substring","charBefore","charAt","isHighSurrogate","accessibilitySupport","localize","accessibilityPageSize","defaultValue","onConfigurationChanged","hasChanged","removeAttribute","writeScreenReaderContent","onCursorStateChanged","selections","slice","modelSelections","onDecorationsChanged","onFlushed","onLinesChanged","onLinesDeleted","onLinesInserted","onScrollChanged","scrollLeft","scrollTop","onZonesChanged","isFocused","focusTextArea","getLastRenderData","setAriaOptions","activeDescendant","prepareRender","ctx","positionLineNumber","positionColumn","visibleRangeForPosition","render","_renderInsideEditor","_renderAtTopLeft","renderedPosition","ta","tac","applyFontInfo","setTop","setLeft","setHeight","OUTER_CLASS_NAME","renderType","CLASS_NAME","fontInfo","canvasElem","getContext","font","createFontString","metrics","bareFontInfo","doCreateFontString","fontWeight","fontSize","lineHeight","fontFamily","fontStyle"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport './textAreaHandler.css';\r\nimport * as nls from '../../../nls.js';\r\nimport * as browser from '../../../base/browser/browser.js';\r\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\r\nimport * as platform from '../../../base/common/platform.js';\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { Configuration } from '../config/configuration.js';\r\nimport { CopyOptions, TextAreaInput } from './textAreaInput.js';\r\nimport { PagedScreenReaderStrategy, TextAreaState } from './textAreaState.js';\r\nimport { PartFingerprints, ViewPart } from '../view/viewPart.js';\r\nimport { LineNumbersOverlay } from '../viewParts/lineNumbers/lineNumbers.js';\r\nimport { Margin } from '../viewParts/margin/margin.js';\r\nimport { EditorOptions } from '../../common/config/editorOptions.js';\r\nimport { getMapForWordSeparators } from '../../common/controller/wordCharacterClassifier.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport * as viewEvents from '../../common/view/viewEvents.js';\r\nvar VisibleTextAreaData = /** @class */ (function () {\r\n    function VisibleTextAreaData(top, left, width) {\r\n        this.top = top;\r\n        this.left = left;\r\n        this.width = width;\r\n    }\r\n    VisibleTextAreaData.prototype.setWidth = function (width) {\r\n        return new VisibleTextAreaData(this.top, this.left, width);\r\n    };\r\n    return VisibleTextAreaData;\r\n}());\r\nvar canUseZeroSizeTextarea = (browser.isEdgeOrIE || browser.isFirefox);\r\nvar TextAreaHandler = /** @class */ (function (_super) {\r\n    __extends(TextAreaHandler, _super);\r\n    function TextAreaHandler(context, viewController, viewHelper) {\r\n        var _this = _super.call(this, context) || this;\r\n        // --- end view API\r\n        _this._primaryCursorPosition = new Position(1, 1);\r\n        _this._primaryCursorVisibleRange = null;\r\n        _this._viewController = viewController;\r\n        _this._viewHelper = viewHelper;\r\n        _this._scrollLeft = 0;\r\n        _this._scrollTop = 0;\r\n        var options = _this._context.configuration.options;\r\n        var layoutInfo = options.get(107 /* layoutInfo */);\r\n        _this._setAccessibilityOptions(options);\r\n        _this._contentLeft = layoutInfo.contentLeft;\r\n        _this._contentWidth = layoutInfo.contentWidth;\r\n        _this._contentHeight = layoutInfo.height;\r\n        _this._fontInfo = options.get(34 /* fontInfo */);\r\n        _this._lineHeight = options.get(49 /* lineHeight */);\r\n        _this._emptySelectionClipboard = options.get(25 /* emptySelectionClipboard */);\r\n        _this._copyWithSyntaxHighlighting = options.get(15 /* copyWithSyntaxHighlighting */);\r\n        _this._visibleTextArea = null;\r\n        _this._selections = [new Selection(1, 1, 1, 1)];\r\n        _this._modelSelections = [new Selection(1, 1, 1, 1)];\r\n        _this._lastRenderPosition = null;\r\n        // Text Area (The focus will always be in the textarea when the cursor is blinking)\r\n        _this.textArea = createFastDomNode(document.createElement('textarea'));\r\n        PartFingerprints.write(_this.textArea, 6 /* TextArea */);\r\n        _this.textArea.setClassName('inputarea');\r\n        _this.textArea.setAttribute('wrap', 'off');\r\n        _this.textArea.setAttribute('autocorrect', 'off');\r\n        _this.textArea.setAttribute('autocapitalize', 'off');\r\n        _this.textArea.setAttribute('autocomplete', 'off');\r\n        _this.textArea.setAttribute('spellcheck', 'false');\r\n        _this.textArea.setAttribute('aria-label', _this._getAriaLabel(options));\r\n        _this.textArea.setAttribute('role', 'textbox');\r\n        _this.textArea.setAttribute('aria-multiline', 'true');\r\n        _this.textArea.setAttribute('aria-haspopup', 'false');\r\n        _this.textArea.setAttribute('aria-autocomplete', 'both');\r\n        if (platform.isWeb && options.get(68 /* readOnly */)) {\r\n            _this.textArea.setAttribute('readonly', 'true');\r\n        }\r\n        _this.textAreaCover = createFastDomNode(document.createElement('div'));\r\n        _this.textAreaCover.setPosition('absolute');\r\n        var simpleModel = {\r\n            getLineCount: function () {\r\n                return _this._context.model.getLineCount();\r\n            },\r\n            getLineMaxColumn: function (lineNumber) {\r\n                return _this._context.model.getLineMaxColumn(lineNumber);\r\n            },\r\n            getValueInRange: function (range, eol) {\r\n                return _this._context.model.getValueInRange(range, eol);\r\n            }\r\n        };\r\n        var textAreaInputHost = {\r\n            getDataToCopy: function (generateHTML) {\r\n                var rawTextToCopy = _this._context.model.getPlainTextToCopy(_this._modelSelections, _this._emptySelectionClipboard, platform.isWindows);\r\n                var newLineCharacter = _this._context.model.getEOL();\r\n                var isFromEmptySelection = (_this._emptySelectionClipboard && _this._modelSelections.length === 1 && _this._modelSelections[0].isEmpty());\r\n                var multicursorText = (Array.isArray(rawTextToCopy) ? rawTextToCopy : null);\r\n                var text = (Array.isArray(rawTextToCopy) ? rawTextToCopy.join(newLineCharacter) : rawTextToCopy);\r\n                var html = undefined;\r\n                var mode = null;\r\n                if (generateHTML) {\r\n                    if (CopyOptions.forceCopyWithSyntaxHighlighting || (_this._copyWithSyntaxHighlighting && text.length < 65536)) {\r\n                        var richText = _this._context.model.getRichTextToCopy(_this._modelSelections, _this._emptySelectionClipboard);\r\n                        if (richText) {\r\n                            html = richText.html;\r\n                            mode = richText.mode;\r\n                        }\r\n                    }\r\n                }\r\n                return {\r\n                    isFromEmptySelection: isFromEmptySelection,\r\n                    multicursorText: multicursorText,\r\n                    text: text,\r\n                    html: html,\r\n                    mode: mode\r\n                };\r\n            },\r\n            getScreenReaderContent: function (currentState) {\r\n                if (browser.isIPad) {\r\n                    // Do not place anything in the textarea for the iPad\r\n                    return TextAreaState.EMPTY;\r\n                }\r\n                if (_this._accessibilitySupport === 1 /* Disabled */) {\r\n                    // We know for a fact that a screen reader is not attached\r\n                    // On OSX, we write the character before the cursor to allow for \"long-press\" composition\r\n                    // Also on OSX, we write the word before the cursor to allow for the Accessibility Keyboard to give good hints\r\n                    if (platform.isMacintosh) {\r\n                        var selection = _this._selections[0];\r\n                        if (selection.isEmpty()) {\r\n                            var position = selection.getStartPosition();\r\n                            var textBefore = _this._getWordBeforePosition(position);\r\n                            if (textBefore.length === 0) {\r\n                                textBefore = _this._getCharacterBeforePosition(position);\r\n                            }\r\n                            if (textBefore.length > 0) {\r\n                                return new TextAreaState(textBefore, textBefore.length, textBefore.length, position, position);\r\n                            }\r\n                        }\r\n                    }\r\n                    return TextAreaState.EMPTY;\r\n                }\r\n                return PagedScreenReaderStrategy.fromEditorSelection(currentState, simpleModel, _this._selections[0], _this._accessibilityPageSize, _this._accessibilitySupport === 0 /* Unknown */);\r\n            },\r\n            deduceModelPosition: function (viewAnchorPosition, deltaOffset, lineFeedCnt) {\r\n                return _this._context.model.deduceModelPositionRelativeToViewPosition(viewAnchorPosition, deltaOffset, lineFeedCnt);\r\n            }\r\n        };\r\n        _this._textAreaInput = _this._register(new TextAreaInput(textAreaInputHost, _this.textArea));\r\n        _this._register(_this._textAreaInput.onKeyDown(function (e) {\r\n            _this._viewController.emitKeyDown(e);\r\n        }));\r\n        _this._register(_this._textAreaInput.onKeyUp(function (e) {\r\n            _this._viewController.emitKeyUp(e);\r\n        }));\r\n        _this._register(_this._textAreaInput.onPaste(function (e) {\r\n            var pasteOnNewLine = false;\r\n            var multicursorText = null;\r\n            var mode = null;\r\n            if (e.metadata) {\r\n                pasteOnNewLine = (_this._emptySelectionClipboard && !!e.metadata.isFromEmptySelection);\r\n                multicursorText = (typeof e.metadata.multicursorText !== 'undefined' ? e.metadata.multicursorText : null);\r\n                mode = e.metadata.mode;\r\n            }\r\n            _this._viewController.paste('keyboard', e.text, pasteOnNewLine, multicursorText, mode);\r\n        }));\r\n        _this._register(_this._textAreaInput.onCut(function () {\r\n            _this._viewController.cut('keyboard');\r\n        }));\r\n        _this._register(_this._textAreaInput.onType(function (e) {\r\n            if (e.replaceCharCnt) {\r\n                _this._viewController.replacePreviousChar('keyboard', e.text, e.replaceCharCnt);\r\n            }\r\n            else {\r\n                _this._viewController.type('keyboard', e.text);\r\n            }\r\n        }));\r\n        _this._register(_this._textAreaInput.onSelectionChangeRequest(function (modelSelection) {\r\n            _this._viewController.setSelection('keyboard', modelSelection);\r\n        }));\r\n        _this._register(_this._textAreaInput.onCompositionStart(function () {\r\n            var lineNumber = _this._selections[0].startLineNumber;\r\n            var column = _this._selections[0].startColumn;\r\n            _this._context.privateViewEventBus.emit(new viewEvents.ViewRevealRangeRequestEvent('keyboard', new Range(lineNumber, column, lineNumber, column), 0 /* Simple */, true, 1 /* Immediate */));\r\n            // Find range pixel position\r\n            var visibleRange = _this._viewHelper.visibleRangeForPositionRelativeToEditor(lineNumber, column);\r\n            if (visibleRange) {\r\n                _this._visibleTextArea = new VisibleTextAreaData(_this._context.viewLayout.getVerticalOffsetForLineNumber(lineNumber), visibleRange.left, canUseZeroSizeTextarea ? 0 : 1);\r\n                _this._render();\r\n            }\r\n            // Show the textarea\r\n            _this.textArea.setClassName('inputarea ime-input');\r\n            _this._viewController.compositionStart('keyboard');\r\n        }));\r\n        _this._register(_this._textAreaInput.onCompositionUpdate(function (e) {\r\n            if (browser.isEdgeOrIE) {\r\n                // Due to isEdgeOrIE (where the textarea was not cleared initially)\r\n                // we cannot assume the text consists only of the composited text\r\n                _this._visibleTextArea = _this._visibleTextArea.setWidth(0);\r\n            }\r\n            else {\r\n                // adjust width by its size\r\n                _this._visibleTextArea = _this._visibleTextArea.setWidth(measureText(e.data, _this._fontInfo));\r\n            }\r\n            _this._render();\r\n        }));\r\n        _this._register(_this._textAreaInput.onCompositionEnd(function () {\r\n            _this._visibleTextArea = null;\r\n            _this._render();\r\n            _this.textArea.setClassName('inputarea');\r\n            _this._viewController.compositionEnd('keyboard');\r\n        }));\r\n        _this._register(_this._textAreaInput.onFocus(function () {\r\n            _this._context.privateViewEventBus.emit(new viewEvents.ViewFocusChangedEvent(true));\r\n        }));\r\n        _this._register(_this._textAreaInput.onBlur(function () {\r\n            _this._context.privateViewEventBus.emit(new viewEvents.ViewFocusChangedEvent(false));\r\n        }));\r\n        return _this;\r\n    }\r\n    TextAreaHandler.prototype.dispose = function () {\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    TextAreaHandler.prototype._getWordBeforePosition = function (position) {\r\n        var lineContent = this._context.model.getLineContent(position.lineNumber);\r\n        var wordSeparators = getMapForWordSeparators(this._context.configuration.options.get(96 /* wordSeparators */));\r\n        var column = position.column;\r\n        var distance = 0;\r\n        while (column > 1) {\r\n            var charCode = lineContent.charCodeAt(column - 2);\r\n            var charClass = wordSeparators.get(charCode);\r\n            if (charClass !== 0 /* Regular */ || distance > 50) {\r\n                return lineContent.substring(column - 1, position.column - 1);\r\n            }\r\n            distance++;\r\n            column--;\r\n        }\r\n        return lineContent.substring(0, position.column - 1);\r\n    };\r\n    TextAreaHandler.prototype._getCharacterBeforePosition = function (position) {\r\n        if (position.column > 1) {\r\n            var lineContent = this._context.model.getLineContent(position.lineNumber);\r\n            var charBefore = lineContent.charAt(position.column - 2);\r\n            if (!strings.isHighSurrogate(charBefore.charCodeAt(0))) {\r\n                return charBefore;\r\n            }\r\n        }\r\n        return '';\r\n    };\r\n    TextAreaHandler.prototype._getAriaLabel = function (options) {\r\n        var accessibilitySupport = options.get(2 /* accessibilitySupport */);\r\n        if (accessibilitySupport === 1 /* Disabled */) {\r\n            return nls.localize('accessibilityOffAriaLabel', \"The editor is not accessible at this time. Press Alt+F1 for options.\");\r\n        }\r\n        return options.get(4 /* ariaLabel */);\r\n    };\r\n    TextAreaHandler.prototype._setAccessibilityOptions = function (options) {\r\n        this._accessibilitySupport = options.get(2 /* accessibilitySupport */);\r\n        var accessibilityPageSize = options.get(3 /* accessibilityPageSize */);\r\n        if (this._accessibilitySupport === 2 /* Enabled */ && accessibilityPageSize === EditorOptions.accessibilityPageSize.defaultValue) {\r\n            // If a screen reader is attached and the default value is not set we shuold automatically increase the page size to 160 for a better experience\r\n            // If we put more than 160 lines the nvda can not handle this https://github.com/microsoft/vscode/issues/89717\r\n            this._accessibilityPageSize = 160;\r\n        }\r\n        else {\r\n            this._accessibilityPageSize = accessibilityPageSize;\r\n        }\r\n    };\r\n    // --- begin event handlers\r\n    TextAreaHandler.prototype.onConfigurationChanged = function (e) {\r\n        var options = this._context.configuration.options;\r\n        var layoutInfo = options.get(107 /* layoutInfo */);\r\n        this._setAccessibilityOptions(options);\r\n        this._contentLeft = layoutInfo.contentLeft;\r\n        this._contentWidth = layoutInfo.contentWidth;\r\n        this._contentHeight = layoutInfo.height;\r\n        this._fontInfo = options.get(34 /* fontInfo */);\r\n        this._lineHeight = options.get(49 /* lineHeight */);\r\n        this._emptySelectionClipboard = options.get(25 /* emptySelectionClipboard */);\r\n        this._copyWithSyntaxHighlighting = options.get(15 /* copyWithSyntaxHighlighting */);\r\n        this.textArea.setAttribute('aria-label', this._getAriaLabel(options));\r\n        if (platform.isWeb && e.hasChanged(68 /* readOnly */)) {\r\n            if (options.get(68 /* readOnly */)) {\r\n                this.textArea.setAttribute('readonly', 'true');\r\n            }\r\n            else {\r\n                this.textArea.removeAttribute('readonly');\r\n            }\r\n        }\r\n        if (e.hasChanged(2 /* accessibilitySupport */)) {\r\n            this._textAreaInput.writeScreenReaderContent('strategy changed');\r\n        }\r\n        return true;\r\n    };\r\n    TextAreaHandler.prototype.onCursorStateChanged = function (e) {\r\n        this._selections = e.selections.slice(0);\r\n        this._modelSelections = e.modelSelections.slice(0);\r\n        this._textAreaInput.writeScreenReaderContent('selection changed');\r\n        return true;\r\n    };\r\n    TextAreaHandler.prototype.onDecorationsChanged = function (e) {\r\n        // true for inline decorations that can end up relayouting text\r\n        return true;\r\n    };\r\n    TextAreaHandler.prototype.onFlushed = function (e) {\r\n        return true;\r\n    };\r\n    TextAreaHandler.prototype.onLinesChanged = function (e) {\r\n        return true;\r\n    };\r\n    TextAreaHandler.prototype.onLinesDeleted = function (e) {\r\n        return true;\r\n    };\r\n    TextAreaHandler.prototype.onLinesInserted = function (e) {\r\n        return true;\r\n    };\r\n    TextAreaHandler.prototype.onScrollChanged = function (e) {\r\n        this._scrollLeft = e.scrollLeft;\r\n        this._scrollTop = e.scrollTop;\r\n        return true;\r\n    };\r\n    TextAreaHandler.prototype.onZonesChanged = function (e) {\r\n        return true;\r\n    };\r\n    // --- end event handlers\r\n    // --- begin view API\r\n    TextAreaHandler.prototype.isFocused = function () {\r\n        return this._textAreaInput.isFocused();\r\n    };\r\n    TextAreaHandler.prototype.focusTextArea = function () {\r\n        this._textAreaInput.focusTextArea();\r\n    };\r\n    TextAreaHandler.prototype.getLastRenderData = function () {\r\n        return this._lastRenderPosition;\r\n    };\r\n    TextAreaHandler.prototype.setAriaOptions = function (options) {\r\n        if (options.activeDescendant) {\r\n            this.textArea.setAttribute('aria-haspopup', 'true');\r\n            this.textArea.setAttribute('aria-autocomplete', 'list');\r\n            this.textArea.setAttribute('aria-activedescendant', options.activeDescendant);\r\n        }\r\n        else {\r\n            this.textArea.setAttribute('aria-haspopup', 'false');\r\n            this.textArea.setAttribute('aria-autocomplete', 'both');\r\n            this.textArea.removeAttribute('aria-activedescendant');\r\n        }\r\n    };\r\n    TextAreaHandler.prototype.prepareRender = function (ctx) {\r\n        this._primaryCursorPosition = new Position(this._selections[0].positionLineNumber, this._selections[0].positionColumn);\r\n        this._primaryCursorVisibleRange = ctx.visibleRangeForPosition(this._primaryCursorPosition);\r\n    };\r\n    TextAreaHandler.prototype.render = function (ctx) {\r\n        this._textAreaInput.writeScreenReaderContent('render');\r\n        this._render();\r\n    };\r\n    TextAreaHandler.prototype._render = function () {\r\n        if (this._visibleTextArea) {\r\n            // The text area is visible for composition reasons\r\n            this._renderInsideEditor(null, this._visibleTextArea.top - this._scrollTop, this._contentLeft + this._visibleTextArea.left - this._scrollLeft, this._visibleTextArea.width, this._lineHeight);\r\n            return;\r\n        }\r\n        if (!this._primaryCursorVisibleRange) {\r\n            // The primary cursor is outside the viewport => place textarea to the top left\r\n            this._renderAtTopLeft();\r\n            return;\r\n        }\r\n        var left = this._contentLeft + this._primaryCursorVisibleRange.left - this._scrollLeft;\r\n        if (left < this._contentLeft || left > this._contentLeft + this._contentWidth) {\r\n            // cursor is outside the viewport\r\n            this._renderAtTopLeft();\r\n            return;\r\n        }\r\n        var top = this._context.viewLayout.getVerticalOffsetForLineNumber(this._selections[0].positionLineNumber) - this._scrollTop;\r\n        if (top < 0 || top > this._contentHeight) {\r\n            // cursor is outside the viewport\r\n            this._renderAtTopLeft();\r\n            return;\r\n        }\r\n        // The primary cursor is in the viewport (at least vertically) => place textarea on the cursor\r\n        if (platform.isMacintosh) {\r\n            // For the popup emoji input, we will make the text area as high as the line height\r\n            // We will also make the fontSize and lineHeight the correct dimensions to help with the placement of these pickers\r\n            this._renderInsideEditor(this._primaryCursorPosition, top, left, canUseZeroSizeTextarea ? 0 : 1, this._lineHeight);\r\n            return;\r\n        }\r\n        this._renderInsideEditor(this._primaryCursorPosition, top, left, canUseZeroSizeTextarea ? 0 : 1, canUseZeroSizeTextarea ? 0 : 1);\r\n    };\r\n    TextAreaHandler.prototype._renderInsideEditor = function (renderedPosition, top, left, width, height) {\r\n        this._lastRenderPosition = renderedPosition;\r\n        var ta = this.textArea;\r\n        var tac = this.textAreaCover;\r\n        Configuration.applyFontInfo(ta, this._fontInfo);\r\n        ta.setTop(top);\r\n        ta.setLeft(left);\r\n        ta.setWidth(width);\r\n        ta.setHeight(height);\r\n        tac.setTop(0);\r\n        tac.setLeft(0);\r\n        tac.setWidth(0);\r\n        tac.setHeight(0);\r\n    };\r\n    TextAreaHandler.prototype._renderAtTopLeft = function () {\r\n        this._lastRenderPosition = null;\r\n        var ta = this.textArea;\r\n        var tac = this.textAreaCover;\r\n        Configuration.applyFontInfo(ta, this._fontInfo);\r\n        ta.setTop(0);\r\n        ta.setLeft(0);\r\n        tac.setTop(0);\r\n        tac.setLeft(0);\r\n        if (canUseZeroSizeTextarea) {\r\n            ta.setWidth(0);\r\n            ta.setHeight(0);\r\n            tac.setWidth(0);\r\n            tac.setHeight(0);\r\n            return;\r\n        }\r\n        // (in WebKit the textarea is 1px by 1px because it cannot handle input to a 0x0 textarea)\r\n        // specifically, when doing Korean IME, setting the textarea to 0x0 breaks IME badly.\r\n        ta.setWidth(1);\r\n        ta.setHeight(1);\r\n        tac.setWidth(1);\r\n        tac.setHeight(1);\r\n        var options = this._context.configuration.options;\r\n        if (options.get(40 /* glyphMargin */)) {\r\n            tac.setClassName('monaco-editor-background textAreaCover ' + Margin.OUTER_CLASS_NAME);\r\n        }\r\n        else {\r\n            if (options.get(50 /* lineNumbers */).renderType !== 0 /* Off */) {\r\n                tac.setClassName('monaco-editor-background textAreaCover ' + LineNumbersOverlay.CLASS_NAME);\r\n            }\r\n            else {\r\n                tac.setClassName('monaco-editor-background textAreaCover');\r\n            }\r\n        }\r\n    };\r\n    return TextAreaHandler;\r\n}(ViewPart));\r\nexport { TextAreaHandler };\r\nfunction measureText(text, fontInfo) {\r\n    // adjust width by its size\r\n    var canvasElem = document.createElement('canvas');\r\n    var context = canvasElem.getContext('2d');\r\n    context.font = createFontString(fontInfo);\r\n    var metrics = context.measureText(text);\r\n    if (browser.isFirefox) {\r\n        return metrics.width + 2; // +2 for Japanese...\r\n    }\r\n    else {\r\n        return metrics.width;\r\n    }\r\n}\r\nfunction createFontString(bareFontInfo) {\r\n    return doCreateFontString('normal', bareFontInfo.fontWeight, bareFontInfo.fontSize, bareFontInfo.lineHeight, bareFontInfo.fontFamily);\r\n}\r\nfunction doCreateFontString(fontStyle, fontWeight, fontSize, lineHeight, fontFamily) {\r\n    // The full font syntax is:\r\n    // style | variant | weight | stretch | size/line-height | fontFamily\r\n    // (https://developer.mozilla.org/en-US/docs/Web/CSS/font)\r\n    // But it appears Edge and IE11 cannot properly parse `stretch`.\r\n    return fontStyle + \" normal \" + fontWeight + \" \" + fontSize + \"px / \" + lineHeight + \"px \" + fontFamily;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}