{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { Dimension } from '../../../../base/browser/dom.js';\nimport { QuickOpenWidget } from '../../../../base/parts/quickopen/browser/quickOpenWidget.js';\nimport { foreground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { attachQuickOpenStyler } from '../../../../platform/theme/common/styler.js';\n\nvar QuickOpenEditorWidget =\n/** @class */\nfunction () {\n  function QuickOpenEditorWidget(codeEditor, onOk, onCancel, onType, configuration, themeService) {\n    this.codeEditor = codeEditor;\n    this.themeService = themeService;\n    this.visible = false;\n    this.domNode = document.createElement('div');\n    this.quickOpenWidget = new QuickOpenWidget(this.domNode, {\n      onOk: onOk,\n      onCancel: onCancel,\n      onType: onType\n    }, {\n      inputPlaceHolder: undefined,\n      inputAriaLabel: configuration.inputAriaLabel,\n      keyboardSupport: true\n    });\n    this.styler = attachQuickOpenStyler(this.quickOpenWidget, this.themeService, {\n      pickerGroupForeground: foreground\n    });\n    this.quickOpenWidget.create();\n    this.codeEditor.addOverlayWidget(this);\n  }\n\n  QuickOpenEditorWidget.prototype.setInput = function (model, focus) {\n    this.quickOpenWidget.setInput(model, focus);\n  };\n\n  QuickOpenEditorWidget.prototype.getId = function () {\n    return QuickOpenEditorWidget.ID;\n  };\n\n  QuickOpenEditorWidget.prototype.getDomNode = function () {\n    return this.domNode;\n  };\n\n  QuickOpenEditorWidget.prototype.destroy = function () {\n    this.codeEditor.removeOverlayWidget(this);\n    this.quickOpenWidget.dispose();\n    this.styler.dispose();\n  };\n\n  QuickOpenEditorWidget.prototype.show = function (value) {\n    this.visible = true;\n    var editorLayout = this.codeEditor.getLayoutInfo();\n\n    if (editorLayout) {\n      this.quickOpenWidget.layout(new Dimension(editorLayout.width, editorLayout.height));\n    }\n\n    this.quickOpenWidget.show(value);\n    this.codeEditor.layoutOverlayWidget(this);\n  };\n\n  QuickOpenEditorWidget.prototype.getPosition = function () {\n    if (this.visible) {\n      return {\n        preference: 2\n        /* TOP_CENTER */\n\n      };\n    }\n\n    return null;\n  };\n\n  QuickOpenEditorWidget.ID = 'editor.contrib.quickOpenEditorWidget';\n  return QuickOpenEditorWidget;\n}();\n\nexport { QuickOpenEditorWidget };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/standalone/browser/quickOpen/quickOpenEditorWidget.js"],"names":["Dimension","QuickOpenWidget","foreground","attachQuickOpenStyler","QuickOpenEditorWidget","codeEditor","onOk","onCancel","onType","configuration","themeService","visible","domNode","document","createElement","quickOpenWidget","inputPlaceHolder","undefined","inputAriaLabel","keyboardSupport","styler","pickerGroupForeground","create","addOverlayWidget","prototype","setInput","model","focus","getId","ID","getDomNode","destroy","removeOverlayWidget","dispose","show","value","editorLayout","getLayoutInfo","layout","width","height","layoutOverlayWidget","getPosition","preference"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Dimension } from '../../../../base/browser/dom.js';\r\nimport { QuickOpenWidget } from '../../../../base/parts/quickopen/browser/quickOpenWidget.js';\r\nimport { foreground } from '../../../../platform/theme/common/colorRegistry.js';\r\nimport { attachQuickOpenStyler } from '../../../../platform/theme/common/styler.js';\r\nvar QuickOpenEditorWidget = /** @class */ (function () {\r\n    function QuickOpenEditorWidget(codeEditor, onOk, onCancel, onType, configuration, themeService) {\r\n        this.codeEditor = codeEditor;\r\n        this.themeService = themeService;\r\n        this.visible = false;\r\n        this.domNode = document.createElement('div');\r\n        this.quickOpenWidget = new QuickOpenWidget(this.domNode, {\r\n            onOk: onOk,\r\n            onCancel: onCancel,\r\n            onType: onType\r\n        }, {\r\n            inputPlaceHolder: undefined,\r\n            inputAriaLabel: configuration.inputAriaLabel,\r\n            keyboardSupport: true\r\n        });\r\n        this.styler = attachQuickOpenStyler(this.quickOpenWidget, this.themeService, {\r\n            pickerGroupForeground: foreground\r\n        });\r\n        this.quickOpenWidget.create();\r\n        this.codeEditor.addOverlayWidget(this);\r\n    }\r\n    QuickOpenEditorWidget.prototype.setInput = function (model, focus) {\r\n        this.quickOpenWidget.setInput(model, focus);\r\n    };\r\n    QuickOpenEditorWidget.prototype.getId = function () {\r\n        return QuickOpenEditorWidget.ID;\r\n    };\r\n    QuickOpenEditorWidget.prototype.getDomNode = function () {\r\n        return this.domNode;\r\n    };\r\n    QuickOpenEditorWidget.prototype.destroy = function () {\r\n        this.codeEditor.removeOverlayWidget(this);\r\n        this.quickOpenWidget.dispose();\r\n        this.styler.dispose();\r\n    };\r\n    QuickOpenEditorWidget.prototype.show = function (value) {\r\n        this.visible = true;\r\n        var editorLayout = this.codeEditor.getLayoutInfo();\r\n        if (editorLayout) {\r\n            this.quickOpenWidget.layout(new Dimension(editorLayout.width, editorLayout.height));\r\n        }\r\n        this.quickOpenWidget.show(value);\r\n        this.codeEditor.layoutOverlayWidget(this);\r\n    };\r\n    QuickOpenEditorWidget.prototype.getPosition = function () {\r\n        if (this.visible) {\r\n            return {\r\n                preference: 2 /* TOP_CENTER */\r\n            };\r\n        }\r\n        return null;\r\n    };\r\n    QuickOpenEditorWidget.ID = 'editor.contrib.quickOpenEditorWidget';\r\n    return QuickOpenEditorWidget;\r\n}());\r\nexport { QuickOpenEditorWidget };\r\n"]},"metadata":{},"sourceType":"module"}