{"ast":null,"code":"/*!\nCopyright (c) 2014 Taylor Hakes\nCopyright (c) 2014 Forbes Lindesay\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory() : typeof define === 'function' && define.amd ? define(factory) : factory();\n})(this, function () {\n  'use strict';\n  /**\n   * @this {Promise}\n   */\n\n  function finallyConstructor(callback) {\n    var constructor = this.constructor;\n    return this.then(function (value) {\n      return constructor.resolve(callback()).then(function () {\n        return value;\n      });\n    }, function (reason) {\n      return constructor.resolve(callback()).then(function () {\n        return constructor.reject(reason);\n      });\n    });\n  } // Store setTimeout reference so promise-polyfill will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n\n\n  var setTimeoutFunc = setTimeout;\n\n  function noop() {} // Polyfill for Function.prototype.bind\n\n\n  function bind(fn, thisArg) {\n    return function () {\n      fn.apply(thisArg, arguments);\n    };\n  }\n  /**\n   * @constructor\n   * @param {Function} fn\n   */\n\n\n  function Promise(fn) {\n    if (!(this instanceof Promise)) throw new TypeError('Promises must be constructed via new');\n    if (typeof fn !== 'function') throw new TypeError('not a function');\n    /** @type {!number} */\n\n    this._state = 0;\n    /** @type {!boolean} */\n\n    this._handled = false;\n    /** @type {Promise|undefined} */\n\n    this._value = undefined;\n    /** @type {!Array<!Function>} */\n\n    this._deferreds = [];\n    doResolve(fn, this);\n  }\n\n  function handle(self, deferred) {\n    while (self._state === 3) {\n      self = self._value;\n    }\n\n    if (self._state === 0) {\n      self._deferreds.push(deferred);\n\n      return;\n    }\n\n    self._handled = true;\n\n    Promise._immediateFn(function () {\n      var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n\n      if (cb === null) {\n        (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n        return;\n      }\n\n      var ret;\n\n      try {\n        ret = cb(self._value);\n      } catch (e) {\n        reject(deferred.promise, e);\n        return;\n      }\n\n      resolve(deferred.promise, ret);\n    });\n  }\n\n  function resolve(self, newValue) {\n    try {\n      // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n      if (newValue === self) throw new TypeError('A promise cannot be resolved with itself.');\n\n      if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {\n        var then = newValue.then;\n\n        if (newValue instanceof Promise) {\n          self._state = 3;\n          self._value = newValue;\n          finale(self);\n          return;\n        } else if (typeof then === 'function') {\n          doResolve(bind(then, newValue), self);\n          return;\n        }\n      }\n\n      self._state = 1;\n      self._value = newValue;\n      finale(self);\n    } catch (e) {\n      reject(self, e);\n    }\n  }\n\n  function reject(self, newValue) {\n    self._state = 2;\n    self._value = newValue;\n    finale(self);\n  }\n\n  function finale(self) {\n    if (self._state === 2 && self._deferreds.length === 0) {\n      Promise._immediateFn(function () {\n        if (!self._handled) {\n          Promise._unhandledRejectionFn(self._value);\n        }\n      });\n    }\n\n    for (var i = 0, len = self._deferreds.length; i < len; i++) {\n      handle(self, self._deferreds[i]);\n    }\n\n    self._deferreds = null;\n  }\n  /**\n   * @constructor\n   */\n\n\n  function Handler(onFulfilled, onRejected, promise) {\n    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n    this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n    this.promise = promise;\n  }\n  /**\n   * Take a potentially misbehaving resolver function and make sure\n   * onFulfilled and onRejected are only called once.\n   *\n   * Makes no guarantees about asynchrony.\n   */\n\n\n  function doResolve(fn, self) {\n    var done = false;\n\n    try {\n      fn(function (value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      }, function (reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      });\n    } catch (ex) {\n      if (done) return;\n      done = true;\n      reject(self, ex);\n    }\n  }\n\n  Promise.prototype['catch'] = function (onRejected) {\n    return this.then(null, onRejected);\n  };\n\n  Promise.prototype.then = function (onFulfilled, onRejected) {\n    // @ts-ignore\n    var prom = new this.constructor(noop);\n    handle(this, new Handler(onFulfilled, onRejected, prom));\n    return prom;\n  };\n\n  Promise.prototype['finally'] = finallyConstructor;\n\n  Promise.all = function (arr) {\n    return new Promise(function (resolve, reject) {\n      if (!arr || typeof arr.length === 'undefined') throw new TypeError('Promise.all accepts an array');\n      var args = Array.prototype.slice.call(arr);\n      if (args.length === 0) return resolve([]);\n      var remaining = args.length;\n\n      function res(i, val) {\n        try {\n          if (val && (typeof val === 'object' || typeof val === 'function')) {\n            var then = val.then;\n\n            if (typeof then === 'function') {\n              then.call(val, function (val) {\n                res(i, val);\n              }, reject);\n              return;\n            }\n          }\n\n          args[i] = val;\n\n          if (--remaining === 0) {\n            resolve(args);\n          }\n        } catch (ex) {\n          reject(ex);\n        }\n      }\n\n      for (var i = 0; i < args.length; i++) {\n        res(i, args[i]);\n      }\n    });\n  };\n\n  Promise.resolve = function (value) {\n    if (value && typeof value === 'object' && value.constructor === Promise) {\n      return value;\n    }\n\n    return new Promise(function (resolve) {\n      resolve(value);\n    });\n  };\n\n  Promise.reject = function (value) {\n    return new Promise(function (resolve, reject) {\n      reject(value);\n    });\n  };\n\n  Promise.race = function (values) {\n    return new Promise(function (resolve, reject) {\n      for (var i = 0, len = values.length; i < len; i++) {\n        values[i].then(resolve, reject);\n      }\n    });\n  }; // Use polyfill for setImmediate for performance gains\n\n\n  Promise._immediateFn = typeof setImmediate === 'function' && function (fn) {\n    setImmediate(fn);\n  } || function (fn) {\n    setTimeoutFunc(fn, 0);\n  };\n\n  Promise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n    if (typeof console !== 'undefined' && console) {\n      console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n    }\n  };\n  /** @suppress {undefinedVars} */\n\n\n  var globalNS = function () {\n    // the only reliable means to get the global object is\n    // `Function('return this')()`\n    // However, this causes CSP violations in Chrome apps.\n    if (typeof self !== 'undefined') {\n      return self;\n    }\n\n    if (typeof window !== 'undefined') {\n      return window;\n    }\n\n    if (typeof global !== 'undefined') {\n      return global;\n    }\n\n    throw new Error('unable to locate global object');\n  }();\n\n  if (!('Promise' in globalNS)) {\n    globalNS['Promise'] = Promise;\n  } else if (!globalNS.Promise.prototype['finally']) {\n    globalNS.Promise.prototype['finally'] = finallyConstructor;\n  }\n});","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/common/standalone/promise-polyfill/polyfill.js"],"names":["global","factory","exports","module","define","amd","finallyConstructor","callback","constructor","then","value","resolve","reason","reject","setTimeoutFunc","setTimeout","noop","bind","fn","thisArg","apply","arguments","Promise","TypeError","_state","_handled","_value","undefined","_deferreds","doResolve","handle","self","deferred","push","_immediateFn","cb","onFulfilled","onRejected","promise","ret","e","newValue","finale","length","_unhandledRejectionFn","i","len","Handler","done","ex","prototype","prom","all","arr","args","Array","slice","call","remaining","res","val","race","values","setImmediate","err","console","warn","globalNS","window","Error"],"mappings":"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","sourcesContent":["/*!\nCopyright (c) 2014 Taylor Hakes\nCopyright (c) 2014 Forbes Lindesay\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory() :\n\t\ttypeof define === 'function' && define.amd ? define(factory) :\n\t\t\t(factory());\n}(this, (function () {\n\t'use strict';\n\n\t/**\n\t * @this {Promise}\n\t */\n\tfunction finallyConstructor(callback) {\n\t\tvar constructor = this.constructor;\n\t\treturn this.then(\n\t\t\tfunction (value) {\n\t\t\t\treturn constructor.resolve(callback()).then(function () {\n\t\t\t\t\treturn value;\n\t\t\t\t});\n\t\t\t},\n\t\t\tfunction (reason) {\n\t\t\t\treturn constructor.resolve(callback()).then(function () {\n\t\t\t\t\treturn constructor.reject(reason);\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\t// Store setTimeout reference so promise-polyfill will be unaffected by\n\t// other code modifying setTimeout (like sinon.useFakeTimers())\n\tvar setTimeoutFunc = setTimeout;\n\n\tfunction noop() { }\n\n\t// Polyfill for Function.prototype.bind\n\tfunction bind(fn, thisArg) {\n\t\treturn function () {\n\t\t\tfn.apply(thisArg, arguments);\n\t\t};\n\t}\n\n\t/**\n\t * @constructor\n\t * @param {Function} fn\n\t */\n\tfunction Promise(fn) {\n\t\tif (!(this instanceof Promise))\n\t\t\tthrow new TypeError('Promises must be constructed via new');\n\t\tif (typeof fn !== 'function') throw new TypeError('not a function');\n\t\t/** @type {!number} */\n\t\tthis._state = 0;\n\t\t/** @type {!boolean} */\n\t\tthis._handled = false;\n\t\t/** @type {Promise|undefined} */\n\t\tthis._value = undefined;\n\t\t/** @type {!Array<!Function>} */\n\t\tthis._deferreds = [];\n\n\t\tdoResolve(fn, this);\n\t}\n\n\tfunction handle(self, deferred) {\n\t\twhile (self._state === 3) {\n\t\t\tself = self._value;\n\t\t}\n\t\tif (self._state === 0) {\n\t\t\tself._deferreds.push(deferred);\n\t\t\treturn;\n\t\t}\n\t\tself._handled = true;\n\t\tPromise._immediateFn(function () {\n\t\t\tvar cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n\t\t\tif (cb === null) {\n\t\t\t\t(self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar ret;\n\t\t\ttry {\n\t\t\t\tret = cb(self._value);\n\t\t\t} catch (e) {\n\t\t\t\treject(deferred.promise, e);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresolve(deferred.promise, ret);\n\t\t});\n\t}\n\n\tfunction resolve(self, newValue) {\n\t\ttry {\n\t\t\t// Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n\t\t\tif (newValue === self)\n\t\t\t\tthrow new TypeError('A promise cannot be resolved with itself.');\n\t\t\tif (\n\t\t\t\tnewValue &&\n\t\t\t\t(typeof newValue === 'object' || typeof newValue === 'function')\n\t\t\t) {\n\t\t\t\tvar then = newValue.then;\n\t\t\t\tif (newValue instanceof Promise) {\n\t\t\t\t\tself._state = 3;\n\t\t\t\t\tself._value = newValue;\n\t\t\t\t\tfinale(self);\n\t\t\t\t\treturn;\n\t\t\t\t} else if (typeof then === 'function') {\n\t\t\t\t\tdoResolve(bind(then, newValue), self);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tself._state = 1;\n\t\t\tself._value = newValue;\n\t\t\tfinale(self);\n\t\t} catch (e) {\n\t\t\treject(self, e);\n\t\t}\n\t}\n\n\tfunction reject(self, newValue) {\n\t\tself._state = 2;\n\t\tself._value = newValue;\n\t\tfinale(self);\n\t}\n\n\tfunction finale(self) {\n\t\tif (self._state === 2 && self._deferreds.length === 0) {\n\t\t\tPromise._immediateFn(function () {\n\t\t\t\tif (!self._handled) {\n\t\t\t\t\tPromise._unhandledRejectionFn(self._value);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tfor (var i = 0, len = self._deferreds.length; i < len; i++) {\n\t\t\thandle(self, self._deferreds[i]);\n\t\t}\n\t\tself._deferreds = null;\n\t}\n\n\t/**\n\t * @constructor\n\t */\n\tfunction Handler(onFulfilled, onRejected, promise) {\n\t\tthis.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n\t\tthis.onRejected = typeof onRejected === 'function' ? onRejected : null;\n\t\tthis.promise = promise;\n\t}\n\n\t/**\n\t * Take a potentially misbehaving resolver function and make sure\n\t * onFulfilled and onRejected are only called once.\n\t *\n\t * Makes no guarantees about asynchrony.\n\t */\n\tfunction doResolve(fn, self) {\n\t\tvar done = false;\n\t\ttry {\n\t\t\tfn(\n\t\t\t\tfunction (value) {\n\t\t\t\t\tif (done) return;\n\t\t\t\t\tdone = true;\n\t\t\t\t\tresolve(self, value);\n\t\t\t\t},\n\t\t\t\tfunction (reason) {\n\t\t\t\t\tif (done) return;\n\t\t\t\t\tdone = true;\n\t\t\t\t\treject(self, reason);\n\t\t\t\t}\n\t\t\t);\n\t\t} catch (ex) {\n\t\t\tif (done) return;\n\t\t\tdone = true;\n\t\t\treject(self, ex);\n\t\t}\n\t}\n\n\tPromise.prototype['catch'] = function (onRejected) {\n\t\treturn this.then(null, onRejected);\n\t};\n\n\tPromise.prototype.then = function (onFulfilled, onRejected) {\n\t\t// @ts-ignore\n\t\tvar prom = new this.constructor(noop);\n\n\t\thandle(this, new Handler(onFulfilled, onRejected, prom));\n\t\treturn prom;\n\t};\n\n\tPromise.prototype['finally'] = finallyConstructor;\n\n\tPromise.all = function (arr) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tif (!arr || typeof arr.length === 'undefined')\n\t\t\t\tthrow new TypeError('Promise.all accepts an array');\n\t\t\tvar args = Array.prototype.slice.call(arr);\n\t\t\tif (args.length === 0) return resolve([]);\n\t\t\tvar remaining = args.length;\n\n\t\t\tfunction res(i, val) {\n\t\t\t\ttry {\n\t\t\t\t\tif (val && (typeof val === 'object' || typeof val === 'function')) {\n\t\t\t\t\t\tvar then = val.then;\n\t\t\t\t\t\tif (typeof then === 'function') {\n\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\tval,\n\t\t\t\t\t\t\t\tfunction (val) {\n\t\t\t\t\t\t\t\t\tres(i, val);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\treject\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\targs[i] = val;\n\t\t\t\t\tif (--remaining === 0) {\n\t\t\t\t\t\tresolve(args);\n\t\t\t\t\t}\n\t\t\t\t} catch (ex) {\n\t\t\t\t\treject(ex);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < args.length; i++) {\n\t\t\t\tres(i, args[i]);\n\t\t\t}\n\t\t});\n\t};\n\n\tPromise.resolve = function (value) {\n\t\tif (value && typeof value === 'object' && value.constructor === Promise) {\n\t\t\treturn value;\n\t\t}\n\n\t\treturn new Promise(function (resolve) {\n\t\t\tresolve(value);\n\t\t});\n\t};\n\n\tPromise.reject = function (value) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\treject(value);\n\t\t});\n\t};\n\n\tPromise.race = function (values) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tfor (var i = 0, len = values.length; i < len; i++) {\n\t\t\t\tvalues[i].then(resolve, reject);\n\t\t\t}\n\t\t});\n\t};\n\n\t// Use polyfill for setImmediate for performance gains\n\tPromise._immediateFn =\n\t\t(typeof setImmediate === 'function' &&\n\t\t\tfunction (fn) {\n\t\t\t\tsetImmediate(fn);\n\t\t\t}) ||\n\t\tfunction (fn) {\n\t\t\tsetTimeoutFunc(fn, 0);\n\t\t};\n\n\tPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n\t\tif (typeof console !== 'undefined' && console) {\n\t\t\tconsole.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n\t\t}\n\t};\n\n\t/** @suppress {undefinedVars} */\n\tvar globalNS = (function () {\n\t\t// the only reliable means to get the global object is\n\t\t// `Function('return this')()`\n\t\t// However, this causes CSP violations in Chrome apps.\n\t\tif (typeof self !== 'undefined') {\n\t\t\treturn self;\n\t\t}\n\t\tif (typeof window !== 'undefined') {\n\t\t\treturn window;\n\t\t}\n\t\tif (typeof global !== 'undefined') {\n\t\t\treturn global;\n\t\t}\n\t\tthrow new Error('unable to locate global object');\n\t})();\n\n\tif (!('Promise' in globalNS)) {\n\t\tglobalNS['Promise'] = Promise;\n\t} else if (!globalNS.Promise.prototype['finally']) {\n\t\tglobalNS.Promise.prototype['finally'] = finallyConstructor;\n\t}\n\n})));\n"]},"metadata":{},"sourceType":"script"}