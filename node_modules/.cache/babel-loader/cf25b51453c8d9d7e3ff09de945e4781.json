{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { Selection } from '../../common/core/selection.js';\nimport { Range } from '../../common/core/range.js';\n\nvar DragAndDropCommand =\n/** @class */\nfunction () {\n  function DragAndDropCommand(selection, targetPosition, copy) {\n    this.selection = selection;\n    this.targetPosition = targetPosition;\n    this.copy = copy;\n    this.targetSelection = null;\n  }\n\n  DragAndDropCommand.prototype.getEditOperations = function (model, builder) {\n    var text = model.getValueInRange(this.selection);\n\n    if (!this.copy) {\n      builder.addEditOperation(this.selection, null);\n    }\n\n    builder.addEditOperation(new Range(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column), text);\n\n    if (this.selection.containsPosition(this.targetPosition) && !(this.copy && (this.selection.getEndPosition().equals(this.targetPosition) || this.selection.getStartPosition().equals(this.targetPosition)) // we allow users to paste content beside the selection\n    )) {\n      this.targetSelection = this.selection;\n      return;\n    }\n\n    if (this.copy) {\n      this.targetSelection = new Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.selection.endLineNumber - this.selection.startLineNumber + this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ? this.targetPosition.column + this.selection.endColumn - this.selection.startColumn : this.selection.endColumn);\n      return;\n    }\n\n    if (this.targetPosition.lineNumber > this.selection.endLineNumber) {\n      // Drag the selection downwards\n      this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ? this.targetPosition.column + this.selection.endColumn - this.selection.startColumn : this.selection.endColumn);\n      return;\n    }\n\n    if (this.targetPosition.lineNumber < this.selection.endLineNumber) {\n      // Drag the selection upwards\n      this.targetSelection = new Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber + this.selection.endLineNumber - this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ? this.targetPosition.column + this.selection.endColumn - this.selection.startColumn : this.selection.endColumn);\n      return;\n    } // The target position is at the same line as the selection's end position.\n\n\n    if (this.selection.endColumn <= this.targetPosition.column) {\n      // The target position is after the selection's end position\n      this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ? this.targetPosition.column - this.selection.endColumn + this.selection.startColumn : this.targetPosition.column - this.selection.endColumn + this.selection.startColumn, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ? this.targetPosition.column : this.selection.endColumn);\n    } else {\n      // The target position is before the selection's end position. Since the selection doesn't contain the target position, the selection is one-line and target position is before this selection.\n      this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column + this.selection.endColumn - this.selection.startColumn);\n    }\n  };\n\n  DragAndDropCommand.prototype.computeCursorState = function (model, helper) {\n    return this.targetSelection;\n  };\n\n  return DragAndDropCommand;\n}();\n\nexport { DragAndDropCommand };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/contrib/dnd/dragAndDropCommand.js"],"names":["Selection","Range","DragAndDropCommand","selection","targetPosition","copy","targetSelection","prototype","getEditOperations","model","builder","text","getValueInRange","addEditOperation","lineNumber","column","containsPosition","getEndPosition","equals","getStartPosition","endLineNumber","startLineNumber","endColumn","startColumn","computeCursorState","helper"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { Range } from '../../common/core/range.js';\r\nvar DragAndDropCommand = /** @class */ (function () {\r\n    function DragAndDropCommand(selection, targetPosition, copy) {\r\n        this.selection = selection;\r\n        this.targetPosition = targetPosition;\r\n        this.copy = copy;\r\n        this.targetSelection = null;\r\n    }\r\n    DragAndDropCommand.prototype.getEditOperations = function (model, builder) {\r\n        var text = model.getValueInRange(this.selection);\r\n        if (!this.copy) {\r\n            builder.addEditOperation(this.selection, null);\r\n        }\r\n        builder.addEditOperation(new Range(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column), text);\r\n        if (this.selection.containsPosition(this.targetPosition) && !(this.copy && (this.selection.getEndPosition().equals(this.targetPosition) || this.selection.getStartPosition().equals(this.targetPosition)) // we allow users to paste content beside the selection\r\n        )) {\r\n            this.targetSelection = this.selection;\r\n            return;\r\n        }\r\n        if (this.copy) {\r\n            this.targetSelection = new Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.selection.endLineNumber - this.selection.startLineNumber + this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\r\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\r\n                this.selection.endColumn);\r\n            return;\r\n        }\r\n        if (this.targetPosition.lineNumber > this.selection.endLineNumber) {\r\n            // Drag the selection downwards\r\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\r\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\r\n                this.selection.endColumn);\r\n            return;\r\n        }\r\n        if (this.targetPosition.lineNumber < this.selection.endLineNumber) {\r\n            // Drag the selection upwards\r\n            this.targetSelection = new Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber + this.selection.endLineNumber - this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\r\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\r\n                this.selection.endColumn);\r\n            return;\r\n        }\r\n        // The target position is at the same line as the selection's end position.\r\n        if (this.selection.endColumn <= this.targetPosition.column) {\r\n            // The target position is after the selection's end position\r\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\r\n                this.targetPosition.column - this.selection.endColumn + this.selection.startColumn :\r\n                this.targetPosition.column - this.selection.endColumn + this.selection.startColumn, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\r\n                this.targetPosition.column :\r\n                this.selection.endColumn);\r\n        }\r\n        else {\r\n            // The target position is before the selection's end position. Since the selection doesn't contain the target position, the selection is one-line and target position is before this selection.\r\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column + this.selection.endColumn - this.selection.startColumn);\r\n        }\r\n    };\r\n    DragAndDropCommand.prototype.computeCursorState = function (model, helper) {\r\n        return this.targetSelection;\r\n    };\r\n    return DragAndDropCommand;\r\n}());\r\nexport { DragAndDropCommand };\r\n"]},"metadata":{},"sourceType":"module"}