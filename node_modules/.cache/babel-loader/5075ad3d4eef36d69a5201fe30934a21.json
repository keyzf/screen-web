{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nimport { dispose, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { repeat } from '../../../base/common/strings.js';\nimport { EditorCommand, registerEditorCommand, registerEditorContribution } from '../../browser/editorExtensions.js';\nimport { Range } from '../../common/core/range.js';\nimport { Selection } from '../../common/core/selection.js';\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\nimport { showSimpleSuggestions } from '../suggest/suggest.js';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\nimport { ILogService } from '../../../platform/log/common/log.js';\nimport { SnippetSession } from './snippetSession.js';\nvar _defaultOptions = {\n  overwriteBefore: 0,\n  overwriteAfter: 0,\n  undoStopBefore: true,\n  undoStopAfter: true,\n  adjustWhitespace: true,\n  clipboardText: undefined\n};\n\nvar SnippetController2 =\n/** @class */\nfunction () {\n  function SnippetController2(_editor, _logService, contextKeyService) {\n    this._editor = _editor;\n    this._logService = _logService;\n    this._snippetListener = new DisposableStore();\n    this._modelVersionId = -1;\n    this._inSnippet = SnippetController2.InSnippetMode.bindTo(contextKeyService);\n    this._hasNextTabstop = SnippetController2.HasNextTabstop.bindTo(contextKeyService);\n    this._hasPrevTabstop = SnippetController2.HasPrevTabstop.bindTo(contextKeyService);\n  }\n\n  SnippetController2.get = function (editor) {\n    return editor.getContribution(SnippetController2.ID);\n  };\n\n  SnippetController2.prototype.dispose = function () {\n    this._inSnippet.reset();\n\n    this._hasPrevTabstop.reset();\n\n    this._hasNextTabstop.reset();\n\n    dispose(this._session);\n\n    this._snippetListener.dispose();\n  };\n\n  SnippetController2.prototype.insert = function (template, opts) {\n    // this is here to find out more about the yet-not-understood\n    // error that sometimes happens when we fail to inserted a nested\n    // snippet\n    try {\n      this._doInsert(template, typeof opts === 'undefined' ? _defaultOptions : __assign(__assign({}, _defaultOptions), opts));\n    } catch (e) {\n      this.cancel();\n\n      this._logService.error(e);\n\n      this._logService.error('snippet_error');\n\n      this._logService.error('insert_template=', template);\n\n      this._logService.error('existing_template=', this._session ? this._session._logInfo() : '<no_session>');\n    }\n  };\n\n  SnippetController2.prototype._doInsert = function (template, opts) {\n    var _this = this;\n\n    if (!this._editor.hasModel()) {\n      return;\n    } // don't listen while inserting the snippet\n    // as that is the inflight state causing cancelation\n\n\n    this._snippetListener.clear();\n\n    if (opts.undoStopBefore) {\n      this._editor.getModel().pushStackElement();\n    }\n\n    if (!this._session) {\n      this._modelVersionId = this._editor.getModel().getAlternativeVersionId();\n      this._session = new SnippetSession(this._editor, template, opts);\n\n      this._session.insert();\n    } else {\n      this._session.merge(template, opts);\n    }\n\n    if (opts.undoStopAfter) {\n      this._editor.getModel().pushStackElement();\n    }\n\n    this._updateState();\n\n    this._snippetListener.add(this._editor.onDidChangeModelContent(function (e) {\n      return e.isFlush && _this.cancel();\n    }));\n\n    this._snippetListener.add(this._editor.onDidChangeModel(function () {\n      return _this.cancel();\n    }));\n\n    this._snippetListener.add(this._editor.onDidChangeCursorSelection(function () {\n      return _this._updateState();\n    }));\n  };\n\n  SnippetController2.prototype._updateState = function () {\n    if (!this._session || !this._editor.hasModel()) {\n      // canceled in the meanwhile\n      return;\n    }\n\n    if (this._modelVersionId === this._editor.getModel().getAlternativeVersionId()) {\n      // undo until the 'before' state happened\n      // and makes use cancel snippet mode\n      return this.cancel();\n    }\n\n    if (!this._session.hasPlaceholder) {\n      // don't listen for selection changes and don't\n      // update context keys when the snippet is plain text\n      return this.cancel();\n    }\n\n    if (this._session.isAtLastPlaceholder || !this._session.isSelectionWithinPlaceholders()) {\n      return this.cancel();\n    }\n\n    this._inSnippet.set(true);\n\n    this._hasPrevTabstop.set(!this._session.isAtFirstPlaceholder);\n\n    this._hasNextTabstop.set(!this._session.isAtLastPlaceholder);\n\n    this._handleChoice();\n  };\n\n  SnippetController2.prototype._handleChoice = function () {\n    var _this = this;\n\n    if (!this._session || !this._editor.hasModel()) {\n      this._currentChoice = undefined;\n      return;\n    }\n\n    var choice = this._session.choice;\n\n    if (!choice) {\n      this._currentChoice = undefined;\n      return;\n    }\n\n    if (this._currentChoice !== choice) {\n      this._currentChoice = choice;\n\n      this._editor.setSelections(this._editor.getSelections().map(function (s) {\n        return Selection.fromPositions(s.getStartPosition());\n      }));\n\n      var first_1 = choice.options[0];\n      showSimpleSuggestions(this._editor, choice.options.map(function (option, i) {\n        // let before = choice.options.slice(0, i);\n        // let after = choice.options.slice(i);\n        return {\n          kind: 13\n          /* Value */\n          ,\n          label: option.value,\n          insertText: option.value,\n          // insertText: `\\${1|${after.concat(before).join(',')}|}$0`,\n          // snippetType: 'textmate',\n          sortText: repeat('a', i + 1),\n          range: Range.fromPositions(_this._editor.getPosition(), _this._editor.getPosition().delta(0, first_1.value.length))\n        };\n      }));\n    }\n  };\n\n  SnippetController2.prototype.finish = function () {\n    while (this._inSnippet.get()) {\n      this.next();\n    }\n  };\n\n  SnippetController2.prototype.cancel = function (resetSelection) {\n    if (resetSelection === void 0) {\n      resetSelection = false;\n    }\n\n    this._inSnippet.reset();\n\n    this._hasPrevTabstop.reset();\n\n    this._hasNextTabstop.reset();\n\n    this._snippetListener.clear();\n\n    dispose(this._session);\n    this._session = undefined;\n    this._modelVersionId = -1;\n\n    if (resetSelection) {\n      // reset selection to the primary cursor when being asked\n      // for. this happens when explicitly cancelling snippet mode,\n      // e.g. when pressing ESC\n      this._editor.setSelections([this._editor.getSelection()]);\n    }\n  };\n\n  SnippetController2.prototype.prev = function () {\n    if (this._session) {\n      this._session.prev();\n    }\n\n    this._updateState();\n  };\n\n  SnippetController2.prototype.next = function () {\n    if (this._session) {\n      this._session.next();\n    }\n\n    this._updateState();\n  };\n\n  SnippetController2.prototype.isInSnippet = function () {\n    return Boolean(this._inSnippet.get());\n  };\n\n  SnippetController2.ID = 'snippetController2';\n  SnippetController2.InSnippetMode = new RawContextKey('inSnippetMode', false);\n  SnippetController2.HasNextTabstop = new RawContextKey('hasNextTabstop', false);\n  SnippetController2.HasPrevTabstop = new RawContextKey('hasPrevTabstop', false);\n  SnippetController2 = __decorate([__param(1, ILogService), __param(2, IContextKeyService)], SnippetController2);\n  return SnippetController2;\n}();\n\nexport { SnippetController2 };\nregisterEditorContribution(SnippetController2.ID, SnippetController2);\nvar CommandCtor = EditorCommand.bindToContribution(SnippetController2.get);\nregisterEditorCommand(new CommandCtor({\n  id: 'jumpToNextSnippetPlaceholder',\n  precondition: ContextKeyExpr.and(SnippetController2.InSnippetMode, SnippetController2.HasNextTabstop),\n  handler: function (ctrl) {\n    return ctrl.next();\n  },\n  kbOpts: {\n    weight: 100\n    /* EditorContrib */\n    + 30,\n    kbExpr: EditorContextKeys.editorTextFocus,\n    primary: 2\n    /* Tab */\n\n  }\n}));\nregisterEditorCommand(new CommandCtor({\n  id: 'jumpToPrevSnippetPlaceholder',\n  precondition: ContextKeyExpr.and(SnippetController2.InSnippetMode, SnippetController2.HasPrevTabstop),\n  handler: function (ctrl) {\n    return ctrl.prev();\n  },\n  kbOpts: {\n    weight: 100\n    /* EditorContrib */\n    + 30,\n    kbExpr: EditorContextKeys.editorTextFocus,\n    primary: 1024\n    /* Shift */\n    | 2\n    /* Tab */\n\n  }\n}));\nregisterEditorCommand(new CommandCtor({\n  id: 'leaveSnippet',\n  precondition: SnippetController2.InSnippetMode,\n  handler: function (ctrl) {\n    return ctrl.cancel(true);\n  },\n  kbOpts: {\n    weight: 100\n    /* EditorContrib */\n    + 30,\n    kbExpr: EditorContextKeys.editorTextFocus,\n    primary: 9\n    /* Escape */\n    ,\n    secondary: [1024\n    /* Shift */\n    | 9\n    /* Escape */\n    ]\n  }\n}));\nregisterEditorCommand(new CommandCtor({\n  id: 'acceptSnippet',\n  precondition: SnippetController2.InSnippetMode,\n  handler: function (ctrl) {\n    return ctrl.finish();\n  }\n}));","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/contrib/snippet/snippetController2.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","d","Reflect","decorate","defineProperty","__param","paramIndex","decorator","dispose","DisposableStore","repeat","EditorCommand","registerEditorCommand","registerEditorContribution","Range","Selection","EditorContextKeys","showSimpleSuggestions","ContextKeyExpr","IContextKeyService","RawContextKey","ILogService","SnippetSession","_defaultOptions","overwriteBefore","overwriteAfter","undoStopBefore","undoStopAfter","adjustWhitespace","clipboardText","undefined","SnippetController2","_editor","_logService","contextKeyService","_snippetListener","_modelVersionId","_inSnippet","InSnippetMode","bindTo","_hasNextTabstop","HasNextTabstop","_hasPrevTabstop","HasPrevTabstop","get","editor","getContribution","ID","reset","_session","insert","template","opts","_doInsert","e","cancel","error","_logInfo","_this","hasModel","clear","getModel","pushStackElement","getAlternativeVersionId","merge","_updateState","add","onDidChangeModelContent","isFlush","onDidChangeModel","onDidChangeCursorSelection","hasPlaceholder","isAtLastPlaceholder","isSelectionWithinPlaceholders","set","isAtFirstPlaceholder","_handleChoice","_currentChoice","choice","setSelections","getSelections","map","fromPositions","getStartPosition","first_1","options","option","kind","label","value","insertText","sortText","range","getPosition","delta","finish","next","resetSelection","getSelection","prev","isInSnippet","Boolean","CommandCtor","bindToContribution","id","precondition","and","handler","ctrl","kbOpts","weight","kbExpr","editorTextFocus","primary","secondary"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { dispose, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { repeat } from '../../../base/common/strings.js';\r\nimport { EditorCommand, registerEditorCommand, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { showSimpleSuggestions } from '../suggest/suggest.js';\r\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { ILogService } from '../../../platform/log/common/log.js';\r\nimport { SnippetSession } from './snippetSession.js';\r\nvar _defaultOptions = {\r\n    overwriteBefore: 0,\r\n    overwriteAfter: 0,\r\n    undoStopBefore: true,\r\n    undoStopAfter: true,\r\n    adjustWhitespace: true,\r\n    clipboardText: undefined\r\n};\r\nvar SnippetController2 = /** @class */ (function () {\r\n    function SnippetController2(_editor, _logService, contextKeyService) {\r\n        this._editor = _editor;\r\n        this._logService = _logService;\r\n        this._snippetListener = new DisposableStore();\r\n        this._modelVersionId = -1;\r\n        this._inSnippet = SnippetController2.InSnippetMode.bindTo(contextKeyService);\r\n        this._hasNextTabstop = SnippetController2.HasNextTabstop.bindTo(contextKeyService);\r\n        this._hasPrevTabstop = SnippetController2.HasPrevTabstop.bindTo(contextKeyService);\r\n    }\r\n    SnippetController2.get = function (editor) {\r\n        return editor.getContribution(SnippetController2.ID);\r\n    };\r\n    SnippetController2.prototype.dispose = function () {\r\n        this._inSnippet.reset();\r\n        this._hasPrevTabstop.reset();\r\n        this._hasNextTabstop.reset();\r\n        dispose(this._session);\r\n        this._snippetListener.dispose();\r\n    };\r\n    SnippetController2.prototype.insert = function (template, opts) {\r\n        // this is here to find out more about the yet-not-understood\r\n        // error that sometimes happens when we fail to inserted a nested\r\n        // snippet\r\n        try {\r\n            this._doInsert(template, typeof opts === 'undefined' ? _defaultOptions : __assign(__assign({}, _defaultOptions), opts));\r\n        }\r\n        catch (e) {\r\n            this.cancel();\r\n            this._logService.error(e);\r\n            this._logService.error('snippet_error');\r\n            this._logService.error('insert_template=', template);\r\n            this._logService.error('existing_template=', this._session ? this._session._logInfo() : '<no_session>');\r\n        }\r\n    };\r\n    SnippetController2.prototype._doInsert = function (template, opts) {\r\n        var _this = this;\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        // don't listen while inserting the snippet\r\n        // as that is the inflight state causing cancelation\r\n        this._snippetListener.clear();\r\n        if (opts.undoStopBefore) {\r\n            this._editor.getModel().pushStackElement();\r\n        }\r\n        if (!this._session) {\r\n            this._modelVersionId = this._editor.getModel().getAlternativeVersionId();\r\n            this._session = new SnippetSession(this._editor, template, opts);\r\n            this._session.insert();\r\n        }\r\n        else {\r\n            this._session.merge(template, opts);\r\n        }\r\n        if (opts.undoStopAfter) {\r\n            this._editor.getModel().pushStackElement();\r\n        }\r\n        this._updateState();\r\n        this._snippetListener.add(this._editor.onDidChangeModelContent(function (e) { return e.isFlush && _this.cancel(); }));\r\n        this._snippetListener.add(this._editor.onDidChangeModel(function () { return _this.cancel(); }));\r\n        this._snippetListener.add(this._editor.onDidChangeCursorSelection(function () { return _this._updateState(); }));\r\n    };\r\n    SnippetController2.prototype._updateState = function () {\r\n        if (!this._session || !this._editor.hasModel()) {\r\n            // canceled in the meanwhile\r\n            return;\r\n        }\r\n        if (this._modelVersionId === this._editor.getModel().getAlternativeVersionId()) {\r\n            // undo until the 'before' state happened\r\n            // and makes use cancel snippet mode\r\n            return this.cancel();\r\n        }\r\n        if (!this._session.hasPlaceholder) {\r\n            // don't listen for selection changes and don't\r\n            // update context keys when the snippet is plain text\r\n            return this.cancel();\r\n        }\r\n        if (this._session.isAtLastPlaceholder || !this._session.isSelectionWithinPlaceholders()) {\r\n            return this.cancel();\r\n        }\r\n        this._inSnippet.set(true);\r\n        this._hasPrevTabstop.set(!this._session.isAtFirstPlaceholder);\r\n        this._hasNextTabstop.set(!this._session.isAtLastPlaceholder);\r\n        this._handleChoice();\r\n    };\r\n    SnippetController2.prototype._handleChoice = function () {\r\n        var _this = this;\r\n        if (!this._session || !this._editor.hasModel()) {\r\n            this._currentChoice = undefined;\r\n            return;\r\n        }\r\n        var choice = this._session.choice;\r\n        if (!choice) {\r\n            this._currentChoice = undefined;\r\n            return;\r\n        }\r\n        if (this._currentChoice !== choice) {\r\n            this._currentChoice = choice;\r\n            this._editor.setSelections(this._editor.getSelections()\r\n                .map(function (s) { return Selection.fromPositions(s.getStartPosition()); }));\r\n            var first_1 = choice.options[0];\r\n            showSimpleSuggestions(this._editor, choice.options.map(function (option, i) {\r\n                // let before = choice.options.slice(0, i);\r\n                // let after = choice.options.slice(i);\r\n                return {\r\n                    kind: 13 /* Value */,\r\n                    label: option.value,\r\n                    insertText: option.value,\r\n                    // insertText: `\\${1|${after.concat(before).join(',')}|}$0`,\r\n                    // snippetType: 'textmate',\r\n                    sortText: repeat('a', i + 1),\r\n                    range: Range.fromPositions(_this._editor.getPosition(), _this._editor.getPosition().delta(0, first_1.value.length))\r\n                };\r\n            }));\r\n        }\r\n    };\r\n    SnippetController2.prototype.finish = function () {\r\n        while (this._inSnippet.get()) {\r\n            this.next();\r\n        }\r\n    };\r\n    SnippetController2.prototype.cancel = function (resetSelection) {\r\n        if (resetSelection === void 0) { resetSelection = false; }\r\n        this._inSnippet.reset();\r\n        this._hasPrevTabstop.reset();\r\n        this._hasNextTabstop.reset();\r\n        this._snippetListener.clear();\r\n        dispose(this._session);\r\n        this._session = undefined;\r\n        this._modelVersionId = -1;\r\n        if (resetSelection) {\r\n            // reset selection to the primary cursor when being asked\r\n            // for. this happens when explicitly cancelling snippet mode,\r\n            // e.g. when pressing ESC\r\n            this._editor.setSelections([this._editor.getSelection()]);\r\n        }\r\n    };\r\n    SnippetController2.prototype.prev = function () {\r\n        if (this._session) {\r\n            this._session.prev();\r\n        }\r\n        this._updateState();\r\n    };\r\n    SnippetController2.prototype.next = function () {\r\n        if (this._session) {\r\n            this._session.next();\r\n        }\r\n        this._updateState();\r\n    };\r\n    SnippetController2.prototype.isInSnippet = function () {\r\n        return Boolean(this._inSnippet.get());\r\n    };\r\n    SnippetController2.ID = 'snippetController2';\r\n    SnippetController2.InSnippetMode = new RawContextKey('inSnippetMode', false);\r\n    SnippetController2.HasNextTabstop = new RawContextKey('hasNextTabstop', false);\r\n    SnippetController2.HasPrevTabstop = new RawContextKey('hasPrevTabstop', false);\r\n    SnippetController2 = __decorate([\r\n        __param(1, ILogService),\r\n        __param(2, IContextKeyService)\r\n    ], SnippetController2);\r\n    return SnippetController2;\r\n}());\r\nexport { SnippetController2 };\r\nregisterEditorContribution(SnippetController2.ID, SnippetController2);\r\nvar CommandCtor = EditorCommand.bindToContribution(SnippetController2.get);\r\nregisterEditorCommand(new CommandCtor({\r\n    id: 'jumpToNextSnippetPlaceholder',\r\n    precondition: ContextKeyExpr.and(SnippetController2.InSnippetMode, SnippetController2.HasNextTabstop),\r\n    handler: function (ctrl) { return ctrl.next(); },\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 30,\r\n        kbExpr: EditorContextKeys.editorTextFocus,\r\n        primary: 2 /* Tab */\r\n    }\r\n}));\r\nregisterEditorCommand(new CommandCtor({\r\n    id: 'jumpToPrevSnippetPlaceholder',\r\n    precondition: ContextKeyExpr.and(SnippetController2.InSnippetMode, SnippetController2.HasPrevTabstop),\r\n    handler: function (ctrl) { return ctrl.prev(); },\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 30,\r\n        kbExpr: EditorContextKeys.editorTextFocus,\r\n        primary: 1024 /* Shift */ | 2 /* Tab */\r\n    }\r\n}));\r\nregisterEditorCommand(new CommandCtor({\r\n    id: 'leaveSnippet',\r\n    precondition: SnippetController2.InSnippetMode,\r\n    handler: function (ctrl) { return ctrl.cancel(true); },\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 30,\r\n        kbExpr: EditorContextKeys.editorTextFocus,\r\n        primary: 9 /* Escape */,\r\n        secondary: [1024 /* Shift */ | 9 /* Escape */]\r\n    }\r\n}));\r\nregisterEditorCommand(new CommandCtor({\r\n    id: 'acceptSnippet',\r\n    precondition: SnippetController2.InSnippetMode,\r\n    handler: function (ctrl) { return ctrl.finish(); },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}