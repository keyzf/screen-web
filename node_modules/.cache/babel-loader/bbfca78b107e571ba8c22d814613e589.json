{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as Json from './../../jsonc-parser/main.js';\nimport { isNumber, equals, isBoolean, isString, isDefined } from '../utils/objects.js';\nimport { ErrorCode, Diagnostic, DiagnosticSeverity, Range } from '../jsonLanguageTypes.js';\nimport * as nls from './../../../fillers/vscode-nls.js';\nvar localize = nls.loadMessageBundle();\nvar formats = {\n  'color-hex': {\n    errorMessage: localize('colorHexFormatWarning', 'Invalid color format. Use #RGB, #RGBA, #RRGGBB or #RRGGBBAA.'),\n    pattern: /^#([0-9A-Fa-f]{3,4}|([0-9A-Fa-f]{2}){3,4})$/\n  },\n  'date-time': {\n    errorMessage: localize('dateTimeFormatWarning', 'String is not a RFC3339 date-time.'),\n    pattern: /^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)([01][0-9]|2[0-3]):([0-5][0-9]))$/i\n  },\n  'date': {\n    errorMessage: localize('dateFormatWarning', 'String is not a RFC3339 date.'),\n    pattern: /^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$/i\n  },\n  'time': {\n    errorMessage: localize('timeFormatWarning', 'String is not a RFC3339 time.'),\n    pattern: /^([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)([01][0-9]|2[0-3]):([0-5][0-9]))$/i\n  },\n  'email': {\n    errorMessage: localize('emailFormatWarning', 'String is not an e-mail address.'),\n    pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n  }\n};\n\nvar ASTNodeImpl =\n/** @class */\nfunction () {\n  function ASTNodeImpl(parent, offset, length) {\n    this.offset = offset;\n    this.length = length;\n    this.parent = parent;\n  }\n\n  Object.defineProperty(ASTNodeImpl.prototype, \"children\", {\n    get: function () {\n      return [];\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ASTNodeImpl.prototype.toString = function () {\n    return 'type: ' + this.type + ' (' + this.offset + '/' + this.length + ')' + (this.parent ? ' parent: {' + this.parent.toString() + '}' : '');\n  };\n\n  return ASTNodeImpl;\n}();\n\nexport { ASTNodeImpl };\n\nvar NullASTNodeImpl =\n/** @class */\nfunction (_super) {\n  __extends(NullASTNodeImpl, _super);\n\n  function NullASTNodeImpl(parent, offset) {\n    var _this = _super.call(this, parent, offset) || this;\n\n    _this.type = 'null';\n    _this.value = null;\n    return _this;\n  }\n\n  return NullASTNodeImpl;\n}(ASTNodeImpl);\n\nexport { NullASTNodeImpl };\n\nvar BooleanASTNodeImpl =\n/** @class */\nfunction (_super) {\n  __extends(BooleanASTNodeImpl, _super);\n\n  function BooleanASTNodeImpl(parent, boolValue, offset) {\n    var _this = _super.call(this, parent, offset) || this;\n\n    _this.type = 'boolean';\n    _this.value = boolValue;\n    return _this;\n  }\n\n  return BooleanASTNodeImpl;\n}(ASTNodeImpl);\n\nexport { BooleanASTNodeImpl };\n\nvar ArrayASTNodeImpl =\n/** @class */\nfunction (_super) {\n  __extends(ArrayASTNodeImpl, _super);\n\n  function ArrayASTNodeImpl(parent, offset) {\n    var _this = _super.call(this, parent, offset) || this;\n\n    _this.type = 'array';\n    _this.items = [];\n    return _this;\n  }\n\n  Object.defineProperty(ArrayASTNodeImpl.prototype, \"children\", {\n    get: function () {\n      return this.items;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return ArrayASTNodeImpl;\n}(ASTNodeImpl);\n\nexport { ArrayASTNodeImpl };\n\nvar NumberASTNodeImpl =\n/** @class */\nfunction (_super) {\n  __extends(NumberASTNodeImpl, _super);\n\n  function NumberASTNodeImpl(parent, offset) {\n    var _this = _super.call(this, parent, offset) || this;\n\n    _this.type = 'number';\n    _this.isInteger = true;\n    _this.value = Number.NaN;\n    return _this;\n  }\n\n  return NumberASTNodeImpl;\n}(ASTNodeImpl);\n\nexport { NumberASTNodeImpl };\n\nvar StringASTNodeImpl =\n/** @class */\nfunction (_super) {\n  __extends(StringASTNodeImpl, _super);\n\n  function StringASTNodeImpl(parent, offset, length) {\n    var _this = _super.call(this, parent, offset, length) || this;\n\n    _this.type = 'string';\n    _this.value = '';\n    return _this;\n  }\n\n  return StringASTNodeImpl;\n}(ASTNodeImpl);\n\nexport { StringASTNodeImpl };\n\nvar PropertyASTNodeImpl =\n/** @class */\nfunction (_super) {\n  __extends(PropertyASTNodeImpl, _super);\n\n  function PropertyASTNodeImpl(parent, offset) {\n    var _this = _super.call(this, parent, offset) || this;\n\n    _this.type = 'property';\n    _this.colonOffset = -1;\n    return _this;\n  }\n\n  Object.defineProperty(PropertyASTNodeImpl.prototype, \"children\", {\n    get: function () {\n      return this.valueNode ? [this.keyNode, this.valueNode] : [this.keyNode];\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return PropertyASTNodeImpl;\n}(ASTNodeImpl);\n\nexport { PropertyASTNodeImpl };\n\nvar ObjectASTNodeImpl =\n/** @class */\nfunction (_super) {\n  __extends(ObjectASTNodeImpl, _super);\n\n  function ObjectASTNodeImpl(parent, offset) {\n    var _this = _super.call(this, parent, offset) || this;\n\n    _this.type = 'object';\n    _this.properties = [];\n    return _this;\n  }\n\n  Object.defineProperty(ObjectASTNodeImpl.prototype, \"children\", {\n    get: function () {\n      return this.properties;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return ObjectASTNodeImpl;\n}(ASTNodeImpl);\n\nexport { ObjectASTNodeImpl };\nexport function asSchema(schema) {\n  if (isBoolean(schema)) {\n    return schema ? {} : {\n      \"not\": {}\n    };\n  }\n\n  return schema;\n}\nexport var EnumMatch;\n\n(function (EnumMatch) {\n  EnumMatch[EnumMatch[\"Key\"] = 0] = \"Key\";\n  EnumMatch[EnumMatch[\"Enum\"] = 1] = \"Enum\";\n})(EnumMatch || (EnumMatch = {}));\n\nvar SchemaCollector =\n/** @class */\nfunction () {\n  function SchemaCollector(focusOffset, exclude) {\n    if (focusOffset === void 0) {\n      focusOffset = -1;\n    }\n\n    if (exclude === void 0) {\n      exclude = null;\n    }\n\n    this.focusOffset = focusOffset;\n    this.exclude = exclude;\n    this.schemas = [];\n  }\n\n  SchemaCollector.prototype.add = function (schema) {\n    this.schemas.push(schema);\n  };\n\n  SchemaCollector.prototype.merge = function (other) {\n    var _a;\n\n    (_a = this.schemas).push.apply(_a, other.schemas);\n  };\n\n  SchemaCollector.prototype.include = function (node) {\n    return (this.focusOffset === -1 || contains(node, this.focusOffset)) && node !== this.exclude;\n  };\n\n  SchemaCollector.prototype.newSub = function () {\n    return new SchemaCollector(-1, this.exclude);\n  };\n\n  return SchemaCollector;\n}();\n\nvar NoOpSchemaCollector =\n/** @class */\nfunction () {\n  function NoOpSchemaCollector() {}\n\n  Object.defineProperty(NoOpSchemaCollector.prototype, \"schemas\", {\n    get: function () {\n      return [];\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  NoOpSchemaCollector.prototype.add = function (schema) {};\n\n  NoOpSchemaCollector.prototype.merge = function (other) {};\n\n  NoOpSchemaCollector.prototype.include = function (node) {\n    return true;\n  };\n\n  NoOpSchemaCollector.prototype.newSub = function () {\n    return this;\n  };\n\n  NoOpSchemaCollector.instance = new NoOpSchemaCollector();\n  return NoOpSchemaCollector;\n}();\n\nvar ValidationResult =\n/** @class */\nfunction () {\n  function ValidationResult() {\n    this.problems = [];\n    this.propertiesMatches = 0;\n    this.propertiesValueMatches = 0;\n    this.primaryValueMatches = 0;\n    this.enumValueMatch = false;\n    this.enumValues = null;\n  }\n\n  ValidationResult.prototype.hasProblems = function () {\n    return !!this.problems.length;\n  };\n\n  ValidationResult.prototype.mergeAll = function (validationResults) {\n    for (var _i = 0, validationResults_1 = validationResults; _i < validationResults_1.length; _i++) {\n      var validationResult = validationResults_1[_i];\n      this.merge(validationResult);\n    }\n  };\n\n  ValidationResult.prototype.merge = function (validationResult) {\n    this.problems = this.problems.concat(validationResult.problems);\n  };\n\n  ValidationResult.prototype.mergeEnumValues = function (validationResult) {\n    if (!this.enumValueMatch && !validationResult.enumValueMatch && this.enumValues && validationResult.enumValues) {\n      this.enumValues = this.enumValues.concat(validationResult.enumValues);\n\n      for (var _i = 0, _a = this.problems; _i < _a.length; _i++) {\n        var error = _a[_i];\n\n        if (error.code === ErrorCode.EnumValueMismatch) {\n          error.message = localize('enumWarning', 'Value is not accepted. Valid values: {0}.', this.enumValues.map(function (v) {\n            return JSON.stringify(v);\n          }).join(', '));\n        }\n      }\n    }\n  };\n\n  ValidationResult.prototype.mergePropertyMatch = function (propertyValidationResult) {\n    this.merge(propertyValidationResult);\n    this.propertiesMatches++;\n\n    if (propertyValidationResult.enumValueMatch || !propertyValidationResult.hasProblems() && propertyValidationResult.propertiesMatches) {\n      this.propertiesValueMatches++;\n    }\n\n    if (propertyValidationResult.enumValueMatch && propertyValidationResult.enumValues && propertyValidationResult.enumValues.length === 1) {\n      this.primaryValueMatches++;\n    }\n  };\n\n  ValidationResult.prototype.compare = function (other) {\n    var hasProblems = this.hasProblems();\n\n    if (hasProblems !== other.hasProblems()) {\n      return hasProblems ? -1 : 1;\n    }\n\n    if (this.enumValueMatch !== other.enumValueMatch) {\n      return other.enumValueMatch ? -1 : 1;\n    }\n\n    if (this.primaryValueMatches !== other.primaryValueMatches) {\n      return this.primaryValueMatches - other.primaryValueMatches;\n    }\n\n    if (this.propertiesValueMatches !== other.propertiesValueMatches) {\n      return this.propertiesValueMatches - other.propertiesValueMatches;\n    }\n\n    return this.propertiesMatches - other.propertiesMatches;\n  };\n\n  return ValidationResult;\n}();\n\nexport { ValidationResult };\nexport function newJSONDocument(root, diagnostics) {\n  if (diagnostics === void 0) {\n    diagnostics = [];\n  }\n\n  return new JSONDocument(root, diagnostics, []);\n}\nexport function getNodeValue(node) {\n  return Json.getNodeValue(node);\n}\nexport function getNodePath(node) {\n  return Json.getNodePath(node);\n}\nexport function contains(node, offset, includeRightBound) {\n  if (includeRightBound === void 0) {\n    includeRightBound = false;\n  }\n\n  return offset >= node.offset && offset < node.offset + node.length || includeRightBound && offset === node.offset + node.length;\n}\n\nvar JSONDocument =\n/** @class */\nfunction () {\n  function JSONDocument(root, syntaxErrors, comments) {\n    if (syntaxErrors === void 0) {\n      syntaxErrors = [];\n    }\n\n    if (comments === void 0) {\n      comments = [];\n    }\n\n    this.root = root;\n    this.syntaxErrors = syntaxErrors;\n    this.comments = comments;\n  }\n\n  JSONDocument.prototype.getNodeFromOffset = function (offset, includeRightBound) {\n    if (includeRightBound === void 0) {\n      includeRightBound = false;\n    }\n\n    if (this.root) {\n      return Json.findNodeAtOffset(this.root, offset, includeRightBound);\n    }\n\n    return void 0;\n  };\n\n  JSONDocument.prototype.visit = function (visitor) {\n    if (this.root) {\n      var doVisit_1 = function (node) {\n        var ctn = visitor(node);\n        var children = node.children;\n\n        if (Array.isArray(children)) {\n          for (var i = 0; i < children.length && ctn; i++) {\n            ctn = doVisit_1(children[i]);\n          }\n        }\n\n        return ctn;\n      };\n\n      doVisit_1(this.root);\n    }\n  };\n\n  JSONDocument.prototype.validate = function (textDocument, schema) {\n    if (this.root && schema) {\n      var validationResult = new ValidationResult();\n      validate(this.root, schema, validationResult, NoOpSchemaCollector.instance);\n      return validationResult.problems.map(function (p) {\n        var range = Range.create(textDocument.positionAt(p.location.offset), textDocument.positionAt(p.location.offset + p.location.length));\n        return Diagnostic.create(range, p.message, p.severity, p.code);\n      });\n    }\n\n    return null;\n  };\n\n  JSONDocument.prototype.getMatchingSchemas = function (schema, focusOffset, exclude) {\n    if (focusOffset === void 0) {\n      focusOffset = -1;\n    }\n\n    if (exclude === void 0) {\n      exclude = null;\n    }\n\n    var matchingSchemas = new SchemaCollector(focusOffset, exclude);\n\n    if (this.root && schema) {\n      validate(this.root, schema, new ValidationResult(), matchingSchemas);\n    }\n\n    return matchingSchemas.schemas;\n  };\n\n  return JSONDocument;\n}();\n\nexport { JSONDocument };\n\nfunction validate(node, schema, validationResult, matchingSchemas) {\n  if (!node || !matchingSchemas.include(node)) {\n    return;\n  }\n\n  switch (node.type) {\n    case 'object':\n      _validateObjectNode(node, schema, validationResult, matchingSchemas);\n\n      break;\n\n    case 'array':\n      _validateArrayNode(node, schema, validationResult, matchingSchemas);\n\n      break;\n\n    case 'string':\n      _validateStringNode(node, schema, validationResult, matchingSchemas);\n\n      break;\n\n    case 'number':\n      _validateNumberNode(node, schema, validationResult, matchingSchemas);\n\n      break;\n\n    case 'property':\n      return validate(node.valueNode, schema, validationResult, matchingSchemas);\n  }\n\n  _validateNode();\n\n  matchingSchemas.add({\n    node: node,\n    schema: schema\n  });\n\n  function _validateNode() {\n    function matchesType(type) {\n      return node.type === type || type === 'integer' && node.type === 'number' && node.isInteger;\n    }\n\n    if (Array.isArray(schema.type)) {\n      if (!schema.type.some(matchesType)) {\n        validationResult.problems.push({\n          location: {\n            offset: node.offset,\n            length: node.length\n          },\n          severity: DiagnosticSeverity.Warning,\n          message: schema.errorMessage || localize('typeArrayMismatchWarning', 'Incorrect type. Expected one of {0}.', schema.type.join(', '))\n        });\n      }\n    } else if (schema.type) {\n      if (!matchesType(schema.type)) {\n        validationResult.problems.push({\n          location: {\n            offset: node.offset,\n            length: node.length\n          },\n          severity: DiagnosticSeverity.Warning,\n          message: schema.errorMessage || localize('typeMismatchWarning', 'Incorrect type. Expected \"{0}\".', schema.type)\n        });\n      }\n    }\n\n    if (Array.isArray(schema.allOf)) {\n      for (var _i = 0, _a = schema.allOf; _i < _a.length; _i++) {\n        var subSchemaRef = _a[_i];\n        validate(node, asSchema(subSchemaRef), validationResult, matchingSchemas);\n      }\n    }\n\n    var notSchema = asSchema(schema.not);\n\n    if (notSchema) {\n      var subValidationResult = new ValidationResult();\n      var subMatchingSchemas = matchingSchemas.newSub();\n      validate(node, notSchema, subValidationResult, subMatchingSchemas);\n\n      if (!subValidationResult.hasProblems()) {\n        validationResult.problems.push({\n          location: {\n            offset: node.offset,\n            length: node.length\n          },\n          severity: DiagnosticSeverity.Warning,\n          message: localize('notSchemaWarning', \"Matches a schema that is not allowed.\")\n        });\n      }\n\n      for (var _b = 0, _c = subMatchingSchemas.schemas; _b < _c.length; _b++) {\n        var ms = _c[_b];\n        ms.inverted = !ms.inverted;\n        matchingSchemas.add(ms);\n      }\n    }\n\n    var testAlternatives = function (alternatives, maxOneMatch) {\n      var matches = []; // remember the best match that is used for error messages\n\n      var bestMatch = null;\n\n      for (var _i = 0, alternatives_1 = alternatives; _i < alternatives_1.length; _i++) {\n        var subSchemaRef = alternatives_1[_i];\n        var subSchema = asSchema(subSchemaRef);\n        var subValidationResult = new ValidationResult();\n        var subMatchingSchemas = matchingSchemas.newSub();\n        validate(node, subSchema, subValidationResult, subMatchingSchemas);\n\n        if (!subValidationResult.hasProblems()) {\n          matches.push(subSchema);\n        }\n\n        if (!bestMatch) {\n          bestMatch = {\n            schema: subSchema,\n            validationResult: subValidationResult,\n            matchingSchemas: subMatchingSchemas\n          };\n        } else {\n          if (!maxOneMatch && !subValidationResult.hasProblems() && !bestMatch.validationResult.hasProblems()) {\n            // no errors, both are equally good matches\n            bestMatch.matchingSchemas.merge(subMatchingSchemas);\n            bestMatch.validationResult.propertiesMatches += subValidationResult.propertiesMatches;\n            bestMatch.validationResult.propertiesValueMatches += subValidationResult.propertiesValueMatches;\n          } else {\n            var compareResult = subValidationResult.compare(bestMatch.validationResult);\n\n            if (compareResult > 0) {\n              // our node is the best matching so far\n              bestMatch = {\n                schema: subSchema,\n                validationResult: subValidationResult,\n                matchingSchemas: subMatchingSchemas\n              };\n            } else if (compareResult === 0) {\n              // there's already a best matching but we are as good\n              bestMatch.matchingSchemas.merge(subMatchingSchemas);\n              bestMatch.validationResult.mergeEnumValues(subValidationResult);\n            }\n          }\n        }\n      }\n\n      if (matches.length > 1 && maxOneMatch) {\n        validationResult.problems.push({\n          location: {\n            offset: node.offset,\n            length: 1\n          },\n          severity: DiagnosticSeverity.Warning,\n          message: localize('oneOfWarning', \"Matches multiple schemas when only one must validate.\")\n        });\n      }\n\n      if (bestMatch !== null) {\n        validationResult.merge(bestMatch.validationResult);\n        validationResult.propertiesMatches += bestMatch.validationResult.propertiesMatches;\n        validationResult.propertiesValueMatches += bestMatch.validationResult.propertiesValueMatches;\n        matchingSchemas.merge(bestMatch.matchingSchemas);\n      }\n\n      return matches.length;\n    };\n\n    if (Array.isArray(schema.anyOf)) {\n      testAlternatives(schema.anyOf, false);\n    }\n\n    if (Array.isArray(schema.oneOf)) {\n      testAlternatives(schema.oneOf, true);\n    }\n\n    var testBranch = function (schema) {\n      var subValidationResult = new ValidationResult();\n      var subMatchingSchemas = matchingSchemas.newSub();\n      validate(node, asSchema(schema), subValidationResult, subMatchingSchemas);\n      validationResult.merge(subValidationResult);\n      validationResult.propertiesMatches += subValidationResult.propertiesMatches;\n      validationResult.propertiesValueMatches += subValidationResult.propertiesValueMatches;\n      matchingSchemas.merge(subMatchingSchemas);\n    };\n\n    var testCondition = function (ifSchema, thenSchema, elseSchema) {\n      var subSchema = asSchema(ifSchema);\n      var subValidationResult = new ValidationResult();\n      var subMatchingSchemas = matchingSchemas.newSub();\n      validate(node, subSchema, subValidationResult, subMatchingSchemas);\n      matchingSchemas.merge(subMatchingSchemas);\n\n      if (!subValidationResult.hasProblems()) {\n        if (thenSchema) {\n          testBranch(thenSchema);\n        }\n      } else if (elseSchema) {\n        testBranch(elseSchema);\n      }\n    };\n\n    var ifSchema = asSchema(schema.if);\n\n    if (ifSchema) {\n      testCondition(ifSchema, asSchema(schema.then), asSchema(schema.else));\n    }\n\n    if (Array.isArray(schema.enum)) {\n      var val = getNodeValue(node);\n      var enumValueMatch = false;\n\n      for (var _d = 0, _e = schema.enum; _d < _e.length; _d++) {\n        var e = _e[_d];\n\n        if (equals(val, e)) {\n          enumValueMatch = true;\n          break;\n        }\n      }\n\n      validationResult.enumValues = schema.enum;\n      validationResult.enumValueMatch = enumValueMatch;\n\n      if (!enumValueMatch) {\n        validationResult.problems.push({\n          location: {\n            offset: node.offset,\n            length: node.length\n          },\n          severity: DiagnosticSeverity.Warning,\n          code: ErrorCode.EnumValueMismatch,\n          message: schema.errorMessage || localize('enumWarning', 'Value is not accepted. Valid values: {0}.', schema.enum.map(function (v) {\n            return JSON.stringify(v);\n          }).join(', '))\n        });\n      }\n    }\n\n    if (isDefined(schema.const)) {\n      var val = getNodeValue(node);\n\n      if (!equals(val, schema.const)) {\n        validationResult.problems.push({\n          location: {\n            offset: node.offset,\n            length: node.length\n          },\n          severity: DiagnosticSeverity.Warning,\n          code: ErrorCode.EnumValueMismatch,\n          message: schema.errorMessage || localize('constWarning', 'Value must be {0}.', JSON.stringify(schema.const))\n        });\n        validationResult.enumValueMatch = false;\n      } else {\n        validationResult.enumValueMatch = true;\n      }\n\n      validationResult.enumValues = [schema.const];\n    }\n\n    if (schema.deprecationMessage && node.parent) {\n      validationResult.problems.push({\n        location: {\n          offset: node.parent.offset,\n          length: node.parent.length\n        },\n        severity: DiagnosticSeverity.Warning,\n        message: schema.deprecationMessage\n      });\n    }\n  }\n\n  function _validateNumberNode(node, schema, validationResult, matchingSchemas) {\n    var val = node.value;\n\n    if (isNumber(schema.multipleOf)) {\n      if (val % schema.multipleOf !== 0) {\n        validationResult.problems.push({\n          location: {\n            offset: node.offset,\n            length: node.length\n          },\n          severity: DiagnosticSeverity.Warning,\n          message: localize('multipleOfWarning', 'Value is not divisible by {0}.', schema.multipleOf)\n        });\n      }\n    }\n\n    function getExclusiveLimit(limit, exclusive) {\n      if (isNumber(exclusive)) {\n        return exclusive;\n      }\n\n      if (isBoolean(exclusive) && exclusive) {\n        return limit;\n      }\n\n      return void 0;\n    }\n\n    function getLimit(limit, exclusive) {\n      if (!isBoolean(exclusive) || !exclusive) {\n        return limit;\n      }\n\n      return void 0;\n    }\n\n    var exclusiveMinimum = getExclusiveLimit(schema.minimum, schema.exclusiveMinimum);\n\n    if (isNumber(exclusiveMinimum) && val <= exclusiveMinimum) {\n      validationResult.problems.push({\n        location: {\n          offset: node.offset,\n          length: node.length\n        },\n        severity: DiagnosticSeverity.Warning,\n        message: localize('exclusiveMinimumWarning', 'Value is below the exclusive minimum of {0}.', exclusiveMinimum)\n      });\n    }\n\n    var exclusiveMaximum = getExclusiveLimit(schema.maximum, schema.exclusiveMaximum);\n\n    if (isNumber(exclusiveMaximum) && val >= exclusiveMaximum) {\n      validationResult.problems.push({\n        location: {\n          offset: node.offset,\n          length: node.length\n        },\n        severity: DiagnosticSeverity.Warning,\n        message: localize('exclusiveMaximumWarning', 'Value is above the exclusive maximum of {0}.', exclusiveMaximum)\n      });\n    }\n\n    var minimum = getLimit(schema.minimum, schema.exclusiveMinimum);\n\n    if (isNumber(minimum) && val < minimum) {\n      validationResult.problems.push({\n        location: {\n          offset: node.offset,\n          length: node.length\n        },\n        severity: DiagnosticSeverity.Warning,\n        message: localize('minimumWarning', 'Value is below the minimum of {0}.', minimum)\n      });\n    }\n\n    var maximum = getLimit(schema.maximum, schema.exclusiveMaximum);\n\n    if (isNumber(maximum) && val > maximum) {\n      validationResult.problems.push({\n        location: {\n          offset: node.offset,\n          length: node.length\n        },\n        severity: DiagnosticSeverity.Warning,\n        message: localize('maximumWarning', 'Value is above the maximum of {0}.', maximum)\n      });\n    }\n  }\n\n  function _validateStringNode(node, schema, validationResult, matchingSchemas) {\n    if (isNumber(schema.minLength) && node.value.length < schema.minLength) {\n      validationResult.problems.push({\n        location: {\n          offset: node.offset,\n          length: node.length\n        },\n        severity: DiagnosticSeverity.Warning,\n        message: localize('minLengthWarning', 'String is shorter than the minimum length of {0}.', schema.minLength)\n      });\n    }\n\n    if (isNumber(schema.maxLength) && node.value.length > schema.maxLength) {\n      validationResult.problems.push({\n        location: {\n          offset: node.offset,\n          length: node.length\n        },\n        severity: DiagnosticSeverity.Warning,\n        message: localize('maxLengthWarning', 'String is longer than the maximum length of {0}.', schema.maxLength)\n      });\n    }\n\n    if (isString(schema.pattern)) {\n      var regex = new RegExp(schema.pattern);\n\n      if (!regex.test(node.value)) {\n        validationResult.problems.push({\n          location: {\n            offset: node.offset,\n            length: node.length\n          },\n          severity: DiagnosticSeverity.Warning,\n          message: schema.patternErrorMessage || schema.errorMessage || localize('patternWarning', 'String does not match the pattern of \"{0}\".', schema.pattern)\n        });\n      }\n    }\n\n    if (schema.format) {\n      switch (schema.format) {\n        case 'uri':\n        case 'uri-reference':\n          {\n            var errorMessage = void 0;\n\n            if (!node.value) {\n              errorMessage = localize('uriEmpty', 'URI expected.');\n            } else {\n              var match = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/.exec(node.value);\n\n              if (!match) {\n                errorMessage = localize('uriMissing', 'URI is expected.');\n              } else if (!match[2] && schema.format === 'uri') {\n                errorMessage = localize('uriSchemeMissing', 'URI with a scheme is expected.');\n              }\n            }\n\n            if (errorMessage) {\n              validationResult.problems.push({\n                location: {\n                  offset: node.offset,\n                  length: node.length\n                },\n                severity: DiagnosticSeverity.Warning,\n                message: schema.patternErrorMessage || schema.errorMessage || localize('uriFormatWarning', 'String is not a URI: {0}', errorMessage)\n              });\n            }\n          }\n          break;\n\n        case 'color-hex':\n        case 'date-time':\n        case 'date':\n        case 'time':\n        case 'email':\n          var format = formats[schema.format];\n\n          if (!node.value || !format.pattern.exec(node.value)) {\n            validationResult.problems.push({\n              location: {\n                offset: node.offset,\n                length: node.length\n              },\n              severity: DiagnosticSeverity.Warning,\n              message: schema.patternErrorMessage || schema.errorMessage || format.errorMessage\n            });\n          }\n\n        default:\n      }\n    }\n  }\n\n  function _validateArrayNode(node, schema, validationResult, matchingSchemas) {\n    if (Array.isArray(schema.items)) {\n      var subSchemas = schema.items;\n\n      for (var index = 0; index < subSchemas.length; index++) {\n        var subSchemaRef = subSchemas[index];\n        var subSchema = asSchema(subSchemaRef);\n        var itemValidationResult = new ValidationResult();\n        var item = node.items[index];\n\n        if (item) {\n          validate(item, subSchema, itemValidationResult, matchingSchemas);\n          validationResult.mergePropertyMatch(itemValidationResult);\n        } else if (node.items.length >= subSchemas.length) {\n          validationResult.propertiesValueMatches++;\n        }\n      }\n\n      if (node.items.length > subSchemas.length) {\n        if (typeof schema.additionalItems === 'object') {\n          for (var i = subSchemas.length; i < node.items.length; i++) {\n            var itemValidationResult = new ValidationResult();\n            validate(node.items[i], schema.additionalItems, itemValidationResult, matchingSchemas);\n            validationResult.mergePropertyMatch(itemValidationResult);\n          }\n        } else if (schema.additionalItems === false) {\n          validationResult.problems.push({\n            location: {\n              offset: node.offset,\n              length: node.length\n            },\n            severity: DiagnosticSeverity.Warning,\n            message: localize('additionalItemsWarning', 'Array has too many items according to schema. Expected {0} or fewer.', subSchemas.length)\n          });\n        }\n      }\n    } else {\n      var itemSchema = asSchema(schema.items);\n\n      if (itemSchema) {\n        for (var _i = 0, _a = node.items; _i < _a.length; _i++) {\n          var item = _a[_i];\n          var itemValidationResult = new ValidationResult();\n          validate(item, itemSchema, itemValidationResult, matchingSchemas);\n          validationResult.mergePropertyMatch(itemValidationResult);\n        }\n      }\n    }\n\n    var containsSchema = asSchema(schema.contains);\n\n    if (containsSchema) {\n      var doesContain = node.items.some(function (item) {\n        var itemValidationResult = new ValidationResult();\n        validate(item, containsSchema, itemValidationResult, NoOpSchemaCollector.instance);\n        return !itemValidationResult.hasProblems();\n      });\n\n      if (!doesContain) {\n        validationResult.problems.push({\n          location: {\n            offset: node.offset,\n            length: node.length\n          },\n          severity: DiagnosticSeverity.Warning,\n          message: schema.errorMessage || localize('requiredItemMissingWarning', 'Array does not contain required item.')\n        });\n      }\n    }\n\n    if (isNumber(schema.minItems) && node.items.length < schema.minItems) {\n      validationResult.problems.push({\n        location: {\n          offset: node.offset,\n          length: node.length\n        },\n        severity: DiagnosticSeverity.Warning,\n        message: localize('minItemsWarning', 'Array has too few items. Expected {0} or more.', schema.minItems)\n      });\n    }\n\n    if (isNumber(schema.maxItems) && node.items.length > schema.maxItems) {\n      validationResult.problems.push({\n        location: {\n          offset: node.offset,\n          length: node.length\n        },\n        severity: DiagnosticSeverity.Warning,\n        message: localize('maxItemsWarning', 'Array has too many items. Expected {0} or fewer.', schema.maxItems)\n      });\n    }\n\n    if (schema.uniqueItems === true) {\n      var values_1 = getNodeValue(node);\n      var duplicates = values_1.some(function (value, index) {\n        return index !== values_1.lastIndexOf(value);\n      });\n\n      if (duplicates) {\n        validationResult.problems.push({\n          location: {\n            offset: node.offset,\n            length: node.length\n          },\n          severity: DiagnosticSeverity.Warning,\n          message: localize('uniqueItemsWarning', 'Array has duplicate items.')\n        });\n      }\n    }\n  }\n\n  function _validateObjectNode(node, schema, validationResult, matchingSchemas) {\n    var seenKeys = Object.create(null);\n    var unprocessedProperties = [];\n\n    for (var _i = 0, _a = node.properties; _i < _a.length; _i++) {\n      var propertyNode = _a[_i];\n      var key = propertyNode.keyNode.value;\n      seenKeys[key] = propertyNode.valueNode;\n      unprocessedProperties.push(key);\n    }\n\n    if (Array.isArray(schema.required)) {\n      for (var _b = 0, _c = schema.required; _b < _c.length; _b++) {\n        var propertyName = _c[_b];\n\n        if (!seenKeys[propertyName]) {\n          var keyNode = node.parent && node.parent.type === 'property' && node.parent.keyNode;\n          var location = keyNode ? {\n            offset: keyNode.offset,\n            length: keyNode.length\n          } : {\n            offset: node.offset,\n            length: 1\n          };\n          validationResult.problems.push({\n            location: location,\n            severity: DiagnosticSeverity.Warning,\n            message: localize('MissingRequiredPropWarning', 'Missing property \"{0}\".', propertyName)\n          });\n        }\n      }\n    }\n\n    var propertyProcessed = function (prop) {\n      var index = unprocessedProperties.indexOf(prop);\n\n      while (index >= 0) {\n        unprocessedProperties.splice(index, 1);\n        index = unprocessedProperties.indexOf(prop);\n      }\n    };\n\n    if (schema.properties) {\n      for (var _d = 0, _e = Object.keys(schema.properties); _d < _e.length; _d++) {\n        var propertyName = _e[_d];\n        propertyProcessed(propertyName);\n        var propertySchema = schema.properties[propertyName];\n        var child = seenKeys[propertyName];\n\n        if (child) {\n          if (isBoolean(propertySchema)) {\n            if (!propertySchema) {\n              var propertyNode = child.parent;\n              validationResult.problems.push({\n                location: {\n                  offset: propertyNode.keyNode.offset,\n                  length: propertyNode.keyNode.length\n                },\n                severity: DiagnosticSeverity.Warning,\n                message: schema.errorMessage || localize('DisallowedExtraPropWarning', 'Property {0} is not allowed.', propertyName)\n              });\n            } else {\n              validationResult.propertiesMatches++;\n              validationResult.propertiesValueMatches++;\n            }\n          } else {\n            var propertyValidationResult = new ValidationResult();\n            validate(child, propertySchema, propertyValidationResult, matchingSchemas);\n            validationResult.mergePropertyMatch(propertyValidationResult);\n          }\n        }\n      }\n    }\n\n    if (schema.patternProperties) {\n      for (var _f = 0, _g = Object.keys(schema.patternProperties); _f < _g.length; _f++) {\n        var propertyPattern = _g[_f];\n        var regex = new RegExp(propertyPattern);\n\n        for (var _h = 0, _j = unprocessedProperties.slice(0); _h < _j.length; _h++) {\n          var propertyName = _j[_h];\n\n          if (regex.test(propertyName)) {\n            propertyProcessed(propertyName);\n            var child = seenKeys[propertyName];\n\n            if (child) {\n              var propertySchema = schema.patternProperties[propertyPattern];\n\n              if (isBoolean(propertySchema)) {\n                if (!propertySchema) {\n                  var propertyNode = child.parent;\n                  validationResult.problems.push({\n                    location: {\n                      offset: propertyNode.keyNode.offset,\n                      length: propertyNode.keyNode.length\n                    },\n                    severity: DiagnosticSeverity.Warning,\n                    message: schema.errorMessage || localize('DisallowedExtraPropWarning', 'Property {0} is not allowed.', propertyName)\n                  });\n                } else {\n                  validationResult.propertiesMatches++;\n                  validationResult.propertiesValueMatches++;\n                }\n              } else {\n                var propertyValidationResult = new ValidationResult();\n                validate(child, propertySchema, propertyValidationResult, matchingSchemas);\n                validationResult.mergePropertyMatch(propertyValidationResult);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    if (typeof schema.additionalProperties === 'object') {\n      for (var _k = 0, unprocessedProperties_1 = unprocessedProperties; _k < unprocessedProperties_1.length; _k++) {\n        var propertyName = unprocessedProperties_1[_k];\n        var child = seenKeys[propertyName];\n\n        if (child) {\n          var propertyValidationResult = new ValidationResult();\n          validate(child, schema.additionalProperties, propertyValidationResult, matchingSchemas);\n          validationResult.mergePropertyMatch(propertyValidationResult);\n        }\n      }\n    } else if (schema.additionalProperties === false) {\n      if (unprocessedProperties.length > 0) {\n        for (var _l = 0, unprocessedProperties_2 = unprocessedProperties; _l < unprocessedProperties_2.length; _l++) {\n          var propertyName = unprocessedProperties_2[_l];\n          var child = seenKeys[propertyName];\n\n          if (child) {\n            var propertyNode = child.parent;\n            validationResult.problems.push({\n              location: {\n                offset: propertyNode.keyNode.offset,\n                length: propertyNode.keyNode.length\n              },\n              severity: DiagnosticSeverity.Warning,\n              message: schema.errorMessage || localize('DisallowedExtraPropWarning', 'Property {0} is not allowed.', propertyName)\n            });\n          }\n        }\n      }\n    }\n\n    if (isNumber(schema.maxProperties)) {\n      if (node.properties.length > schema.maxProperties) {\n        validationResult.problems.push({\n          location: {\n            offset: node.offset,\n            length: node.length\n          },\n          severity: DiagnosticSeverity.Warning,\n          message: localize('MaxPropWarning', 'Object has more properties than limit of {0}.', schema.maxProperties)\n        });\n      }\n    }\n\n    if (isNumber(schema.minProperties)) {\n      if (node.properties.length < schema.minProperties) {\n        validationResult.problems.push({\n          location: {\n            offset: node.offset,\n            length: node.length\n          },\n          severity: DiagnosticSeverity.Warning,\n          message: localize('MinPropWarning', 'Object has fewer properties than the required number of {0}', schema.minProperties)\n        });\n      }\n    }\n\n    if (schema.dependencies) {\n      for (var _m = 0, _o = Object.keys(schema.dependencies); _m < _o.length; _m++) {\n        var key = _o[_m];\n        var prop = seenKeys[key];\n\n        if (prop) {\n          var propertyDep = schema.dependencies[key];\n\n          if (Array.isArray(propertyDep)) {\n            for (var _p = 0, propertyDep_1 = propertyDep; _p < propertyDep_1.length; _p++) {\n              var requiredProp = propertyDep_1[_p];\n\n              if (!seenKeys[requiredProp]) {\n                validationResult.problems.push({\n                  location: {\n                    offset: node.offset,\n                    length: node.length\n                  },\n                  severity: DiagnosticSeverity.Warning,\n                  message: localize('RequiredDependentPropWarning', 'Object is missing property {0} required by property {1}.', requiredProp, key)\n                });\n              } else {\n                validationResult.propertiesValueMatches++;\n              }\n            }\n          } else {\n            var propertySchema = asSchema(propertyDep);\n\n            if (propertySchema) {\n              var propertyValidationResult = new ValidationResult();\n              validate(node, propertySchema, propertyValidationResult, matchingSchemas);\n              validationResult.mergePropertyMatch(propertyValidationResult);\n            }\n          }\n        }\n      }\n    }\n\n    var propertyNames = asSchema(schema.propertyNames);\n\n    if (propertyNames) {\n      for (var _q = 0, _r = node.properties; _q < _r.length; _q++) {\n        var f = _r[_q];\n        var key = f.keyNode;\n\n        if (key) {\n          validate(key, propertyNames, validationResult, NoOpSchemaCollector.instance);\n        }\n      }\n    }\n  }\n}\n\nexport function parse(textDocument, config) {\n  var problems = [];\n  var lastProblemOffset = -1;\n  var text = textDocument.getText();\n  var scanner = Json.createScanner(text, false);\n  var commentRanges = config && config.collectComments ? [] : void 0;\n\n  function _scanNext() {\n    while (true) {\n      var token_1 = scanner.scan();\n\n      _checkScanError();\n\n      switch (token_1) {\n        case 12\n        /* LineCommentTrivia */\n        :\n        case 13\n        /* BlockCommentTrivia */\n        :\n          if (Array.isArray(commentRanges)) {\n            commentRanges.push(Range.create(textDocument.positionAt(scanner.getTokenOffset()), textDocument.positionAt(scanner.getTokenOffset() + scanner.getTokenLength())));\n          }\n\n          break;\n\n        case 15\n        /* Trivia */\n        :\n        case 14\n        /* LineBreakTrivia */\n        :\n          break;\n\n        default:\n          return token_1;\n      }\n    }\n  }\n\n  function _accept(token) {\n    if (scanner.getToken() === token) {\n      _scanNext();\n\n      return true;\n    }\n\n    return false;\n  }\n\n  function _errorAtRange(message, code, startOffset, endOffset, severity) {\n    if (severity === void 0) {\n      severity = DiagnosticSeverity.Error;\n    }\n\n    if (problems.length === 0 || startOffset !== lastProblemOffset) {\n      var range = Range.create(textDocument.positionAt(startOffset), textDocument.positionAt(endOffset));\n      problems.push(Diagnostic.create(range, message, severity, code, textDocument.languageId));\n      lastProblemOffset = startOffset;\n    }\n  }\n\n  function _error(message, code, node, skipUntilAfter, skipUntil) {\n    if (node === void 0) {\n      node = null;\n    }\n\n    if (skipUntilAfter === void 0) {\n      skipUntilAfter = [];\n    }\n\n    if (skipUntil === void 0) {\n      skipUntil = [];\n    }\n\n    var start = scanner.getTokenOffset();\n    var end = scanner.getTokenOffset() + scanner.getTokenLength();\n\n    if (start === end && start > 0) {\n      start--;\n\n      while (start > 0 && /\\s/.test(text.charAt(start))) {\n        start--;\n      }\n\n      end = start + 1;\n    }\n\n    _errorAtRange(message, code, start, end);\n\n    if (node) {\n      _finalize(node, false);\n    }\n\n    if (skipUntilAfter.length + skipUntil.length > 0) {\n      var token_2 = scanner.getToken();\n\n      while (token_2 !== 17\n      /* EOF */\n      ) {\n        if (skipUntilAfter.indexOf(token_2) !== -1) {\n          _scanNext();\n\n          break;\n        } else if (skipUntil.indexOf(token_2) !== -1) {\n          break;\n        }\n\n        token_2 = _scanNext();\n      }\n    }\n\n    return node;\n  }\n\n  function _checkScanError() {\n    switch (scanner.getTokenError()) {\n      case 4\n      /* InvalidUnicode */\n      :\n        _error(localize('InvalidUnicode', 'Invalid unicode sequence in string.'), ErrorCode.InvalidUnicode);\n\n        return true;\n\n      case 5\n      /* InvalidEscapeCharacter */\n      :\n        _error(localize('InvalidEscapeCharacter', 'Invalid escape character in string.'), ErrorCode.InvalidEscapeCharacter);\n\n        return true;\n\n      case 3\n      /* UnexpectedEndOfNumber */\n      :\n        _error(localize('UnexpectedEndOfNumber', 'Unexpected end of number.'), ErrorCode.UnexpectedEndOfNumber);\n\n        return true;\n\n      case 1\n      /* UnexpectedEndOfComment */\n      :\n        _error(localize('UnexpectedEndOfComment', 'Unexpected end of comment.'), ErrorCode.UnexpectedEndOfComment);\n\n        return true;\n\n      case 2\n      /* UnexpectedEndOfString */\n      :\n        _error(localize('UnexpectedEndOfString', 'Unexpected end of string.'), ErrorCode.UnexpectedEndOfString);\n\n        return true;\n\n      case 6\n      /* InvalidCharacter */\n      :\n        _error(localize('InvalidCharacter', 'Invalid characters in string. Control characters must be escaped.'), ErrorCode.InvalidCharacter);\n\n        return true;\n    }\n\n    return false;\n  }\n\n  function _finalize(node, scanNext) {\n    node.length = scanner.getTokenOffset() + scanner.getTokenLength() - node.offset;\n\n    if (scanNext) {\n      _scanNext();\n    }\n\n    return node;\n  }\n\n  function _parseArray(parent) {\n    if (scanner.getToken() !== 3\n    /* OpenBracketToken */\n    ) {\n        return null;\n      }\n\n    var node = new ArrayASTNodeImpl(parent, scanner.getTokenOffset());\n\n    _scanNext(); // consume OpenBracketToken\n\n\n    var count = 0;\n    var needsComma = false;\n\n    while (scanner.getToken() !== 4\n    /* CloseBracketToken */\n    && scanner.getToken() !== 17\n    /* EOF */\n    ) {\n      if (scanner.getToken() === 5\n      /* CommaToken */\n      ) {\n          if (!needsComma) {\n            _error(localize('ValueExpected', 'Value expected'), ErrorCode.ValueExpected);\n          }\n\n          var commaOffset = scanner.getTokenOffset();\n\n          _scanNext(); // consume comma\n\n\n          if (scanner.getToken() === 4\n          /* CloseBracketToken */\n          ) {\n              if (needsComma) {\n                _errorAtRange(localize('TrailingComma', 'Trailing comma'), ErrorCode.TrailingComma, commaOffset, commaOffset + 1);\n              }\n\n              continue;\n            }\n        } else if (needsComma) {\n        _error(localize('ExpectedComma', 'Expected comma'), ErrorCode.CommaExpected);\n      }\n\n      var item = _parseValue(node, count++);\n\n      if (!item) {\n        _error(localize('PropertyExpected', 'Value expected'), ErrorCode.ValueExpected, null, [], [4\n        /* CloseBracketToken */\n        , 5\n        /* CommaToken */\n        ]);\n      } else {\n        node.items.push(item);\n      }\n\n      needsComma = true;\n    }\n\n    if (scanner.getToken() !== 4\n    /* CloseBracketToken */\n    ) {\n        return _error(localize('ExpectedCloseBracket', 'Expected comma or closing bracket'), ErrorCode.CommaOrCloseBacketExpected, node);\n      }\n\n    return _finalize(node, true);\n  }\n\n  function _parseProperty(parent, keysSeen) {\n    var node = new PropertyASTNodeImpl(parent, scanner.getTokenOffset());\n\n    var key = _parseString(node);\n\n    if (!key) {\n      if (scanner.getToken() === 16\n      /* Unknown */\n      ) {\n          // give a more helpful error message\n          _error(localize('DoubleQuotesExpected', 'Property keys must be doublequoted'), ErrorCode.Undefined);\n\n          var keyNode = new StringASTNodeImpl(node, scanner.getTokenOffset(), scanner.getTokenLength());\n          keyNode.value = scanner.getTokenValue();\n          key = keyNode;\n\n          _scanNext(); // consume Unknown\n\n        } else {\n        return null;\n      }\n    }\n\n    node.keyNode = key;\n    var seen = keysSeen[key.value];\n\n    if (seen) {\n      _errorAtRange(localize('DuplicateKeyWarning', \"Duplicate object key\"), ErrorCode.DuplicateKey, node.keyNode.offset, node.keyNode.offset + node.keyNode.length, DiagnosticSeverity.Warning);\n\n      if (typeof seen === 'object') {\n        _errorAtRange(localize('DuplicateKeyWarning', \"Duplicate object key\"), ErrorCode.DuplicateKey, seen.keyNode.offset, seen.keyNode.offset + seen.keyNode.length, DiagnosticSeverity.Warning);\n      }\n\n      keysSeen[key.value] = true; // if the same key is duplicate again, avoid duplicate error reporting\n    } else {\n      keysSeen[key.value] = node;\n    }\n\n    if (scanner.getToken() === 6\n    /* ColonToken */\n    ) {\n        node.colonOffset = scanner.getTokenOffset();\n\n        _scanNext(); // consume ColonToken\n\n      } else {\n      _error(localize('ColonExpected', 'Colon expected'), ErrorCode.ColonExpected);\n\n      if (scanner.getToken() === 10\n      /* StringLiteral */\n      && textDocument.positionAt(key.offset + key.length).line < textDocument.positionAt(scanner.getTokenOffset()).line) {\n        node.length = key.length;\n        return node;\n      }\n    }\n\n    var value = _parseValue(node, key.value);\n\n    if (!value) {\n      return _error(localize('ValueExpected', 'Value expected'), ErrorCode.ValueExpected, node, [], [2\n      /* CloseBraceToken */\n      , 5\n      /* CommaToken */\n      ]);\n    }\n\n    node.valueNode = value;\n    node.length = value.offset + value.length - node.offset;\n    return node;\n  }\n\n  function _parseObject(parent) {\n    if (scanner.getToken() !== 1\n    /* OpenBraceToken */\n    ) {\n        return null;\n      }\n\n    var node = new ObjectASTNodeImpl(parent, scanner.getTokenOffset());\n    var keysSeen = Object.create(null);\n\n    _scanNext(); // consume OpenBraceToken\n\n\n    var needsComma = false;\n\n    while (scanner.getToken() !== 2\n    /* CloseBraceToken */\n    && scanner.getToken() !== 17\n    /* EOF */\n    ) {\n      if (scanner.getToken() === 5\n      /* CommaToken */\n      ) {\n          if (!needsComma) {\n            _error(localize('PropertyExpected', 'Property expected'), ErrorCode.PropertyExpected);\n          }\n\n          var commaOffset = scanner.getTokenOffset();\n\n          _scanNext(); // consume comma\n\n\n          if (scanner.getToken() === 2\n          /* CloseBraceToken */\n          ) {\n              if (needsComma) {\n                _errorAtRange(localize('TrailingComma', 'Trailing comma'), ErrorCode.TrailingComma, commaOffset, commaOffset + 1);\n              }\n\n              continue;\n            }\n        } else if (needsComma) {\n        _error(localize('ExpectedComma', 'Expected comma'), ErrorCode.CommaExpected);\n      }\n\n      var property = _parseProperty(node, keysSeen);\n\n      if (!property) {\n        _error(localize('PropertyExpected', 'Property expected'), ErrorCode.PropertyExpected, null, [], [2\n        /* CloseBraceToken */\n        , 5\n        /* CommaToken */\n        ]);\n      } else {\n        node.properties.push(property);\n      }\n\n      needsComma = true;\n    }\n\n    if (scanner.getToken() !== 2\n    /* CloseBraceToken */\n    ) {\n        return _error(localize('ExpectedCloseBrace', 'Expected comma or closing brace'), ErrorCode.CommaOrCloseBraceExpected, node);\n      }\n\n    return _finalize(node, true);\n  }\n\n  function _parseString(parent) {\n    if (scanner.getToken() !== 10\n    /* StringLiteral */\n    ) {\n        return null;\n      }\n\n    var node = new StringASTNodeImpl(parent, scanner.getTokenOffset());\n    node.value = scanner.getTokenValue();\n    return _finalize(node, true);\n  }\n\n  function _parseNumber(parent) {\n    if (scanner.getToken() !== 11\n    /* NumericLiteral */\n    ) {\n        return null;\n      }\n\n    var node = new NumberASTNodeImpl(parent, scanner.getTokenOffset());\n\n    if (scanner.getTokenError() === 0\n    /* None */\n    ) {\n        var tokenValue = scanner.getTokenValue();\n\n        try {\n          var numberValue = JSON.parse(tokenValue);\n\n          if (!isNumber(numberValue)) {\n            return _error(localize('InvalidNumberFormat', 'Invalid number format.'), ErrorCode.Undefined, node);\n          }\n\n          node.value = numberValue;\n        } catch (e) {\n          return _error(localize('InvalidNumberFormat', 'Invalid number format.'), ErrorCode.Undefined, node);\n        }\n\n        node.isInteger = tokenValue.indexOf('.') === -1;\n      }\n\n    return _finalize(node, true);\n  }\n\n  function _parseLiteral(parent) {\n    var node;\n\n    switch (scanner.getToken()) {\n      case 7\n      /* NullKeyword */\n      :\n        return _finalize(new NullASTNodeImpl(parent, scanner.getTokenOffset()), true);\n\n      case 8\n      /* TrueKeyword */\n      :\n        return _finalize(new BooleanASTNodeImpl(parent, true, scanner.getTokenOffset()), true);\n\n      case 9\n      /* FalseKeyword */\n      :\n        return _finalize(new BooleanASTNodeImpl(parent, false, scanner.getTokenOffset()), true);\n\n      default:\n        return null;\n    }\n  }\n\n  function _parseValue(parent, name) {\n    return _parseArray(parent) || _parseObject(parent) || _parseString(parent) || _parseNumber(parent) || _parseLiteral(parent);\n  }\n\n  var _root = null;\n\n  var token = _scanNext();\n\n  if (token !== 17\n  /* EOF */\n  ) {\n      _root = _parseValue(null, null);\n\n      if (!_root) {\n        _error(localize('Invalid symbol', 'Expected a JSON object, array or literal.'), ErrorCode.Undefined);\n      } else if (scanner.getToken() !== 17\n      /* EOF */\n      ) {\n          _error(localize('End of file expected', 'End of file expected.'), ErrorCode.Undefined);\n        }\n    }\n\n  return new JSONDocument(_root, problems, commentRanges);\n}","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/parser/jsonParser.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Json","isNumber","equals","isBoolean","isString","isDefined","ErrorCode","Diagnostic","DiagnosticSeverity","Range","nls","localize","loadMessageBundle","formats","errorMessage","pattern","ASTNodeImpl","parent","offset","length","defineProperty","get","enumerable","configurable","toString","type","NullASTNodeImpl","_super","_this","call","value","BooleanASTNodeImpl","boolValue","ArrayASTNodeImpl","items","NumberASTNodeImpl","isInteger","Number","NaN","StringASTNodeImpl","PropertyASTNodeImpl","colonOffset","valueNode","keyNode","ObjectASTNodeImpl","properties","asSchema","schema","EnumMatch","SchemaCollector","focusOffset","exclude","schemas","add","push","merge","other","_a","apply","include","node","contains","newSub","NoOpSchemaCollector","instance","ValidationResult","problems","propertiesMatches","propertiesValueMatches","primaryValueMatches","enumValueMatch","enumValues","hasProblems","mergeAll","validationResults","_i","validationResults_1","validationResult","concat","mergeEnumValues","error","code","EnumValueMismatch","message","map","v","JSON","stringify","join","mergePropertyMatch","propertyValidationResult","compare","newJSONDocument","root","diagnostics","JSONDocument","getNodeValue","getNodePath","includeRightBound","syntaxErrors","comments","getNodeFromOffset","findNodeAtOffset","visit","visitor","doVisit_1","ctn","children","isArray","i","validate","textDocument","range","positionAt","location","severity","getMatchingSchemas","matchingSchemas","_validateObjectNode","_validateArrayNode","_validateStringNode","_validateNumberNode","_validateNode","matchesType","some","Warning","allOf","subSchemaRef","notSchema","not","subValidationResult","subMatchingSchemas","_b","_c","ms","inverted","testAlternatives","alternatives","maxOneMatch","matches","bestMatch","alternatives_1","subSchema","compareResult","anyOf","oneOf","testBranch","testCondition","ifSchema","thenSchema","elseSchema","if","then","else","enum","val","_d","_e","e","const","deprecationMessage","multipleOf","getExclusiveLimit","limit","exclusive","getLimit","exclusiveMinimum","minimum","exclusiveMaximum","maximum","minLength","maxLength","regex","RegExp","test","patternErrorMessage","format","match","exec","subSchemas","index","itemValidationResult","item","additionalItems","itemSchema","containsSchema","doesContain","minItems","maxItems","uniqueItems","values_1","duplicates","lastIndexOf","seenKeys","unprocessedProperties","propertyNode","key","required","propertyName","propertyProcessed","prop","indexOf","splice","keys","propertySchema","child","patternProperties","_f","_g","propertyPattern","_h","_j","slice","additionalProperties","_k","unprocessedProperties_1","_l","unprocessedProperties_2","maxProperties","minProperties","dependencies","_m","_o","propertyDep","_p","propertyDep_1","requiredProp","propertyNames","_q","_r","f","parse","config","lastProblemOffset","text","getText","scanner","createScanner","commentRanges","collectComments","_scanNext","token_1","scan","_checkScanError","getTokenOffset","getTokenLength","_accept","token","getToken","_errorAtRange","startOffset","endOffset","Error","languageId","_error","skipUntilAfter","skipUntil","start","end","charAt","_finalize","token_2","getTokenError","InvalidUnicode","InvalidEscapeCharacter","UnexpectedEndOfNumber","UnexpectedEndOfComment","UnexpectedEndOfString","InvalidCharacter","scanNext","_parseArray","count","needsComma","ValueExpected","commaOffset","TrailingComma","CommaExpected","_parseValue","CommaOrCloseBacketExpected","_parseProperty","keysSeen","_parseString","Undefined","getTokenValue","seen","DuplicateKey","ColonExpected","line","_parseObject","PropertyExpected","property","CommaOrCloseBraceExpected","_parseNumber","tokenValue","numberValue","_parseLiteral","name","_root"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as Json from './../../jsonc-parser/main.js';\nimport { isNumber, equals, isBoolean, isString, isDefined } from '../utils/objects.js';\nimport { ErrorCode, Diagnostic, DiagnosticSeverity, Range } from '../jsonLanguageTypes.js';\nimport * as nls from './../../../fillers/vscode-nls.js';\nvar localize = nls.loadMessageBundle();\nvar formats = {\n    'color-hex': { errorMessage: localize('colorHexFormatWarning', 'Invalid color format. Use #RGB, #RGBA, #RRGGBB or #RRGGBBAA.'), pattern: /^#([0-9A-Fa-f]{3,4}|([0-9A-Fa-f]{2}){3,4})$/ },\n    'date-time': { errorMessage: localize('dateTimeFormatWarning', 'String is not a RFC3339 date-time.'), pattern: /^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)([01][0-9]|2[0-3]):([0-5][0-9]))$/i },\n    'date': { errorMessage: localize('dateFormatWarning', 'String is not a RFC3339 date.'), pattern: /^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$/i },\n    'time': { errorMessage: localize('timeFormatWarning', 'String is not a RFC3339 time.'), pattern: /^([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)([01][0-9]|2[0-3]):([0-5][0-9]))$/i },\n    'email': { errorMessage: localize('emailFormatWarning', 'String is not an e-mail address.'), pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/ }\n};\nvar ASTNodeImpl = /** @class */ (function () {\n    function ASTNodeImpl(parent, offset, length) {\n        this.offset = offset;\n        this.length = length;\n        this.parent = parent;\n    }\n    Object.defineProperty(ASTNodeImpl.prototype, \"children\", {\n        get: function () {\n            return [];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ASTNodeImpl.prototype.toString = function () {\n        return 'type: ' + this.type + ' (' + this.offset + '/' + this.length + ')' + (this.parent ? ' parent: {' + this.parent.toString() + '}' : '');\n    };\n    return ASTNodeImpl;\n}());\nexport { ASTNodeImpl };\nvar NullASTNodeImpl = /** @class */ (function (_super) {\n    __extends(NullASTNodeImpl, _super);\n    function NullASTNodeImpl(parent, offset) {\n        var _this = _super.call(this, parent, offset) || this;\n        _this.type = 'null';\n        _this.value = null;\n        return _this;\n    }\n    return NullASTNodeImpl;\n}(ASTNodeImpl));\nexport { NullASTNodeImpl };\nvar BooleanASTNodeImpl = /** @class */ (function (_super) {\n    __extends(BooleanASTNodeImpl, _super);\n    function BooleanASTNodeImpl(parent, boolValue, offset) {\n        var _this = _super.call(this, parent, offset) || this;\n        _this.type = 'boolean';\n        _this.value = boolValue;\n        return _this;\n    }\n    return BooleanASTNodeImpl;\n}(ASTNodeImpl));\nexport { BooleanASTNodeImpl };\nvar ArrayASTNodeImpl = /** @class */ (function (_super) {\n    __extends(ArrayASTNodeImpl, _super);\n    function ArrayASTNodeImpl(parent, offset) {\n        var _this = _super.call(this, parent, offset) || this;\n        _this.type = 'array';\n        _this.items = [];\n        return _this;\n    }\n    Object.defineProperty(ArrayASTNodeImpl.prototype, \"children\", {\n        get: function () {\n            return this.items;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ArrayASTNodeImpl;\n}(ASTNodeImpl));\nexport { ArrayASTNodeImpl };\nvar NumberASTNodeImpl = /** @class */ (function (_super) {\n    __extends(NumberASTNodeImpl, _super);\n    function NumberASTNodeImpl(parent, offset) {\n        var _this = _super.call(this, parent, offset) || this;\n        _this.type = 'number';\n        _this.isInteger = true;\n        _this.value = Number.NaN;\n        return _this;\n    }\n    return NumberASTNodeImpl;\n}(ASTNodeImpl));\nexport { NumberASTNodeImpl };\nvar StringASTNodeImpl = /** @class */ (function (_super) {\n    __extends(StringASTNodeImpl, _super);\n    function StringASTNodeImpl(parent, offset, length) {\n        var _this = _super.call(this, parent, offset, length) || this;\n        _this.type = 'string';\n        _this.value = '';\n        return _this;\n    }\n    return StringASTNodeImpl;\n}(ASTNodeImpl));\nexport { StringASTNodeImpl };\nvar PropertyASTNodeImpl = /** @class */ (function (_super) {\n    __extends(PropertyASTNodeImpl, _super);\n    function PropertyASTNodeImpl(parent, offset) {\n        var _this = _super.call(this, parent, offset) || this;\n        _this.type = 'property';\n        _this.colonOffset = -1;\n        return _this;\n    }\n    Object.defineProperty(PropertyASTNodeImpl.prototype, \"children\", {\n        get: function () {\n            return this.valueNode ? [this.keyNode, this.valueNode] : [this.keyNode];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PropertyASTNodeImpl;\n}(ASTNodeImpl));\nexport { PropertyASTNodeImpl };\nvar ObjectASTNodeImpl = /** @class */ (function (_super) {\n    __extends(ObjectASTNodeImpl, _super);\n    function ObjectASTNodeImpl(parent, offset) {\n        var _this = _super.call(this, parent, offset) || this;\n        _this.type = 'object';\n        _this.properties = [];\n        return _this;\n    }\n    Object.defineProperty(ObjectASTNodeImpl.prototype, \"children\", {\n        get: function () {\n            return this.properties;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ObjectASTNodeImpl;\n}(ASTNodeImpl));\nexport { ObjectASTNodeImpl };\nexport function asSchema(schema) {\n    if (isBoolean(schema)) {\n        return schema ? {} : { \"not\": {} };\n    }\n    return schema;\n}\nexport var EnumMatch;\n(function (EnumMatch) {\n    EnumMatch[EnumMatch[\"Key\"] = 0] = \"Key\";\n    EnumMatch[EnumMatch[\"Enum\"] = 1] = \"Enum\";\n})(EnumMatch || (EnumMatch = {}));\nvar SchemaCollector = /** @class */ (function () {\n    function SchemaCollector(focusOffset, exclude) {\n        if (focusOffset === void 0) { focusOffset = -1; }\n        if (exclude === void 0) { exclude = null; }\n        this.focusOffset = focusOffset;\n        this.exclude = exclude;\n        this.schemas = [];\n    }\n    SchemaCollector.prototype.add = function (schema) {\n        this.schemas.push(schema);\n    };\n    SchemaCollector.prototype.merge = function (other) {\n        var _a;\n        (_a = this.schemas).push.apply(_a, other.schemas);\n    };\n    SchemaCollector.prototype.include = function (node) {\n        return (this.focusOffset === -1 || contains(node, this.focusOffset)) && (node !== this.exclude);\n    };\n    SchemaCollector.prototype.newSub = function () {\n        return new SchemaCollector(-1, this.exclude);\n    };\n    return SchemaCollector;\n}());\nvar NoOpSchemaCollector = /** @class */ (function () {\n    function NoOpSchemaCollector() {\n    }\n    Object.defineProperty(NoOpSchemaCollector.prototype, \"schemas\", {\n        get: function () { return []; },\n        enumerable: true,\n        configurable: true\n    });\n    NoOpSchemaCollector.prototype.add = function (schema) { };\n    NoOpSchemaCollector.prototype.merge = function (other) { };\n    NoOpSchemaCollector.prototype.include = function (node) { return true; };\n    NoOpSchemaCollector.prototype.newSub = function () { return this; };\n    NoOpSchemaCollector.instance = new NoOpSchemaCollector();\n    return NoOpSchemaCollector;\n}());\nvar ValidationResult = /** @class */ (function () {\n    function ValidationResult() {\n        this.problems = [];\n        this.propertiesMatches = 0;\n        this.propertiesValueMatches = 0;\n        this.primaryValueMatches = 0;\n        this.enumValueMatch = false;\n        this.enumValues = null;\n    }\n    ValidationResult.prototype.hasProblems = function () {\n        return !!this.problems.length;\n    };\n    ValidationResult.prototype.mergeAll = function (validationResults) {\n        for (var _i = 0, validationResults_1 = validationResults; _i < validationResults_1.length; _i++) {\n            var validationResult = validationResults_1[_i];\n            this.merge(validationResult);\n        }\n    };\n    ValidationResult.prototype.merge = function (validationResult) {\n        this.problems = this.problems.concat(validationResult.problems);\n    };\n    ValidationResult.prototype.mergeEnumValues = function (validationResult) {\n        if (!this.enumValueMatch && !validationResult.enumValueMatch && this.enumValues && validationResult.enumValues) {\n            this.enumValues = this.enumValues.concat(validationResult.enumValues);\n            for (var _i = 0, _a = this.problems; _i < _a.length; _i++) {\n                var error = _a[_i];\n                if (error.code === ErrorCode.EnumValueMismatch) {\n                    error.message = localize('enumWarning', 'Value is not accepted. Valid values: {0}.', this.enumValues.map(function (v) { return JSON.stringify(v); }).join(', '));\n                }\n            }\n        }\n    };\n    ValidationResult.prototype.mergePropertyMatch = function (propertyValidationResult) {\n        this.merge(propertyValidationResult);\n        this.propertiesMatches++;\n        if (propertyValidationResult.enumValueMatch || !propertyValidationResult.hasProblems() && propertyValidationResult.propertiesMatches) {\n            this.propertiesValueMatches++;\n        }\n        if (propertyValidationResult.enumValueMatch && propertyValidationResult.enumValues && propertyValidationResult.enumValues.length === 1) {\n            this.primaryValueMatches++;\n        }\n    };\n    ValidationResult.prototype.compare = function (other) {\n        var hasProblems = this.hasProblems();\n        if (hasProblems !== other.hasProblems()) {\n            return hasProblems ? -1 : 1;\n        }\n        if (this.enumValueMatch !== other.enumValueMatch) {\n            return other.enumValueMatch ? -1 : 1;\n        }\n        if (this.primaryValueMatches !== other.primaryValueMatches) {\n            return this.primaryValueMatches - other.primaryValueMatches;\n        }\n        if (this.propertiesValueMatches !== other.propertiesValueMatches) {\n            return this.propertiesValueMatches - other.propertiesValueMatches;\n        }\n        return this.propertiesMatches - other.propertiesMatches;\n    };\n    return ValidationResult;\n}());\nexport { ValidationResult };\nexport function newJSONDocument(root, diagnostics) {\n    if (diagnostics === void 0) { diagnostics = []; }\n    return new JSONDocument(root, diagnostics, []);\n}\nexport function getNodeValue(node) {\n    return Json.getNodeValue(node);\n}\nexport function getNodePath(node) {\n    return Json.getNodePath(node);\n}\nexport function contains(node, offset, includeRightBound) {\n    if (includeRightBound === void 0) { includeRightBound = false; }\n    return offset >= node.offset && offset < (node.offset + node.length) || includeRightBound && offset === (node.offset + node.length);\n}\nvar JSONDocument = /** @class */ (function () {\n    function JSONDocument(root, syntaxErrors, comments) {\n        if (syntaxErrors === void 0) { syntaxErrors = []; }\n        if (comments === void 0) { comments = []; }\n        this.root = root;\n        this.syntaxErrors = syntaxErrors;\n        this.comments = comments;\n    }\n    JSONDocument.prototype.getNodeFromOffset = function (offset, includeRightBound) {\n        if (includeRightBound === void 0) { includeRightBound = false; }\n        if (this.root) {\n            return Json.findNodeAtOffset(this.root, offset, includeRightBound);\n        }\n        return void 0;\n    };\n    JSONDocument.prototype.visit = function (visitor) {\n        if (this.root) {\n            var doVisit_1 = function (node) {\n                var ctn = visitor(node);\n                var children = node.children;\n                if (Array.isArray(children)) {\n                    for (var i = 0; i < children.length && ctn; i++) {\n                        ctn = doVisit_1(children[i]);\n                    }\n                }\n                return ctn;\n            };\n            doVisit_1(this.root);\n        }\n    };\n    JSONDocument.prototype.validate = function (textDocument, schema) {\n        if (this.root && schema) {\n            var validationResult = new ValidationResult();\n            validate(this.root, schema, validationResult, NoOpSchemaCollector.instance);\n            return validationResult.problems.map(function (p) {\n                var range = Range.create(textDocument.positionAt(p.location.offset), textDocument.positionAt(p.location.offset + p.location.length));\n                return Diagnostic.create(range, p.message, p.severity, p.code);\n            });\n        }\n        return null;\n    };\n    JSONDocument.prototype.getMatchingSchemas = function (schema, focusOffset, exclude) {\n        if (focusOffset === void 0) { focusOffset = -1; }\n        if (exclude === void 0) { exclude = null; }\n        var matchingSchemas = new SchemaCollector(focusOffset, exclude);\n        if (this.root && schema) {\n            validate(this.root, schema, new ValidationResult(), matchingSchemas);\n        }\n        return matchingSchemas.schemas;\n    };\n    return JSONDocument;\n}());\nexport { JSONDocument };\nfunction validate(node, schema, validationResult, matchingSchemas) {\n    if (!node || !matchingSchemas.include(node)) {\n        return;\n    }\n    switch (node.type) {\n        case 'object':\n            _validateObjectNode(node, schema, validationResult, matchingSchemas);\n            break;\n        case 'array':\n            _validateArrayNode(node, schema, validationResult, matchingSchemas);\n            break;\n        case 'string':\n            _validateStringNode(node, schema, validationResult, matchingSchemas);\n            break;\n        case 'number':\n            _validateNumberNode(node, schema, validationResult, matchingSchemas);\n            break;\n        case 'property':\n            return validate(node.valueNode, schema, validationResult, matchingSchemas);\n    }\n    _validateNode();\n    matchingSchemas.add({ node: node, schema: schema });\n    function _validateNode() {\n        function matchesType(type) {\n            return node.type === type || (type === 'integer' && node.type === 'number' && node.isInteger);\n        }\n        if (Array.isArray(schema.type)) {\n            if (!schema.type.some(matchesType)) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: schema.errorMessage || localize('typeArrayMismatchWarning', 'Incorrect type. Expected one of {0}.', schema.type.join(', '))\n                });\n            }\n        }\n        else if (schema.type) {\n            if (!matchesType(schema.type)) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: schema.errorMessage || localize('typeMismatchWarning', 'Incorrect type. Expected \"{0}\".', schema.type)\n                });\n            }\n        }\n        if (Array.isArray(schema.allOf)) {\n            for (var _i = 0, _a = schema.allOf; _i < _a.length; _i++) {\n                var subSchemaRef = _a[_i];\n                validate(node, asSchema(subSchemaRef), validationResult, matchingSchemas);\n            }\n        }\n        var notSchema = asSchema(schema.not);\n        if (notSchema) {\n            var subValidationResult = new ValidationResult();\n            var subMatchingSchemas = matchingSchemas.newSub();\n            validate(node, notSchema, subValidationResult, subMatchingSchemas);\n            if (!subValidationResult.hasProblems()) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: localize('notSchemaWarning', \"Matches a schema that is not allowed.\")\n                });\n            }\n            for (var _b = 0, _c = subMatchingSchemas.schemas; _b < _c.length; _b++) {\n                var ms = _c[_b];\n                ms.inverted = !ms.inverted;\n                matchingSchemas.add(ms);\n            }\n        }\n        var testAlternatives = function (alternatives, maxOneMatch) {\n            var matches = [];\n            // remember the best match that is used for error messages\n            var bestMatch = null;\n            for (var _i = 0, alternatives_1 = alternatives; _i < alternatives_1.length; _i++) {\n                var subSchemaRef = alternatives_1[_i];\n                var subSchema = asSchema(subSchemaRef);\n                var subValidationResult = new ValidationResult();\n                var subMatchingSchemas = matchingSchemas.newSub();\n                validate(node, subSchema, subValidationResult, subMatchingSchemas);\n                if (!subValidationResult.hasProblems()) {\n                    matches.push(subSchema);\n                }\n                if (!bestMatch) {\n                    bestMatch = { schema: subSchema, validationResult: subValidationResult, matchingSchemas: subMatchingSchemas };\n                }\n                else {\n                    if (!maxOneMatch && !subValidationResult.hasProblems() && !bestMatch.validationResult.hasProblems()) {\n                        // no errors, both are equally good matches\n                        bestMatch.matchingSchemas.merge(subMatchingSchemas);\n                        bestMatch.validationResult.propertiesMatches += subValidationResult.propertiesMatches;\n                        bestMatch.validationResult.propertiesValueMatches += subValidationResult.propertiesValueMatches;\n                    }\n                    else {\n                        var compareResult = subValidationResult.compare(bestMatch.validationResult);\n                        if (compareResult > 0) {\n                            // our node is the best matching so far\n                            bestMatch = { schema: subSchema, validationResult: subValidationResult, matchingSchemas: subMatchingSchemas };\n                        }\n                        else if (compareResult === 0) {\n                            // there's already a best matching but we are as good\n                            bestMatch.matchingSchemas.merge(subMatchingSchemas);\n                            bestMatch.validationResult.mergeEnumValues(subValidationResult);\n                        }\n                    }\n                }\n            }\n            if (matches.length > 1 && maxOneMatch) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: 1 },\n                    severity: DiagnosticSeverity.Warning,\n                    message: localize('oneOfWarning', \"Matches multiple schemas when only one must validate.\")\n                });\n            }\n            if (bestMatch !== null) {\n                validationResult.merge(bestMatch.validationResult);\n                validationResult.propertiesMatches += bestMatch.validationResult.propertiesMatches;\n                validationResult.propertiesValueMatches += bestMatch.validationResult.propertiesValueMatches;\n                matchingSchemas.merge(bestMatch.matchingSchemas);\n            }\n            return matches.length;\n        };\n        if (Array.isArray(schema.anyOf)) {\n            testAlternatives(schema.anyOf, false);\n        }\n        if (Array.isArray(schema.oneOf)) {\n            testAlternatives(schema.oneOf, true);\n        }\n        var testBranch = function (schema) {\n            var subValidationResult = new ValidationResult();\n            var subMatchingSchemas = matchingSchemas.newSub();\n            validate(node, asSchema(schema), subValidationResult, subMatchingSchemas);\n            validationResult.merge(subValidationResult);\n            validationResult.propertiesMatches += subValidationResult.propertiesMatches;\n            validationResult.propertiesValueMatches += subValidationResult.propertiesValueMatches;\n            matchingSchemas.merge(subMatchingSchemas);\n        };\n        var testCondition = function (ifSchema, thenSchema, elseSchema) {\n            var subSchema = asSchema(ifSchema);\n            var subValidationResult = new ValidationResult();\n            var subMatchingSchemas = matchingSchemas.newSub();\n            validate(node, subSchema, subValidationResult, subMatchingSchemas);\n            matchingSchemas.merge(subMatchingSchemas);\n            if (!subValidationResult.hasProblems()) {\n                if (thenSchema) {\n                    testBranch(thenSchema);\n                }\n            }\n            else if (elseSchema) {\n                testBranch(elseSchema);\n            }\n        };\n        var ifSchema = asSchema(schema.if);\n        if (ifSchema) {\n            testCondition(ifSchema, asSchema(schema.then), asSchema(schema.else));\n        }\n        if (Array.isArray(schema.enum)) {\n            var val = getNodeValue(node);\n            var enumValueMatch = false;\n            for (var _d = 0, _e = schema.enum; _d < _e.length; _d++) {\n                var e = _e[_d];\n                if (equals(val, e)) {\n                    enumValueMatch = true;\n                    break;\n                }\n            }\n            validationResult.enumValues = schema.enum;\n            validationResult.enumValueMatch = enumValueMatch;\n            if (!enumValueMatch) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    code: ErrorCode.EnumValueMismatch,\n                    message: schema.errorMessage || localize('enumWarning', 'Value is not accepted. Valid values: {0}.', schema.enum.map(function (v) { return JSON.stringify(v); }).join(', '))\n                });\n            }\n        }\n        if (isDefined(schema.const)) {\n            var val = getNodeValue(node);\n            if (!equals(val, schema.const)) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    code: ErrorCode.EnumValueMismatch,\n                    message: schema.errorMessage || localize('constWarning', 'Value must be {0}.', JSON.stringify(schema.const))\n                });\n                validationResult.enumValueMatch = false;\n            }\n            else {\n                validationResult.enumValueMatch = true;\n            }\n            validationResult.enumValues = [schema.const];\n        }\n        if (schema.deprecationMessage && node.parent) {\n            validationResult.problems.push({\n                location: { offset: node.parent.offset, length: node.parent.length },\n                severity: DiagnosticSeverity.Warning,\n                message: schema.deprecationMessage\n            });\n        }\n    }\n    function _validateNumberNode(node, schema, validationResult, matchingSchemas) {\n        var val = node.value;\n        if (isNumber(schema.multipleOf)) {\n            if (val % schema.multipleOf !== 0) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: localize('multipleOfWarning', 'Value is not divisible by {0}.', schema.multipleOf)\n                });\n            }\n        }\n        function getExclusiveLimit(limit, exclusive) {\n            if (isNumber(exclusive)) {\n                return exclusive;\n            }\n            if (isBoolean(exclusive) && exclusive) {\n                return limit;\n            }\n            return void 0;\n        }\n        function getLimit(limit, exclusive) {\n            if (!isBoolean(exclusive) || !exclusive) {\n                return limit;\n            }\n            return void 0;\n        }\n        var exclusiveMinimum = getExclusiveLimit(schema.minimum, schema.exclusiveMinimum);\n        if (isNumber(exclusiveMinimum) && val <= exclusiveMinimum) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: DiagnosticSeverity.Warning,\n                message: localize('exclusiveMinimumWarning', 'Value is below the exclusive minimum of {0}.', exclusiveMinimum)\n            });\n        }\n        var exclusiveMaximum = getExclusiveLimit(schema.maximum, schema.exclusiveMaximum);\n        if (isNumber(exclusiveMaximum) && val >= exclusiveMaximum) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: DiagnosticSeverity.Warning,\n                message: localize('exclusiveMaximumWarning', 'Value is above the exclusive maximum of {0}.', exclusiveMaximum)\n            });\n        }\n        var minimum = getLimit(schema.minimum, schema.exclusiveMinimum);\n        if (isNumber(minimum) && val < minimum) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: DiagnosticSeverity.Warning,\n                message: localize('minimumWarning', 'Value is below the minimum of {0}.', minimum)\n            });\n        }\n        var maximum = getLimit(schema.maximum, schema.exclusiveMaximum);\n        if (isNumber(maximum) && val > maximum) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: DiagnosticSeverity.Warning,\n                message: localize('maximumWarning', 'Value is above the maximum of {0}.', maximum)\n            });\n        }\n    }\n    function _validateStringNode(node, schema, validationResult, matchingSchemas) {\n        if (isNumber(schema.minLength) && node.value.length < schema.minLength) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: DiagnosticSeverity.Warning,\n                message: localize('minLengthWarning', 'String is shorter than the minimum length of {0}.', schema.minLength)\n            });\n        }\n        if (isNumber(schema.maxLength) && node.value.length > schema.maxLength) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: DiagnosticSeverity.Warning,\n                message: localize('maxLengthWarning', 'String is longer than the maximum length of {0}.', schema.maxLength)\n            });\n        }\n        if (isString(schema.pattern)) {\n            var regex = new RegExp(schema.pattern);\n            if (!regex.test(node.value)) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: schema.patternErrorMessage || schema.errorMessage || localize('patternWarning', 'String does not match the pattern of \"{0}\".', schema.pattern)\n                });\n            }\n        }\n        if (schema.format) {\n            switch (schema.format) {\n                case 'uri':\n                case 'uri-reference':\n                    {\n                        var errorMessage = void 0;\n                        if (!node.value) {\n                            errorMessage = localize('uriEmpty', 'URI expected.');\n                        }\n                        else {\n                            var match = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/.exec(node.value);\n                            if (!match) {\n                                errorMessage = localize('uriMissing', 'URI is expected.');\n                            }\n                            else if (!match[2] && schema.format === 'uri') {\n                                errorMessage = localize('uriSchemeMissing', 'URI with a scheme is expected.');\n                            }\n                        }\n                        if (errorMessage) {\n                            validationResult.problems.push({\n                                location: { offset: node.offset, length: node.length },\n                                severity: DiagnosticSeverity.Warning,\n                                message: schema.patternErrorMessage || schema.errorMessage || localize('uriFormatWarning', 'String is not a URI: {0}', errorMessage)\n                            });\n                        }\n                    }\n                    break;\n                case 'color-hex':\n                case 'date-time':\n                case 'date':\n                case 'time':\n                case 'email':\n                    var format = formats[schema.format];\n                    if (!node.value || !format.pattern.exec(node.value)) {\n                        validationResult.problems.push({\n                            location: { offset: node.offset, length: node.length },\n                            severity: DiagnosticSeverity.Warning,\n                            message: schema.patternErrorMessage || schema.errorMessage || format.errorMessage\n                        });\n                    }\n                default:\n            }\n        }\n    }\n    function _validateArrayNode(node, schema, validationResult, matchingSchemas) {\n        if (Array.isArray(schema.items)) {\n            var subSchemas = schema.items;\n            for (var index = 0; index < subSchemas.length; index++) {\n                var subSchemaRef = subSchemas[index];\n                var subSchema = asSchema(subSchemaRef);\n                var itemValidationResult = new ValidationResult();\n                var item = node.items[index];\n                if (item) {\n                    validate(item, subSchema, itemValidationResult, matchingSchemas);\n                    validationResult.mergePropertyMatch(itemValidationResult);\n                }\n                else if (node.items.length >= subSchemas.length) {\n                    validationResult.propertiesValueMatches++;\n                }\n            }\n            if (node.items.length > subSchemas.length) {\n                if (typeof schema.additionalItems === 'object') {\n                    for (var i = subSchemas.length; i < node.items.length; i++) {\n                        var itemValidationResult = new ValidationResult();\n                        validate(node.items[i], schema.additionalItems, itemValidationResult, matchingSchemas);\n                        validationResult.mergePropertyMatch(itemValidationResult);\n                    }\n                }\n                else if (schema.additionalItems === false) {\n                    validationResult.problems.push({\n                        location: { offset: node.offset, length: node.length },\n                        severity: DiagnosticSeverity.Warning,\n                        message: localize('additionalItemsWarning', 'Array has too many items according to schema. Expected {0} or fewer.', subSchemas.length)\n                    });\n                }\n            }\n        }\n        else {\n            var itemSchema = asSchema(schema.items);\n            if (itemSchema) {\n                for (var _i = 0, _a = node.items; _i < _a.length; _i++) {\n                    var item = _a[_i];\n                    var itemValidationResult = new ValidationResult();\n                    validate(item, itemSchema, itemValidationResult, matchingSchemas);\n                    validationResult.mergePropertyMatch(itemValidationResult);\n                }\n            }\n        }\n        var containsSchema = asSchema(schema.contains);\n        if (containsSchema) {\n            var doesContain = node.items.some(function (item) {\n                var itemValidationResult = new ValidationResult();\n                validate(item, containsSchema, itemValidationResult, NoOpSchemaCollector.instance);\n                return !itemValidationResult.hasProblems();\n            });\n            if (!doesContain) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: schema.errorMessage || localize('requiredItemMissingWarning', 'Array does not contain required item.')\n                });\n            }\n        }\n        if (isNumber(schema.minItems) && node.items.length < schema.minItems) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: DiagnosticSeverity.Warning,\n                message: localize('minItemsWarning', 'Array has too few items. Expected {0} or more.', schema.minItems)\n            });\n        }\n        if (isNumber(schema.maxItems) && node.items.length > schema.maxItems) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: DiagnosticSeverity.Warning,\n                message: localize('maxItemsWarning', 'Array has too many items. Expected {0} or fewer.', schema.maxItems)\n            });\n        }\n        if (schema.uniqueItems === true) {\n            var values_1 = getNodeValue(node);\n            var duplicates = values_1.some(function (value, index) {\n                return index !== values_1.lastIndexOf(value);\n            });\n            if (duplicates) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: localize('uniqueItemsWarning', 'Array has duplicate items.')\n                });\n            }\n        }\n    }\n    function _validateObjectNode(node, schema, validationResult, matchingSchemas) {\n        var seenKeys = Object.create(null);\n        var unprocessedProperties = [];\n        for (var _i = 0, _a = node.properties; _i < _a.length; _i++) {\n            var propertyNode = _a[_i];\n            var key = propertyNode.keyNode.value;\n            seenKeys[key] = propertyNode.valueNode;\n            unprocessedProperties.push(key);\n        }\n        if (Array.isArray(schema.required)) {\n            for (var _b = 0, _c = schema.required; _b < _c.length; _b++) {\n                var propertyName = _c[_b];\n                if (!seenKeys[propertyName]) {\n                    var keyNode = node.parent && node.parent.type === 'property' && node.parent.keyNode;\n                    var location = keyNode ? { offset: keyNode.offset, length: keyNode.length } : { offset: node.offset, length: 1 };\n                    validationResult.problems.push({\n                        location: location,\n                        severity: DiagnosticSeverity.Warning,\n                        message: localize('MissingRequiredPropWarning', 'Missing property \"{0}\".', propertyName)\n                    });\n                }\n            }\n        }\n        var propertyProcessed = function (prop) {\n            var index = unprocessedProperties.indexOf(prop);\n            while (index >= 0) {\n                unprocessedProperties.splice(index, 1);\n                index = unprocessedProperties.indexOf(prop);\n            }\n        };\n        if (schema.properties) {\n            for (var _d = 0, _e = Object.keys(schema.properties); _d < _e.length; _d++) {\n                var propertyName = _e[_d];\n                propertyProcessed(propertyName);\n                var propertySchema = schema.properties[propertyName];\n                var child = seenKeys[propertyName];\n                if (child) {\n                    if (isBoolean(propertySchema)) {\n                        if (!propertySchema) {\n                            var propertyNode = child.parent;\n                            validationResult.problems.push({\n                                location: { offset: propertyNode.keyNode.offset, length: propertyNode.keyNode.length },\n                                severity: DiagnosticSeverity.Warning,\n                                message: schema.errorMessage || localize('DisallowedExtraPropWarning', 'Property {0} is not allowed.', propertyName)\n                            });\n                        }\n                        else {\n                            validationResult.propertiesMatches++;\n                            validationResult.propertiesValueMatches++;\n                        }\n                    }\n                    else {\n                        var propertyValidationResult = new ValidationResult();\n                        validate(child, propertySchema, propertyValidationResult, matchingSchemas);\n                        validationResult.mergePropertyMatch(propertyValidationResult);\n                    }\n                }\n            }\n        }\n        if (schema.patternProperties) {\n            for (var _f = 0, _g = Object.keys(schema.patternProperties); _f < _g.length; _f++) {\n                var propertyPattern = _g[_f];\n                var regex = new RegExp(propertyPattern);\n                for (var _h = 0, _j = unprocessedProperties.slice(0); _h < _j.length; _h++) {\n                    var propertyName = _j[_h];\n                    if (regex.test(propertyName)) {\n                        propertyProcessed(propertyName);\n                        var child = seenKeys[propertyName];\n                        if (child) {\n                            var propertySchema = schema.patternProperties[propertyPattern];\n                            if (isBoolean(propertySchema)) {\n                                if (!propertySchema) {\n                                    var propertyNode = child.parent;\n                                    validationResult.problems.push({\n                                        location: { offset: propertyNode.keyNode.offset, length: propertyNode.keyNode.length },\n                                        severity: DiagnosticSeverity.Warning,\n                                        message: schema.errorMessage || localize('DisallowedExtraPropWarning', 'Property {0} is not allowed.', propertyName)\n                                    });\n                                }\n                                else {\n                                    validationResult.propertiesMatches++;\n                                    validationResult.propertiesValueMatches++;\n                                }\n                            }\n                            else {\n                                var propertyValidationResult = new ValidationResult();\n                                validate(child, propertySchema, propertyValidationResult, matchingSchemas);\n                                validationResult.mergePropertyMatch(propertyValidationResult);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof schema.additionalProperties === 'object') {\n            for (var _k = 0, unprocessedProperties_1 = unprocessedProperties; _k < unprocessedProperties_1.length; _k++) {\n                var propertyName = unprocessedProperties_1[_k];\n                var child = seenKeys[propertyName];\n                if (child) {\n                    var propertyValidationResult = new ValidationResult();\n                    validate(child, schema.additionalProperties, propertyValidationResult, matchingSchemas);\n                    validationResult.mergePropertyMatch(propertyValidationResult);\n                }\n            }\n        }\n        else if (schema.additionalProperties === false) {\n            if (unprocessedProperties.length > 0) {\n                for (var _l = 0, unprocessedProperties_2 = unprocessedProperties; _l < unprocessedProperties_2.length; _l++) {\n                    var propertyName = unprocessedProperties_2[_l];\n                    var child = seenKeys[propertyName];\n                    if (child) {\n                        var propertyNode = child.parent;\n                        validationResult.problems.push({\n                            location: { offset: propertyNode.keyNode.offset, length: propertyNode.keyNode.length },\n                            severity: DiagnosticSeverity.Warning,\n                            message: schema.errorMessage || localize('DisallowedExtraPropWarning', 'Property {0} is not allowed.', propertyName)\n                        });\n                    }\n                }\n            }\n        }\n        if (isNumber(schema.maxProperties)) {\n            if (node.properties.length > schema.maxProperties) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: localize('MaxPropWarning', 'Object has more properties than limit of {0}.', schema.maxProperties)\n                });\n            }\n        }\n        if (isNumber(schema.minProperties)) {\n            if (node.properties.length < schema.minProperties) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: localize('MinPropWarning', 'Object has fewer properties than the required number of {0}', schema.minProperties)\n                });\n            }\n        }\n        if (schema.dependencies) {\n            for (var _m = 0, _o = Object.keys(schema.dependencies); _m < _o.length; _m++) {\n                var key = _o[_m];\n                var prop = seenKeys[key];\n                if (prop) {\n                    var propertyDep = schema.dependencies[key];\n                    if (Array.isArray(propertyDep)) {\n                        for (var _p = 0, propertyDep_1 = propertyDep; _p < propertyDep_1.length; _p++) {\n                            var requiredProp = propertyDep_1[_p];\n                            if (!seenKeys[requiredProp]) {\n                                validationResult.problems.push({\n                                    location: { offset: node.offset, length: node.length },\n                                    severity: DiagnosticSeverity.Warning,\n                                    message: localize('RequiredDependentPropWarning', 'Object is missing property {0} required by property {1}.', requiredProp, key)\n                                });\n                            }\n                            else {\n                                validationResult.propertiesValueMatches++;\n                            }\n                        }\n                    }\n                    else {\n                        var propertySchema = asSchema(propertyDep);\n                        if (propertySchema) {\n                            var propertyValidationResult = new ValidationResult();\n                            validate(node, propertySchema, propertyValidationResult, matchingSchemas);\n                            validationResult.mergePropertyMatch(propertyValidationResult);\n                        }\n                    }\n                }\n            }\n        }\n        var propertyNames = asSchema(schema.propertyNames);\n        if (propertyNames) {\n            for (var _q = 0, _r = node.properties; _q < _r.length; _q++) {\n                var f = _r[_q];\n                var key = f.keyNode;\n                if (key) {\n                    validate(key, propertyNames, validationResult, NoOpSchemaCollector.instance);\n                }\n            }\n        }\n    }\n}\nexport function parse(textDocument, config) {\n    var problems = [];\n    var lastProblemOffset = -1;\n    var text = textDocument.getText();\n    var scanner = Json.createScanner(text, false);\n    var commentRanges = config && config.collectComments ? [] : void 0;\n    function _scanNext() {\n        while (true) {\n            var token_1 = scanner.scan();\n            _checkScanError();\n            switch (token_1) {\n                case 12 /* LineCommentTrivia */:\n                case 13 /* BlockCommentTrivia */:\n                    if (Array.isArray(commentRanges)) {\n                        commentRanges.push(Range.create(textDocument.positionAt(scanner.getTokenOffset()), textDocument.positionAt(scanner.getTokenOffset() + scanner.getTokenLength())));\n                    }\n                    break;\n                case 15 /* Trivia */:\n                case 14 /* LineBreakTrivia */:\n                    break;\n                default:\n                    return token_1;\n            }\n        }\n    }\n    function _accept(token) {\n        if (scanner.getToken() === token) {\n            _scanNext();\n            return true;\n        }\n        return false;\n    }\n    function _errorAtRange(message, code, startOffset, endOffset, severity) {\n        if (severity === void 0) { severity = DiagnosticSeverity.Error; }\n        if (problems.length === 0 || startOffset !== lastProblemOffset) {\n            var range = Range.create(textDocument.positionAt(startOffset), textDocument.positionAt(endOffset));\n            problems.push(Diagnostic.create(range, message, severity, code, textDocument.languageId));\n            lastProblemOffset = startOffset;\n        }\n    }\n    function _error(message, code, node, skipUntilAfter, skipUntil) {\n        if (node === void 0) { node = null; }\n        if (skipUntilAfter === void 0) { skipUntilAfter = []; }\n        if (skipUntil === void 0) { skipUntil = []; }\n        var start = scanner.getTokenOffset();\n        var end = scanner.getTokenOffset() + scanner.getTokenLength();\n        if (start === end && start > 0) {\n            start--;\n            while (start > 0 && /\\s/.test(text.charAt(start))) {\n                start--;\n            }\n            end = start + 1;\n        }\n        _errorAtRange(message, code, start, end);\n        if (node) {\n            _finalize(node, false);\n        }\n        if (skipUntilAfter.length + skipUntil.length > 0) {\n            var token_2 = scanner.getToken();\n            while (token_2 !== 17 /* EOF */) {\n                if (skipUntilAfter.indexOf(token_2) !== -1) {\n                    _scanNext();\n                    break;\n                }\n                else if (skipUntil.indexOf(token_2) !== -1) {\n                    break;\n                }\n                token_2 = _scanNext();\n            }\n        }\n        return node;\n    }\n    function _checkScanError() {\n        switch (scanner.getTokenError()) {\n            case 4 /* InvalidUnicode */:\n                _error(localize('InvalidUnicode', 'Invalid unicode sequence in string.'), ErrorCode.InvalidUnicode);\n                return true;\n            case 5 /* InvalidEscapeCharacter */:\n                _error(localize('InvalidEscapeCharacter', 'Invalid escape character in string.'), ErrorCode.InvalidEscapeCharacter);\n                return true;\n            case 3 /* UnexpectedEndOfNumber */:\n                _error(localize('UnexpectedEndOfNumber', 'Unexpected end of number.'), ErrorCode.UnexpectedEndOfNumber);\n                return true;\n            case 1 /* UnexpectedEndOfComment */:\n                _error(localize('UnexpectedEndOfComment', 'Unexpected end of comment.'), ErrorCode.UnexpectedEndOfComment);\n                return true;\n            case 2 /* UnexpectedEndOfString */:\n                _error(localize('UnexpectedEndOfString', 'Unexpected end of string.'), ErrorCode.UnexpectedEndOfString);\n                return true;\n            case 6 /* InvalidCharacter */:\n                _error(localize('InvalidCharacter', 'Invalid characters in string. Control characters must be escaped.'), ErrorCode.InvalidCharacter);\n                return true;\n        }\n        return false;\n    }\n    function _finalize(node, scanNext) {\n        node.length = scanner.getTokenOffset() + scanner.getTokenLength() - node.offset;\n        if (scanNext) {\n            _scanNext();\n        }\n        return node;\n    }\n    function _parseArray(parent) {\n        if (scanner.getToken() !== 3 /* OpenBracketToken */) {\n            return null;\n        }\n        var node = new ArrayASTNodeImpl(parent, scanner.getTokenOffset());\n        _scanNext(); // consume OpenBracketToken\n        var count = 0;\n        var needsComma = false;\n        while (scanner.getToken() !== 4 /* CloseBracketToken */ && scanner.getToken() !== 17 /* EOF */) {\n            if (scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    _error(localize('ValueExpected', 'Value expected'), ErrorCode.ValueExpected);\n                }\n                var commaOffset = scanner.getTokenOffset();\n                _scanNext(); // consume comma\n                if (scanner.getToken() === 4 /* CloseBracketToken */) {\n                    if (needsComma) {\n                        _errorAtRange(localize('TrailingComma', 'Trailing comma'), ErrorCode.TrailingComma, commaOffset, commaOffset + 1);\n                    }\n                    continue;\n                }\n            }\n            else if (needsComma) {\n                _error(localize('ExpectedComma', 'Expected comma'), ErrorCode.CommaExpected);\n            }\n            var item = _parseValue(node, count++);\n            if (!item) {\n                _error(localize('PropertyExpected', 'Value expected'), ErrorCode.ValueExpected, null, [], [4 /* CloseBracketToken */, 5 /* CommaToken */]);\n            }\n            else {\n                node.items.push(item);\n            }\n            needsComma = true;\n        }\n        if (scanner.getToken() !== 4 /* CloseBracketToken */) {\n            return _error(localize('ExpectedCloseBracket', 'Expected comma or closing bracket'), ErrorCode.CommaOrCloseBacketExpected, node);\n        }\n        return _finalize(node, true);\n    }\n    function _parseProperty(parent, keysSeen) {\n        var node = new PropertyASTNodeImpl(parent, scanner.getTokenOffset());\n        var key = _parseString(node);\n        if (!key) {\n            if (scanner.getToken() === 16 /* Unknown */) {\n                // give a more helpful error message\n                _error(localize('DoubleQuotesExpected', 'Property keys must be doublequoted'), ErrorCode.Undefined);\n                var keyNode = new StringASTNodeImpl(node, scanner.getTokenOffset(), scanner.getTokenLength());\n                keyNode.value = scanner.getTokenValue();\n                key = keyNode;\n                _scanNext(); // consume Unknown\n            }\n            else {\n                return null;\n            }\n        }\n        node.keyNode = key;\n        var seen = keysSeen[key.value];\n        if (seen) {\n            _errorAtRange(localize('DuplicateKeyWarning', \"Duplicate object key\"), ErrorCode.DuplicateKey, node.keyNode.offset, node.keyNode.offset + node.keyNode.length, DiagnosticSeverity.Warning);\n            if (typeof seen === 'object') {\n                _errorAtRange(localize('DuplicateKeyWarning', \"Duplicate object key\"), ErrorCode.DuplicateKey, seen.keyNode.offset, seen.keyNode.offset + seen.keyNode.length, DiagnosticSeverity.Warning);\n            }\n            keysSeen[key.value] = true; // if the same key is duplicate again, avoid duplicate error reporting\n        }\n        else {\n            keysSeen[key.value] = node;\n        }\n        if (scanner.getToken() === 6 /* ColonToken */) {\n            node.colonOffset = scanner.getTokenOffset();\n            _scanNext(); // consume ColonToken\n        }\n        else {\n            _error(localize('ColonExpected', 'Colon expected'), ErrorCode.ColonExpected);\n            if (scanner.getToken() === 10 /* StringLiteral */ && textDocument.positionAt(key.offset + key.length).line < textDocument.positionAt(scanner.getTokenOffset()).line) {\n                node.length = key.length;\n                return node;\n            }\n        }\n        var value = _parseValue(node, key.value);\n        if (!value) {\n            return _error(localize('ValueExpected', 'Value expected'), ErrorCode.ValueExpected, node, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n        }\n        node.valueNode = value;\n        node.length = value.offset + value.length - node.offset;\n        return node;\n    }\n    function _parseObject(parent) {\n        if (scanner.getToken() !== 1 /* OpenBraceToken */) {\n            return null;\n        }\n        var node = new ObjectASTNodeImpl(parent, scanner.getTokenOffset());\n        var keysSeen = Object.create(null);\n        _scanNext(); // consume OpenBraceToken\n        var needsComma = false;\n        while (scanner.getToken() !== 2 /* CloseBraceToken */ && scanner.getToken() !== 17 /* EOF */) {\n            if (scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    _error(localize('PropertyExpected', 'Property expected'), ErrorCode.PropertyExpected);\n                }\n                var commaOffset = scanner.getTokenOffset();\n                _scanNext(); // consume comma\n                if (scanner.getToken() === 2 /* CloseBraceToken */) {\n                    if (needsComma) {\n                        _errorAtRange(localize('TrailingComma', 'Trailing comma'), ErrorCode.TrailingComma, commaOffset, commaOffset + 1);\n                    }\n                    continue;\n                }\n            }\n            else if (needsComma) {\n                _error(localize('ExpectedComma', 'Expected comma'), ErrorCode.CommaExpected);\n            }\n            var property = _parseProperty(node, keysSeen);\n            if (!property) {\n                _error(localize('PropertyExpected', 'Property expected'), ErrorCode.PropertyExpected, null, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n            else {\n                node.properties.push(property);\n            }\n            needsComma = true;\n        }\n        if (scanner.getToken() !== 2 /* CloseBraceToken */) {\n            return _error(localize('ExpectedCloseBrace', 'Expected comma or closing brace'), ErrorCode.CommaOrCloseBraceExpected, node);\n        }\n        return _finalize(node, true);\n    }\n    function _parseString(parent) {\n        if (scanner.getToken() !== 10 /* StringLiteral */) {\n            return null;\n        }\n        var node = new StringASTNodeImpl(parent, scanner.getTokenOffset());\n        node.value = scanner.getTokenValue();\n        return _finalize(node, true);\n    }\n    function _parseNumber(parent) {\n        if (scanner.getToken() !== 11 /* NumericLiteral */) {\n            return null;\n        }\n        var node = new NumberASTNodeImpl(parent, scanner.getTokenOffset());\n        if (scanner.getTokenError() === 0 /* None */) {\n            var tokenValue = scanner.getTokenValue();\n            try {\n                var numberValue = JSON.parse(tokenValue);\n                if (!isNumber(numberValue)) {\n                    return _error(localize('InvalidNumberFormat', 'Invalid number format.'), ErrorCode.Undefined, node);\n                }\n                node.value = numberValue;\n            }\n            catch (e) {\n                return _error(localize('InvalidNumberFormat', 'Invalid number format.'), ErrorCode.Undefined, node);\n            }\n            node.isInteger = tokenValue.indexOf('.') === -1;\n        }\n        return _finalize(node, true);\n    }\n    function _parseLiteral(parent) {\n        var node;\n        switch (scanner.getToken()) {\n            case 7 /* NullKeyword */:\n                return _finalize(new NullASTNodeImpl(parent, scanner.getTokenOffset()), true);\n            case 8 /* TrueKeyword */:\n                return _finalize(new BooleanASTNodeImpl(parent, true, scanner.getTokenOffset()), true);\n            case 9 /* FalseKeyword */:\n                return _finalize(new BooleanASTNodeImpl(parent, false, scanner.getTokenOffset()), true);\n            default:\n                return null;\n        }\n    }\n    function _parseValue(parent, name) {\n        return _parseArray(parent) || _parseObject(parent) || _parseString(parent) || _parseNumber(parent) || _parseLiteral(parent);\n    }\n    var _root = null;\n    var token = _scanNext();\n    if (token !== 17 /* EOF */) {\n        _root = _parseValue(null, null);\n        if (!_root) {\n            _error(localize('Invalid symbol', 'Expected a JSON object, array or literal.'), ErrorCode.Undefined);\n        }\n        else if (scanner.getToken() !== 17 /* EOF */) {\n            _error(localize('End of file expected', 'End of file expected.'), ErrorCode.Undefined);\n        }\n    }\n    return new JSONDocument(_root, problems, commentRanges);\n}\n"]},"metadata":{},"sourceType":"module"}