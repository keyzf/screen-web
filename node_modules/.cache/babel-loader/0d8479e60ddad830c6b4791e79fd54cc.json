{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { AbstractTree } from './abstractTree.js';\nimport { ObjectTreeModel } from './objectTreeModel.js';\n\nvar DataTree =\n/** @class */\nfunction (_super) {\n  __extends(DataTree, _super);\n\n  function DataTree(user, container, delegate, renderers, dataSource, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var _this = _super.call(this, user, container, delegate, renderers, options) || this;\n\n    _this.user = user;\n    _this.dataSource = dataSource;\n    _this.identityProvider = options.identityProvider;\n    return _this;\n  }\n\n  DataTree.prototype.createModel = function (user, view, options) {\n    return new ObjectTreeModel(user, view, options);\n  };\n\n  return DataTree;\n}(AbstractTree);\n\nexport { DataTree };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/base/browser/ui/tree/dataTree.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","AbstractTree","ObjectTreeModel","DataTree","_super","user","container","delegate","renderers","dataSource","options","_this","call","identityProvider","createModel","view"],"mappings":"AAAA;;;;AAIA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;AACrD,MAAIC,aAAa,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChCF,IAAAA,aAAa,GAAGG,MAAM,CAACC,cAAP,IACX;AAAEC,MAAAA,SAAS,EAAE;AAAb,iBAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;AAAED,MAAAA,CAAC,CAACI,SAAF,GAAcH,CAAd;AAAkB,KAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAK,IAAIK,CAAT,IAAcL,CAAd,EAAiB,IAAIA,CAAC,CAACM,cAAF,CAAiBD,CAAjB,CAAJ,EAAyBN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AAAc,KAF9E;;AAGA,WAAOP,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;AACH,GALD;;AAMA,SAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AACnBF,IAAAA,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;AACA,aAASO,EAAT,GAAc;AAAE,WAAKC,WAAL,GAAmBT,CAAnB;AAAuB;;AACvCA,IAAAA,CAAC,CAACU,SAAF,GAAcT,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACS,MAAP,CAAcV,CAAd,CAAb,IAAiCO,EAAE,CAACE,SAAH,GAAeT,CAAC,CAACS,SAAjB,EAA4B,IAAIF,EAAJ,EAA7D,CAAd;AACH,GAJD;AAKH,CAZ2C,EAA5C;;AAaA,SAASI,YAAT,QAA6B,mBAA7B;AACA,SAASC,eAAT,QAAgC,sBAAhC;;AACA,IAAIC,QAAQ;AAAG;AAAe,UAAUC,MAAV,EAAkB;AAC5CjB,EAAAA,SAAS,CAACgB,QAAD,EAAWC,MAAX,CAAT;;AACA,WAASD,QAAT,CAAkBE,IAAlB,EAAwBC,SAAxB,EAAmCC,QAAnC,EAA6CC,SAA7C,EAAwDC,UAAxD,EAAoEC,OAApE,EAA6E;AACzE,QAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AAAEA,MAAAA,OAAO,GAAG,EAAV;AAAe;;AACzC,QAAIC,KAAK,GAAGP,MAAM,CAACQ,IAAP,CAAY,IAAZ,EAAkBP,IAAlB,EAAwBC,SAAxB,EAAmCC,QAAnC,EAA6CC,SAA7C,EAAwDE,OAAxD,KAAoE,IAAhF;;AACAC,IAAAA,KAAK,CAACN,IAAN,GAAaA,IAAb;AACAM,IAAAA,KAAK,CAACF,UAAN,GAAmBA,UAAnB;AACAE,IAAAA,KAAK,CAACE,gBAAN,GAAyBH,OAAO,CAACG,gBAAjC;AACA,WAAOF,KAAP;AACH;;AACDR,EAAAA,QAAQ,CAACJ,SAAT,CAAmBe,WAAnB,GAAiC,UAAUT,IAAV,EAAgBU,IAAhB,EAAsBL,OAAtB,EAA+B;AAC5D,WAAO,IAAIR,eAAJ,CAAoBG,IAApB,EAA0BU,IAA1B,EAAgCL,OAAhC,CAAP;AACH,GAFD;;AAGA,SAAOP,QAAP;AACH,CAd6B,CAc5BF,YAd4B,CAA9B;;AAeA,SAASE,QAAT","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { AbstractTree } from './abstractTree.js';\r\nimport { ObjectTreeModel } from './objectTreeModel.js';\r\nvar DataTree = /** @class */ (function (_super) {\r\n    __extends(DataTree, _super);\r\n    function DataTree(user, container, delegate, renderers, dataSource, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var _this = _super.call(this, user, container, delegate, renderers, options) || this;\r\n        _this.user = user;\r\n        _this.dataSource = dataSource;\r\n        _this.identityProvider = options.identityProvider;\r\n        return _this;\r\n    }\r\n    DataTree.prototype.createModel = function (user, view, options) {\r\n        return new ObjectTreeModel(user, view, options);\r\n    };\r\n    return DataTree;\r\n}(AbstractTree));\r\nexport { DataTree };\r\n"]},"metadata":{},"sourceType":"module"}