{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\n\n/**\r\n * An event describing that a model has been reset to a new value.\r\n * @internal\r\n */\nvar ModelRawFlush =\n/** @class */\nfunction () {\n  function ModelRawFlush() {\n    this.changeType = 1\n    /* Flush */\n    ;\n  }\n\n  return ModelRawFlush;\n}();\n\nexport { ModelRawFlush };\n/**\r\n * An event describing that a line has changed in a model.\r\n * @internal\r\n */\n\nvar ModelRawLineChanged =\n/** @class */\nfunction () {\n  function ModelRawLineChanged(lineNumber, detail) {\n    this.changeType = 2\n    /* LineChanged */\n    ;\n    this.lineNumber = lineNumber;\n    this.detail = detail;\n  }\n\n  return ModelRawLineChanged;\n}();\n\nexport { ModelRawLineChanged };\n/**\r\n * An event describing that line(s) have been deleted in a model.\r\n * @internal\r\n */\n\nvar ModelRawLinesDeleted =\n/** @class */\nfunction () {\n  function ModelRawLinesDeleted(fromLineNumber, toLineNumber) {\n    this.changeType = 3\n    /* LinesDeleted */\n    ;\n    this.fromLineNumber = fromLineNumber;\n    this.toLineNumber = toLineNumber;\n  }\n\n  return ModelRawLinesDeleted;\n}();\n\nexport { ModelRawLinesDeleted };\n/**\r\n * An event describing that line(s) have been inserted in a model.\r\n * @internal\r\n */\n\nvar ModelRawLinesInserted =\n/** @class */\nfunction () {\n  function ModelRawLinesInserted(fromLineNumber, toLineNumber, detail) {\n    this.changeType = 4\n    /* LinesInserted */\n    ;\n    this.fromLineNumber = fromLineNumber;\n    this.toLineNumber = toLineNumber;\n    this.detail = detail;\n  }\n\n  return ModelRawLinesInserted;\n}();\n\nexport { ModelRawLinesInserted };\n/**\r\n * An event describing that a model has had its EOL changed.\r\n * @internal\r\n */\n\nvar ModelRawEOLChanged =\n/** @class */\nfunction () {\n  function ModelRawEOLChanged() {\n    this.changeType = 5\n    /* EOLChanged */\n    ;\n  }\n\n  return ModelRawEOLChanged;\n}();\n\nexport { ModelRawEOLChanged };\n/**\r\n * An event describing a change in the text of a model.\r\n * @internal\r\n */\n\nvar ModelRawContentChangedEvent =\n/** @class */\nfunction () {\n  function ModelRawContentChangedEvent(changes, versionId, isUndoing, isRedoing) {\n    this.changes = changes;\n    this.versionId = versionId;\n    this.isUndoing = isUndoing;\n    this.isRedoing = isRedoing;\n  }\n\n  ModelRawContentChangedEvent.prototype.containsEvent = function (type) {\n    for (var i = 0, len = this.changes.length; i < len; i++) {\n      var change = this.changes[i];\n\n      if (change.changeType === type) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  ModelRawContentChangedEvent.merge = function (a, b) {\n    var changes = [].concat(a.changes).concat(b.changes);\n    var versionId = b.versionId;\n    var isUndoing = a.isUndoing || b.isUndoing;\n    var isRedoing = a.isRedoing || b.isRedoing;\n    return new ModelRawContentChangedEvent(changes, versionId, isUndoing, isRedoing);\n  };\n\n  return ModelRawContentChangedEvent;\n}();\n\nexport { ModelRawContentChangedEvent };\n/**\r\n * @internal\r\n */\n\nvar InternalModelContentChangeEvent =\n/** @class */\nfunction () {\n  function InternalModelContentChangeEvent(rawContentChangedEvent, contentChangedEvent) {\n    this.rawContentChangedEvent = rawContentChangedEvent;\n    this.contentChangedEvent = contentChangedEvent;\n  }\n\n  InternalModelContentChangeEvent.prototype.merge = function (other) {\n    var rawContentChangedEvent = ModelRawContentChangedEvent.merge(this.rawContentChangedEvent, other.rawContentChangedEvent);\n\n    var contentChangedEvent = InternalModelContentChangeEvent._mergeChangeEvents(this.contentChangedEvent, other.contentChangedEvent);\n\n    return new InternalModelContentChangeEvent(rawContentChangedEvent, contentChangedEvent);\n  };\n\n  InternalModelContentChangeEvent._mergeChangeEvents = function (a, b) {\n    var changes = [].concat(a.changes).concat(b.changes);\n    var eol = b.eol;\n    var versionId = b.versionId;\n    var isUndoing = a.isUndoing || b.isUndoing;\n    var isRedoing = a.isRedoing || b.isRedoing;\n    var isFlush = a.isFlush || b.isFlush;\n    return {\n      changes: changes,\n      eol: eol,\n      versionId: versionId,\n      isUndoing: isUndoing,\n      isRedoing: isRedoing,\n      isFlush: isFlush\n    };\n  };\n\n  return InternalModelContentChangeEvent;\n}();\n\nexport { InternalModelContentChangeEvent };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/common/model/textModelEvents.js"],"names":["ModelRawFlush","changeType","ModelRawLineChanged","lineNumber","detail","ModelRawLinesDeleted","fromLineNumber","toLineNumber","ModelRawLinesInserted","ModelRawEOLChanged","ModelRawContentChangedEvent","changes","versionId","isUndoing","isRedoing","prototype","containsEvent","type","i","len","length","change","merge","a","b","concat","InternalModelContentChangeEvent","rawContentChangedEvent","contentChangedEvent","other","_mergeChangeEvents","eol","isFlush"],"mappings":"AAAA;;;;;AAIA;;;;AAIA,IAAIA,aAAa;AAAG;AAAe,YAAY;AAC3C,WAASA,aAAT,GAAyB;AACrB,SAAKC,UAAL,GAAkB;AAAE;AAApB;AACH;;AACD,SAAOD,aAAP;AACH,CALkC,EAAnC;;AAMA,SAASA,aAAT;AACA;;;;;AAIA,IAAIE,mBAAmB;AAAG;AAAe,YAAY;AACjD,WAASA,mBAAT,CAA6BC,UAA7B,EAAyCC,MAAzC,EAAiD;AAC7C,SAAKH,UAAL,GAAkB;AAAE;AAApB;AACA,SAAKE,UAAL,GAAkBA,UAAlB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACH;;AACD,SAAOF,mBAAP;AACH,CAPwC,EAAzC;;AAQA,SAASA,mBAAT;AACA;;;;;AAIA,IAAIG,oBAAoB;AAAG;AAAe,YAAY;AAClD,WAASA,oBAAT,CAA8BC,cAA9B,EAA8CC,YAA9C,EAA4D;AACxD,SAAKN,UAAL,GAAkB;AAAE;AAApB;AACA,SAAKK,cAAL,GAAsBA,cAAtB;AACA,SAAKC,YAAL,GAAoBA,YAApB;AACH;;AACD,SAAOF,oBAAP;AACH,CAPyC,EAA1C;;AAQA,SAASA,oBAAT;AACA;;;;;AAIA,IAAIG,qBAAqB;AAAG;AAAe,YAAY;AACnD,WAASA,qBAAT,CAA+BF,cAA/B,EAA+CC,YAA/C,EAA6DH,MAA7D,EAAqE;AACjE,SAAKH,UAAL,GAAkB;AAAE;AAApB;AACA,SAAKK,cAAL,GAAsBA,cAAtB;AACA,SAAKC,YAAL,GAAoBA,YAApB;AACA,SAAKH,MAAL,GAAcA,MAAd;AACH;;AACD,SAAOI,qBAAP;AACH,CAR0C,EAA3C;;AASA,SAASA,qBAAT;AACA;;;;;AAIA,IAAIC,kBAAkB;AAAG;AAAe,YAAY;AAChD,WAASA,kBAAT,GAA8B;AAC1B,SAAKR,UAAL,GAAkB;AAAE;AAApB;AACH;;AACD,SAAOQ,kBAAP;AACH,CALuC,EAAxC;;AAMA,SAASA,kBAAT;AACA;;;;;AAIA,IAAIC,2BAA2B;AAAG;AAAe,YAAY;AACzD,WAASA,2BAAT,CAAqCC,OAArC,EAA8CC,SAA9C,EAAyDC,SAAzD,EAAoEC,SAApE,EAA+E;AAC3E,SAAKH,OAAL,GAAeA,OAAf;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACH;;AACDJ,EAAAA,2BAA2B,CAACK,SAA5B,CAAsCC,aAAtC,GAAsD,UAAUC,IAAV,EAAgB;AAClE,SAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAG,KAAKR,OAAL,CAAaS,MAAnC,EAA2CF,CAAC,GAAGC,GAA/C,EAAoDD,CAAC,EAArD,EAAyD;AACrD,UAAIG,MAAM,GAAG,KAAKV,OAAL,CAAaO,CAAb,CAAb;;AACA,UAAIG,MAAM,CAACpB,UAAP,KAAsBgB,IAA1B,EAAgC;AAC5B,eAAO,IAAP;AACH;AACJ;;AACD,WAAO,KAAP;AACH,GARD;;AASAP,EAAAA,2BAA2B,CAACY,KAA5B,GAAoC,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChD,QAAIb,OAAO,GAAG,GAAGc,MAAH,CAAUF,CAAC,CAACZ,OAAZ,EAAqBc,MAArB,CAA4BD,CAAC,CAACb,OAA9B,CAAd;AACA,QAAIC,SAAS,GAAGY,CAAC,CAACZ,SAAlB;AACA,QAAIC,SAAS,GAAIU,CAAC,CAACV,SAAF,IAAeW,CAAC,CAACX,SAAlC;AACA,QAAIC,SAAS,GAAIS,CAAC,CAACT,SAAF,IAAeU,CAAC,CAACV,SAAlC;AACA,WAAO,IAAIJ,2BAAJ,CAAgCC,OAAhC,EAAyCC,SAAzC,EAAoDC,SAApD,EAA+DC,SAA/D,CAAP;AACH,GAND;;AAOA,SAAOJ,2BAAP;AACH,CAxBgD,EAAjD;;AAyBA,SAASA,2BAAT;AACA;;;;AAGA,IAAIgB,+BAA+B;AAAG;AAAe,YAAY;AAC7D,WAASA,+BAAT,CAAyCC,sBAAzC,EAAiEC,mBAAjE,EAAsF;AAClF,SAAKD,sBAAL,GAA8BA,sBAA9B;AACA,SAAKC,mBAAL,GAA2BA,mBAA3B;AACH;;AACDF,EAAAA,+BAA+B,CAACX,SAAhC,CAA0CO,KAA1C,GAAkD,UAAUO,KAAV,EAAiB;AAC/D,QAAIF,sBAAsB,GAAGjB,2BAA2B,CAACY,KAA5B,CAAkC,KAAKK,sBAAvC,EAA+DE,KAAK,CAACF,sBAArE,CAA7B;;AACA,QAAIC,mBAAmB,GAAGF,+BAA+B,CAACI,kBAAhC,CAAmD,KAAKF,mBAAxD,EAA6EC,KAAK,CAACD,mBAAnF,CAA1B;;AACA,WAAO,IAAIF,+BAAJ,CAAoCC,sBAApC,EAA4DC,mBAA5D,CAAP;AACH,GAJD;;AAKAF,EAAAA,+BAA+B,CAACI,kBAAhC,GAAqD,UAAUP,CAAV,EAAaC,CAAb,EAAgB;AACjE,QAAIb,OAAO,GAAG,GAAGc,MAAH,CAAUF,CAAC,CAACZ,OAAZ,EAAqBc,MAArB,CAA4BD,CAAC,CAACb,OAA9B,CAAd;AACA,QAAIoB,GAAG,GAAGP,CAAC,CAACO,GAAZ;AACA,QAAInB,SAAS,GAAGY,CAAC,CAACZ,SAAlB;AACA,QAAIC,SAAS,GAAIU,CAAC,CAACV,SAAF,IAAeW,CAAC,CAACX,SAAlC;AACA,QAAIC,SAAS,GAAIS,CAAC,CAACT,SAAF,IAAeU,CAAC,CAACV,SAAlC;AACA,QAAIkB,OAAO,GAAIT,CAAC,CAACS,OAAF,IAAaR,CAAC,CAACQ,OAA9B;AACA,WAAO;AACHrB,MAAAA,OAAO,EAAEA,OADN;AAEHoB,MAAAA,GAAG,EAAEA,GAFF;AAGHnB,MAAAA,SAAS,EAAEA,SAHR;AAIHC,MAAAA,SAAS,EAAEA,SAJR;AAKHC,MAAAA,SAAS,EAAEA,SALR;AAMHkB,MAAAA,OAAO,EAAEA;AANN,KAAP;AAQH,GAfD;;AAgBA,SAAON,+BAAP;AACH,CA3BoD,EAArD;;AA4BA,SAASA,+BAAT","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n/**\r\n * An event describing that a model has been reset to a new value.\r\n * @internal\r\n */\r\nvar ModelRawFlush = /** @class */ (function () {\r\n    function ModelRawFlush() {\r\n        this.changeType = 1 /* Flush */;\r\n    }\r\n    return ModelRawFlush;\r\n}());\r\nexport { ModelRawFlush };\r\n/**\r\n * An event describing that a line has changed in a model.\r\n * @internal\r\n */\r\nvar ModelRawLineChanged = /** @class */ (function () {\r\n    function ModelRawLineChanged(lineNumber, detail) {\r\n        this.changeType = 2 /* LineChanged */;\r\n        this.lineNumber = lineNumber;\r\n        this.detail = detail;\r\n    }\r\n    return ModelRawLineChanged;\r\n}());\r\nexport { ModelRawLineChanged };\r\n/**\r\n * An event describing that line(s) have been deleted in a model.\r\n * @internal\r\n */\r\nvar ModelRawLinesDeleted = /** @class */ (function () {\r\n    function ModelRawLinesDeleted(fromLineNumber, toLineNumber) {\r\n        this.changeType = 3 /* LinesDeleted */;\r\n        this.fromLineNumber = fromLineNumber;\r\n        this.toLineNumber = toLineNumber;\r\n    }\r\n    return ModelRawLinesDeleted;\r\n}());\r\nexport { ModelRawLinesDeleted };\r\n/**\r\n * An event describing that line(s) have been inserted in a model.\r\n * @internal\r\n */\r\nvar ModelRawLinesInserted = /** @class */ (function () {\r\n    function ModelRawLinesInserted(fromLineNumber, toLineNumber, detail) {\r\n        this.changeType = 4 /* LinesInserted */;\r\n        this.fromLineNumber = fromLineNumber;\r\n        this.toLineNumber = toLineNumber;\r\n        this.detail = detail;\r\n    }\r\n    return ModelRawLinesInserted;\r\n}());\r\nexport { ModelRawLinesInserted };\r\n/**\r\n * An event describing that a model has had its EOL changed.\r\n * @internal\r\n */\r\nvar ModelRawEOLChanged = /** @class */ (function () {\r\n    function ModelRawEOLChanged() {\r\n        this.changeType = 5 /* EOLChanged */;\r\n    }\r\n    return ModelRawEOLChanged;\r\n}());\r\nexport { ModelRawEOLChanged };\r\n/**\r\n * An event describing a change in the text of a model.\r\n * @internal\r\n */\r\nvar ModelRawContentChangedEvent = /** @class */ (function () {\r\n    function ModelRawContentChangedEvent(changes, versionId, isUndoing, isRedoing) {\r\n        this.changes = changes;\r\n        this.versionId = versionId;\r\n        this.isUndoing = isUndoing;\r\n        this.isRedoing = isRedoing;\r\n    }\r\n    ModelRawContentChangedEvent.prototype.containsEvent = function (type) {\r\n        for (var i = 0, len = this.changes.length; i < len; i++) {\r\n            var change = this.changes[i];\r\n            if (change.changeType === type) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    ModelRawContentChangedEvent.merge = function (a, b) {\r\n        var changes = [].concat(a.changes).concat(b.changes);\r\n        var versionId = b.versionId;\r\n        var isUndoing = (a.isUndoing || b.isUndoing);\r\n        var isRedoing = (a.isRedoing || b.isRedoing);\r\n        return new ModelRawContentChangedEvent(changes, versionId, isUndoing, isRedoing);\r\n    };\r\n    return ModelRawContentChangedEvent;\r\n}());\r\nexport { ModelRawContentChangedEvent };\r\n/**\r\n * @internal\r\n */\r\nvar InternalModelContentChangeEvent = /** @class */ (function () {\r\n    function InternalModelContentChangeEvent(rawContentChangedEvent, contentChangedEvent) {\r\n        this.rawContentChangedEvent = rawContentChangedEvent;\r\n        this.contentChangedEvent = contentChangedEvent;\r\n    }\r\n    InternalModelContentChangeEvent.prototype.merge = function (other) {\r\n        var rawContentChangedEvent = ModelRawContentChangedEvent.merge(this.rawContentChangedEvent, other.rawContentChangedEvent);\r\n        var contentChangedEvent = InternalModelContentChangeEvent._mergeChangeEvents(this.contentChangedEvent, other.contentChangedEvent);\r\n        return new InternalModelContentChangeEvent(rawContentChangedEvent, contentChangedEvent);\r\n    };\r\n    InternalModelContentChangeEvent._mergeChangeEvents = function (a, b) {\r\n        var changes = [].concat(a.changes).concat(b.changes);\r\n        var eol = b.eol;\r\n        var versionId = b.versionId;\r\n        var isUndoing = (a.isUndoing || b.isUndoing);\r\n        var isRedoing = (a.isRedoing || b.isRedoing);\r\n        var isFlush = (a.isFlush || b.isFlush);\r\n        return {\r\n            changes: changes,\r\n            eol: eol,\r\n            versionId: versionId,\r\n            isUndoing: isUndoing,\r\n            isRedoing: isRedoing,\r\n            isFlush: isFlush\r\n        };\r\n    };\r\n    return InternalModelContentChangeEvent;\r\n}());\r\nexport { InternalModelContentChangeEvent };\r\n"]},"metadata":{},"sourceType":"module"}