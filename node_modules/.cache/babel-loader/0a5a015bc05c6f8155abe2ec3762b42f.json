{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as assert from '../../../base/common/assert.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport * as objects from '../../../base/common/objects.js';\nimport { Range } from '../../common/core/range.js';\nvar defaultOptions = {\n  followsCaret: true,\n  ignoreCharChanges: true,\n  alwaysRevealFirst: true\n};\n/**\r\n * Create a new diff navigator for the provided diff editor.\r\n */\n\nvar DiffNavigator =\n/** @class */\nfunction (_super) {\n  __extends(DiffNavigator, _super);\n\n  function DiffNavigator(editor, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this._onDidUpdate = _this._register(new Emitter());\n    _this._editor = editor;\n    _this._options = objects.mixin(options, defaultOptions, false);\n    _this.disposed = false;\n    _this.nextIdx = -1;\n    _this.ranges = [];\n    _this.ignoreSelectionChange = false;\n    _this.revealFirst = Boolean(_this._options.alwaysRevealFirst); // hook up to diff editor for diff, disposal, and caret move\n\n    _this._register(_this._editor.onDidDispose(function () {\n      return _this.dispose();\n    }));\n\n    _this._register(_this._editor.onDidUpdateDiff(function () {\n      return _this._onDiffUpdated();\n    }));\n\n    if (_this._options.followsCaret) {\n      _this._register(_this._editor.getModifiedEditor().onDidChangeCursorPosition(function (e) {\n        if (_this.ignoreSelectionChange) {\n          return;\n        }\n\n        _this.nextIdx = -1;\n      }));\n    }\n\n    if (_this._options.alwaysRevealFirst) {\n      _this._register(_this._editor.getModifiedEditor().onDidChangeModel(function (e) {\n        _this.revealFirst = true;\n      }));\n    } // init things\n\n\n    _this._init();\n\n    return _this;\n  }\n\n  DiffNavigator.prototype._init = function () {\n    var changes = this._editor.getLineChanges();\n\n    if (!changes) {\n      return;\n    }\n  };\n\n  DiffNavigator.prototype._onDiffUpdated = function () {\n    this._init();\n\n    this._compute(this._editor.getLineChanges());\n\n    if (this.revealFirst) {\n      // Only reveal first on first non-null changes\n      if (this._editor.getLineChanges() !== null) {\n        this.revealFirst = false;\n        this.nextIdx = -1;\n        this.next(1\n        /* Immediate */\n        );\n      }\n    }\n  };\n\n  DiffNavigator.prototype._compute = function (lineChanges) {\n    var _this = this; // new ranges\n\n\n    this.ranges = [];\n\n    if (lineChanges) {\n      // create ranges from changes\n      lineChanges.forEach(function (lineChange) {\n        if (!_this._options.ignoreCharChanges && lineChange.charChanges) {\n          lineChange.charChanges.forEach(function (charChange) {\n            _this.ranges.push({\n              rhs: true,\n              range: new Range(charChange.modifiedStartLineNumber, charChange.modifiedStartColumn, charChange.modifiedEndLineNumber, charChange.modifiedEndColumn)\n            });\n          });\n        } else {\n          _this.ranges.push({\n            rhs: true,\n            range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedStartLineNumber, 1)\n          });\n        }\n      });\n    } // sort\n\n\n    this.ranges.sort(function (left, right) {\n      if (left.range.getStartPosition().isBeforeOrEqual(right.range.getStartPosition())) {\n        return -1;\n      } else if (right.range.getStartPosition().isBeforeOrEqual(left.range.getStartPosition())) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n\n    this._onDidUpdate.fire(this);\n  };\n\n  DiffNavigator.prototype._initIdx = function (fwd) {\n    var found = false;\n\n    var position = this._editor.getPosition();\n\n    if (!position) {\n      this.nextIdx = 0;\n      return;\n    }\n\n    for (var i = 0, len = this.ranges.length; i < len && !found; i++) {\n      var range = this.ranges[i].range;\n\n      if (position.isBeforeOrEqual(range.getStartPosition())) {\n        this.nextIdx = i + (fwd ? 0 : -1);\n        found = true;\n      }\n    }\n\n    if (!found) {\n      // after the last change\n      this.nextIdx = fwd ? 0 : this.ranges.length - 1;\n    }\n\n    if (this.nextIdx < 0) {\n      this.nextIdx = this.ranges.length - 1;\n    }\n  };\n\n  DiffNavigator.prototype._move = function (fwd, scrollType) {\n    assert.ok(!this.disposed, 'Illegal State - diff navigator has been disposed');\n\n    if (!this.canNavigate()) {\n      return;\n    }\n\n    if (this.nextIdx === -1) {\n      this._initIdx(fwd);\n    } else if (fwd) {\n      this.nextIdx += 1;\n\n      if (this.nextIdx >= this.ranges.length) {\n        this.nextIdx = 0;\n      }\n    } else {\n      this.nextIdx -= 1;\n\n      if (this.nextIdx < 0) {\n        this.nextIdx = this.ranges.length - 1;\n      }\n    }\n\n    var info = this.ranges[this.nextIdx];\n    this.ignoreSelectionChange = true;\n\n    try {\n      var pos = info.range.getStartPosition();\n\n      this._editor.setPosition(pos);\n\n      this._editor.revealPositionInCenter(pos, scrollType);\n    } finally {\n      this.ignoreSelectionChange = false;\n    }\n  };\n\n  DiffNavigator.prototype.canNavigate = function () {\n    return this.ranges && this.ranges.length > 0;\n  };\n\n  DiffNavigator.prototype.next = function (scrollType) {\n    if (scrollType === void 0) {\n      scrollType = 0\n      /* Smooth */\n      ;\n    }\n\n    this._move(true, scrollType);\n  };\n\n  DiffNavigator.prototype.previous = function (scrollType) {\n    if (scrollType === void 0) {\n      scrollType = 0\n      /* Smooth */\n      ;\n    }\n\n    this._move(false, scrollType);\n  };\n\n  DiffNavigator.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.ranges = [];\n    this.disposed = true;\n  };\n\n  return DiffNavigator;\n}(Disposable);\n\nexport { DiffNavigator };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/browser/widget/diffNavigator.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","assert","Emitter","Disposable","objects","Range","defaultOptions","followsCaret","ignoreCharChanges","alwaysRevealFirst","DiffNavigator","_super","editor","options","_this","call","_onDidUpdate","_register","_editor","_options","mixin","disposed","nextIdx","ranges","ignoreSelectionChange","revealFirst","Boolean","onDidDispose","dispose","onDidUpdateDiff","_onDiffUpdated","getModifiedEditor","onDidChangeCursorPosition","e","onDidChangeModel","_init","changes","getLineChanges","_compute","next","lineChanges","forEach","lineChange","charChanges","charChange","push","rhs","range","modifiedStartLineNumber","modifiedStartColumn","modifiedEndLineNumber","modifiedEndColumn","sort","left","right","getStartPosition","isBeforeOrEqual","fire","_initIdx","fwd","found","position","getPosition","i","len","length","_move","scrollType","ok","canNavigate","info","pos","setPosition","revealPositionInCenter","previous"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport * as assert from '../../../base/common/assert.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport * as objects from '../../../base/common/objects.js';\r\nimport { Range } from '../../common/core/range.js';\r\nvar defaultOptions = {\r\n    followsCaret: true,\r\n    ignoreCharChanges: true,\r\n    alwaysRevealFirst: true\r\n};\r\n/**\r\n * Create a new diff navigator for the provided diff editor.\r\n */\r\nvar DiffNavigator = /** @class */ (function (_super) {\r\n    __extends(DiffNavigator, _super);\r\n    function DiffNavigator(editor, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var _this = _super.call(this) || this;\r\n        _this._onDidUpdate = _this._register(new Emitter());\r\n        _this._editor = editor;\r\n        _this._options = objects.mixin(options, defaultOptions, false);\r\n        _this.disposed = false;\r\n        _this.nextIdx = -1;\r\n        _this.ranges = [];\r\n        _this.ignoreSelectionChange = false;\r\n        _this.revealFirst = Boolean(_this._options.alwaysRevealFirst);\r\n        // hook up to diff editor for diff, disposal, and caret move\r\n        _this._register(_this._editor.onDidDispose(function () { return _this.dispose(); }));\r\n        _this._register(_this._editor.onDidUpdateDiff(function () { return _this._onDiffUpdated(); }));\r\n        if (_this._options.followsCaret) {\r\n            _this._register(_this._editor.getModifiedEditor().onDidChangeCursorPosition(function (e) {\r\n                if (_this.ignoreSelectionChange) {\r\n                    return;\r\n                }\r\n                _this.nextIdx = -1;\r\n            }));\r\n        }\r\n        if (_this._options.alwaysRevealFirst) {\r\n            _this._register(_this._editor.getModifiedEditor().onDidChangeModel(function (e) {\r\n                _this.revealFirst = true;\r\n            }));\r\n        }\r\n        // init things\r\n        _this._init();\r\n        return _this;\r\n    }\r\n    DiffNavigator.prototype._init = function () {\r\n        var changes = this._editor.getLineChanges();\r\n        if (!changes) {\r\n            return;\r\n        }\r\n    };\r\n    DiffNavigator.prototype._onDiffUpdated = function () {\r\n        this._init();\r\n        this._compute(this._editor.getLineChanges());\r\n        if (this.revealFirst) {\r\n            // Only reveal first on first non-null changes\r\n            if (this._editor.getLineChanges() !== null) {\r\n                this.revealFirst = false;\r\n                this.nextIdx = -1;\r\n                this.next(1 /* Immediate */);\r\n            }\r\n        }\r\n    };\r\n    DiffNavigator.prototype._compute = function (lineChanges) {\r\n        var _this = this;\r\n        // new ranges\r\n        this.ranges = [];\r\n        if (lineChanges) {\r\n            // create ranges from changes\r\n            lineChanges.forEach(function (lineChange) {\r\n                if (!_this._options.ignoreCharChanges && lineChange.charChanges) {\r\n                    lineChange.charChanges.forEach(function (charChange) {\r\n                        _this.ranges.push({\r\n                            rhs: true,\r\n                            range: new Range(charChange.modifiedStartLineNumber, charChange.modifiedStartColumn, charChange.modifiedEndLineNumber, charChange.modifiedEndColumn)\r\n                        });\r\n                    });\r\n                }\r\n                else {\r\n                    _this.ranges.push({\r\n                        rhs: true,\r\n                        range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedStartLineNumber, 1)\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        // sort\r\n        this.ranges.sort(function (left, right) {\r\n            if (left.range.getStartPosition().isBeforeOrEqual(right.range.getStartPosition())) {\r\n                return -1;\r\n            }\r\n            else if (right.range.getStartPosition().isBeforeOrEqual(left.range.getStartPosition())) {\r\n                return 1;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        });\r\n        this._onDidUpdate.fire(this);\r\n    };\r\n    DiffNavigator.prototype._initIdx = function (fwd) {\r\n        var found = false;\r\n        var position = this._editor.getPosition();\r\n        if (!position) {\r\n            this.nextIdx = 0;\r\n            return;\r\n        }\r\n        for (var i = 0, len = this.ranges.length; i < len && !found; i++) {\r\n            var range = this.ranges[i].range;\r\n            if (position.isBeforeOrEqual(range.getStartPosition())) {\r\n                this.nextIdx = i + (fwd ? 0 : -1);\r\n                found = true;\r\n            }\r\n        }\r\n        if (!found) {\r\n            // after the last change\r\n            this.nextIdx = fwd ? 0 : this.ranges.length - 1;\r\n        }\r\n        if (this.nextIdx < 0) {\r\n            this.nextIdx = this.ranges.length - 1;\r\n        }\r\n    };\r\n    DiffNavigator.prototype._move = function (fwd, scrollType) {\r\n        assert.ok(!this.disposed, 'Illegal State - diff navigator has been disposed');\r\n        if (!this.canNavigate()) {\r\n            return;\r\n        }\r\n        if (this.nextIdx === -1) {\r\n            this._initIdx(fwd);\r\n        }\r\n        else if (fwd) {\r\n            this.nextIdx += 1;\r\n            if (this.nextIdx >= this.ranges.length) {\r\n                this.nextIdx = 0;\r\n            }\r\n        }\r\n        else {\r\n            this.nextIdx -= 1;\r\n            if (this.nextIdx < 0) {\r\n                this.nextIdx = this.ranges.length - 1;\r\n            }\r\n        }\r\n        var info = this.ranges[this.nextIdx];\r\n        this.ignoreSelectionChange = true;\r\n        try {\r\n            var pos = info.range.getStartPosition();\r\n            this._editor.setPosition(pos);\r\n            this._editor.revealPositionInCenter(pos, scrollType);\r\n        }\r\n        finally {\r\n            this.ignoreSelectionChange = false;\r\n        }\r\n    };\r\n    DiffNavigator.prototype.canNavigate = function () {\r\n        return this.ranges && this.ranges.length > 0;\r\n    };\r\n    DiffNavigator.prototype.next = function (scrollType) {\r\n        if (scrollType === void 0) { scrollType = 0 /* Smooth */; }\r\n        this._move(true, scrollType);\r\n    };\r\n    DiffNavigator.prototype.previous = function (scrollType) {\r\n        if (scrollType === void 0) { scrollType = 0 /* Smooth */; }\r\n        this._move(false, scrollType);\r\n    };\r\n    DiffNavigator.prototype.dispose = function () {\r\n        _super.prototype.dispose.call(this);\r\n        this.ranges = [];\r\n        this.disposed = true;\r\n    };\r\n    return DiffNavigator;\r\n}(Disposable));\r\nexport { DiffNavigator };\r\n"]},"metadata":{},"sourceType":"module"}