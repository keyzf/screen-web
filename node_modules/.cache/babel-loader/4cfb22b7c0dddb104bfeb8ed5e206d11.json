{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport { WorkerManager } from './workerManager.js';\nimport * as languageFeatures from './languageFeatures.js';\nvar javaScriptWorker;\nvar typeScriptWorker;\nexport function setupTypeScript(defaults) {\n  typeScriptWorker = setupMode(defaults, 'typescript');\n}\nexport function setupJavaScript(defaults) {\n  javaScriptWorker = setupMode(defaults, 'javascript');\n}\nexport function getJavaScriptWorker() {\n  return new Promise(function (resolve, reject) {\n    if (!javaScriptWorker) {\n      return reject(\"JavaScript not registered!\");\n    }\n\n    resolve(javaScriptWorker);\n  });\n}\nexport function getTypeScriptWorker() {\n  return new Promise(function (resolve, reject) {\n    if (!typeScriptWorker) {\n      return reject(\"TypeScript not registered!\");\n    }\n\n    resolve(typeScriptWorker);\n  });\n}\n\nfunction setupMode(defaults, modeId) {\n  var client = new WorkerManager(modeId, defaults);\n\n  var worker = function () {\n    var uris = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      uris[_i] = arguments[_i];\n    }\n\n    return client.getLanguageServiceWorker.apply(client, uris);\n  };\n\n  monaco.languages.registerCompletionItemProvider(modeId, new languageFeatures.SuggestAdapter(worker));\n  monaco.languages.registerSignatureHelpProvider(modeId, new languageFeatures.SignatureHelpAdapter(worker));\n  monaco.languages.registerHoverProvider(modeId, new languageFeatures.QuickInfoAdapter(worker));\n  monaco.languages.registerDocumentHighlightProvider(modeId, new languageFeatures.OccurrencesAdapter(worker));\n  monaco.languages.registerDefinitionProvider(modeId, new languageFeatures.DefinitionAdapter(worker));\n  monaco.languages.registerReferenceProvider(modeId, new languageFeatures.ReferenceAdapter(worker));\n  monaco.languages.registerDocumentSymbolProvider(modeId, new languageFeatures.OutlineAdapter(worker));\n  monaco.languages.registerDocumentRangeFormattingEditProvider(modeId, new languageFeatures.FormatAdapter(worker));\n  monaco.languages.registerOnTypeFormattingEditProvider(modeId, new languageFeatures.FormatOnTypeAdapter(worker));\n  monaco.languages.registerCodeActionProvider(modeId, new languageFeatures.CodeActionAdaptor(worker));\n  monaco.languages.registerRenameProvider(modeId, new languageFeatures.RenameAdapter(worker));\n  new languageFeatures.DiagnosticsAdapter(defaults, modeId, worker);\n  return worker;\n}","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/language/typescript/tsMode.js"],"names":["WorkerManager","languageFeatures","javaScriptWorker","typeScriptWorker","setupTypeScript","defaults","setupMode","setupJavaScript","getJavaScriptWorker","Promise","resolve","reject","getTypeScriptWorker","modeId","client","worker","uris","_i","arguments","length","getLanguageServiceWorker","apply","monaco","languages","registerCompletionItemProvider","SuggestAdapter","registerSignatureHelpProvider","SignatureHelpAdapter","registerHoverProvider","QuickInfoAdapter","registerDocumentHighlightProvider","OccurrencesAdapter","registerDefinitionProvider","DefinitionAdapter","registerReferenceProvider","ReferenceAdapter","registerDocumentSymbolProvider","OutlineAdapter","registerDocumentRangeFormattingEditProvider","FormatAdapter","registerOnTypeFormattingEditProvider","FormatOnTypeAdapter","registerCodeActionProvider","CodeActionAdaptor","registerRenameProvider","RenameAdapter","DiagnosticsAdapter"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nimport { WorkerManager } from './workerManager.js';\r\nimport * as languageFeatures from './languageFeatures.js';\r\nvar javaScriptWorker;\r\nvar typeScriptWorker;\r\nexport function setupTypeScript(defaults) {\r\n    typeScriptWorker = setupMode(defaults, 'typescript');\r\n}\r\nexport function setupJavaScript(defaults) {\r\n    javaScriptWorker = setupMode(defaults, 'javascript');\r\n}\r\nexport function getJavaScriptWorker() {\r\n    return new Promise(function (resolve, reject) {\r\n        if (!javaScriptWorker) {\r\n            return reject(\"JavaScript not registered!\");\r\n        }\r\n        resolve(javaScriptWorker);\r\n    });\r\n}\r\nexport function getTypeScriptWorker() {\r\n    return new Promise(function (resolve, reject) {\r\n        if (!typeScriptWorker) {\r\n            return reject(\"TypeScript not registered!\");\r\n        }\r\n        resolve(typeScriptWorker);\r\n    });\r\n}\r\nfunction setupMode(defaults, modeId) {\r\n    var client = new WorkerManager(modeId, defaults);\r\n    var worker = function () {\r\n        var uris = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            uris[_i] = arguments[_i];\r\n        }\r\n        return client.getLanguageServiceWorker.apply(client, uris);\r\n    };\r\n    monaco.languages.registerCompletionItemProvider(modeId, new languageFeatures.SuggestAdapter(worker));\r\n    monaco.languages.registerSignatureHelpProvider(modeId, new languageFeatures.SignatureHelpAdapter(worker));\r\n    monaco.languages.registerHoverProvider(modeId, new languageFeatures.QuickInfoAdapter(worker));\r\n    monaco.languages.registerDocumentHighlightProvider(modeId, new languageFeatures.OccurrencesAdapter(worker));\r\n    monaco.languages.registerDefinitionProvider(modeId, new languageFeatures.DefinitionAdapter(worker));\r\n    monaco.languages.registerReferenceProvider(modeId, new languageFeatures.ReferenceAdapter(worker));\r\n    monaco.languages.registerDocumentSymbolProvider(modeId, new languageFeatures.OutlineAdapter(worker));\r\n    monaco.languages.registerDocumentRangeFormattingEditProvider(modeId, new languageFeatures.FormatAdapter(worker));\r\n    monaco.languages.registerOnTypeFormattingEditProvider(modeId, new languageFeatures.FormatOnTypeAdapter(worker));\r\n    monaco.languages.registerCodeActionProvider(modeId, new languageFeatures.CodeActionAdaptor(worker));\r\n    monaco.languages.registerRenameProvider(modeId, new languageFeatures.RenameAdapter(worker));\r\n    new languageFeatures.DiagnosticsAdapter(defaults, modeId, worker);\r\n    return worker;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}