{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { isEmptyObject } from '../../../base/common/types.js';\nimport { forEach } from '../../../base/common/collections.js';\n\nfunction newNode(data) {\n  return {\n    data: data,\n    incoming: Object.create(null),\n    outgoing: Object.create(null)\n  };\n}\n\nvar Graph =\n/** @class */\nfunction () {\n  function Graph(_hashFn) {\n    this._hashFn = _hashFn;\n    this._nodes = Object.create(null); // empty\n  }\n\n  Graph.prototype.roots = function () {\n    var ret = [];\n    forEach(this._nodes, function (entry) {\n      if (isEmptyObject(entry.value.outgoing)) {\n        ret.push(entry.value);\n      }\n    });\n    return ret;\n  };\n\n  Graph.prototype.insertEdge = function (from, to) {\n    var fromNode = this.lookupOrInsertNode(from),\n        toNode = this.lookupOrInsertNode(to);\n    fromNode.outgoing[this._hashFn(to)] = toNode;\n    toNode.incoming[this._hashFn(from)] = fromNode;\n  };\n\n  Graph.prototype.removeNode = function (data) {\n    var key = this._hashFn(data);\n\n    delete this._nodes[key];\n    forEach(this._nodes, function (entry) {\n      delete entry.value.outgoing[key];\n      delete entry.value.incoming[key];\n    });\n  };\n\n  Graph.prototype.lookupOrInsertNode = function (data) {\n    var key = this._hashFn(data);\n\n    var node = this._nodes[key];\n\n    if (!node) {\n      node = newNode(data);\n      this._nodes[key] = node;\n    }\n\n    return node;\n  };\n\n  Graph.prototype.isEmpty = function () {\n    for (var _key in this._nodes) {\n      return false;\n    }\n\n    return true;\n  };\n\n  Graph.prototype.toString = function () {\n    var data = [];\n    forEach(this._nodes, function (entry) {\n      data.push(entry.key + \", (incoming)[\" + Object.keys(entry.value.incoming).join(', ') + \"], (outgoing)[\" + Object.keys(entry.value.outgoing).join(',') + \"]\");\n    });\n    return data.join('\\n');\n  };\n\n  return Graph;\n}();\n\nexport { Graph };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/platform/instantiation/common/graph.js"],"names":["isEmptyObject","forEach","newNode","data","incoming","Object","create","outgoing","Graph","_hashFn","_nodes","prototype","roots","ret","entry","value","push","insertEdge","from","to","fromNode","lookupOrInsertNode","toNode","removeNode","key","node","isEmpty","_key","toString","keys","join"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { isEmptyObject } from '../../../base/common/types.js';\r\nimport { forEach } from '../../../base/common/collections.js';\r\nfunction newNode(data) {\r\n    return {\r\n        data: data,\r\n        incoming: Object.create(null),\r\n        outgoing: Object.create(null)\r\n    };\r\n}\r\nvar Graph = /** @class */ (function () {\r\n    function Graph(_hashFn) {\r\n        this._hashFn = _hashFn;\r\n        this._nodes = Object.create(null);\r\n        // empty\r\n    }\r\n    Graph.prototype.roots = function () {\r\n        var ret = [];\r\n        forEach(this._nodes, function (entry) {\r\n            if (isEmptyObject(entry.value.outgoing)) {\r\n                ret.push(entry.value);\r\n            }\r\n        });\r\n        return ret;\r\n    };\r\n    Graph.prototype.insertEdge = function (from, to) {\r\n        var fromNode = this.lookupOrInsertNode(from), toNode = this.lookupOrInsertNode(to);\r\n        fromNode.outgoing[this._hashFn(to)] = toNode;\r\n        toNode.incoming[this._hashFn(from)] = fromNode;\r\n    };\r\n    Graph.prototype.removeNode = function (data) {\r\n        var key = this._hashFn(data);\r\n        delete this._nodes[key];\r\n        forEach(this._nodes, function (entry) {\r\n            delete entry.value.outgoing[key];\r\n            delete entry.value.incoming[key];\r\n        });\r\n    };\r\n    Graph.prototype.lookupOrInsertNode = function (data) {\r\n        var key = this._hashFn(data);\r\n        var node = this._nodes[key];\r\n        if (!node) {\r\n            node = newNode(data);\r\n            this._nodes[key] = node;\r\n        }\r\n        return node;\r\n    };\r\n    Graph.prototype.isEmpty = function () {\r\n        for (var _key in this._nodes) {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    Graph.prototype.toString = function () {\r\n        var data = [];\r\n        forEach(this._nodes, function (entry) {\r\n            data.push(entry.key + \", (incoming)[\" + Object.keys(entry.value.incoming).join(', ') + \"], (outgoing)[\" + Object.keys(entry.value.outgoing).join(',') + \"]\");\r\n        });\r\n        return data.join('\\n');\r\n    };\r\n    return Graph;\r\n}());\r\nexport { Graph };\r\n"]},"metadata":{},"sourceType":"module"}