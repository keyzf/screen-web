{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport './media/diffReview.css';\nimport * as nls from '../../../nls.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport { ActionBar } from '../../../base/browser/ui/actionbar/actionbar.js';\nimport { DomScrollableElement } from '../../../base/browser/ui/scrollbar/scrollableElement.js';\nimport { Action } from '../../../base/common/actions.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { Configuration } from '../config/configuration.js';\nimport { EditorAction, registerEditorAction } from '../editorExtensions.js';\nimport { ICodeEditorService } from '../services/codeEditorService.js';\nimport { EditorFontLigatures } from '../../common/config/editorOptions.js';\nimport { LineTokens } from '../../common/core/lineTokens.js';\nimport { Position } from '../../common/core/position.js';\nimport { editorLineNumbers } from '../../common/view/editorColorRegistry.js';\nimport { RenderLineInput, renderViewLine2 as renderViewLine } from '../../common/viewLayout/viewLineRenderer.js';\nimport { ViewLineRenderingData } from '../../common/viewModel/viewModel.js';\nimport { ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\nimport { scrollbarShadow } from '../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\nvar DIFF_LINES_PADDING = 3;\n\nvar DiffEntry =\n/** @class */\nfunction () {\n  function DiffEntry(originalLineStart, originalLineEnd, modifiedLineStart, modifiedLineEnd) {\n    this.originalLineStart = originalLineStart;\n    this.originalLineEnd = originalLineEnd;\n    this.modifiedLineStart = modifiedLineStart;\n    this.modifiedLineEnd = modifiedLineEnd;\n  }\n\n  DiffEntry.prototype.getType = function () {\n    if (this.originalLineStart === 0) {\n      return 1\n      /* Insert */\n      ;\n    }\n\n    if (this.modifiedLineStart === 0) {\n      return 2\n      /* Delete */\n      ;\n    }\n\n    return 0\n    /* Equal */\n    ;\n  };\n\n  return DiffEntry;\n}();\n\nvar Diff =\n/** @class */\nfunction () {\n  function Diff(entries) {\n    this.entries = entries;\n  }\n\n  return Diff;\n}();\n\nvar DiffReview =\n/** @class */\nfunction (_super) {\n  __extends(DiffReview, _super);\n\n  function DiffReview(diffEditor) {\n    var _this = _super.call(this) || this;\n\n    _this._width = 0;\n    _this._diffEditor = diffEditor;\n    _this._isVisible = false;\n    _this.shadow = createFastDomNode(document.createElement('div'));\n\n    _this.shadow.setClassName('diff-review-shadow');\n\n    _this.actionBarContainer = createFastDomNode(document.createElement('div'));\n\n    _this.actionBarContainer.setClassName('diff-review-actions');\n\n    _this._actionBar = _this._register(new ActionBar(_this.actionBarContainer.domNode));\n\n    _this._actionBar.push(new Action('diffreview.close', nls.localize('label.close', \"Close\"), 'close-diff-review', true, function () {\n      _this.hide();\n\n      return Promise.resolve(null);\n    }), {\n      label: false,\n      icon: true\n    });\n\n    _this.domNode = createFastDomNode(document.createElement('div'));\n\n    _this.domNode.setClassName('diff-review monaco-editor-background');\n\n    _this._content = createFastDomNode(document.createElement('div'));\n\n    _this._content.setClassName('diff-review-content');\n\n    _this.scrollbar = _this._register(new DomScrollableElement(_this._content.domNode, {}));\n\n    _this.domNode.domNode.appendChild(_this.scrollbar.getDomNode());\n\n    _this._register(diffEditor.onDidUpdateDiff(function () {\n      if (!_this._isVisible) {\n        return;\n      }\n\n      _this._diffs = _this._compute();\n\n      _this._render();\n    }));\n\n    _this._register(diffEditor.getModifiedEditor().onDidChangeCursorPosition(function () {\n      if (!_this._isVisible) {\n        return;\n      }\n\n      _this._render();\n    }));\n\n    _this._register(diffEditor.getOriginalEditor().onDidFocusEditorWidget(function () {\n      if (_this._isVisible) {\n        _this.hide();\n      }\n    }));\n\n    _this._register(diffEditor.getModifiedEditor().onDidFocusEditorWidget(function () {\n      if (_this._isVisible) {\n        _this.hide();\n      }\n    }));\n\n    _this._register(dom.addStandardDisposableListener(_this.domNode.domNode, 'click', function (e) {\n      e.preventDefault();\n      var row = dom.findParentWithClass(e.target, 'diff-review-row');\n\n      if (row) {\n        _this._goToRow(row);\n      }\n    }));\n\n    _this._register(dom.addStandardDisposableListener(_this.domNode.domNode, 'keydown', function (e) {\n      if (e.equals(18\n      /* DownArrow */\n      ) || e.equals(2048\n      /* CtrlCmd */\n      | 18\n      /* DownArrow */\n      ) || e.equals(512\n      /* Alt */\n      | 18\n      /* DownArrow */\n      )) {\n        e.preventDefault();\n\n        _this._goToRow(_this._getNextRow());\n      }\n\n      if (e.equals(16\n      /* UpArrow */\n      ) || e.equals(2048\n      /* CtrlCmd */\n      | 16\n      /* UpArrow */\n      ) || e.equals(512\n      /* Alt */\n      | 16\n      /* UpArrow */\n      )) {\n        e.preventDefault();\n\n        _this._goToRow(_this._getPrevRow());\n      }\n\n      if (e.equals(9\n      /* Escape */\n      ) || e.equals(2048\n      /* CtrlCmd */\n      | 9\n      /* Escape */\n      ) || e.equals(512\n      /* Alt */\n      | 9\n      /* Escape */\n      ) || e.equals(1024\n      /* Shift */\n      | 9\n      /* Escape */\n      )) {\n        e.preventDefault();\n\n        _this.hide();\n      }\n\n      if (e.equals(10\n      /* Space */\n      ) || e.equals(3\n      /* Enter */\n      )) {\n        e.preventDefault();\n\n        _this.accept();\n      }\n    }));\n\n    _this._diffs = [];\n    _this._currentDiff = null;\n    return _this;\n  }\n\n  DiffReview.prototype.prev = function () {\n    var index = 0;\n\n    if (!this._isVisible) {\n      this._diffs = this._compute();\n    }\n\n    if (this._isVisible) {\n      var currentIndex = -1;\n\n      for (var i = 0, len = this._diffs.length; i < len; i++) {\n        if (this._diffs[i] === this._currentDiff) {\n          currentIndex = i;\n          break;\n        }\n      }\n\n      index = this._diffs.length + currentIndex - 1;\n    } else {\n      index = this._findDiffIndex(this._diffEditor.getPosition());\n    }\n\n    if (this._diffs.length === 0) {\n      // Nothing to do\n      return;\n    }\n\n    index = index % this._diffs.length;\n\n    this._diffEditor.setPosition(new Position(this._diffs[index].entries[0].modifiedLineStart, 1));\n\n    this._isVisible = true;\n\n    this._diffEditor.doLayout();\n\n    this._render();\n\n    this._goToRow(this._getNextRow());\n  };\n\n  DiffReview.prototype.next = function () {\n    var index = 0;\n\n    if (!this._isVisible) {\n      this._diffs = this._compute();\n    }\n\n    if (this._isVisible) {\n      var currentIndex = -1;\n\n      for (var i = 0, len = this._diffs.length; i < len; i++) {\n        if (this._diffs[i] === this._currentDiff) {\n          currentIndex = i;\n          break;\n        }\n      }\n\n      index = currentIndex + 1;\n    } else {\n      index = this._findDiffIndex(this._diffEditor.getPosition());\n    }\n\n    if (this._diffs.length === 0) {\n      // Nothing to do\n      return;\n    }\n\n    index = index % this._diffs.length;\n\n    this._diffEditor.setPosition(new Position(this._diffs[index].entries[0].modifiedLineStart, 1));\n\n    this._isVisible = true;\n\n    this._diffEditor.doLayout();\n\n    this._render();\n\n    this._goToRow(this._getNextRow());\n  };\n\n  DiffReview.prototype.accept = function () {\n    var jumpToLineNumber = -1;\n\n    var current = this._getCurrentFocusedRow();\n\n    if (current) {\n      var lineNumber = parseInt(current.getAttribute('data-line'), 10);\n\n      if (!isNaN(lineNumber)) {\n        jumpToLineNumber = lineNumber;\n      }\n    }\n\n    this.hide();\n\n    if (jumpToLineNumber !== -1) {\n      this._diffEditor.setPosition(new Position(jumpToLineNumber, 1));\n\n      this._diffEditor.revealPosition(new Position(jumpToLineNumber, 1), 1\n      /* Immediate */\n      );\n    }\n  };\n\n  DiffReview.prototype.hide = function () {\n    this._isVisible = false;\n\n    this._diffEditor.focus();\n\n    this._diffEditor.doLayout();\n\n    this._render();\n  };\n\n  DiffReview.prototype._getPrevRow = function () {\n    var current = this._getCurrentFocusedRow();\n\n    if (!current) {\n      return this._getFirstRow();\n    }\n\n    if (current.previousElementSibling) {\n      return current.previousElementSibling;\n    }\n\n    return current;\n  };\n\n  DiffReview.prototype._getNextRow = function () {\n    var current = this._getCurrentFocusedRow();\n\n    if (!current) {\n      return this._getFirstRow();\n    }\n\n    if (current.nextElementSibling) {\n      return current.nextElementSibling;\n    }\n\n    return current;\n  };\n\n  DiffReview.prototype._getFirstRow = function () {\n    return this.domNode.domNode.querySelector('.diff-review-row');\n  };\n\n  DiffReview.prototype._getCurrentFocusedRow = function () {\n    var result = document.activeElement;\n\n    if (result && /diff-review-row/.test(result.className)) {\n      return result;\n    }\n\n    return null;\n  };\n\n  DiffReview.prototype._goToRow = function (row) {\n    var prev = this._getCurrentFocusedRow();\n\n    row.tabIndex = 0;\n    row.focus();\n\n    if (prev && prev !== row) {\n      prev.tabIndex = -1;\n    }\n\n    this.scrollbar.scanDomNode();\n  };\n\n  DiffReview.prototype.isVisible = function () {\n    return this._isVisible;\n  };\n\n  DiffReview.prototype.layout = function (top, width, height) {\n    this._width = width;\n    this.shadow.setTop(top - 6);\n    this.shadow.setWidth(width);\n    this.shadow.setHeight(this._isVisible ? 6 : 0);\n    this.domNode.setTop(top);\n    this.domNode.setWidth(width);\n    this.domNode.setHeight(height);\n\n    this._content.setHeight(height);\n\n    this._content.setWidth(width);\n\n    if (this._isVisible) {\n      this.actionBarContainer.setAttribute('aria-hidden', 'false');\n      this.actionBarContainer.setDisplay('block');\n    } else {\n      this.actionBarContainer.setAttribute('aria-hidden', 'true');\n      this.actionBarContainer.setDisplay('none');\n    }\n  };\n\n  DiffReview.prototype._compute = function () {\n    var lineChanges = this._diffEditor.getLineChanges();\n\n    if (!lineChanges || lineChanges.length === 0) {\n      return [];\n    }\n\n    var originalModel = this._diffEditor.getOriginalEditor().getModel();\n\n    var modifiedModel = this._diffEditor.getModifiedEditor().getModel();\n\n    if (!originalModel || !modifiedModel) {\n      return [];\n    }\n\n    return DiffReview._mergeAdjacent(lineChanges, originalModel.getLineCount(), modifiedModel.getLineCount());\n  };\n\n  DiffReview._mergeAdjacent = function (lineChanges, originalLineCount, modifiedLineCount) {\n    if (!lineChanges || lineChanges.length === 0) {\n      return [];\n    }\n\n    var diffs = [],\n        diffsLength = 0;\n\n    for (var i = 0, len = lineChanges.length; i < len; i++) {\n      var lineChange = lineChanges[i];\n      var originalStart = lineChange.originalStartLineNumber;\n      var originalEnd = lineChange.originalEndLineNumber;\n      var modifiedStart = lineChange.modifiedStartLineNumber;\n      var modifiedEnd = lineChange.modifiedEndLineNumber;\n      var r_1 = [],\n          rLength_1 = 0; // Emit before anchors\n\n      {\n        var originalEqualAbove = originalEnd === 0 ? originalStart : originalStart - 1;\n        var modifiedEqualAbove = modifiedEnd === 0 ? modifiedStart : modifiedStart - 1; // Make sure we don't step into the previous diff\n\n        var minOriginal = 1;\n        var minModified = 1;\n\n        if (i > 0) {\n          var prevLineChange = lineChanges[i - 1];\n\n          if (prevLineChange.originalEndLineNumber === 0) {\n            minOriginal = prevLineChange.originalStartLineNumber + 1;\n          } else {\n            minOriginal = prevLineChange.originalEndLineNumber + 1;\n          }\n\n          if (prevLineChange.modifiedEndLineNumber === 0) {\n            minModified = prevLineChange.modifiedStartLineNumber + 1;\n          } else {\n            minModified = prevLineChange.modifiedEndLineNumber + 1;\n          }\n        }\n\n        var fromOriginal = originalEqualAbove - DIFF_LINES_PADDING + 1;\n        var fromModified = modifiedEqualAbove - DIFF_LINES_PADDING + 1;\n\n        if (fromOriginal < minOriginal) {\n          var delta = minOriginal - fromOriginal;\n          fromOriginal = fromOriginal + delta;\n          fromModified = fromModified + delta;\n        }\n\n        if (fromModified < minModified) {\n          var delta = minModified - fromModified;\n          fromOriginal = fromOriginal + delta;\n          fromModified = fromModified + delta;\n        }\n\n        r_1[rLength_1++] = new DiffEntry(fromOriginal, originalEqualAbove, fromModified, modifiedEqualAbove);\n      } // Emit deleted lines\n\n      {\n        if (originalEnd !== 0) {\n          r_1[rLength_1++] = new DiffEntry(originalStart, originalEnd, 0, 0);\n        }\n      } // Emit inserted lines\n\n      {\n        if (modifiedEnd !== 0) {\n          r_1[rLength_1++] = new DiffEntry(0, 0, modifiedStart, modifiedEnd);\n        }\n      } // Emit after anchors\n\n      {\n        var originalEqualBelow = originalEnd === 0 ? originalStart + 1 : originalEnd + 1;\n        var modifiedEqualBelow = modifiedEnd === 0 ? modifiedStart + 1 : modifiedEnd + 1; // Make sure we don't step into the next diff\n\n        var maxOriginal = originalLineCount;\n        var maxModified = modifiedLineCount;\n\n        if (i + 1 < len) {\n          var nextLineChange = lineChanges[i + 1];\n\n          if (nextLineChange.originalEndLineNumber === 0) {\n            maxOriginal = nextLineChange.originalStartLineNumber;\n          } else {\n            maxOriginal = nextLineChange.originalStartLineNumber - 1;\n          }\n\n          if (nextLineChange.modifiedEndLineNumber === 0) {\n            maxModified = nextLineChange.modifiedStartLineNumber;\n          } else {\n            maxModified = nextLineChange.modifiedStartLineNumber - 1;\n          }\n        }\n\n        var toOriginal = originalEqualBelow + DIFF_LINES_PADDING - 1;\n        var toModified = modifiedEqualBelow + DIFF_LINES_PADDING - 1;\n\n        if (toOriginal > maxOriginal) {\n          var delta = maxOriginal - toOriginal;\n          toOriginal = toOriginal + delta;\n          toModified = toModified + delta;\n        }\n\n        if (toModified > maxModified) {\n          var delta = maxModified - toModified;\n          toOriginal = toOriginal + delta;\n          toModified = toModified + delta;\n        }\n\n        r_1[rLength_1++] = new DiffEntry(originalEqualBelow, toOriginal, modifiedEqualBelow, toModified);\n      }\n      diffs[diffsLength++] = new Diff(r_1);\n    } // Merge adjacent diffs\n\n\n    var curr = diffs[0].entries;\n    var r = [],\n        rLength = 0;\n\n    for (var i = 1, len = diffs.length; i < len; i++) {\n      var thisDiff = diffs[i].entries;\n      var currLast = curr[curr.length - 1];\n      var thisFirst = thisDiff[0];\n\n      if (currLast.getType() === 0\n      /* Equal */\n      && thisFirst.getType() === 0\n      /* Equal */\n      && thisFirst.originalLineStart <= currLast.originalLineEnd) {\n        // We are dealing with equal lines that overlap\n        curr[curr.length - 1] = new DiffEntry(currLast.originalLineStart, thisFirst.originalLineEnd, currLast.modifiedLineStart, thisFirst.modifiedLineEnd);\n        curr = curr.concat(thisDiff.slice(1));\n        continue;\n      }\n\n      r[rLength++] = new Diff(curr);\n      curr = thisDiff;\n    }\n\n    r[rLength++] = new Diff(curr);\n    return r;\n  };\n\n  DiffReview.prototype._findDiffIndex = function (pos) {\n    var lineNumber = pos.lineNumber;\n\n    for (var i = 0, len = this._diffs.length; i < len; i++) {\n      var diff = this._diffs[i].entries;\n      var lastModifiedLine = diff[diff.length - 1].modifiedLineEnd;\n\n      if (lineNumber <= lastModifiedLine) {\n        return i;\n      }\n    }\n\n    return 0;\n  };\n\n  DiffReview.prototype._render = function () {\n    var originalOptions = this._diffEditor.getOriginalEditor().getOptions();\n\n    var modifiedOptions = this._diffEditor.getModifiedEditor().getOptions();\n\n    var originalModel = this._diffEditor.getOriginalEditor().getModel();\n\n    var modifiedModel = this._diffEditor.getModifiedEditor().getModel();\n\n    var originalModelOpts = originalModel.getOptions();\n    var modifiedModelOpts = modifiedModel.getOptions();\n\n    if (!this._isVisible || !originalModel || !modifiedModel) {\n      dom.clearNode(this._content.domNode);\n      this._currentDiff = null;\n      this.scrollbar.scanDomNode();\n      return;\n    }\n\n    var diffIndex = this._findDiffIndex(this._diffEditor.getPosition());\n\n    if (this._diffs[diffIndex] === this._currentDiff) {\n      return;\n    }\n\n    this._currentDiff = this._diffs[diffIndex];\n    var diffs = this._diffs[diffIndex].entries;\n    var container = document.createElement('div');\n    container.className = 'diff-review-table';\n    container.setAttribute('role', 'list');\n    Configuration.applyFontInfoSlow(container, modifiedOptions.get(34\n    /* fontInfo */\n    ));\n    var minOriginalLine = 0;\n    var maxOriginalLine = 0;\n    var minModifiedLine = 0;\n    var maxModifiedLine = 0;\n\n    for (var i = 0, len = diffs.length; i < len; i++) {\n      var diffEntry = diffs[i];\n      var originalLineStart = diffEntry.originalLineStart;\n      var originalLineEnd = diffEntry.originalLineEnd;\n      var modifiedLineStart = diffEntry.modifiedLineStart;\n      var modifiedLineEnd = diffEntry.modifiedLineEnd;\n\n      if (originalLineStart !== 0 && (minOriginalLine === 0 || originalLineStart < minOriginalLine)) {\n        minOriginalLine = originalLineStart;\n      }\n\n      if (originalLineEnd !== 0 && (maxOriginalLine === 0 || originalLineEnd > maxOriginalLine)) {\n        maxOriginalLine = originalLineEnd;\n      }\n\n      if (modifiedLineStart !== 0 && (minModifiedLine === 0 || modifiedLineStart < minModifiedLine)) {\n        minModifiedLine = modifiedLineStart;\n      }\n\n      if (modifiedLineEnd !== 0 && (maxModifiedLine === 0 || modifiedLineEnd > maxModifiedLine)) {\n        maxModifiedLine = modifiedLineEnd;\n      }\n    }\n\n    var header = document.createElement('div');\n    header.className = 'diff-review-row';\n    var cell = document.createElement('div');\n    cell.className = 'diff-review-cell diff-review-summary';\n    var originalChangedLinesCnt = maxOriginalLine - minOriginalLine + 1;\n    var modifiedChangedLinesCnt = maxModifiedLine - minModifiedLine + 1;\n    cell.appendChild(document.createTextNode(diffIndex + 1 + \"/\" + this._diffs.length + \": @@ -\" + minOriginalLine + \",\" + originalChangedLinesCnt + \" +\" + minModifiedLine + \",\" + modifiedChangedLinesCnt + \" @@\"));\n    header.setAttribute('data-line', String(minModifiedLine));\n\n    var getAriaLines = function (lines) {\n      if (lines === 0) {\n        return nls.localize('no_lines', \"no lines\");\n      } else if (lines === 1) {\n        return nls.localize('one_line', \"1 line\");\n      } else {\n        return nls.localize('more_lines', \"{0} lines\", lines);\n      }\n    };\n\n    var originalChangedLinesCntAria = getAriaLines(originalChangedLinesCnt);\n    var modifiedChangedLinesCntAria = getAriaLines(modifiedChangedLinesCnt);\n    header.setAttribute('aria-label', nls.localize({\n      key: 'header',\n      comment: ['This is the ARIA label for a git diff header.', 'A git diff header looks like this: @@ -154,12 +159,39 @@.', 'That encodes that at original line 154 (which is now line 159), 12 lines were removed/changed with 39 lines.', 'Variables 0 and 1 refer to the diff index out of total number of diffs.', 'Variables 2 and 4 will be numbers (a line number).', 'Variables 3 and 5 will be \"no lines\", \"1 line\" or \"X lines\", localized separately.']\n    }, \"Difference {0} of {1}: original {2}, {3}, modified {4}, {5}\", diffIndex + 1, this._diffs.length, minOriginalLine, originalChangedLinesCntAria, minModifiedLine, modifiedChangedLinesCntAria));\n    header.appendChild(cell); // @@ -504,7 +517,7 @@\n\n    header.setAttribute('role', 'listitem');\n    container.appendChild(header);\n    var modLine = minModifiedLine;\n\n    for (var i = 0, len = diffs.length; i < len; i++) {\n      var diffEntry = diffs[i];\n\n      DiffReview._renderSection(container, diffEntry, modLine, this._width, originalOptions, originalModel, originalModelOpts, modifiedOptions, modifiedModel, modifiedModelOpts);\n\n      if (diffEntry.modifiedLineStart !== 0) {\n        modLine = diffEntry.modifiedLineEnd;\n      }\n    }\n\n    dom.clearNode(this._content.domNode);\n\n    this._content.domNode.appendChild(container);\n\n    this.scrollbar.scanDomNode();\n  };\n\n  DiffReview._renderSection = function (dest, diffEntry, modLine, width, originalOptions, originalModel, originalModelOpts, modifiedOptions, modifiedModel, modifiedModelOpts) {\n    var type = diffEntry.getType();\n    var rowClassName = 'diff-review-row';\n    var lineNumbersExtraClassName = '';\n    var spacerClassName = 'diff-review-spacer';\n\n    switch (type) {\n      case 1\n      /* Insert */\n      :\n        rowClassName = 'diff-review-row line-insert';\n        lineNumbersExtraClassName = ' char-insert';\n        spacerClassName = 'diff-review-spacer insert-sign';\n        break;\n\n      case 2\n      /* Delete */\n      :\n        rowClassName = 'diff-review-row line-delete';\n        lineNumbersExtraClassName = ' char-delete';\n        spacerClassName = 'diff-review-spacer delete-sign';\n        break;\n    }\n\n    var originalLineStart = diffEntry.originalLineStart;\n    var originalLineEnd = diffEntry.originalLineEnd;\n    var modifiedLineStart = diffEntry.modifiedLineStart;\n    var modifiedLineEnd = diffEntry.modifiedLineEnd;\n    var cnt = Math.max(modifiedLineEnd - modifiedLineStart, originalLineEnd - originalLineStart);\n    var originalLayoutInfo = originalOptions.get(107\n    /* layoutInfo */\n    );\n    var originalLineNumbersWidth = originalLayoutInfo.glyphMarginWidth + originalLayoutInfo.lineNumbersWidth;\n    var modifiedLayoutInfo = modifiedOptions.get(107\n    /* layoutInfo */\n    );\n    var modifiedLineNumbersWidth = 10 + modifiedLayoutInfo.glyphMarginWidth + modifiedLayoutInfo.lineNumbersWidth;\n\n    for (var i = 0; i <= cnt; i++) {\n      var originalLine = originalLineStart === 0 ? 0 : originalLineStart + i;\n      var modifiedLine = modifiedLineStart === 0 ? 0 : modifiedLineStart + i;\n      var row = document.createElement('div');\n      row.style.minWidth = width + 'px';\n      row.className = rowClassName;\n      row.setAttribute('role', 'listitem');\n\n      if (modifiedLine !== 0) {\n        modLine = modifiedLine;\n      }\n\n      row.setAttribute('data-line', String(modLine));\n      var cell = document.createElement('div');\n      cell.className = 'diff-review-cell';\n      row.appendChild(cell);\n      var originalLineNumber = document.createElement('span');\n      originalLineNumber.style.width = originalLineNumbersWidth + 'px';\n      originalLineNumber.style.minWidth = originalLineNumbersWidth + 'px';\n      originalLineNumber.className = 'diff-review-line-number' + lineNumbersExtraClassName;\n\n      if (originalLine !== 0) {\n        originalLineNumber.appendChild(document.createTextNode(String(originalLine)));\n      } else {\n        originalLineNumber.innerHTML = '&#160;';\n      }\n\n      cell.appendChild(originalLineNumber);\n      var modifiedLineNumber = document.createElement('span');\n      modifiedLineNumber.style.width = modifiedLineNumbersWidth + 'px';\n      modifiedLineNumber.style.minWidth = modifiedLineNumbersWidth + 'px';\n      modifiedLineNumber.style.paddingRight = '10px';\n      modifiedLineNumber.className = 'diff-review-line-number' + lineNumbersExtraClassName;\n\n      if (modifiedLine !== 0) {\n        modifiedLineNumber.appendChild(document.createTextNode(String(modifiedLine)));\n      } else {\n        modifiedLineNumber.innerHTML = '&#160;';\n      }\n\n      cell.appendChild(modifiedLineNumber);\n      var spacer = document.createElement('span');\n      spacer.className = spacerClassName;\n      spacer.innerHTML = '&#160;&#160;';\n      cell.appendChild(spacer);\n      var lineContent = void 0;\n\n      if (modifiedLine !== 0) {\n        cell.insertAdjacentHTML('beforeend', this._renderLine(modifiedModel, modifiedOptions, modifiedModelOpts.tabSize, modifiedLine));\n        lineContent = modifiedModel.getLineContent(modifiedLine);\n      } else {\n        cell.insertAdjacentHTML('beforeend', this._renderLine(originalModel, originalOptions, originalModelOpts.tabSize, originalLine));\n        lineContent = originalModel.getLineContent(originalLine);\n      }\n\n      if (lineContent.length === 0) {\n        lineContent = nls.localize('blankLine', \"blank\");\n      }\n\n      var ariaLabel = '';\n\n      switch (type) {\n        case 0\n        /* Equal */\n        :\n          ariaLabel = nls.localize('equalLine', \"original {0}, modified {1}: {2}\", originalLine, modifiedLine, lineContent);\n          break;\n\n        case 1\n        /* Insert */\n        :\n          ariaLabel = nls.localize('insertLine', \"+ modified {0}: {1}\", modifiedLine, lineContent);\n          break;\n\n        case 2\n        /* Delete */\n        :\n          ariaLabel = nls.localize('deleteLine', \"- original {0}: {1}\", originalLine, lineContent);\n          break;\n      }\n\n      row.setAttribute('aria-label', ariaLabel);\n      dest.appendChild(row);\n    }\n  };\n\n  DiffReview._renderLine = function (model, options, tabSize, lineNumber) {\n    var lineContent = model.getLineContent(lineNumber);\n    var fontInfo = options.get(34\n    /* fontInfo */\n    );\n    var defaultMetadata = (0\n    /* None */\n    << 11\n    /* FONT_STYLE_OFFSET */\n    | 1\n    /* DefaultForeground */\n    << 14\n    /* FOREGROUND_OFFSET */\n    | 2\n    /* DefaultBackground */\n    << 23\n    /* BACKGROUND_OFFSET */\n    ) >>> 0;\n    var tokens = new Uint32Array(2);\n    tokens[0] = lineContent.length;\n    tokens[1] = defaultMetadata;\n    var lineTokens = new LineTokens(tokens, lineContent);\n    var isBasicASCII = ViewLineRenderingData.isBasicASCII(lineContent, model.mightContainNonBasicASCII());\n    var containsRTL = ViewLineRenderingData.containsRTL(lineContent, isBasicASCII, model.mightContainRTL());\n    var r = renderViewLine(new RenderLineInput(fontInfo.isMonospace && !options.get(23\n    /* disableMonospaceOptimizations */\n    ), fontInfo.canUseHalfwidthRightwardsArrow, lineContent, false, isBasicASCII, containsRTL, 0, lineTokens, [], tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, options.get(88\n    /* stopRenderingLineAfter */\n    ), options.get(74\n    /* renderWhitespace */\n    ), options.get(69\n    /* renderControlCharacters */\n    ), options.get(35\n    /* fontLigatures */\n    ) !== EditorFontLigatures.OFF, null));\n    return r.html;\n  };\n\n  return DiffReview;\n}(Disposable);\n\nexport { DiffReview }; // theming\n\nregisterThemingParticipant(function (theme, collector) {\n  var lineNumbers = theme.getColor(editorLineNumbers);\n\n  if (lineNumbers) {\n    collector.addRule(\".monaco-diff-editor .diff-review-line-number { color: \" + lineNumbers + \"; }\");\n  }\n\n  var shadow = theme.getColor(scrollbarShadow);\n\n  if (shadow) {\n    collector.addRule(\".monaco-diff-editor .diff-review-shadow { box-shadow: \" + shadow + \" 0 -6px 6px -6px inset; }\");\n  }\n});\n\nvar DiffReviewNext =\n/** @class */\nfunction (_super) {\n  __extends(DiffReviewNext, _super);\n\n  function DiffReviewNext() {\n    return _super.call(this, {\n      id: 'editor.action.diffReview.next',\n      label: nls.localize('editor.action.diffReview.next', \"Go to Next Difference\"),\n      alias: 'Go to Next Difference',\n      precondition: ContextKeyExpr.has('isInDiffEditor'),\n      kbOpts: {\n        kbExpr: null,\n        primary: 65\n        /* F7 */\n        ,\n        weight: 100\n        /* EditorContrib */\n\n      }\n    }) || this;\n  }\n\n  DiffReviewNext.prototype.run = function (accessor, editor) {\n    var diffEditor = findFocusedDiffEditor(accessor);\n\n    if (diffEditor) {\n      diffEditor.diffReviewNext();\n    }\n  };\n\n  return DiffReviewNext;\n}(EditorAction);\n\nvar DiffReviewPrev =\n/** @class */\nfunction (_super) {\n  __extends(DiffReviewPrev, _super);\n\n  function DiffReviewPrev() {\n    return _super.call(this, {\n      id: 'editor.action.diffReview.prev',\n      label: nls.localize('editor.action.diffReview.prev', \"Go to Previous Difference\"),\n      alias: 'Go to Previous Difference',\n      precondition: ContextKeyExpr.has('isInDiffEditor'),\n      kbOpts: {\n        kbExpr: null,\n        primary: 1024\n        /* Shift */\n        | 65\n        /* F7 */\n        ,\n        weight: 100\n        /* EditorContrib */\n\n      }\n    }) || this;\n  }\n\n  DiffReviewPrev.prototype.run = function (accessor, editor) {\n    var diffEditor = findFocusedDiffEditor(accessor);\n\n    if (diffEditor) {\n      diffEditor.diffReviewPrev();\n    }\n  };\n\n  return DiffReviewPrev;\n}(EditorAction);\n\nfunction findFocusedDiffEditor(accessor) {\n  var codeEditorService = accessor.get(ICodeEditorService);\n  var diffEditors = codeEditorService.listDiffEditors();\n\n  for (var i = 0, len = diffEditors.length; i < len; i++) {\n    var diffEditor = diffEditors[i];\n\n    if (diffEditor.hasWidgetFocus()) {\n      return diffEditor;\n    }\n  }\n\n  return null;\n}\n\nregisterEditorAction(DiffReviewNext);\nregisterEditorAction(DiffReviewPrev);","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/browser/widget/diffReview.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","nls","dom","createFastDomNode","ActionBar","DomScrollableElement","Action","Disposable","Configuration","EditorAction","registerEditorAction","ICodeEditorService","EditorFontLigatures","LineTokens","Position","editorLineNumbers","RenderLineInput","renderViewLine2","renderViewLine","ViewLineRenderingData","ContextKeyExpr","scrollbarShadow","registerThemingParticipant","DIFF_LINES_PADDING","DiffEntry","originalLineStart","originalLineEnd","modifiedLineStart","modifiedLineEnd","getType","Diff","entries","DiffReview","_super","diffEditor","_this","call","_width","_diffEditor","_isVisible","shadow","document","createElement","setClassName","actionBarContainer","_actionBar","_register","domNode","push","localize","hide","Promise","resolve","label","icon","_content","scrollbar","appendChild","getDomNode","onDidUpdateDiff","_diffs","_compute","_render","getModifiedEditor","onDidChangeCursorPosition","getOriginalEditor","onDidFocusEditorWidget","addStandardDisposableListener","e","preventDefault","row","findParentWithClass","target","_goToRow","equals","_getNextRow","_getPrevRow","accept","_currentDiff","prev","index","currentIndex","i","len","length","_findDiffIndex","getPosition","setPosition","doLayout","next","jumpToLineNumber","current","_getCurrentFocusedRow","lineNumber","parseInt","getAttribute","isNaN","revealPosition","focus","_getFirstRow","previousElementSibling","nextElementSibling","querySelector","result","activeElement","test","className","tabIndex","scanDomNode","isVisible","layout","top","width","height","setTop","setWidth","setHeight","setAttribute","setDisplay","lineChanges","getLineChanges","originalModel","getModel","modifiedModel","_mergeAdjacent","getLineCount","originalLineCount","modifiedLineCount","diffs","diffsLength","lineChange","originalStart","originalStartLineNumber","originalEnd","originalEndLineNumber","modifiedStart","modifiedStartLineNumber","modifiedEnd","modifiedEndLineNumber","r_1","rLength_1","originalEqualAbove","modifiedEqualAbove","minOriginal","minModified","prevLineChange","fromOriginal","fromModified","delta","originalEqualBelow","modifiedEqualBelow","maxOriginal","maxModified","nextLineChange","toOriginal","toModified","curr","r","rLength","thisDiff","currLast","thisFirst","concat","slice","pos","diff","lastModifiedLine","originalOptions","getOptions","modifiedOptions","originalModelOpts","modifiedModelOpts","clearNode","diffIndex","container","applyFontInfoSlow","get","minOriginalLine","maxOriginalLine","minModifiedLine","maxModifiedLine","diffEntry","header","cell","originalChangedLinesCnt","modifiedChangedLinesCnt","createTextNode","String","getAriaLines","lines","originalChangedLinesCntAria","modifiedChangedLinesCntAria","key","comment","modLine","_renderSection","dest","type","rowClassName","lineNumbersExtraClassName","spacerClassName","cnt","Math","max","originalLayoutInfo","originalLineNumbersWidth","glyphMarginWidth","lineNumbersWidth","modifiedLayoutInfo","modifiedLineNumbersWidth","originalLine","modifiedLine","style","minWidth","originalLineNumber","innerHTML","modifiedLineNumber","paddingRight","spacer","lineContent","insertAdjacentHTML","_renderLine","tabSize","getLineContent","ariaLabel","model","options","fontInfo","defaultMetadata","tokens","Uint32Array","lineTokens","isBasicASCII","mightContainNonBasicASCII","containsRTL","mightContainRTL","isMonospace","canUseHalfwidthRightwardsArrow","spaceWidth","middotWidth","OFF","html","theme","collector","lineNumbers","getColor","addRule","DiffReviewNext","id","alias","precondition","has","kbOpts","kbExpr","primary","weight","run","accessor","editor","findFocusedDiffEditor","diffReviewNext","DiffReviewPrev","diffReviewPrev","codeEditorService","diffEditors","listDiffEditors","hasWidgetFocus"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport './media/diffReview.css';\r\nimport * as nls from '../../../nls.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\r\nimport { ActionBar } from '../../../base/browser/ui/actionbar/actionbar.js';\r\nimport { DomScrollableElement } from '../../../base/browser/ui/scrollbar/scrollableElement.js';\r\nimport { Action } from '../../../base/common/actions.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { Configuration } from '../config/configuration.js';\r\nimport { EditorAction, registerEditorAction } from '../editorExtensions.js';\r\nimport { ICodeEditorService } from '../services/codeEditorService.js';\r\nimport { EditorFontLigatures } from '../../common/config/editorOptions.js';\r\nimport { LineTokens } from '../../common/core/lineTokens.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { editorLineNumbers } from '../../common/view/editorColorRegistry.js';\r\nimport { RenderLineInput, renderViewLine2 as renderViewLine } from '../../common/viewLayout/viewLineRenderer.js';\r\nimport { ViewLineRenderingData } from '../../common/viewModel/viewModel.js';\r\nimport { ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { scrollbarShadow } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nvar DIFF_LINES_PADDING = 3;\r\nvar DiffEntry = /** @class */ (function () {\r\n    function DiffEntry(originalLineStart, originalLineEnd, modifiedLineStart, modifiedLineEnd) {\r\n        this.originalLineStart = originalLineStart;\r\n        this.originalLineEnd = originalLineEnd;\r\n        this.modifiedLineStart = modifiedLineStart;\r\n        this.modifiedLineEnd = modifiedLineEnd;\r\n    }\r\n    DiffEntry.prototype.getType = function () {\r\n        if (this.originalLineStart === 0) {\r\n            return 1 /* Insert */;\r\n        }\r\n        if (this.modifiedLineStart === 0) {\r\n            return 2 /* Delete */;\r\n        }\r\n        return 0 /* Equal */;\r\n    };\r\n    return DiffEntry;\r\n}());\r\nvar Diff = /** @class */ (function () {\r\n    function Diff(entries) {\r\n        this.entries = entries;\r\n    }\r\n    return Diff;\r\n}());\r\nvar DiffReview = /** @class */ (function (_super) {\r\n    __extends(DiffReview, _super);\r\n    function DiffReview(diffEditor) {\r\n        var _this = _super.call(this) || this;\r\n        _this._width = 0;\r\n        _this._diffEditor = diffEditor;\r\n        _this._isVisible = false;\r\n        _this.shadow = createFastDomNode(document.createElement('div'));\r\n        _this.shadow.setClassName('diff-review-shadow');\r\n        _this.actionBarContainer = createFastDomNode(document.createElement('div'));\r\n        _this.actionBarContainer.setClassName('diff-review-actions');\r\n        _this._actionBar = _this._register(new ActionBar(_this.actionBarContainer.domNode));\r\n        _this._actionBar.push(new Action('diffreview.close', nls.localize('label.close', \"Close\"), 'close-diff-review', true, function () {\r\n            _this.hide();\r\n            return Promise.resolve(null);\r\n        }), { label: false, icon: true });\r\n        _this.domNode = createFastDomNode(document.createElement('div'));\r\n        _this.domNode.setClassName('diff-review monaco-editor-background');\r\n        _this._content = createFastDomNode(document.createElement('div'));\r\n        _this._content.setClassName('diff-review-content');\r\n        _this.scrollbar = _this._register(new DomScrollableElement(_this._content.domNode, {}));\r\n        _this.domNode.domNode.appendChild(_this.scrollbar.getDomNode());\r\n        _this._register(diffEditor.onDidUpdateDiff(function () {\r\n            if (!_this._isVisible) {\r\n                return;\r\n            }\r\n            _this._diffs = _this._compute();\r\n            _this._render();\r\n        }));\r\n        _this._register(diffEditor.getModifiedEditor().onDidChangeCursorPosition(function () {\r\n            if (!_this._isVisible) {\r\n                return;\r\n            }\r\n            _this._render();\r\n        }));\r\n        _this._register(diffEditor.getOriginalEditor().onDidFocusEditorWidget(function () {\r\n            if (_this._isVisible) {\r\n                _this.hide();\r\n            }\r\n        }));\r\n        _this._register(diffEditor.getModifiedEditor().onDidFocusEditorWidget(function () {\r\n            if (_this._isVisible) {\r\n                _this.hide();\r\n            }\r\n        }));\r\n        _this._register(dom.addStandardDisposableListener(_this.domNode.domNode, 'click', function (e) {\r\n            e.preventDefault();\r\n            var row = dom.findParentWithClass(e.target, 'diff-review-row');\r\n            if (row) {\r\n                _this._goToRow(row);\r\n            }\r\n        }));\r\n        _this._register(dom.addStandardDisposableListener(_this.domNode.domNode, 'keydown', function (e) {\r\n            if (e.equals(18 /* DownArrow */)\r\n                || e.equals(2048 /* CtrlCmd */ | 18 /* DownArrow */)\r\n                || e.equals(512 /* Alt */ | 18 /* DownArrow */)) {\r\n                e.preventDefault();\r\n                _this._goToRow(_this._getNextRow());\r\n            }\r\n            if (e.equals(16 /* UpArrow */)\r\n                || e.equals(2048 /* CtrlCmd */ | 16 /* UpArrow */)\r\n                || e.equals(512 /* Alt */ | 16 /* UpArrow */)) {\r\n                e.preventDefault();\r\n                _this._goToRow(_this._getPrevRow());\r\n            }\r\n            if (e.equals(9 /* Escape */)\r\n                || e.equals(2048 /* CtrlCmd */ | 9 /* Escape */)\r\n                || e.equals(512 /* Alt */ | 9 /* Escape */)\r\n                || e.equals(1024 /* Shift */ | 9 /* Escape */)) {\r\n                e.preventDefault();\r\n                _this.hide();\r\n            }\r\n            if (e.equals(10 /* Space */)\r\n                || e.equals(3 /* Enter */)) {\r\n                e.preventDefault();\r\n                _this.accept();\r\n            }\r\n        }));\r\n        _this._diffs = [];\r\n        _this._currentDiff = null;\r\n        return _this;\r\n    }\r\n    DiffReview.prototype.prev = function () {\r\n        var index = 0;\r\n        if (!this._isVisible) {\r\n            this._diffs = this._compute();\r\n        }\r\n        if (this._isVisible) {\r\n            var currentIndex = -1;\r\n            for (var i = 0, len = this._diffs.length; i < len; i++) {\r\n                if (this._diffs[i] === this._currentDiff) {\r\n                    currentIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n            index = (this._diffs.length + currentIndex - 1);\r\n        }\r\n        else {\r\n            index = this._findDiffIndex(this._diffEditor.getPosition());\r\n        }\r\n        if (this._diffs.length === 0) {\r\n            // Nothing to do\r\n            return;\r\n        }\r\n        index = index % this._diffs.length;\r\n        this._diffEditor.setPosition(new Position(this._diffs[index].entries[0].modifiedLineStart, 1));\r\n        this._isVisible = true;\r\n        this._diffEditor.doLayout();\r\n        this._render();\r\n        this._goToRow(this._getNextRow());\r\n    };\r\n    DiffReview.prototype.next = function () {\r\n        var index = 0;\r\n        if (!this._isVisible) {\r\n            this._diffs = this._compute();\r\n        }\r\n        if (this._isVisible) {\r\n            var currentIndex = -1;\r\n            for (var i = 0, len = this._diffs.length; i < len; i++) {\r\n                if (this._diffs[i] === this._currentDiff) {\r\n                    currentIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n            index = (currentIndex + 1);\r\n        }\r\n        else {\r\n            index = this._findDiffIndex(this._diffEditor.getPosition());\r\n        }\r\n        if (this._diffs.length === 0) {\r\n            // Nothing to do\r\n            return;\r\n        }\r\n        index = index % this._diffs.length;\r\n        this._diffEditor.setPosition(new Position(this._diffs[index].entries[0].modifiedLineStart, 1));\r\n        this._isVisible = true;\r\n        this._diffEditor.doLayout();\r\n        this._render();\r\n        this._goToRow(this._getNextRow());\r\n    };\r\n    DiffReview.prototype.accept = function () {\r\n        var jumpToLineNumber = -1;\r\n        var current = this._getCurrentFocusedRow();\r\n        if (current) {\r\n            var lineNumber = parseInt(current.getAttribute('data-line'), 10);\r\n            if (!isNaN(lineNumber)) {\r\n                jumpToLineNumber = lineNumber;\r\n            }\r\n        }\r\n        this.hide();\r\n        if (jumpToLineNumber !== -1) {\r\n            this._diffEditor.setPosition(new Position(jumpToLineNumber, 1));\r\n            this._diffEditor.revealPosition(new Position(jumpToLineNumber, 1), 1 /* Immediate */);\r\n        }\r\n    };\r\n    DiffReview.prototype.hide = function () {\r\n        this._isVisible = false;\r\n        this._diffEditor.focus();\r\n        this._diffEditor.doLayout();\r\n        this._render();\r\n    };\r\n    DiffReview.prototype._getPrevRow = function () {\r\n        var current = this._getCurrentFocusedRow();\r\n        if (!current) {\r\n            return this._getFirstRow();\r\n        }\r\n        if (current.previousElementSibling) {\r\n            return current.previousElementSibling;\r\n        }\r\n        return current;\r\n    };\r\n    DiffReview.prototype._getNextRow = function () {\r\n        var current = this._getCurrentFocusedRow();\r\n        if (!current) {\r\n            return this._getFirstRow();\r\n        }\r\n        if (current.nextElementSibling) {\r\n            return current.nextElementSibling;\r\n        }\r\n        return current;\r\n    };\r\n    DiffReview.prototype._getFirstRow = function () {\r\n        return this.domNode.domNode.querySelector('.diff-review-row');\r\n    };\r\n    DiffReview.prototype._getCurrentFocusedRow = function () {\r\n        var result = document.activeElement;\r\n        if (result && /diff-review-row/.test(result.className)) {\r\n            return result;\r\n        }\r\n        return null;\r\n    };\r\n    DiffReview.prototype._goToRow = function (row) {\r\n        var prev = this._getCurrentFocusedRow();\r\n        row.tabIndex = 0;\r\n        row.focus();\r\n        if (prev && prev !== row) {\r\n            prev.tabIndex = -1;\r\n        }\r\n        this.scrollbar.scanDomNode();\r\n    };\r\n    DiffReview.prototype.isVisible = function () {\r\n        return this._isVisible;\r\n    };\r\n    DiffReview.prototype.layout = function (top, width, height) {\r\n        this._width = width;\r\n        this.shadow.setTop(top - 6);\r\n        this.shadow.setWidth(width);\r\n        this.shadow.setHeight(this._isVisible ? 6 : 0);\r\n        this.domNode.setTop(top);\r\n        this.domNode.setWidth(width);\r\n        this.domNode.setHeight(height);\r\n        this._content.setHeight(height);\r\n        this._content.setWidth(width);\r\n        if (this._isVisible) {\r\n            this.actionBarContainer.setAttribute('aria-hidden', 'false');\r\n            this.actionBarContainer.setDisplay('block');\r\n        }\r\n        else {\r\n            this.actionBarContainer.setAttribute('aria-hidden', 'true');\r\n            this.actionBarContainer.setDisplay('none');\r\n        }\r\n    };\r\n    DiffReview.prototype._compute = function () {\r\n        var lineChanges = this._diffEditor.getLineChanges();\r\n        if (!lineChanges || lineChanges.length === 0) {\r\n            return [];\r\n        }\r\n        var originalModel = this._diffEditor.getOriginalEditor().getModel();\r\n        var modifiedModel = this._diffEditor.getModifiedEditor().getModel();\r\n        if (!originalModel || !modifiedModel) {\r\n            return [];\r\n        }\r\n        return DiffReview._mergeAdjacent(lineChanges, originalModel.getLineCount(), modifiedModel.getLineCount());\r\n    };\r\n    DiffReview._mergeAdjacent = function (lineChanges, originalLineCount, modifiedLineCount) {\r\n        if (!lineChanges || lineChanges.length === 0) {\r\n            return [];\r\n        }\r\n        var diffs = [], diffsLength = 0;\r\n        for (var i = 0, len = lineChanges.length; i < len; i++) {\r\n            var lineChange = lineChanges[i];\r\n            var originalStart = lineChange.originalStartLineNumber;\r\n            var originalEnd = lineChange.originalEndLineNumber;\r\n            var modifiedStart = lineChange.modifiedStartLineNumber;\r\n            var modifiedEnd = lineChange.modifiedEndLineNumber;\r\n            var r_1 = [], rLength_1 = 0;\r\n            // Emit before anchors\r\n            {\r\n                var originalEqualAbove = (originalEnd === 0 ? originalStart : originalStart - 1);\r\n                var modifiedEqualAbove = (modifiedEnd === 0 ? modifiedStart : modifiedStart - 1);\r\n                // Make sure we don't step into the previous diff\r\n                var minOriginal = 1;\r\n                var minModified = 1;\r\n                if (i > 0) {\r\n                    var prevLineChange = lineChanges[i - 1];\r\n                    if (prevLineChange.originalEndLineNumber === 0) {\r\n                        minOriginal = prevLineChange.originalStartLineNumber + 1;\r\n                    }\r\n                    else {\r\n                        minOriginal = prevLineChange.originalEndLineNumber + 1;\r\n                    }\r\n                    if (prevLineChange.modifiedEndLineNumber === 0) {\r\n                        minModified = prevLineChange.modifiedStartLineNumber + 1;\r\n                    }\r\n                    else {\r\n                        minModified = prevLineChange.modifiedEndLineNumber + 1;\r\n                    }\r\n                }\r\n                var fromOriginal = originalEqualAbove - DIFF_LINES_PADDING + 1;\r\n                var fromModified = modifiedEqualAbove - DIFF_LINES_PADDING + 1;\r\n                if (fromOriginal < minOriginal) {\r\n                    var delta = minOriginal - fromOriginal;\r\n                    fromOriginal = fromOriginal + delta;\r\n                    fromModified = fromModified + delta;\r\n                }\r\n                if (fromModified < minModified) {\r\n                    var delta = minModified - fromModified;\r\n                    fromOriginal = fromOriginal + delta;\r\n                    fromModified = fromModified + delta;\r\n                }\r\n                r_1[rLength_1++] = new DiffEntry(fromOriginal, originalEqualAbove, fromModified, modifiedEqualAbove);\r\n            }\r\n            // Emit deleted lines\r\n            {\r\n                if (originalEnd !== 0) {\r\n                    r_1[rLength_1++] = new DiffEntry(originalStart, originalEnd, 0, 0);\r\n                }\r\n            }\r\n            // Emit inserted lines\r\n            {\r\n                if (modifiedEnd !== 0) {\r\n                    r_1[rLength_1++] = new DiffEntry(0, 0, modifiedStart, modifiedEnd);\r\n                }\r\n            }\r\n            // Emit after anchors\r\n            {\r\n                var originalEqualBelow = (originalEnd === 0 ? originalStart + 1 : originalEnd + 1);\r\n                var modifiedEqualBelow = (modifiedEnd === 0 ? modifiedStart + 1 : modifiedEnd + 1);\r\n                // Make sure we don't step into the next diff\r\n                var maxOriginal = originalLineCount;\r\n                var maxModified = modifiedLineCount;\r\n                if (i + 1 < len) {\r\n                    var nextLineChange = lineChanges[i + 1];\r\n                    if (nextLineChange.originalEndLineNumber === 0) {\r\n                        maxOriginal = nextLineChange.originalStartLineNumber;\r\n                    }\r\n                    else {\r\n                        maxOriginal = nextLineChange.originalStartLineNumber - 1;\r\n                    }\r\n                    if (nextLineChange.modifiedEndLineNumber === 0) {\r\n                        maxModified = nextLineChange.modifiedStartLineNumber;\r\n                    }\r\n                    else {\r\n                        maxModified = nextLineChange.modifiedStartLineNumber - 1;\r\n                    }\r\n                }\r\n                var toOriginal = originalEqualBelow + DIFF_LINES_PADDING - 1;\r\n                var toModified = modifiedEqualBelow + DIFF_LINES_PADDING - 1;\r\n                if (toOriginal > maxOriginal) {\r\n                    var delta = maxOriginal - toOriginal;\r\n                    toOriginal = toOriginal + delta;\r\n                    toModified = toModified + delta;\r\n                }\r\n                if (toModified > maxModified) {\r\n                    var delta = maxModified - toModified;\r\n                    toOriginal = toOriginal + delta;\r\n                    toModified = toModified + delta;\r\n                }\r\n                r_1[rLength_1++] = new DiffEntry(originalEqualBelow, toOriginal, modifiedEqualBelow, toModified);\r\n            }\r\n            diffs[diffsLength++] = new Diff(r_1);\r\n        }\r\n        // Merge adjacent diffs\r\n        var curr = diffs[0].entries;\r\n        var r = [], rLength = 0;\r\n        for (var i = 1, len = diffs.length; i < len; i++) {\r\n            var thisDiff = diffs[i].entries;\r\n            var currLast = curr[curr.length - 1];\r\n            var thisFirst = thisDiff[0];\r\n            if (currLast.getType() === 0 /* Equal */\r\n                && thisFirst.getType() === 0 /* Equal */\r\n                && thisFirst.originalLineStart <= currLast.originalLineEnd) {\r\n                // We are dealing with equal lines that overlap\r\n                curr[curr.length - 1] = new DiffEntry(currLast.originalLineStart, thisFirst.originalLineEnd, currLast.modifiedLineStart, thisFirst.modifiedLineEnd);\r\n                curr = curr.concat(thisDiff.slice(1));\r\n                continue;\r\n            }\r\n            r[rLength++] = new Diff(curr);\r\n            curr = thisDiff;\r\n        }\r\n        r[rLength++] = new Diff(curr);\r\n        return r;\r\n    };\r\n    DiffReview.prototype._findDiffIndex = function (pos) {\r\n        var lineNumber = pos.lineNumber;\r\n        for (var i = 0, len = this._diffs.length; i < len; i++) {\r\n            var diff = this._diffs[i].entries;\r\n            var lastModifiedLine = diff[diff.length - 1].modifiedLineEnd;\r\n            if (lineNumber <= lastModifiedLine) {\r\n                return i;\r\n            }\r\n        }\r\n        return 0;\r\n    };\r\n    DiffReview.prototype._render = function () {\r\n        var originalOptions = this._diffEditor.getOriginalEditor().getOptions();\r\n        var modifiedOptions = this._diffEditor.getModifiedEditor().getOptions();\r\n        var originalModel = this._diffEditor.getOriginalEditor().getModel();\r\n        var modifiedModel = this._diffEditor.getModifiedEditor().getModel();\r\n        var originalModelOpts = originalModel.getOptions();\r\n        var modifiedModelOpts = modifiedModel.getOptions();\r\n        if (!this._isVisible || !originalModel || !modifiedModel) {\r\n            dom.clearNode(this._content.domNode);\r\n            this._currentDiff = null;\r\n            this.scrollbar.scanDomNode();\r\n            return;\r\n        }\r\n        var diffIndex = this._findDiffIndex(this._diffEditor.getPosition());\r\n        if (this._diffs[diffIndex] === this._currentDiff) {\r\n            return;\r\n        }\r\n        this._currentDiff = this._diffs[diffIndex];\r\n        var diffs = this._diffs[diffIndex].entries;\r\n        var container = document.createElement('div');\r\n        container.className = 'diff-review-table';\r\n        container.setAttribute('role', 'list');\r\n        Configuration.applyFontInfoSlow(container, modifiedOptions.get(34 /* fontInfo */));\r\n        var minOriginalLine = 0;\r\n        var maxOriginalLine = 0;\r\n        var minModifiedLine = 0;\r\n        var maxModifiedLine = 0;\r\n        for (var i = 0, len = diffs.length; i < len; i++) {\r\n            var diffEntry = diffs[i];\r\n            var originalLineStart = diffEntry.originalLineStart;\r\n            var originalLineEnd = diffEntry.originalLineEnd;\r\n            var modifiedLineStart = diffEntry.modifiedLineStart;\r\n            var modifiedLineEnd = diffEntry.modifiedLineEnd;\r\n            if (originalLineStart !== 0 && ((minOriginalLine === 0 || originalLineStart < minOriginalLine))) {\r\n                minOriginalLine = originalLineStart;\r\n            }\r\n            if (originalLineEnd !== 0 && ((maxOriginalLine === 0 || originalLineEnd > maxOriginalLine))) {\r\n                maxOriginalLine = originalLineEnd;\r\n            }\r\n            if (modifiedLineStart !== 0 && ((minModifiedLine === 0 || modifiedLineStart < minModifiedLine))) {\r\n                minModifiedLine = modifiedLineStart;\r\n            }\r\n            if (modifiedLineEnd !== 0 && ((maxModifiedLine === 0 || modifiedLineEnd > maxModifiedLine))) {\r\n                maxModifiedLine = modifiedLineEnd;\r\n            }\r\n        }\r\n        var header = document.createElement('div');\r\n        header.className = 'diff-review-row';\r\n        var cell = document.createElement('div');\r\n        cell.className = 'diff-review-cell diff-review-summary';\r\n        var originalChangedLinesCnt = maxOriginalLine - minOriginalLine + 1;\r\n        var modifiedChangedLinesCnt = maxModifiedLine - minModifiedLine + 1;\r\n        cell.appendChild(document.createTextNode(diffIndex + 1 + \"/\" + this._diffs.length + \": @@ -\" + minOriginalLine + \",\" + originalChangedLinesCnt + \" +\" + minModifiedLine + \",\" + modifiedChangedLinesCnt + \" @@\"));\r\n        header.setAttribute('data-line', String(minModifiedLine));\r\n        var getAriaLines = function (lines) {\r\n            if (lines === 0) {\r\n                return nls.localize('no_lines', \"no lines\");\r\n            }\r\n            else if (lines === 1) {\r\n                return nls.localize('one_line', \"1 line\");\r\n            }\r\n            else {\r\n                return nls.localize('more_lines', \"{0} lines\", lines);\r\n            }\r\n        };\r\n        var originalChangedLinesCntAria = getAriaLines(originalChangedLinesCnt);\r\n        var modifiedChangedLinesCntAria = getAriaLines(modifiedChangedLinesCnt);\r\n        header.setAttribute('aria-label', nls.localize({\r\n            key: 'header',\r\n            comment: [\r\n                'This is the ARIA label for a git diff header.',\r\n                'A git diff header looks like this: @@ -154,12 +159,39 @@.',\r\n                'That encodes that at original line 154 (which is now line 159), 12 lines were removed/changed with 39 lines.',\r\n                'Variables 0 and 1 refer to the diff index out of total number of diffs.',\r\n                'Variables 2 and 4 will be numbers (a line number).',\r\n                'Variables 3 and 5 will be \"no lines\", \"1 line\" or \"X lines\", localized separately.'\r\n            ]\r\n        }, \"Difference {0} of {1}: original {2}, {3}, modified {4}, {5}\", (diffIndex + 1), this._diffs.length, minOriginalLine, originalChangedLinesCntAria, minModifiedLine, modifiedChangedLinesCntAria));\r\n        header.appendChild(cell);\r\n        // @@ -504,7 +517,7 @@\r\n        header.setAttribute('role', 'listitem');\r\n        container.appendChild(header);\r\n        var modLine = minModifiedLine;\r\n        for (var i = 0, len = diffs.length; i < len; i++) {\r\n            var diffEntry = diffs[i];\r\n            DiffReview._renderSection(container, diffEntry, modLine, this._width, originalOptions, originalModel, originalModelOpts, modifiedOptions, modifiedModel, modifiedModelOpts);\r\n            if (diffEntry.modifiedLineStart !== 0) {\r\n                modLine = diffEntry.modifiedLineEnd;\r\n            }\r\n        }\r\n        dom.clearNode(this._content.domNode);\r\n        this._content.domNode.appendChild(container);\r\n        this.scrollbar.scanDomNode();\r\n    };\r\n    DiffReview._renderSection = function (dest, diffEntry, modLine, width, originalOptions, originalModel, originalModelOpts, modifiedOptions, modifiedModel, modifiedModelOpts) {\r\n        var type = diffEntry.getType();\r\n        var rowClassName = 'diff-review-row';\r\n        var lineNumbersExtraClassName = '';\r\n        var spacerClassName = 'diff-review-spacer';\r\n        switch (type) {\r\n            case 1 /* Insert */:\r\n                rowClassName = 'diff-review-row line-insert';\r\n                lineNumbersExtraClassName = ' char-insert';\r\n                spacerClassName = 'diff-review-spacer insert-sign';\r\n                break;\r\n            case 2 /* Delete */:\r\n                rowClassName = 'diff-review-row line-delete';\r\n                lineNumbersExtraClassName = ' char-delete';\r\n                spacerClassName = 'diff-review-spacer delete-sign';\r\n                break;\r\n        }\r\n        var originalLineStart = diffEntry.originalLineStart;\r\n        var originalLineEnd = diffEntry.originalLineEnd;\r\n        var modifiedLineStart = diffEntry.modifiedLineStart;\r\n        var modifiedLineEnd = diffEntry.modifiedLineEnd;\r\n        var cnt = Math.max(modifiedLineEnd - modifiedLineStart, originalLineEnd - originalLineStart);\r\n        var originalLayoutInfo = originalOptions.get(107 /* layoutInfo */);\r\n        var originalLineNumbersWidth = originalLayoutInfo.glyphMarginWidth + originalLayoutInfo.lineNumbersWidth;\r\n        var modifiedLayoutInfo = modifiedOptions.get(107 /* layoutInfo */);\r\n        var modifiedLineNumbersWidth = 10 + modifiedLayoutInfo.glyphMarginWidth + modifiedLayoutInfo.lineNumbersWidth;\r\n        for (var i = 0; i <= cnt; i++) {\r\n            var originalLine = (originalLineStart === 0 ? 0 : originalLineStart + i);\r\n            var modifiedLine = (modifiedLineStart === 0 ? 0 : modifiedLineStart + i);\r\n            var row = document.createElement('div');\r\n            row.style.minWidth = width + 'px';\r\n            row.className = rowClassName;\r\n            row.setAttribute('role', 'listitem');\r\n            if (modifiedLine !== 0) {\r\n                modLine = modifiedLine;\r\n            }\r\n            row.setAttribute('data-line', String(modLine));\r\n            var cell = document.createElement('div');\r\n            cell.className = 'diff-review-cell';\r\n            row.appendChild(cell);\r\n            var originalLineNumber = document.createElement('span');\r\n            originalLineNumber.style.width = (originalLineNumbersWidth + 'px');\r\n            originalLineNumber.style.minWidth = (originalLineNumbersWidth + 'px');\r\n            originalLineNumber.className = 'diff-review-line-number' + lineNumbersExtraClassName;\r\n            if (originalLine !== 0) {\r\n                originalLineNumber.appendChild(document.createTextNode(String(originalLine)));\r\n            }\r\n            else {\r\n                originalLineNumber.innerHTML = '&#160;';\r\n            }\r\n            cell.appendChild(originalLineNumber);\r\n            var modifiedLineNumber = document.createElement('span');\r\n            modifiedLineNumber.style.width = (modifiedLineNumbersWidth + 'px');\r\n            modifiedLineNumber.style.minWidth = (modifiedLineNumbersWidth + 'px');\r\n            modifiedLineNumber.style.paddingRight = '10px';\r\n            modifiedLineNumber.className = 'diff-review-line-number' + lineNumbersExtraClassName;\r\n            if (modifiedLine !== 0) {\r\n                modifiedLineNumber.appendChild(document.createTextNode(String(modifiedLine)));\r\n            }\r\n            else {\r\n                modifiedLineNumber.innerHTML = '&#160;';\r\n            }\r\n            cell.appendChild(modifiedLineNumber);\r\n            var spacer = document.createElement('span');\r\n            spacer.className = spacerClassName;\r\n            spacer.innerHTML = '&#160;&#160;';\r\n            cell.appendChild(spacer);\r\n            var lineContent = void 0;\r\n            if (modifiedLine !== 0) {\r\n                cell.insertAdjacentHTML('beforeend', this._renderLine(modifiedModel, modifiedOptions, modifiedModelOpts.tabSize, modifiedLine));\r\n                lineContent = modifiedModel.getLineContent(modifiedLine);\r\n            }\r\n            else {\r\n                cell.insertAdjacentHTML('beforeend', this._renderLine(originalModel, originalOptions, originalModelOpts.tabSize, originalLine));\r\n                lineContent = originalModel.getLineContent(originalLine);\r\n            }\r\n            if (lineContent.length === 0) {\r\n                lineContent = nls.localize('blankLine', \"blank\");\r\n            }\r\n            var ariaLabel = '';\r\n            switch (type) {\r\n                case 0 /* Equal */:\r\n                    ariaLabel = nls.localize('equalLine', \"original {0}, modified {1}: {2}\", originalLine, modifiedLine, lineContent);\r\n                    break;\r\n                case 1 /* Insert */:\r\n                    ariaLabel = nls.localize('insertLine', \"+ modified {0}: {1}\", modifiedLine, lineContent);\r\n                    break;\r\n                case 2 /* Delete */:\r\n                    ariaLabel = nls.localize('deleteLine', \"- original {0}: {1}\", originalLine, lineContent);\r\n                    break;\r\n            }\r\n            row.setAttribute('aria-label', ariaLabel);\r\n            dest.appendChild(row);\r\n        }\r\n    };\r\n    DiffReview._renderLine = function (model, options, tabSize, lineNumber) {\r\n        var lineContent = model.getLineContent(lineNumber);\r\n        var fontInfo = options.get(34 /* fontInfo */);\r\n        var defaultMetadata = ((0 /* None */ << 11 /* FONT_STYLE_OFFSET */)\r\n            | (1 /* DefaultForeground */ << 14 /* FOREGROUND_OFFSET */)\r\n            | (2 /* DefaultBackground */ << 23 /* BACKGROUND_OFFSET */)) >>> 0;\r\n        var tokens = new Uint32Array(2);\r\n        tokens[0] = lineContent.length;\r\n        tokens[1] = defaultMetadata;\r\n        var lineTokens = new LineTokens(tokens, lineContent);\r\n        var isBasicASCII = ViewLineRenderingData.isBasicASCII(lineContent, model.mightContainNonBasicASCII());\r\n        var containsRTL = ViewLineRenderingData.containsRTL(lineContent, isBasicASCII, model.mightContainRTL());\r\n        var r = renderViewLine(new RenderLineInput((fontInfo.isMonospace && !options.get(23 /* disableMonospaceOptimizations */)), fontInfo.canUseHalfwidthRightwardsArrow, lineContent, false, isBasicASCII, containsRTL, 0, lineTokens, [], tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, options.get(88 /* stopRenderingLineAfter */), options.get(74 /* renderWhitespace */), options.get(69 /* renderControlCharacters */), options.get(35 /* fontLigatures */) !== EditorFontLigatures.OFF, null));\r\n        return r.html;\r\n    };\r\n    return DiffReview;\r\n}(Disposable));\r\nexport { DiffReview };\r\n// theming\r\nregisterThemingParticipant(function (theme, collector) {\r\n    var lineNumbers = theme.getColor(editorLineNumbers);\r\n    if (lineNumbers) {\r\n        collector.addRule(\".monaco-diff-editor .diff-review-line-number { color: \" + lineNumbers + \"; }\");\r\n    }\r\n    var shadow = theme.getColor(scrollbarShadow);\r\n    if (shadow) {\r\n        collector.addRule(\".monaco-diff-editor .diff-review-shadow { box-shadow: \" + shadow + \" 0 -6px 6px -6px inset; }\");\r\n    }\r\n});\r\nvar DiffReviewNext = /** @class */ (function (_super) {\r\n    __extends(DiffReviewNext, _super);\r\n    function DiffReviewNext() {\r\n        return _super.call(this, {\r\n            id: 'editor.action.diffReview.next',\r\n            label: nls.localize('editor.action.diffReview.next', \"Go to Next Difference\"),\r\n            alias: 'Go to Next Difference',\r\n            precondition: ContextKeyExpr.has('isInDiffEditor'),\r\n            kbOpts: {\r\n                kbExpr: null,\r\n                primary: 65 /* F7 */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        }) || this;\r\n    }\r\n    DiffReviewNext.prototype.run = function (accessor, editor) {\r\n        var diffEditor = findFocusedDiffEditor(accessor);\r\n        if (diffEditor) {\r\n            diffEditor.diffReviewNext();\r\n        }\r\n    };\r\n    return DiffReviewNext;\r\n}(EditorAction));\r\nvar DiffReviewPrev = /** @class */ (function (_super) {\r\n    __extends(DiffReviewPrev, _super);\r\n    function DiffReviewPrev() {\r\n        return _super.call(this, {\r\n            id: 'editor.action.diffReview.prev',\r\n            label: nls.localize('editor.action.diffReview.prev', \"Go to Previous Difference\"),\r\n            alias: 'Go to Previous Difference',\r\n            precondition: ContextKeyExpr.has('isInDiffEditor'),\r\n            kbOpts: {\r\n                kbExpr: null,\r\n                primary: 1024 /* Shift */ | 65 /* F7 */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        }) || this;\r\n    }\r\n    DiffReviewPrev.prototype.run = function (accessor, editor) {\r\n        var diffEditor = findFocusedDiffEditor(accessor);\r\n        if (diffEditor) {\r\n            diffEditor.diffReviewPrev();\r\n        }\r\n    };\r\n    return DiffReviewPrev;\r\n}(EditorAction));\r\nfunction findFocusedDiffEditor(accessor) {\r\n    var codeEditorService = accessor.get(ICodeEditorService);\r\n    var diffEditors = codeEditorService.listDiffEditors();\r\n    for (var i = 0, len = diffEditors.length; i < len; i++) {\r\n        var diffEditor = diffEditors[i];\r\n        if (diffEditor.hasWidgetFocus()) {\r\n            return diffEditor;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nregisterEditorAction(DiffReviewNext);\r\nregisterEditorAction(DiffReviewPrev);\r\n"]},"metadata":{},"sourceType":"module"}