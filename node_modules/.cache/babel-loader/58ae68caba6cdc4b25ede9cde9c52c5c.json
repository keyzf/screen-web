{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nimport { toDisposable } from '../../../base/common/lifecycle.js';\nimport { validateConstraints } from '../../../base/common/types.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nimport { keys } from '../../../base/common/map.js';\nexport var ICommandService = createDecorator('commandService');\nexport var CommandsRegistry = new (\n/** @class */\nfunction () {\n  function class_1() {\n    this._commands = new Map();\n    this._onDidRegisterCommand = new Emitter();\n    this.onDidRegisterCommand = this._onDidRegisterCommand.event;\n  }\n\n  class_1.prototype.registerCommand = function (idOrCommand, handler) {\n    var _this = this;\n\n    if (!idOrCommand) {\n      throw new Error(\"invalid command\");\n    }\n\n    if (typeof idOrCommand === 'string') {\n      if (!handler) {\n        throw new Error(\"invalid command\");\n      }\n\n      return this.registerCommand({\n        id: idOrCommand,\n        handler: handler\n      });\n    } // add argument validation if rich command metadata is provided\n\n\n    if (idOrCommand.description) {\n      var constraints_1 = [];\n\n      for (var _i = 0, _a = idOrCommand.description.args; _i < _a.length; _i++) {\n        var arg = _a[_i];\n        constraints_1.push(arg.constraint);\n      }\n\n      var actualHandler_1 = idOrCommand.handler;\n\n      idOrCommand.handler = function (accessor) {\n        var args = [];\n\n        for (var _i = 1; _i < arguments.length; _i++) {\n          args[_i - 1] = arguments[_i];\n        }\n\n        validateConstraints(args, constraints_1);\n        return actualHandler_1.apply(void 0, __spreadArrays([accessor], args));\n      };\n    } // find a place to store the command\n\n\n    var id = idOrCommand.id;\n\n    var commands = this._commands.get(id);\n\n    if (!commands) {\n      commands = new LinkedList();\n\n      this._commands.set(id, commands);\n    }\n\n    var removeFn = commands.unshift(idOrCommand);\n    var ret = toDisposable(function () {\n      removeFn();\n\n      var command = _this._commands.get(id);\n\n      if (command === null || command === void 0 ? void 0 : command.isEmpty()) {\n        _this._commands.delete(id);\n      }\n    }); // tell the world about this command\n\n    this._onDidRegisterCommand.fire(id);\n\n    return ret;\n  };\n\n  class_1.prototype.registerCommandAlias = function (oldId, newId) {\n    return CommandsRegistry.registerCommand(oldId, function (accessor) {\n      var _a;\n\n      var args = [];\n\n      for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n      }\n\n      return (_a = accessor.get(ICommandService)).executeCommand.apply(_a, __spreadArrays([newId], args));\n    });\n  };\n\n  class_1.prototype.getCommand = function (id) {\n    var list = this._commands.get(id);\n\n    if (!list || list.isEmpty()) {\n      return undefined;\n    }\n\n    return list.iterator().next().value;\n  };\n\n  class_1.prototype.getCommands = function () {\n    var result = new Map();\n\n    for (var _i = 0, _a = keys(this._commands); _i < _a.length; _i++) {\n      var key = _a[_i];\n      var command = this.getCommand(key);\n\n      if (command) {\n        result.set(key, command);\n      }\n    }\n\n    return result;\n  };\n\n  return class_1;\n}())();","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/platform/commands/common/commands.js"],"names":["__spreadArrays","s","i","il","arguments","length","r","Array","k","a","j","jl","toDisposable","validateConstraints","createDecorator","Emitter","LinkedList","keys","ICommandService","CommandsRegistry","class_1","_commands","Map","_onDidRegisterCommand","onDidRegisterCommand","event","prototype","registerCommand","idOrCommand","handler","_this","Error","id","description","constraints_1","_i","_a","args","arg","push","constraint","actualHandler_1","accessor","apply","commands","get","set","removeFn","unshift","ret","command","isEmpty","delete","fire","registerCommandAlias","oldId","newId","executeCommand","getCommand","list","undefined","iterator","next","value","getCommands","result","key"],"mappings":"AAAA;;;;AAIA,IAAIA,cAAc,GAAI,QAAQ,KAAKA,cAAd,IAAiC,YAAY;AAC9D,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG,CAAf,EAAkBC,EAAE,GAAGC,SAAS,CAACC,MAAtC,EAA8CH,CAAC,GAAGC,EAAlD,EAAsDD,CAAC,EAAvD,EAA2DD,CAAC,IAAIG,SAAS,CAACF,CAAD,CAAT,CAAaG,MAAlB;;AAC3D,OAAK,IAAIC,CAAC,GAAGC,KAAK,CAACN,CAAD,CAAb,EAAkBO,CAAC,GAAG,CAAtB,EAAyBN,CAAC,GAAG,CAAlC,EAAqCA,CAAC,GAAGC,EAAzC,EAA6CD,CAAC,EAA9C,EACI,KAAK,IAAIO,CAAC,GAAGL,SAAS,CAACF,CAAD,CAAjB,EAAsBQ,CAAC,GAAG,CAA1B,EAA6BC,EAAE,GAAGF,CAAC,CAACJ,MAAzC,EAAiDK,CAAC,GAAGC,EAArD,EAAyDD,CAAC,IAAIF,CAAC,EAA/D,EACIF,CAAC,CAACE,CAAD,CAAD,GAAOC,CAAC,CAACC,CAAD,CAAR;;AACR,SAAOJ,CAAP;AACH,CAND;;AAOA,SAASM,YAAT,QAA6B,mCAA7B;AACA,SAASC,mBAAT,QAAoC,+BAApC;AACA,SAASC,eAAT,QAAgC,6CAAhC;AACA,SAASC,OAAT,QAAwB,+BAAxB;AACA,SAASC,UAAT,QAA2B,oCAA3B;AACA,SAASC,IAAT,QAAqB,6BAArB;AACA,OAAO,IAAIC,eAAe,GAAGJ,eAAe,CAAC,gBAAD,CAArC;AACP,OAAO,IAAIK,gBAAgB,GAAG;AAAI;AAAe,YAAY;AACzD,WAASC,OAAT,GAAmB;AACf,SAAKC,SAAL,GAAiB,IAAIC,GAAJ,EAAjB;AACA,SAAKC,qBAAL,GAA6B,IAAIR,OAAJ,EAA7B;AACA,SAAKS,oBAAL,GAA4B,KAAKD,qBAAL,CAA2BE,KAAvD;AACH;;AACDL,EAAAA,OAAO,CAACM,SAAR,CAAkBC,eAAlB,GAAoC,UAAUC,WAAV,EAAuBC,OAAvB,EAAgC;AAChE,QAAIC,KAAK,GAAG,IAAZ;;AACA,QAAI,CAACF,WAAL,EAAkB;AACd,YAAM,IAAIG,KAAJ,CAAU,iBAAV,CAAN;AACH;;AACD,QAAI,OAAOH,WAAP,KAAuB,QAA3B,EAAqC;AACjC,UAAI,CAACC,OAAL,EAAc;AACV,cAAM,IAAIE,KAAJ,CAAU,iBAAV,CAAN;AACH;;AACD,aAAO,KAAKJ,eAAL,CAAqB;AAAEK,QAAAA,EAAE,EAAEJ,WAAN;AAAmBC,QAAAA,OAAO,EAAEA;AAA5B,OAArB,CAAP;AACH,KAV+D,CAWhE;;;AACA,QAAID,WAAW,CAACK,WAAhB,EAA6B;AACzB,UAAIC,aAAa,GAAG,EAApB;;AACA,WAAK,IAAIC,EAAE,GAAG,CAAT,EAAYC,EAAE,GAAGR,WAAW,CAACK,WAAZ,CAAwBI,IAA9C,EAAoDF,EAAE,GAAGC,EAAE,CAAC/B,MAA5D,EAAoE8B,EAAE,EAAtE,EAA0E;AACtE,YAAIG,GAAG,GAAGF,EAAE,CAACD,EAAD,CAAZ;AACAD,QAAAA,aAAa,CAACK,IAAd,CAAmBD,GAAG,CAACE,UAAvB;AACH;;AACD,UAAIC,eAAe,GAAGb,WAAW,CAACC,OAAlC;;AACAD,MAAAA,WAAW,CAACC,OAAZ,GAAsB,UAAUa,QAAV,EAAoB;AACtC,YAAIL,IAAI,GAAG,EAAX;;AACA,aAAK,IAAIF,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAG/B,SAAS,CAACC,MAAhC,EAAwC8B,EAAE,EAA1C,EAA8C;AAC1CE,UAAAA,IAAI,CAACF,EAAE,GAAG,CAAN,CAAJ,GAAe/B,SAAS,CAAC+B,EAAD,CAAxB;AACH;;AACDtB,QAAAA,mBAAmB,CAACwB,IAAD,EAAOH,aAAP,CAAnB;AACA,eAAOO,eAAe,CAACE,KAAhB,CAAsB,KAAK,CAA3B,EAA8B3C,cAAc,CAAC,CAAC0C,QAAD,CAAD,EAAaL,IAAb,CAA5C,CAAP;AACH,OAPD;AAQH,KA3B+D,CA4BhE;;;AACA,QAAIL,EAAE,GAAGJ,WAAW,CAACI,EAArB;;AACA,QAAIY,QAAQ,GAAG,KAAKvB,SAAL,CAAewB,GAAf,CAAmBb,EAAnB,CAAf;;AACA,QAAI,CAACY,QAAL,EAAe;AACXA,MAAAA,QAAQ,GAAG,IAAI5B,UAAJ,EAAX;;AACA,WAAKK,SAAL,CAAeyB,GAAf,CAAmBd,EAAnB,EAAuBY,QAAvB;AACH;;AACD,QAAIG,QAAQ,GAAGH,QAAQ,CAACI,OAAT,CAAiBpB,WAAjB,CAAf;AACA,QAAIqB,GAAG,GAAGrC,YAAY,CAAC,YAAY;AAC/BmC,MAAAA,QAAQ;;AACR,UAAIG,OAAO,GAAGpB,KAAK,CAACT,SAAN,CAAgBwB,GAAhB,CAAoBb,EAApB,CAAd;;AACA,UAAIkB,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACC,OAAR,EAAtD,EAAyE;AACrErB,QAAAA,KAAK,CAACT,SAAN,CAAgB+B,MAAhB,CAAuBpB,EAAvB;AACH;AACJ,KANqB,CAAtB,CApCgE,CA2ChE;;AACA,SAAKT,qBAAL,CAA2B8B,IAA3B,CAAgCrB,EAAhC;;AACA,WAAOiB,GAAP;AACH,GA9CD;;AA+CA7B,EAAAA,OAAO,CAACM,SAAR,CAAkB4B,oBAAlB,GAAyC,UAAUC,KAAV,EAAiBC,KAAjB,EAAwB;AAC7D,WAAOrC,gBAAgB,CAACQ,eAAjB,CAAiC4B,KAAjC,EAAwC,UAAUb,QAAV,EAAoB;AAC/D,UAAIN,EAAJ;;AACA,UAAIC,IAAI,GAAG,EAAX;;AACA,WAAK,IAAIF,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAG/B,SAAS,CAACC,MAAhC,EAAwC8B,EAAE,EAA1C,EAA8C;AAC1CE,QAAAA,IAAI,CAACF,EAAE,GAAG,CAAN,CAAJ,GAAe/B,SAAS,CAAC+B,EAAD,CAAxB;AACH;;AACD,aAAO,CAACC,EAAE,GAAGM,QAAQ,CAACG,GAAT,CAAa3B,eAAb,CAAN,EAAqCuC,cAArC,CAAoDd,KAApD,CAA0DP,EAA1D,EAA8DpC,cAAc,CAAC,CAACwD,KAAD,CAAD,EAAUnB,IAAV,CAA5E,CAAP;AACH,KAPM,CAAP;AAQH,GATD;;AAUAjB,EAAAA,OAAO,CAACM,SAAR,CAAkBgC,UAAlB,GAA+B,UAAU1B,EAAV,EAAc;AACzC,QAAI2B,IAAI,GAAG,KAAKtC,SAAL,CAAewB,GAAf,CAAmBb,EAAnB,CAAX;;AACA,QAAI,CAAC2B,IAAD,IAASA,IAAI,CAACR,OAAL,EAAb,EAA6B;AACzB,aAAOS,SAAP;AACH;;AACD,WAAOD,IAAI,CAACE,QAAL,GAAgBC,IAAhB,GAAuBC,KAA9B;AACH,GAND;;AAOA3C,EAAAA,OAAO,CAACM,SAAR,CAAkBsC,WAAlB,GAAgC,YAAY;AACxC,QAAIC,MAAM,GAAG,IAAI3C,GAAJ,EAAb;;AACA,SAAK,IAAIa,EAAE,GAAG,CAAT,EAAYC,EAAE,GAAGnB,IAAI,CAAC,KAAKI,SAAN,CAA1B,EAA4Cc,EAAE,GAAGC,EAAE,CAAC/B,MAApD,EAA4D8B,EAAE,EAA9D,EAAkE;AAC9D,UAAI+B,GAAG,GAAG9B,EAAE,CAACD,EAAD,CAAZ;AACA,UAAIe,OAAO,GAAG,KAAKQ,UAAL,CAAgBQ,GAAhB,CAAd;;AACA,UAAIhB,OAAJ,EAAa;AACTe,QAAAA,MAAM,CAACnB,GAAP,CAAWoB,GAAX,EAAgBhB,OAAhB;AACH;AACJ;;AACD,WAAOe,MAAP;AACH,GAVD;;AAWA,SAAO7C,OAAP;AACH,CAlFgD,EAAnB,GAAvB","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\nimport { toDisposable } from '../../../base/common/lifecycle.js';\r\nimport { validateConstraints } from '../../../base/common/types.js';\r\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { LinkedList } from '../../../base/common/linkedList.js';\r\nimport { keys } from '../../../base/common/map.js';\r\nexport var ICommandService = createDecorator('commandService');\r\nexport var CommandsRegistry = new /** @class */ (function () {\r\n    function class_1() {\r\n        this._commands = new Map();\r\n        this._onDidRegisterCommand = new Emitter();\r\n        this.onDidRegisterCommand = this._onDidRegisterCommand.event;\r\n    }\r\n    class_1.prototype.registerCommand = function (idOrCommand, handler) {\r\n        var _this = this;\r\n        if (!idOrCommand) {\r\n            throw new Error(\"invalid command\");\r\n        }\r\n        if (typeof idOrCommand === 'string') {\r\n            if (!handler) {\r\n                throw new Error(\"invalid command\");\r\n            }\r\n            return this.registerCommand({ id: idOrCommand, handler: handler });\r\n        }\r\n        // add argument validation if rich command metadata is provided\r\n        if (idOrCommand.description) {\r\n            var constraints_1 = [];\r\n            for (var _i = 0, _a = idOrCommand.description.args; _i < _a.length; _i++) {\r\n                var arg = _a[_i];\r\n                constraints_1.push(arg.constraint);\r\n            }\r\n            var actualHandler_1 = idOrCommand.handler;\r\n            idOrCommand.handler = function (accessor) {\r\n                var args = [];\r\n                for (var _i = 1; _i < arguments.length; _i++) {\r\n                    args[_i - 1] = arguments[_i];\r\n                }\r\n                validateConstraints(args, constraints_1);\r\n                return actualHandler_1.apply(void 0, __spreadArrays([accessor], args));\r\n            };\r\n        }\r\n        // find a place to store the command\r\n        var id = idOrCommand.id;\r\n        var commands = this._commands.get(id);\r\n        if (!commands) {\r\n            commands = new LinkedList();\r\n            this._commands.set(id, commands);\r\n        }\r\n        var removeFn = commands.unshift(idOrCommand);\r\n        var ret = toDisposable(function () {\r\n            removeFn();\r\n            var command = _this._commands.get(id);\r\n            if (command === null || command === void 0 ? void 0 : command.isEmpty()) {\r\n                _this._commands.delete(id);\r\n            }\r\n        });\r\n        // tell the world about this command\r\n        this._onDidRegisterCommand.fire(id);\r\n        return ret;\r\n    };\r\n    class_1.prototype.registerCommandAlias = function (oldId, newId) {\r\n        return CommandsRegistry.registerCommand(oldId, function (accessor) {\r\n            var _a;\r\n            var args = [];\r\n            for (var _i = 1; _i < arguments.length; _i++) {\r\n                args[_i - 1] = arguments[_i];\r\n            }\r\n            return (_a = accessor.get(ICommandService)).executeCommand.apply(_a, __spreadArrays([newId], args));\r\n        });\r\n    };\r\n    class_1.prototype.getCommand = function (id) {\r\n        var list = this._commands.get(id);\r\n        if (!list || list.isEmpty()) {\r\n            return undefined;\r\n        }\r\n        return list.iterator().next().value;\r\n    };\r\n    class_1.prototype.getCommands = function () {\r\n        var result = new Map();\r\n        for (var _i = 0, _a = keys(this._commands); _i < _a.length; _i++) {\r\n            var key = _a[_i];\r\n            var command = this.getCommand(key);\r\n            if (command) {\r\n                result.set(key, command);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    return class_1;\r\n}());\r\n"]},"metadata":{},"sourceType":"module"}