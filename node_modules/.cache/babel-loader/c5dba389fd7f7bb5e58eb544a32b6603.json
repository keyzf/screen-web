{"ast":null,"code":"var _jsxFileName = \"/Users/ifudata/eclipse-workspace/screen-web/src/components/Editor/CanvasPanel/index.js\";\nimport React, { Component } from 'react';\nimport classnames from 'classnames';\nimport { connect } from 'react-redux';\nimport echarts from 'echarts';\nimport ReactEcharts from 'echarts-for-react';\nimport dark from '../../../config/echarts-theme/dark';\nimport { Slider, InputNumber } from 'antd';\nimport { Rnd } from 'react-rnd';\nimport { changeItem } from '../../../store/actions/screen-actions';\nimport { changeSetting } from '../../../store/actions/setting-actions';\necharts.registerTheme('dark', dark);\n\nclass CanvasPanel extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      editorSize: 100\n    };\n\n    this.editorSizeChange = value => {\n      this.setState({\n        editorSize: value\n      });\n    };\n\n    this.onWheel = event => {\n      // console.log(event)\n      // console.log(event.nativeEvent)\n      if (event.ctrlKey) {\n        // event.deltaY 正值向上滚动，负值为向下滚动\n        // event.clientX 鼠标距离浏览器可视区左侧距离\n        // event.screenX 鼠标距离显示器左侧的距离\n        // event.pageX 鼠标距离document左侧的距离\n        var editorSize = this.state.editorSize + event.deltaY;\n\n        if (editorSize < this.props.min) {\n          editorSize = this.props.min;\n        } else if (editorSize > this.props.max) {\n          editorSize = this.props.max;\n        }\n\n        this.setState({\n          editorSize\n        });\n      }\n    };\n\n    this.getStatusData = () => {\n      // console.log(this.editorWrap)\n      if (!this.editorWrap) {\n        return {\n          editorScale: 1,\n          editorInnerWidth: 1920,\n          editorInnerHeight: 1080,\n          editorInnerPaddingVertical: 50,\n          editorInnerPaddingHorizontal: 50\n        };\n      }\n\n      ;\n      let editorWrapWidth = this.editorWrap.offsetWidth;\n      let editorWrapHeight = this.editorWrap.offsetHeight;\n      let editorScale;\n      let editorInnerWidth;\n      let editorInnerHeight;\n      let editorInnerPaddingVertical;\n      let editorInnerPaddingHorizontal;\n      const {\n        editorWidth,\n        editorHeight\n      } = this.props;\n      editorScale = (this.state.editorSize / 100).toFixed(1);\n      editorInnerWidth = Math.round(editorWidth * editorScale);\n      editorInnerHeight = Math.round(editorHeight * editorScale);\n\n      if (editorInnerHeight + 100 < editorWrapHeight) {\n        editorInnerPaddingVertical = Math.floor((editorWrapHeight - editorInnerHeight) / 2);\n      } else {\n        editorInnerPaddingVertical = 50;\n      }\n\n      if (editorInnerWidth + 100 < editorWrapWidth) {\n        editorInnerPaddingHorizontal = Math.floor((editorWrapWidth - editorInnerHeight) / 2);\n      } else {\n        editorInnerPaddingHorizontal = 50;\n      }\n\n      return {\n        editorScale,\n        editorInnerWidth,\n        editorInnerHeight,\n        editorInnerPaddingVertical,\n        editorInnerPaddingHorizontal\n      };\n    };\n\n    this.itemDrag = (id, e, d) => {\n      // console.log(e)\n      // console.log(d)\n      this.props.changeItem({\n        id,\n        data: {\n          style: {\n            x: parseInt(d.x),\n            y: parseInt(d.y)\n          }\n        }\n      });\n    };\n\n    this.itemResize = (id, e, direction, ref, delta, position) => {\n      // console.log(ref.style)\n      // console.log(\"direction\",direction)\n      // console.log(\"delta\",delta)\n      // console.log(\"position\",position)\n      // console.log(ref.style.width)\n      this.props.changeItem({\n        id,\n        data: {\n          style: {\n            width: parseInt(ref.style.width),\n            height: parseInt(ref.style.height),\n            x: parseInt(position.x),\n            y: parseInt(position.y)\n          }\n        }\n      });\n    };\n\n    this.moduleSetting = item => {\n      this.props.changeSetting(item.id);\n    };\n\n    this.getLineOptionsBymodule = module => {\n      console.log(module);\n      const clearData = eval(module.data.data.replace(/\\ +/g, \"\").replace(/[\\r\\n]/g, \"\"));\n      console.log(clearData);\n      let legendArr = [];\n      let xAxisArr = [];\n      let seriseArr = [];\n      clearData.forEach(value => {\n        legendArr.push(value.name);\n        let seriseData = [];\n        clearData.data.forEach(val => {\n          xAxisArr.push(val.name);\n          seriseData.push(val.value);\n        });\n        seriseArr.push({\n          name: value.name,\n          type: 'line',\n          smooth: false,\n          label: {\n            show: false,\n            offset: [0, 0],\n            fontSize: 14\n          },\n          data: seriseData\n        });\n      });\n      module.options.legend.data = legendArr;\n      module.options.xAxis.data = xAxisArr;\n      module.options.series = seriseArr;\n      return module;\n    };\n  }\n\n  componentDidMount() {\n    const {\n      editorWidth\n    } = this.props;\n    const editorWrapWidth = this.editorWrap.offsetWidth; // console.log(editorWrapWidth)\n\n    const editorSize = Math.round((editorWrapWidth - 100) / editorWidth * 100);\n    this.setState({\n      editorSize: editorSize\n    });\n  }\n\n  render() {\n    const {\n      editorWidth,\n      editorHeight\n    } = this.props;\n    const {\n      editorScale,\n      editorInnerWidth,\n      editorInnerHeight,\n      editorInnerPaddingVertical,\n      editorInnerPaddingHorizontal\n    } = this.getStatusData();\n    return React.createElement(\"div\", {\n      className: classnames(\"canvas-panel\", this.props.status),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"canvas-editor-wrap\",\n      ref: dom => {\n        this.editorWrap = dom;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"canvas-editor-inner\",\n      style: {\n        width: editorInnerWidth,\n        height: editorInnerHeight,\n        paddingTop: editorInnerPaddingVertical,\n        paddingBottom: editorInnerPaddingVertical,\n        paddingLeft: editorInnerPaddingHorizontal,\n        paddingRight: editorInnerPaddingHorizontal\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"canvas-editor\",\n      onWheel: this.onWheel,\n      style: {\n        width: editorWidth,\n        height: editorHeight,\n        transform: `scale(${editorScale})`,\n        transformOrigin: \"left top 0px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, this.props.modules.toJS().map((item, index) => {\n      this.getLineOptionsBymodule(item);\n      return React.createElement(Rnd, {\n        key: item.id,\n        size: {\n          width: item.style.width,\n          height: item.style.height\n        },\n        position: {\n          x: item.style.x,\n          y: item.style.y\n        },\n        style: {\n          zIndex: this.props.modules.toJS().length - index\n        },\n        scale: editorScale,\n        onDrag: this.itemDrag.bind(this, item.id),\n        onResize: this.itemResize.bind(this, item.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modules-wrap\",\n        style: {\n          background: item.style.background\n        },\n        onClick: this.moduleSetting.bind(this, item),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(ReactEcharts, {\n        option: item.options,\n        theme: \"dark\",\n        style: {\n          width: item.style.width,\n          height: item.style.height\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      })));\n    })))), React.createElement(\"div\", {\n      className: \"canvas-status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"status-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(InputNumber, {\n      min: this.props.min,\n      max: this.props.max,\n      size: \"small\",\n      style: {\n        width: 70,\n        float: \"right\",\n        marginTop: 3,\n        marginRight: 5\n      },\n      value: this.state.editorSize,\n      formatter: value => `${value}%`,\n      onChange: this.editorSizeChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }), React.createElement(Slider, {\n      min: this.props.min,\n      max: this.props.max,\n      tooltipVisible: false,\n      style: {\n        width: 100,\n        float: \"right\",\n        marginRight: 10\n      },\n      onChange: this.editorSizeChange,\n      value: this.state.editorSize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nCanvasPanel.defaultProps = {\n  min: 10,\n  max: 400\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    editorHeight: state.screenState.getIn([\"screen\", \"height\"]),\n    editorWidth: state.screenState.getIn([\"screen\", \"width\"]),\n    modules: state.screenState.get(\"modules\")\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeItem(data) {\n      const action = changeItem(data);\n      dispatch(action);\n    },\n\n    changeSetting(data) {\n      const action = changeSetting(data);\n      dispatch(action);\n    }\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CanvasPanel);","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/src/components/Editor/CanvasPanel/index.js"],"names":["React","Component","classnames","connect","echarts","ReactEcharts","dark","Slider","InputNumber","Rnd","changeItem","changeSetting","registerTheme","CanvasPanel","state","editorSize","editorSizeChange","value","setState","onWheel","event","ctrlKey","deltaY","props","min","max","getStatusData","editorWrap","editorScale","editorInnerWidth","editorInnerHeight","editorInnerPaddingVertical","editorInnerPaddingHorizontal","editorWrapWidth","offsetWidth","editorWrapHeight","offsetHeight","editorWidth","editorHeight","toFixed","Math","round","floor","itemDrag","id","e","d","data","style","x","parseInt","y","itemResize","direction","ref","delta","position","width","height","moduleSetting","item","getLineOptionsBymodule","module","console","log","clearData","eval","replace","legendArr","xAxisArr","seriseArr","forEach","push","name","seriseData","val","type","smooth","label","show","offset","fontSize","options","legend","xAxis","series","componentDidMount","render","status","dom","paddingTop","paddingBottom","paddingLeft","paddingRight","transform","transformOrigin","modules","toJS","map","index","zIndex","length","bind","background","float","marginTop","marginRight","defaultProps","mapStateToProps","ownProps","screenState","getIn","get","mapDispatchToProps","dispatch","action"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,IAAP,MAAiB,oCAAjB;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,MAApC;AACA,SAASC,GAAT,QAAoB,WAApB;AACA,SAASC,UAAT,QAA2B,uCAA3B;AACA,SAASC,aAAT,QAA8B,wCAA9B;AACAP,OAAO,CAACQ,aAAR,CAAsB,MAAtB,EAA6BN,IAA7B;;AACA,MAAMO,WAAN,SAA0BZ,SAA1B,CAAmC;AAAA;AAAA;AAAA,SAC/Ba,KAD+B,GACvB;AACJC,MAAAA,UAAU,EAAC;AADP,KADuB;;AAAA,SAU/BC,gBAV+B,GAUXC,KAAD,IAAS;AACxB,WAAKC,QAAL,CAAc;AACVH,QAAAA,UAAU,EAACE;AADD,OAAd;AAGH,KAd8B;;AAAA,SAe/BE,OAf+B,GAepBC,KAAD,IAAS;AACf;AACA;AACA,UAAGA,KAAK,CAACC,OAAT,EAAiB;AACb;AACA;AACA;AACA;AACA,YAAIN,UAAU,GAAG,KAAKD,KAAL,CAAWC,UAAX,GAAsBK,KAAK,CAACE,MAA7C;;AACA,YAAGP,UAAU,GAAC,KAAKQ,KAAL,CAAWC,GAAzB,EAA6B;AACzBT,UAAAA,UAAU,GAAG,KAAKQ,KAAL,CAAWC,GAAxB;AACH,SAFD,MAEM,IAAGT,UAAU,GAAC,KAAKQ,KAAL,CAAWE,GAAzB,EAA6B;AAC/BV,UAAAA,UAAU,GAAG,KAAKQ,KAAL,CAAWE,GAAxB;AACH;;AACD,aAAKP,QAAL,CAAc;AAAEH,UAAAA;AAAF,SAAd;AACH;AACJ,KA/B8B;;AAAA,SAgC/BW,aAhC+B,GAgCf,MAAI;AAChB;AACA,UAAG,CAAC,KAAKC,UAAT,EAAoB;AAChB,eAAO;AACHC,UAAAA,WAAW,EAAC,CADT;AAEHC,UAAAA,gBAAgB,EAAC,IAFd;AAGHC,UAAAA,iBAAiB,EAAC,IAHf;AAIHC,UAAAA,0BAA0B,EAAC,EAJxB;AAKHC,UAAAA,4BAA4B,EAAC;AAL1B,SAAP;AAOH;;AAAA;AACD,UAAIC,eAAe,GAAG,KAAKN,UAAL,CAAgBO,WAAtC;AACA,UAAIC,gBAAgB,GAAG,KAAKR,UAAL,CAAgBS,YAAvC;AACA,UAAIR,WAAJ;AACA,UAAIC,gBAAJ;AACA,UAAIC,iBAAJ;AACA,UAAIC,0BAAJ;AACA,UAAIC,4BAAJ;AACA,YAAM;AAAEK,QAAAA,WAAF;AAAcC,QAAAA;AAAd,UAA+B,KAAKf,KAA1C;AACAK,MAAAA,WAAW,GAAG,CAAC,KAAKd,KAAL,CAAWC,UAAX,GAAsB,GAAvB,EAA4BwB,OAA5B,CAAoC,CAApC,CAAd;AACAV,MAAAA,gBAAgB,GAAGW,IAAI,CAACC,KAAL,CAAWJ,WAAW,GAACT,WAAvB,CAAnB;AACAE,MAAAA,iBAAiB,GAAGU,IAAI,CAACC,KAAL,CAAWH,YAAY,GAACV,WAAxB,CAApB;;AACA,UAAGE,iBAAiB,GAAC,GAAlB,GAAsBK,gBAAzB,EAA0C;AACtCJ,QAAAA,0BAA0B,GAACS,IAAI,CAACE,KAAL,CAAW,CAACP,gBAAgB,GAACL,iBAAlB,IAAqC,CAAhD,CAA3B;AACH,OAFD,MAEK;AACDC,QAAAA,0BAA0B,GAAG,EAA7B;AACH;;AAED,UAAGF,gBAAgB,GAAC,GAAjB,GAAqBI,eAAxB,EAAwC;AACpCD,QAAAA,4BAA4B,GAACQ,IAAI,CAACE,KAAL,CAAW,CAACT,eAAe,GAACH,iBAAjB,IAAoC,CAA/C,CAA7B;AACH,OAFD,MAEK;AACDE,QAAAA,4BAA4B,GAAG,EAA/B;AACH;;AACD,aAAO;AACHJ,QAAAA,WADG;AAEHC,QAAAA,gBAFG;AAGHC,QAAAA,iBAHG;AAIHC,QAAAA,0BAJG;AAKHC,QAAAA;AALG,OAAP;AAOH,KAxE8B;;AAAA,SAyE/BW,QAzE+B,GAyEpB,CAACC,EAAD,EAAIC,CAAJ,EAAMC,CAAN,KAAU;AACjB;AACA;AACA,WAAKvB,KAAL,CAAWb,UAAX,CAAsB;AAClBkC,QAAAA,EADkB;AAElBG,QAAAA,IAAI,EAAC;AACDC,UAAAA,KAAK,EAAC;AACFC,YAAAA,CAAC,EAACC,QAAQ,CAACJ,CAAC,CAACG,CAAH,CADR;AAEFE,YAAAA,CAAC,EAACD,QAAQ,CAACJ,CAAC,CAACK,CAAH;AAFR;AADL;AAFa,OAAtB;AASH,KArF8B;;AAAA,SAsF/BC,UAtF+B,GAsFlB,CAACR,EAAD,EAAIC,CAAJ,EAAMQ,SAAN,EAAgBC,GAAhB,EAAoBC,KAApB,EAA0BC,QAA1B,KAAqC;AAC9C;AACA;AACA;AACA;AACA;AACA,WAAKjC,KAAL,CAAWb,UAAX,CAAsB;AAClBkC,QAAAA,EADkB;AAElBG,QAAAA,IAAI,EAAC;AACDC,UAAAA,KAAK,EAAC;AACFS,YAAAA,KAAK,EAACP,QAAQ,CAACI,GAAG,CAACN,KAAJ,CAAUS,KAAX,CADZ;AAEFC,YAAAA,MAAM,EAACR,QAAQ,CAACI,GAAG,CAACN,KAAJ,CAAUU,MAAX,CAFb;AAGFT,YAAAA,CAAC,EAACC,QAAQ,CAACM,QAAQ,CAACP,CAAV,CAHR;AAIFE,YAAAA,CAAC,EAACD,QAAQ,CAACM,QAAQ,CAACL,CAAV;AAJR;AADL;AAFa,OAAtB;AAWH,KAvG8B;;AAAA,SAwG/BQ,aAxG+B,GAwGdC,IAAD,IAAQ;AACpB,WAAKrC,KAAL,CAAWZ,aAAX,CAAyBiD,IAAI,CAAChB,EAA9B;AACH,KA1G8B;;AAAA,SAqH/BiB,sBArH+B,GAqHLC,MAAD,IAAU;AAC/BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,YAAMG,SAAS,GAAGC,IAAI,CAACJ,MAAM,CAACf,IAAP,CAAYA,IAAZ,CAAiBoB,OAAjB,CAAyB,MAAzB,EAAgC,EAAhC,EAAoCA,OAApC,CAA4C,SAA5C,EAAsD,EAAtD,CAAD,CAAtB;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ;AACA,UAAIG,SAAS,GAAG,EAAhB;AACA,UAAIC,QAAQ,GAAG,EAAf;AACA,UAAIC,SAAS,GAAG,EAAhB;AAEAL,MAAAA,SAAS,CAACM,OAAV,CAAkBtD,KAAK,IAAE;AACrBmD,QAAAA,SAAS,CAACI,IAAV,CAAevD,KAAK,CAACwD,IAArB;AACA,YAAIC,UAAU,GAAG,EAAjB;AACAT,QAAAA,SAAS,CAAClB,IAAV,CAAewB,OAAf,CAAuBI,GAAG,IAAE;AACxBN,UAAAA,QAAQ,CAACG,IAAT,CAAcG,GAAG,CAACF,IAAlB;AACAC,UAAAA,UAAU,CAACF,IAAX,CAAgBG,GAAG,CAAC1D,KAApB;AACH,SAHD;AAIAqD,QAAAA,SAAS,CAACE,IAAV,CAAe;AACXC,UAAAA,IAAI,EAACxD,KAAK,CAACwD,IADA;AAEXG,UAAAA,IAAI,EAAC,MAFM;AAGXC,UAAAA,MAAM,EAAC,KAHI;AAIXC,UAAAA,KAAK,EAAC;AACFC,YAAAA,IAAI,EAAC,KADH;AAEFC,YAAAA,MAAM,EAAC,CAAC,CAAD,EAAG,CAAH,CAFL;AAGFC,YAAAA,QAAQ,EAAC;AAHP,WAJK;AASXlC,UAAAA,IAAI,EAAC2B;AATM,SAAf;AAWH,OAlBD;AAmBAZ,MAAAA,MAAM,CAACoB,OAAP,CAAeC,MAAf,CAAsBpC,IAAtB,GAA6BqB,SAA7B;AACAN,MAAAA,MAAM,CAACoB,OAAP,CAAeE,KAAf,CAAqBrC,IAArB,GAA4BsB,QAA5B;AACAP,MAAAA,MAAM,CAACoB,OAAP,CAAeG,MAAf,GAAwBf,SAAxB;AACA,aAAOR,MAAP;AACH,KApJ8B;AAAA;;AA2G/BwB,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAAEjD,MAAAA;AAAF,QAAkB,KAAKd,KAA7B;AACA,UAAMU,eAAe,GAAG,KAAKN,UAAL,CAAgBO,WAAxC,CAFe,CAGf;;AACA,UAAMnB,UAAU,GAAGyB,IAAI,CAACC,KAAL,CAAW,CAACR,eAAe,GAAC,GAAjB,IAAsBI,WAAtB,GAAkC,GAA7C,CAAnB;AAEA,SAAKnB,QAAL,CAAc;AACVH,MAAAA,UAAU,EAACA;AADD,KAAd;AAGH;;AAiCDwE,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAElD,MAAAA,WAAF;AAAcC,MAAAA;AAAd,QAA+B,KAAKf,KAA1C;AACA,UAAM;AACFK,MAAAA,WADE;AAEFC,MAAAA,gBAFE;AAGFC,MAAAA,iBAHE;AAIFC,MAAAA,0BAJE;AAKFC,MAAAA;AALE,QAMF,KAAKN,aAAL,EANJ;AAOA,WACI;AAAK,MAAA,SAAS,EAAExB,UAAU,CAAC,cAAD,EAAgB,KAAKqB,KAAL,CAAWiE,MAA3B,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,SAAS,EAAC,oBADd;AAEI,MAAA,GAAG,EAAEC,GAAG,IAAE;AAAC,aAAK9D,UAAL,GAAgB8D,GAAhB;AAAoB,OAFnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII;AACI,MAAA,SAAS,EAAC,qBADd;AAEI,MAAA,KAAK,EAAE;AACHhC,QAAAA,KAAK,EAAC5B,gBADH;AAEH6B,QAAAA,MAAM,EAAC5B,iBAFJ;AAGH4D,QAAAA,UAAU,EAAC3D,0BAHR;AAIH4D,QAAAA,aAAa,EAAC5D,0BAJX;AAKH6D,QAAAA,WAAW,EAAC5D,4BALT;AAMH6D,QAAAA,YAAY,EAAC7D;AANV,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWI;AACI,MAAA,SAAS,EAAC,eADd;AAEI,MAAA,OAAO,EAAE,KAAKb,OAFlB;AAGI,MAAA,KAAK,EAAE;AACHsC,QAAAA,KAAK,EAACpB,WADH;AAEHqB,QAAAA,MAAM,EAACpB,YAFJ;AAGHwD,QAAAA,SAAS,EAAE,SAAQlE,WAAY,GAH5B;AAIHmE,QAAAA,eAAe,EAAC;AAJb,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYQ,KAAKxE,KAAL,CAAWyE,OAAX,CAAmBC,IAAnB,GAA0BC,GAA1B,CAA8B,CAACtC,IAAD,EAAMuC,KAAN,KAAc;AACxC,WAAKtC,sBAAL,CAA4BD,IAA5B;AACA,aAAO,oBAAC,GAAD;AACH,QAAA,GAAG,EAAEA,IAAI,CAAChB,EADP;AAEH,QAAA,IAAI,EAAE;AACFa,UAAAA,KAAK,EAACG,IAAI,CAACZ,KAAL,CAAWS,KADf;AAEFC,UAAAA,MAAM,EAACE,IAAI,CAACZ,KAAL,CAAWU;AAFhB,SAFH;AAMH,QAAA,QAAQ,EAAE;AACNT,UAAAA,CAAC,EAACW,IAAI,CAACZ,KAAL,CAAWC,CADP;AAENE,UAAAA,CAAC,EAACS,IAAI,CAACZ,KAAL,CAAWG;AAFP,SANP;AAUH,QAAA,KAAK,EAAE;AACHiD,UAAAA,MAAM,EAAC,KAAK7E,KAAL,CAAWyE,OAAX,CAAmBC,IAAnB,GAA0BI,MAA1B,GAAiCF;AADrC,SAVJ;AAaH,QAAA,KAAK,EAAEvE,WAbJ;AAcH,QAAA,MAAM,EAAE,KAAKe,QAAL,CAAc2D,IAAd,CAAmB,IAAnB,EAAwB1C,IAAI,CAAChB,EAA7B,CAdL;AAeH,QAAA,QAAQ,EAAE,KAAKQ,UAAL,CAAgBkD,IAAhB,CAAqB,IAArB,EAA0B1C,IAAI,CAAChB,EAA/B,CAfP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAiBH;AAAK,QAAA,SAAS,EAAC,cAAf;AACI,QAAA,KAAK,EAAE;AAAC2D,UAAAA,UAAU,EAAC3C,IAAI,CAACZ,KAAL,CAAWuD;AAAvB,SADX;AAEI,QAAA,OAAO,EAAE,KAAK5C,aAAL,CAAmB2C,IAAnB,CAAwB,IAAxB,EAA6B1C,IAA7B,CAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII,oBAAC,YAAD;AACI,QAAA,MAAM,EAAEA,IAAI,CAACsB,OADjB;AAEI,QAAA,KAAK,EAAC,MAFV;AAGI,QAAA,KAAK,EAAE;AACHzB,UAAAA,KAAK,EAACG,IAAI,CAACZ,KAAL,CAAWS,KADd;AAEHC,UAAAA,MAAM,EAACE,IAAI,CAACZ,KAAL,CAAWU;AAFf,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CAjBG,CAAP;AA+BH,KAjCD,CAZR,CAXJ,CAJJ,CADJ,EAkEI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AACI,MAAA,GAAG,EAAE,KAAKnC,KAAL,CAAWC,GADpB;AAEI,MAAA,GAAG,EAAE,KAAKD,KAAL,CAAWE,GAFpB;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,KAAK,EAAE;AAACgC,QAAAA,KAAK,EAAC,EAAP;AAAU+C,QAAAA,KAAK,EAAC,OAAhB;AAAwBC,QAAAA,SAAS,EAAC,CAAlC;AAAoCC,QAAAA,WAAW,EAAC;AAAhD,OAJX;AAKI,MAAA,KAAK,EAAE,KAAK5F,KAAL,CAAWC,UALtB;AAMI,MAAA,SAAS,EAAEE,KAAK,IAAG,GAAEA,KAAM,GAN/B;AAOI,MAAA,QAAQ,EAAE,KAAKD,gBAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAUI,oBAAC,MAAD;AACI,MAAA,GAAG,EAAE,KAAKO,KAAL,CAAWC,GADpB;AAEI,MAAA,GAAG,EAAE,KAAKD,KAAL,CAAWE,GAFpB;AAGI,MAAA,cAAc,EAAE,KAHpB;AAII,MAAA,KAAK,EAAE;AAACgC,QAAAA,KAAK,EAAC,GAAP;AAAW+C,QAAAA,KAAK,EAAC,OAAjB;AAAyBE,QAAAA,WAAW,EAAC;AAArC,OAJX;AAKI,MAAA,QAAQ,EAAE,KAAK1F,gBALnB;AAMI,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,UANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CADJ,CAlEJ,CADJ;AA0FH;;AAxP8B;;AAA7BF,W,CAKK8F,Y,GAAe;AAClBnF,EAAAA,GAAG,EAAC,EADc;AAElBC,EAAAA,GAAG,EAAC;AAFc,C;;AAqP1B,MAAMmF,eAAe,GAAG,CAAC9F,KAAD,EAAO+F,QAAP,KAAkB;AACtC,SAAO;AACHvE,IAAAA,YAAY,EAACxB,KAAK,CAACgG,WAAN,CAAkBC,KAAlB,CAAwB,CAAC,QAAD,EAAU,QAAV,CAAxB,CADV;AAEH1E,IAAAA,WAAW,EAACvB,KAAK,CAACgG,WAAN,CAAkBC,KAAlB,CAAwB,CAAC,QAAD,EAAU,OAAV,CAAxB,CAFT;AAGHf,IAAAA,OAAO,EAAClF,KAAK,CAACgG,WAAN,CAAkBE,GAAlB,CAAsB,SAAtB;AAHL,GAAP;AAKH,CAND;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAE;AACjC,SAAO;AACHxG,IAAAA,UAAU,CAACqC,IAAD,EAAM;AACZ,YAAMoE,MAAM,GAAGzG,UAAU,CAACqC,IAAD,CAAzB;AACAmE,MAAAA,QAAQ,CAACC,MAAD,CAAR;AACH,KAJE;;AAKHxG,IAAAA,aAAa,CAACoC,IAAD,EAAM;AACf,YAAMoE,MAAM,GAAGxG,aAAa,CAACoC,IAAD,CAA5B;AACAmE,MAAAA,QAAQ,CAACC,MAAD,CAAR;AACH;;AARE,GAAP;AAUH,CAXD;;AAYA,eAAehH,OAAO,CAACyG,eAAD,EAAiBK,kBAAjB,CAAP,CAA4CpG,WAA5C,CAAf","sourcesContent":["import React,{ Component } from 'react'\nimport classnames from 'classnames'\nimport { connect } from 'react-redux'\nimport echarts from 'echarts'\nimport ReactEcharts from 'echarts-for-react';\nimport dark from '../../../config/echarts-theme/dark'\nimport { Slider, InputNumber } from 'antd'\nimport { Rnd } from 'react-rnd';\nimport { changeItem } from '../../../store/actions/screen-actions'\nimport { changeSetting } from '../../../store/actions/setting-actions'\necharts.registerTheme('dark',dark);\nclass CanvasPanel extends Component{\n    state = {\n        editorSize:100\n    }\n\n    static defaultProps = {\n        min:10,\n        max:400\n    }\n\n    editorSizeChange = (value)=>{\n        this.setState({\n            editorSize:value\n        })\n    }\n    onWheel = (event)=>{\n        // console.log(event)\n        // console.log(event.nativeEvent)\n        if(event.ctrlKey){\n            // event.deltaY 正值向上滚动，负值为向下滚动\n            // event.clientX 鼠标距离浏览器可视区左侧距离\n            // event.screenX 鼠标距离显示器左侧的距离\n            // event.pageX 鼠标距离document左侧的距离\n            var editorSize = this.state.editorSize+event.deltaY\n            if(editorSize<this.props.min){\n                editorSize = this.props.min\n            }else if(editorSize>this.props.max){\n                editorSize = this.props.max\n            }\n            this.setState({ editorSize })\n        }\n    }\n    getStatusData = ()=>{\n        // console.log(this.editorWrap)\n        if(!this.editorWrap){\n            return {\n                editorScale:1,\n                editorInnerWidth:1920,\n                editorInnerHeight:1080,\n                editorInnerPaddingVertical:50,\n                editorInnerPaddingHorizontal:50\n            }\n        };\n        let editorWrapWidth = this.editorWrap.offsetWidth\n        let editorWrapHeight = this.editorWrap.offsetHeight\n        let editorScale\n        let editorInnerWidth\n        let editorInnerHeight\n        let editorInnerPaddingVertical\n        let editorInnerPaddingHorizontal\n        const { editorWidth,editorHeight } = this.props\n        editorScale = (this.state.editorSize/100).toFixed(1)\n        editorInnerWidth = Math.round(editorWidth*editorScale)\n        editorInnerHeight = Math.round(editorHeight*editorScale)\n        if(editorInnerHeight+100<editorWrapHeight){\n            editorInnerPaddingVertical=Math.floor((editorWrapHeight-editorInnerHeight)/2)\n        }else{\n            editorInnerPaddingVertical = 50\n        }\n\n        if(editorInnerWidth+100<editorWrapWidth){\n            editorInnerPaddingHorizontal=Math.floor((editorWrapWidth-editorInnerHeight)/2)\n        }else{\n            editorInnerPaddingHorizontal = 50\n        }\n        return {\n            editorScale,\n            editorInnerWidth,\n            editorInnerHeight,\n            editorInnerPaddingVertical,\n            editorInnerPaddingHorizontal\n        }\n    }\n    itemDrag = (id,e,d)=>{\n        // console.log(e)\n        // console.log(d)\n        this.props.changeItem({\n            id,\n            data:{\n                style:{\n                    x:parseInt(d.x),\n                    y:parseInt(d.y)\n                }\n            }\n        })\n    }\n    itemResize = (id,e,direction,ref,delta,position)=>{\n        // console.log(ref.style)\n        // console.log(\"direction\",direction)\n        // console.log(\"delta\",delta)\n        // console.log(\"position\",position)\n        // console.log(ref.style.width)\n        this.props.changeItem({\n            id,\n            data:{\n                style:{\n                    width:parseInt(ref.style.width),\n                    height:parseInt(ref.style.height),\n                    x:parseInt(position.x),\n                    y:parseInt(position.y)\n                }\n            }\n        })\n    }\n    moduleSetting = (item)=>{\n        this.props.changeSetting(item.id)\n    }\n    componentDidMount(){\n        const { editorWidth } = this.props\n        const editorWrapWidth = this.editorWrap.offsetWidth\n        // console.log(editorWrapWidth)\n        const editorSize = Math.round((editorWrapWidth-100)/editorWidth*100)\n        \n        this.setState({\n            editorSize:editorSize\n        })\n    }\n    getLineOptionsBymodule = (module)=>{\n        console.log(module)\n        const clearData = eval(module.data.data.replace(/\\ +/g,\"\").replace(/[\\r\\n]/g,\"\"));\n        console.log(clearData)\n        let legendArr = []\n        let xAxisArr = []\n        let seriseArr = []\n\n        clearData.forEach(value=>{\n            legendArr.push(value.name)\n            let seriseData = []\n            clearData.data.forEach(val=>{\n                xAxisArr.push(val.name)\n                seriseData.push(val.value)\n            })\n            seriseArr.push({\n                name:value.name,\n                type:'line',\n                smooth:false,\n                label:{\n                    show:false,\n                    offset:[0,0],\n                    fontSize:14\n                },\n                data:seriseData\n            })\n        })\n        module.options.legend.data = legendArr\n        module.options.xAxis.data = xAxisArr\n        module.options.series = seriseArr\n        return module\n    }\n    render(){\n        const { editorWidth,editorHeight } = this.props\n        const { \n            editorScale,\n            editorInnerWidth,\n            editorInnerHeight,\n            editorInnerPaddingVertical,\n            editorInnerPaddingHorizontal \n        } = this.getStatusData()\n        return(\n            <div className={classnames(\"canvas-panel\",this.props.status)}>\n                <div \n                    className=\"canvas-editor-wrap\"\n                    ref={dom=>{this.editorWrap=dom}}\n                >\n                    <div \n                        className=\"canvas-editor-inner\"\n                        style={{\n                            width:editorInnerWidth,\n                            height:editorInnerHeight,\n                            paddingTop:editorInnerPaddingVertical,\n                            paddingBottom:editorInnerPaddingVertical,\n                            paddingLeft:editorInnerPaddingHorizontal,\n                            paddingRight:editorInnerPaddingHorizontal\n                        }}\n                    >\n                        <div \n                            className=\"canvas-editor\"\n                            onWheel={this.onWheel}\n                            style={{\n                                width:editorWidth,\n                                height:editorHeight,\n                                transform:`scale(${editorScale})`,\n                                transformOrigin:\"left top 0px\"\n                            }}\n                        >\n                            \n                            {\n                                this.props.modules.toJS().map((item,index)=>{\n                                    this.getLineOptionsBymodule(item)\n                                    return <Rnd\n                                        key={item.id}\n                                        size={{\n                                            width:item.style.width,\n                                            height:item.style.height\n                                        }}\n                                        position={{\n                                            x:item.style.x,\n                                            y:item.style.y\n                                        }}\n                                        style={{\n                                            zIndex:this.props.modules.toJS().length-index\n                                        }}\n                                        scale={editorScale}\n                                        onDrag={this.itemDrag.bind(this,item.id)}\n                                        onResize={this.itemResize.bind(this,item.id)}\n                                    >\n                                        <div className=\"modules-wrap\"\n                                            style={{background:item.style.background}}\n                                            onClick={this.moduleSetting.bind(this,item)}\n                                        >\n                                            <ReactEcharts\n                                                option={item.options}\n                                                theme=\"dark\"\n                                                style={{\n                                                    width:item.style.width,\n                                                    height:item.style.height\n                                                }}\n                                            />\n                                        </div>\n                                    </Rnd>\n                                })\n                            }\n                        </div>\n                    </div>\n                </div>\n                <div className=\"canvas-status\">\n                    <div className=\"status-bar\">\n                        <InputNumber\n                            min={this.props.min}\n                            max={this.props.max}\n                            size=\"small\"\n                            style={{width:70,float:\"right\",marginTop:3,marginRight:5}}\n                            value={this.state.editorSize}\n                            formatter={value=>`${value}%`}\n                            onChange={this.editorSizeChange}\n                        />\n                        <Slider\n                            min={this.props.min}\n                            max={this.props.max}\n                            tooltipVisible={false}\n                            style={{width:100,float:\"right\",marginRight:10}}\n                            onChange={this.editorSizeChange}\n                            value={this.state.editorSize}\n                        />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state,ownProps)=>{\n    return {\n        editorHeight:state.screenState.getIn([\"screen\",\"height\"]),\n        editorWidth:state.screenState.getIn([\"screen\",\"width\"]),\n        modules:state.screenState.get(\"modules\")\n    }\n}\nconst mapDispatchToProps = dispatch=>{\n    return {\n        changeItem(data){\n            const action = changeItem(data)\n            dispatch(action)\n        },\n        changeSetting(data){\n            const action = changeSetting(data)\n            dispatch(action)\n        }\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(CanvasPanel);"]},"metadata":{},"sourceType":"module"}