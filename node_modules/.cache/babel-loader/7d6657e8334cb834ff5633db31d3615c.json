{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { JSONCompletion } from './services/jsonCompletion.js';\nimport { JSONHover } from './services/jsonHover.js';\nimport { JSONValidation } from './services/jsonValidation.js';\nimport { JSONDocumentSymbols } from './services/jsonDocumentSymbols.js';\nimport { parse as parseJSON, newJSONDocument } from './parser/jsonParser.js';\nimport { schemaContributions } from './services/configuration.js';\nimport { JSONSchemaService } from './services/jsonSchemaService.js';\nimport { getFoldingRanges } from './services/jsonFolding.js';\nimport { getSelectionRanges } from './services/jsonSelectionRanges.js';\nimport { format as formatJSON } from './../jsonc-parser/main.js';\nimport { Range, TextEdit } from './jsonLanguageTypes.js';\nexport * from './jsonLanguageTypes.js';\nexport function getLanguageService(params) {\n  var promise = params.promiseConstructor || Promise;\n  var jsonSchemaService = new JSONSchemaService(params.schemaRequestService, params.workspaceContext, promise);\n  jsonSchemaService.setSchemaContributions(schemaContributions);\n  var jsonCompletion = new JSONCompletion(jsonSchemaService, params.contributions, promise, params.clientCapabilities);\n  var jsonHover = new JSONHover(jsonSchemaService, params.contributions, promise);\n  var jsonDocumentSymbols = new JSONDocumentSymbols(jsonSchemaService);\n  var jsonValidation = new JSONValidation(jsonSchemaService, promise);\n  return {\n    configure: function (settings) {\n      jsonSchemaService.clearExternalSchemas();\n\n      if (settings.schemas) {\n        settings.schemas.forEach(function (settings) {\n          jsonSchemaService.registerExternalSchema(settings.uri, settings.fileMatch, settings.schema);\n        });\n      }\n\n      jsonValidation.configure(settings);\n    },\n    resetSchema: function (uri) {\n      return jsonSchemaService.onResourceChange(uri);\n    },\n    doValidation: jsonValidation.doValidation.bind(jsonValidation),\n    parseJSONDocument: function (document) {\n      return parseJSON(document, {\n        collectComments: true\n      });\n    },\n    newJSONDocument: function (root, diagnostics) {\n      return newJSONDocument(root, diagnostics);\n    },\n    doResolve: jsonCompletion.doResolve.bind(jsonCompletion),\n    doComplete: jsonCompletion.doComplete.bind(jsonCompletion),\n    findDocumentSymbols: jsonDocumentSymbols.findDocumentSymbols.bind(jsonDocumentSymbols),\n    findDocumentSymbols2: jsonDocumentSymbols.findDocumentSymbols2.bind(jsonDocumentSymbols),\n    findColorSymbols: function (d, s) {\n      return jsonDocumentSymbols.findDocumentColors(d, s).then(function (s) {\n        return s.map(function (s) {\n          return s.range;\n        });\n      });\n    },\n    findDocumentColors: jsonDocumentSymbols.findDocumentColors.bind(jsonDocumentSymbols),\n    getColorPresentations: jsonDocumentSymbols.getColorPresentations.bind(jsonDocumentSymbols),\n    doHover: jsonHover.doHover.bind(jsonHover),\n    getFoldingRanges: getFoldingRanges,\n    getSelectionRanges: getSelectionRanges,\n    format: function (d, r, o) {\n      var range = void 0;\n\n      if (r) {\n        var offset = d.offsetAt(r.start);\n        var length = d.offsetAt(r.end) - offset;\n        range = {\n          offset: offset,\n          length: length\n        };\n      }\n\n      var options = {\n        tabSize: o ? o.tabSize : 4,\n        insertSpaces: o ? o.insertSpaces : true,\n        eol: '\\n'\n      };\n      return formatJSON(d.getText(), range, options).map(function (e) {\n        return TextEdit.replace(Range.create(d.positionAt(e.offset), d.positionAt(e.offset + e.length)), e.content);\n      });\n    }\n  };\n}","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/jsonLanguageService.js"],"names":["JSONCompletion","JSONHover","JSONValidation","JSONDocumentSymbols","parse","parseJSON","newJSONDocument","schemaContributions","JSONSchemaService","getFoldingRanges","getSelectionRanges","format","formatJSON","Range","TextEdit","getLanguageService","params","promise","promiseConstructor","Promise","jsonSchemaService","schemaRequestService","workspaceContext","setSchemaContributions","jsonCompletion","contributions","clientCapabilities","jsonHover","jsonDocumentSymbols","jsonValidation","configure","settings","clearExternalSchemas","schemas","forEach","registerExternalSchema","uri","fileMatch","schema","resetSchema","onResourceChange","doValidation","bind","parseJSONDocument","document","collectComments","root","diagnostics","doResolve","doComplete","findDocumentSymbols","findDocumentSymbols2","findColorSymbols","d","s","findDocumentColors","then","map","range","getColorPresentations","doHover","r","o","offset","offsetAt","start","length","end","options","tabSize","insertSpaces","eol","getText","e","replace","create","positionAt","content"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { JSONCompletion } from './services/jsonCompletion.js';\nimport { JSONHover } from './services/jsonHover.js';\nimport { JSONValidation } from './services/jsonValidation.js';\nimport { JSONDocumentSymbols } from './services/jsonDocumentSymbols.js';\nimport { parse as parseJSON, newJSONDocument } from './parser/jsonParser.js';\nimport { schemaContributions } from './services/configuration.js';\nimport { JSONSchemaService } from './services/jsonSchemaService.js';\nimport { getFoldingRanges } from './services/jsonFolding.js';\nimport { getSelectionRanges } from './services/jsonSelectionRanges.js';\nimport { format as formatJSON } from './../jsonc-parser/main.js';\nimport { Range, TextEdit } from './jsonLanguageTypes.js';\nexport * from './jsonLanguageTypes.js';\nexport function getLanguageService(params) {\n    var promise = params.promiseConstructor || Promise;\n    var jsonSchemaService = new JSONSchemaService(params.schemaRequestService, params.workspaceContext, promise);\n    jsonSchemaService.setSchemaContributions(schemaContributions);\n    var jsonCompletion = new JSONCompletion(jsonSchemaService, params.contributions, promise, params.clientCapabilities);\n    var jsonHover = new JSONHover(jsonSchemaService, params.contributions, promise);\n    var jsonDocumentSymbols = new JSONDocumentSymbols(jsonSchemaService);\n    var jsonValidation = new JSONValidation(jsonSchemaService, promise);\n    return {\n        configure: function (settings) {\n            jsonSchemaService.clearExternalSchemas();\n            if (settings.schemas) {\n                settings.schemas.forEach(function (settings) {\n                    jsonSchemaService.registerExternalSchema(settings.uri, settings.fileMatch, settings.schema);\n                });\n            }\n            jsonValidation.configure(settings);\n        },\n        resetSchema: function (uri) { return jsonSchemaService.onResourceChange(uri); },\n        doValidation: jsonValidation.doValidation.bind(jsonValidation),\n        parseJSONDocument: function (document) { return parseJSON(document, { collectComments: true }); },\n        newJSONDocument: function (root, diagnostics) { return newJSONDocument(root, diagnostics); },\n        doResolve: jsonCompletion.doResolve.bind(jsonCompletion),\n        doComplete: jsonCompletion.doComplete.bind(jsonCompletion),\n        findDocumentSymbols: jsonDocumentSymbols.findDocumentSymbols.bind(jsonDocumentSymbols),\n        findDocumentSymbols2: jsonDocumentSymbols.findDocumentSymbols2.bind(jsonDocumentSymbols),\n        findColorSymbols: function (d, s) { return jsonDocumentSymbols.findDocumentColors(d, s).then(function (s) { return s.map(function (s) { return s.range; }); }); },\n        findDocumentColors: jsonDocumentSymbols.findDocumentColors.bind(jsonDocumentSymbols),\n        getColorPresentations: jsonDocumentSymbols.getColorPresentations.bind(jsonDocumentSymbols),\n        doHover: jsonHover.doHover.bind(jsonHover),\n        getFoldingRanges: getFoldingRanges,\n        getSelectionRanges: getSelectionRanges,\n        format: function (d, r, o) {\n            var range = void 0;\n            if (r) {\n                var offset = d.offsetAt(r.start);\n                var length = d.offsetAt(r.end) - offset;\n                range = { offset: offset, length: length };\n            }\n            var options = { tabSize: o ? o.tabSize : 4, insertSpaces: o ? o.insertSpaces : true, eol: '\\n' };\n            return formatJSON(d.getText(), range, options).map(function (e) {\n                return TextEdit.replace(Range.create(d.positionAt(e.offset), d.positionAt(e.offset + e.length)), e.content);\n            });\n        }\n    };\n}\n"]},"metadata":{},"sourceType":"module"}