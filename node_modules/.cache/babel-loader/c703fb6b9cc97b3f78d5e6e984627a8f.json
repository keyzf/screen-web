{"ast":null,"code":"/**\r\n * Returns the last element of an array.\r\n * @param array The array.\r\n * @param n Which element from the end (default is zero).\r\n */\nexport function tail(array, n) {\n  if (n === void 0) {\n    n = 0;\n  }\n\n  return array[array.length - (1 + n)];\n}\nexport function tail2(arr) {\n  if (arr.length === 0) {\n    throw new Error('Invalid tail call');\n  }\n\n  return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function equals(one, other, itemEquals) {\n  if (itemEquals === void 0) {\n    itemEquals = function (a, b) {\n      return a === b;\n    };\n  }\n\n  if (one === other) {\n    return true;\n  }\n\n  if (!one || !other) {\n    return false;\n  }\n\n  if (one.length !== other.length) {\n    return false;\n  }\n\n  for (var i = 0, len = one.length; i < len; i++) {\n    if (!itemEquals(one[i], other[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\nexport function binarySearch(array, key, comparator) {\n  var low = 0,\n      high = array.length - 1;\n\n  while (low <= high) {\n    var mid = (low + high) / 2 | 0;\n    var comp = comparator(array[mid], key);\n\n    if (comp < 0) {\n      low = mid + 1;\n    } else if (comp > 0) {\n      high = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -(low + 1);\n}\n/**\r\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\r\n * are located before all elements where p(x) is true.\r\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\r\n */\n\nexport function findFirstInSorted(array, p) {\n  var low = 0,\n      high = array.length;\n\n  if (high === 0) {\n    return 0; // no children\n  }\n\n  while (low < high) {\n    var mid = Math.floor((low + high) / 2);\n\n    if (p(array[mid])) {\n      high = mid;\n    } else {\n      low = mid + 1;\n    }\n  }\n\n  return low;\n}\n/**\r\n * Like `Array#sort` but always stable. Usually runs a little slower `than Array#sort`\r\n * so only use this when actually needing stable sort.\r\n */\n\nexport function mergeSort(data, compare) {\n  _sort(data, compare, 0, data.length - 1, []);\n\n  return data;\n}\n\nfunction _merge(a, compare, lo, mid, hi, aux) {\n  var leftIdx = lo,\n      rightIdx = mid + 1;\n\n  for (var i = lo; i <= hi; i++) {\n    aux[i] = a[i];\n  }\n\n  for (var i = lo; i <= hi; i++) {\n    if (leftIdx > mid) {\n      // left side consumed\n      a[i] = aux[rightIdx++];\n    } else if (rightIdx > hi) {\n      // right side consumed\n      a[i] = aux[leftIdx++];\n    } else if (compare(aux[rightIdx], aux[leftIdx]) < 0) {\n      // right element is less -> comes first\n      a[i] = aux[rightIdx++];\n    } else {\n      // left element comes first (less or equal)\n      a[i] = aux[leftIdx++];\n    }\n  }\n}\n\nfunction _sort(a, compare, lo, hi, aux) {\n  if (hi <= lo) {\n    return;\n  }\n\n  var mid = lo + (hi - lo) / 2 | 0;\n\n  _sort(a, compare, lo, mid, aux);\n\n  _sort(a, compare, mid + 1, hi, aux);\n\n  if (compare(a[mid], a[mid + 1]) <= 0) {\n    // left and right are sorted and if the last-left element is less\n    // or equals than the first-right element there is nothing else\n    // to do\n    return;\n  }\n\n  _merge(a, compare, lo, mid, hi, aux);\n}\n\nexport function groupBy(data, compare) {\n  var result = [];\n  var currentGroup = undefined;\n\n  for (var _i = 0, _a = mergeSort(data.slice(0), compare); _i < _a.length; _i++) {\n    var element = _a[_i];\n\n    if (!currentGroup || compare(currentGroup[0], element) !== 0) {\n      currentGroup = [element];\n      result.push(currentGroup);\n    } else {\n      currentGroup.push(element);\n    }\n  }\n\n  return result;\n}\n/**\r\n * @returns New array with all falsy values removed. The original array IS NOT modified.\r\n */\n\nexport function coalesce(array) {\n  return array.filter(function (e) {\n    return !!e;\n  });\n}\n/**\r\n * @returns false if the provided object is an array and not empty.\r\n */\n\nexport function isFalsyOrEmpty(obj) {\n  return !Array.isArray(obj) || obj.length === 0;\n}\nexport function isNonEmptyArray(obj) {\n  return Array.isArray(obj) && obj.length > 0;\n}\n/**\r\n * Removes duplicates from the given array. The optional keyFn allows to specify\r\n * how elements are checked for equalness by returning a unique string for each.\r\n */\n\nexport function distinct(array, keyFn) {\n  if (!keyFn) {\n    return array.filter(function (element, position) {\n      return array.indexOf(element) === position;\n    });\n  }\n\n  var seen = Object.create(null);\n  return array.filter(function (elem) {\n    var key = keyFn(elem);\n\n    if (seen[key]) {\n      return false;\n    }\n\n    seen[key] = true;\n    return true;\n  });\n}\nexport function distinctES6(array) {\n  var seen = new Set();\n  return array.filter(function (element) {\n    if (seen.has(element)) {\n      return false;\n    }\n\n    seen.add(element);\n    return true;\n  });\n}\nexport function fromSet(set) {\n  var result = [];\n  set.forEach(function (o) {\n    return result.push(o);\n  });\n  return result;\n}\nexport function firstIndex(array, fn) {\n  for (var i = 0; i < array.length; i++) {\n    var element = array[i];\n\n    if (fn(element)) {\n      return i;\n    }\n  }\n\n  return -1;\n}\nexport function first(array, fn, notFoundValue) {\n  if (notFoundValue === void 0) {\n    notFoundValue = undefined;\n  }\n\n  var index = firstIndex(array, fn);\n  return index < 0 ? notFoundValue : array[index];\n}\nexport function firstOrDefault(array, notFoundValue) {\n  return array.length > 0 ? array[0] : notFoundValue;\n}\nexport function flatten(arr) {\n  var _a;\n\n  return (_a = []).concat.apply(_a, arr);\n}\nexport function range(arg, to) {\n  var from = typeof to === 'number' ? arg : 0;\n\n  if (typeof to === 'number') {\n    from = arg;\n  } else {\n    from = 0;\n    to = arg;\n  }\n\n  var result = [];\n\n  if (from <= to) {\n    for (var i = from; i < to; i++) {\n      result.push(i);\n    }\n  } else {\n    for (var i = from; i > to; i--) {\n      result.push(i);\n    }\n  }\n\n  return result;\n}\n/**\r\n * Insert `insertArr` inside `target` at `insertIndex`.\r\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\r\n */\n\nexport function arrayInsert(target, insertIndex, insertArr) {\n  var before = target.slice(0, insertIndex);\n  var after = target.slice(insertIndex);\n  return before.concat(insertArr, after);\n}\n/**\r\n * Pushes an element to the start of the array, if found.\r\n */\n\nexport function pushToStart(arr, value) {\n  var index = arr.indexOf(value);\n\n  if (index > -1) {\n    arr.splice(index, 1);\n    arr.unshift(value);\n  }\n}\n/**\r\n * Pushes an element to the end of the array, if found.\r\n */\n\nexport function pushToEnd(arr, value) {\n  var index = arr.indexOf(value);\n\n  if (index > -1) {\n    arr.splice(index, 1);\n    arr.push(value);\n  }\n}\nexport function find(arr, predicate) {\n  for (var i = 0; i < arr.length; i++) {\n    var element = arr[i];\n\n    if (predicate(element, i, arr)) {\n      return element;\n    }\n  }\n\n  return undefined;\n}\nexport function asArray(x) {\n  return Array.isArray(x) ? x : [x];\n}","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/base/common/arrays.js"],"names":["tail","array","n","length","tail2","arr","Error","slice","equals","one","other","itemEquals","a","b","i","len","binarySearch","key","comparator","low","high","mid","comp","findFirstInSorted","p","Math","floor","mergeSort","data","compare","_sort","_merge","lo","hi","aux","leftIdx","rightIdx","groupBy","result","currentGroup","undefined","_i","_a","element","push","coalesce","filter","e","isFalsyOrEmpty","obj","Array","isArray","isNonEmptyArray","distinct","keyFn","position","indexOf","seen","Object","create","elem","distinctES6","Set","has","add","fromSet","set","forEach","o","firstIndex","fn","first","notFoundValue","index","firstOrDefault","flatten","concat","apply","range","arg","to","from","arrayInsert","target","insertIndex","insertArr","before","after","pushToStart","value","splice","unshift","pushToEnd","find","predicate","asArray","x"],"mappings":"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","sourcesContent":["/**\r\n * Returns the last element of an array.\r\n * @param array The array.\r\n * @param n Which element from the end (default is zero).\r\n */\r\nexport function tail(array, n) {\r\n    if (n === void 0) { n = 0; }\r\n    return array[array.length - (1 + n)];\r\n}\r\nexport function tail2(arr) {\r\n    if (arr.length === 0) {\r\n        throw new Error('Invalid tail call');\r\n    }\r\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\r\n}\r\nexport function equals(one, other, itemEquals) {\r\n    if (itemEquals === void 0) { itemEquals = function (a, b) { return a === b; }; }\r\n    if (one === other) {\r\n        return true;\r\n    }\r\n    if (!one || !other) {\r\n        return false;\r\n    }\r\n    if (one.length !== other.length) {\r\n        return false;\r\n    }\r\n    for (var i = 0, len = one.length; i < len; i++) {\r\n        if (!itemEquals(one[i], other[i])) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nexport function binarySearch(array, key, comparator) {\r\n    var low = 0, high = array.length - 1;\r\n    while (low <= high) {\r\n        var mid = ((low + high) / 2) | 0;\r\n        var comp = comparator(array[mid], key);\r\n        if (comp < 0) {\r\n            low = mid + 1;\r\n        }\r\n        else if (comp > 0) {\r\n            high = mid - 1;\r\n        }\r\n        else {\r\n            return mid;\r\n        }\r\n    }\r\n    return -(low + 1);\r\n}\r\n/**\r\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\r\n * are located before all elements where p(x) is true.\r\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\r\n */\r\nexport function findFirstInSorted(array, p) {\r\n    var low = 0, high = array.length;\r\n    if (high === 0) {\r\n        return 0; // no children\r\n    }\r\n    while (low < high) {\r\n        var mid = Math.floor((low + high) / 2);\r\n        if (p(array[mid])) {\r\n            high = mid;\r\n        }\r\n        else {\r\n            low = mid + 1;\r\n        }\r\n    }\r\n    return low;\r\n}\r\n/**\r\n * Like `Array#sort` but always stable. Usually runs a little slower `than Array#sort`\r\n * so only use this when actually needing stable sort.\r\n */\r\nexport function mergeSort(data, compare) {\r\n    _sort(data, compare, 0, data.length - 1, []);\r\n    return data;\r\n}\r\nfunction _merge(a, compare, lo, mid, hi, aux) {\r\n    var leftIdx = lo, rightIdx = mid + 1;\r\n    for (var i = lo; i <= hi; i++) {\r\n        aux[i] = a[i];\r\n    }\r\n    for (var i = lo; i <= hi; i++) {\r\n        if (leftIdx > mid) {\r\n            // left side consumed\r\n            a[i] = aux[rightIdx++];\r\n        }\r\n        else if (rightIdx > hi) {\r\n            // right side consumed\r\n            a[i] = aux[leftIdx++];\r\n        }\r\n        else if (compare(aux[rightIdx], aux[leftIdx]) < 0) {\r\n            // right element is less -> comes first\r\n            a[i] = aux[rightIdx++];\r\n        }\r\n        else {\r\n            // left element comes first (less or equal)\r\n            a[i] = aux[leftIdx++];\r\n        }\r\n    }\r\n}\r\nfunction _sort(a, compare, lo, hi, aux) {\r\n    if (hi <= lo) {\r\n        return;\r\n    }\r\n    var mid = lo + ((hi - lo) / 2) | 0;\r\n    _sort(a, compare, lo, mid, aux);\r\n    _sort(a, compare, mid + 1, hi, aux);\r\n    if (compare(a[mid], a[mid + 1]) <= 0) {\r\n        // left and right are sorted and if the last-left element is less\r\n        // or equals than the first-right element there is nothing else\r\n        // to do\r\n        return;\r\n    }\r\n    _merge(a, compare, lo, mid, hi, aux);\r\n}\r\nexport function groupBy(data, compare) {\r\n    var result = [];\r\n    var currentGroup = undefined;\r\n    for (var _i = 0, _a = mergeSort(data.slice(0), compare); _i < _a.length; _i++) {\r\n        var element = _a[_i];\r\n        if (!currentGroup || compare(currentGroup[0], element) !== 0) {\r\n            currentGroup = [element];\r\n            result.push(currentGroup);\r\n        }\r\n        else {\r\n            currentGroup.push(element);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * @returns New array with all falsy values removed. The original array IS NOT modified.\r\n */\r\nexport function coalesce(array) {\r\n    return array.filter(function (e) { return !!e; });\r\n}\r\n/**\r\n * @returns false if the provided object is an array and not empty.\r\n */\r\nexport function isFalsyOrEmpty(obj) {\r\n    return !Array.isArray(obj) || obj.length === 0;\r\n}\r\nexport function isNonEmptyArray(obj) {\r\n    return Array.isArray(obj) && obj.length > 0;\r\n}\r\n/**\r\n * Removes duplicates from the given array. The optional keyFn allows to specify\r\n * how elements are checked for equalness by returning a unique string for each.\r\n */\r\nexport function distinct(array, keyFn) {\r\n    if (!keyFn) {\r\n        return array.filter(function (element, position) {\r\n            return array.indexOf(element) === position;\r\n        });\r\n    }\r\n    var seen = Object.create(null);\r\n    return array.filter(function (elem) {\r\n        var key = keyFn(elem);\r\n        if (seen[key]) {\r\n            return false;\r\n        }\r\n        seen[key] = true;\r\n        return true;\r\n    });\r\n}\r\nexport function distinctES6(array) {\r\n    var seen = new Set();\r\n    return array.filter(function (element) {\r\n        if (seen.has(element)) {\r\n            return false;\r\n        }\r\n        seen.add(element);\r\n        return true;\r\n    });\r\n}\r\nexport function fromSet(set) {\r\n    var result = [];\r\n    set.forEach(function (o) { return result.push(o); });\r\n    return result;\r\n}\r\nexport function firstIndex(array, fn) {\r\n    for (var i = 0; i < array.length; i++) {\r\n        var element = array[i];\r\n        if (fn(element)) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\nexport function first(array, fn, notFoundValue) {\r\n    if (notFoundValue === void 0) { notFoundValue = undefined; }\r\n    var index = firstIndex(array, fn);\r\n    return index < 0 ? notFoundValue : array[index];\r\n}\r\nexport function firstOrDefault(array, notFoundValue) {\r\n    return array.length > 0 ? array[0] : notFoundValue;\r\n}\r\nexport function flatten(arr) {\r\n    var _a;\r\n    return (_a = []).concat.apply(_a, arr);\r\n}\r\nexport function range(arg, to) {\r\n    var from = typeof to === 'number' ? arg : 0;\r\n    if (typeof to === 'number') {\r\n        from = arg;\r\n    }\r\n    else {\r\n        from = 0;\r\n        to = arg;\r\n    }\r\n    var result = [];\r\n    if (from <= to) {\r\n        for (var i = from; i < to; i++) {\r\n            result.push(i);\r\n        }\r\n    }\r\n    else {\r\n        for (var i = from; i > to; i--) {\r\n            result.push(i);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Insert `insertArr` inside `target` at `insertIndex`.\r\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\r\n */\r\nexport function arrayInsert(target, insertIndex, insertArr) {\r\n    var before = target.slice(0, insertIndex);\r\n    var after = target.slice(insertIndex);\r\n    return before.concat(insertArr, after);\r\n}\r\n/**\r\n * Pushes an element to the start of the array, if found.\r\n */\r\nexport function pushToStart(arr, value) {\r\n    var index = arr.indexOf(value);\r\n    if (index > -1) {\r\n        arr.splice(index, 1);\r\n        arr.unshift(value);\r\n    }\r\n}\r\n/**\r\n * Pushes an element to the end of the array, if found.\r\n */\r\nexport function pushToEnd(arr, value) {\r\n    var index = arr.indexOf(value);\r\n    if (index > -1) {\r\n        arr.splice(index, 1);\r\n        arr.push(value);\r\n    }\r\n}\r\nexport function find(arr, predicate) {\r\n    for (var i = 0; i < arr.length; i++) {\r\n        var element = arr[i];\r\n        if (predicate(element, i, arr)) {\r\n            return element;\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\nexport function asArray(x) {\r\n    return Array.isArray(x) ? x : [x];\r\n}\r\n"]},"metadata":{},"sourceType":"module"}