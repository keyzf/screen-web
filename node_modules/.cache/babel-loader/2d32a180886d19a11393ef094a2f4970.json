{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../nls.js';\nimport { Color, RGBA } from '../../../base/common/color.js';\nimport { activeContrastBorder, editorBackground, editorForeground, registerColor, editorWarningForeground, editorInfoForeground, editorWarningBorder, editorInfoBorder, contrastBorder, editorFindMatchHighlight } from '../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\n/**\r\n * Definition of the editor colors\r\n */\n\nexport var editorLineHighlight = registerColor('editor.lineHighlightBackground', {\n  dark: null,\n  light: null,\n  hc: null\n}, nls.localize('lineHighlight', 'Background color for the highlight of line at the cursor position.'));\nexport var editorLineHighlightBorder = registerColor('editor.lineHighlightBorder', {\n  dark: '#282828',\n  light: '#eeeeee',\n  hc: '#f38518'\n}, nls.localize('lineHighlightBorderBox', 'Background color for the border around the line at the cursor position.'));\nexport var editorRangeHighlight = registerColor('editor.rangeHighlightBackground', {\n  dark: '#ffffff0b',\n  light: '#fdff0033',\n  hc: null\n}, nls.localize('rangeHighlight', 'Background color of highlighted ranges, like by quick open and find features. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport var editorRangeHighlightBorder = registerColor('editor.rangeHighlightBorder', {\n  dark: null,\n  light: null,\n  hc: activeContrastBorder\n}, nls.localize('rangeHighlightBorder', 'Background color of the border around highlighted ranges.'), true);\nexport var editorSymbolHighlight = registerColor('editor.symbolHighlightBackground', {\n  dark: editorFindMatchHighlight,\n  light: editorFindMatchHighlight,\n  hc: null\n}, nls.localize('symbolHighlight', 'Background color of highlighted symbol, like for go to definition or go next/previous symbol. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport var editorSymbolHighlightBorder = registerColor('editor.symbolHighlightBorder', {\n  dark: null,\n  light: null,\n  hc: activeContrastBorder\n}, nls.localize('symbolHighlightBorder', 'Background color of the border around highlighted symbols.'), true);\nexport var editorCursorForeground = registerColor('editorCursor.foreground', {\n  dark: '#AEAFAD',\n  light: Color.black,\n  hc: Color.white\n}, nls.localize('caret', 'Color of the editor cursor.'));\nexport var editorCursorBackground = registerColor('editorCursor.background', null, nls.localize('editorCursorBackground', 'The background color of the editor cursor. Allows customizing the color of a character overlapped by a block cursor.'));\nexport var editorWhitespaces = registerColor('editorWhitespace.foreground', {\n  dark: '#e3e4e229',\n  light: '#33333333',\n  hc: '#e3e4e229'\n}, nls.localize('editorWhitespaces', 'Color of whitespace characters in the editor.'));\nexport var editorIndentGuides = registerColor('editorIndentGuide.background', {\n  dark: editorWhitespaces,\n  light: editorWhitespaces,\n  hc: editorWhitespaces\n}, nls.localize('editorIndentGuides', 'Color of the editor indentation guides.'));\nexport var editorActiveIndentGuides = registerColor('editorIndentGuide.activeBackground', {\n  dark: editorWhitespaces,\n  light: editorWhitespaces,\n  hc: editorWhitespaces\n}, nls.localize('editorActiveIndentGuide', 'Color of the active editor indentation guides.'));\nexport var editorLineNumbers = registerColor('editorLineNumber.foreground', {\n  dark: '#858585',\n  light: '#237893',\n  hc: Color.white\n}, nls.localize('editorLineNumbers', 'Color of editor line numbers.'));\nvar deprecatedEditorActiveLineNumber = registerColor('editorActiveLineNumber.foreground', {\n  dark: '#c6c6c6',\n  light: '#0B216F',\n  hc: activeContrastBorder\n}, nls.localize('editorActiveLineNumber', 'Color of editor active line number'), false, nls.localize('deprecatedEditorActiveLineNumber', 'Id is deprecated. Use \\'editorLineNumber.activeForeground\\' instead.'));\nexport var editorActiveLineNumber = registerColor('editorLineNumber.activeForeground', {\n  dark: deprecatedEditorActiveLineNumber,\n  light: deprecatedEditorActiveLineNumber,\n  hc: deprecatedEditorActiveLineNumber\n}, nls.localize('editorActiveLineNumber', 'Color of editor active line number'));\nexport var editorRuler = registerColor('editorRuler.foreground', {\n  dark: '#5A5A5A',\n  light: Color.lightgrey,\n  hc: Color.white\n}, nls.localize('editorRuler', 'Color of the editor rulers.'));\nexport var editorCodeLensForeground = registerColor('editorCodeLens.foreground', {\n  dark: '#999999',\n  light: '#999999',\n  hc: '#999999'\n}, nls.localize('editorCodeLensForeground', 'Foreground color of editor code lenses'));\nexport var editorBracketMatchBackground = registerColor('editorBracketMatch.background', {\n  dark: '#0064001a',\n  light: '#0064001a',\n  hc: '#0064001a'\n}, nls.localize('editorBracketMatchBackground', 'Background color behind matching brackets'));\nexport var editorBracketMatchBorder = registerColor('editorBracketMatch.border', {\n  dark: '#888',\n  light: '#B9B9B9',\n  hc: contrastBorder\n}, nls.localize('editorBracketMatchBorder', 'Color for matching brackets boxes'));\nexport var editorOverviewRulerBorder = registerColor('editorOverviewRuler.border', {\n  dark: '#7f7f7f4d',\n  light: '#7f7f7f4d',\n  hc: '#7f7f7f4d'\n}, nls.localize('editorOverviewRulerBorder', 'Color of the overview ruler border.'));\nexport var editorGutter = registerColor('editorGutter.background', {\n  dark: editorBackground,\n  light: editorBackground,\n  hc: editorBackground\n}, nls.localize('editorGutter', 'Background color of the editor gutter. The gutter contains the glyph margins and the line numbers.'));\nexport var editorUnnecessaryCodeBorder = registerColor('editorUnnecessaryCode.border', {\n  dark: null,\n  light: null,\n  hc: Color.fromHex('#fff').transparent(0.8)\n}, nls.localize('unnecessaryCodeBorder', 'Border color of unnecessary (unused) source code in the editor.'));\nexport var editorUnnecessaryCodeOpacity = registerColor('editorUnnecessaryCode.opacity', {\n  dark: Color.fromHex('#000a'),\n  light: Color.fromHex('#0007'),\n  hc: null\n}, nls.localize('unnecessaryCodeOpacity', 'Opacity of unnecessary (unused) source code in the editor. For example, \"#000000c0\" will render the code with 75% opacity. For high contrast themes, use the  \\'editorUnnecessaryCode.border\\' theme color to underline unnecessary code instead of fading it out.'));\nexport var overviewRulerError = registerColor('editorOverviewRuler.errorForeground', {\n  dark: new Color(new RGBA(255, 18, 18, 0.7)),\n  light: new Color(new RGBA(255, 18, 18, 0.7)),\n  hc: new Color(new RGBA(255, 50, 50, 1))\n}, nls.localize('overviewRuleError', 'Overview ruler marker color for errors.'));\nexport var overviewRulerWarning = registerColor('editorOverviewRuler.warningForeground', {\n  dark: editorWarningForeground,\n  light: editorWarningForeground,\n  hc: editorWarningBorder\n}, nls.localize('overviewRuleWarning', 'Overview ruler marker color for warnings.'));\nexport var overviewRulerInfo = registerColor('editorOverviewRuler.infoForeground', {\n  dark: editorInfoForeground,\n  light: editorInfoForeground,\n  hc: editorInfoBorder\n}, nls.localize('overviewRuleInfo', 'Overview ruler marker color for infos.')); // contains all color rules that used to defined in editor/browser/widget/editor.css\n\nregisterThemingParticipant(function (theme, collector) {\n  var background = theme.getColor(editorBackground);\n\n  if (background) {\n    collector.addRule(\".monaco-editor, .monaco-editor-background, .monaco-editor .inputarea.ime-input { background-color: \" + background + \"; }\");\n  }\n\n  var foreground = theme.getColor(editorForeground);\n\n  if (foreground) {\n    collector.addRule(\".monaco-editor, .monaco-editor .inputarea.ime-input { color: \" + foreground + \"; }\");\n  }\n\n  var gutter = theme.getColor(editorGutter);\n\n  if (gutter) {\n    collector.addRule(\".monaco-editor .margin { background-color: \" + gutter + \"; }\");\n  }\n\n  var rangeHighlight = theme.getColor(editorRangeHighlight);\n\n  if (rangeHighlight) {\n    collector.addRule(\".monaco-editor .rangeHighlight { background-color: \" + rangeHighlight + \"; }\");\n  }\n\n  var rangeHighlightBorder = theme.getColor(editorRangeHighlightBorder);\n\n  if (rangeHighlightBorder) {\n    collector.addRule(\".monaco-editor .rangeHighlight { border: 1px \" + (theme.type === 'hc' ? 'dotted' : 'solid') + \" \" + rangeHighlightBorder + \"; }\");\n  }\n\n  var symbolHighlight = theme.getColor(editorSymbolHighlight);\n\n  if (symbolHighlight) {\n    collector.addRule(\".monaco-editor .symbolHighlight { background-color: \" + symbolHighlight + \"; }\");\n  }\n\n  var symbolHighlightBorder = theme.getColor(editorSymbolHighlightBorder);\n\n  if (symbolHighlightBorder) {\n    collector.addRule(\".monaco-editor .symbolHighlight { border: 1px \" + (theme.type === 'hc' ? 'dotted' : 'solid') + \" \" + symbolHighlightBorder + \"; }\");\n  }\n\n  var invisibles = theme.getColor(editorWhitespaces);\n\n  if (invisibles) {\n    collector.addRule(\".vs-whitespace { color: \" + invisibles + \" !important; }\");\n  }\n});","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/common/view/editorColorRegistry.js"],"names":["nls","Color","RGBA","activeContrastBorder","editorBackground","editorForeground","registerColor","editorWarningForeground","editorInfoForeground","editorWarningBorder","editorInfoBorder","contrastBorder","editorFindMatchHighlight","registerThemingParticipant","editorLineHighlight","dark","light","hc","localize","editorLineHighlightBorder","editorRangeHighlight","editorRangeHighlightBorder","editorSymbolHighlight","editorSymbolHighlightBorder","editorCursorForeground","black","white","editorCursorBackground","editorWhitespaces","editorIndentGuides","editorActiveIndentGuides","editorLineNumbers","deprecatedEditorActiveLineNumber","editorActiveLineNumber","editorRuler","lightgrey","editorCodeLensForeground","editorBracketMatchBackground","editorBracketMatchBorder","editorOverviewRulerBorder","editorGutter","editorUnnecessaryCodeBorder","fromHex","transparent","editorUnnecessaryCodeOpacity","overviewRulerError","overviewRulerWarning","overviewRulerInfo","theme","collector","background","getColor","addRule","foreground","gutter","rangeHighlight","rangeHighlightBorder","type","symbolHighlight","symbolHighlightBorder","invisibles"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport { Color, RGBA } from '../../../base/common/color.js';\r\nimport { activeContrastBorder, editorBackground, editorForeground, registerColor, editorWarningForeground, editorInfoForeground, editorWarningBorder, editorInfoBorder, contrastBorder, editorFindMatchHighlight } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\n/**\r\n * Definition of the editor colors\r\n */\r\nexport var editorLineHighlight = registerColor('editor.lineHighlightBackground', { dark: null, light: null, hc: null }, nls.localize('lineHighlight', 'Background color for the highlight of line at the cursor position.'));\r\nexport var editorLineHighlightBorder = registerColor('editor.lineHighlightBorder', { dark: '#282828', light: '#eeeeee', hc: '#f38518' }, nls.localize('lineHighlightBorderBox', 'Background color for the border around the line at the cursor position.'));\r\nexport var editorRangeHighlight = registerColor('editor.rangeHighlightBackground', { dark: '#ffffff0b', light: '#fdff0033', hc: null }, nls.localize('rangeHighlight', 'Background color of highlighted ranges, like by quick open and find features. The color must not be opaque so as not to hide underlying decorations.'), true);\r\nexport var editorRangeHighlightBorder = registerColor('editor.rangeHighlightBorder', { dark: null, light: null, hc: activeContrastBorder }, nls.localize('rangeHighlightBorder', 'Background color of the border around highlighted ranges.'), true);\r\nexport var editorSymbolHighlight = registerColor('editor.symbolHighlightBackground', { dark: editorFindMatchHighlight, light: editorFindMatchHighlight, hc: null }, nls.localize('symbolHighlight', 'Background color of highlighted symbol, like for go to definition or go next/previous symbol. The color must not be opaque so as not to hide underlying decorations.'), true);\r\nexport var editorSymbolHighlightBorder = registerColor('editor.symbolHighlightBorder', { dark: null, light: null, hc: activeContrastBorder }, nls.localize('symbolHighlightBorder', 'Background color of the border around highlighted symbols.'), true);\r\nexport var editorCursorForeground = registerColor('editorCursor.foreground', { dark: '#AEAFAD', light: Color.black, hc: Color.white }, nls.localize('caret', 'Color of the editor cursor.'));\r\nexport var editorCursorBackground = registerColor('editorCursor.background', null, nls.localize('editorCursorBackground', 'The background color of the editor cursor. Allows customizing the color of a character overlapped by a block cursor.'));\r\nexport var editorWhitespaces = registerColor('editorWhitespace.foreground', { dark: '#e3e4e229', light: '#33333333', hc: '#e3e4e229' }, nls.localize('editorWhitespaces', 'Color of whitespace characters in the editor.'));\r\nexport var editorIndentGuides = registerColor('editorIndentGuide.background', { dark: editorWhitespaces, light: editorWhitespaces, hc: editorWhitespaces }, nls.localize('editorIndentGuides', 'Color of the editor indentation guides.'));\r\nexport var editorActiveIndentGuides = registerColor('editorIndentGuide.activeBackground', { dark: editorWhitespaces, light: editorWhitespaces, hc: editorWhitespaces }, nls.localize('editorActiveIndentGuide', 'Color of the active editor indentation guides.'));\r\nexport var editorLineNumbers = registerColor('editorLineNumber.foreground', { dark: '#858585', light: '#237893', hc: Color.white }, nls.localize('editorLineNumbers', 'Color of editor line numbers.'));\r\nvar deprecatedEditorActiveLineNumber = registerColor('editorActiveLineNumber.foreground', { dark: '#c6c6c6', light: '#0B216F', hc: activeContrastBorder }, nls.localize('editorActiveLineNumber', 'Color of editor active line number'), false, nls.localize('deprecatedEditorActiveLineNumber', 'Id is deprecated. Use \\'editorLineNumber.activeForeground\\' instead.'));\r\nexport var editorActiveLineNumber = registerColor('editorLineNumber.activeForeground', { dark: deprecatedEditorActiveLineNumber, light: deprecatedEditorActiveLineNumber, hc: deprecatedEditorActiveLineNumber }, nls.localize('editorActiveLineNumber', 'Color of editor active line number'));\r\nexport var editorRuler = registerColor('editorRuler.foreground', { dark: '#5A5A5A', light: Color.lightgrey, hc: Color.white }, nls.localize('editorRuler', 'Color of the editor rulers.'));\r\nexport var editorCodeLensForeground = registerColor('editorCodeLens.foreground', { dark: '#999999', light: '#999999', hc: '#999999' }, nls.localize('editorCodeLensForeground', 'Foreground color of editor code lenses'));\r\nexport var editorBracketMatchBackground = registerColor('editorBracketMatch.background', { dark: '#0064001a', light: '#0064001a', hc: '#0064001a' }, nls.localize('editorBracketMatchBackground', 'Background color behind matching brackets'));\r\nexport var editorBracketMatchBorder = registerColor('editorBracketMatch.border', { dark: '#888', light: '#B9B9B9', hc: contrastBorder }, nls.localize('editorBracketMatchBorder', 'Color for matching brackets boxes'));\r\nexport var editorOverviewRulerBorder = registerColor('editorOverviewRuler.border', { dark: '#7f7f7f4d', light: '#7f7f7f4d', hc: '#7f7f7f4d' }, nls.localize('editorOverviewRulerBorder', 'Color of the overview ruler border.'));\r\nexport var editorGutter = registerColor('editorGutter.background', { dark: editorBackground, light: editorBackground, hc: editorBackground }, nls.localize('editorGutter', 'Background color of the editor gutter. The gutter contains the glyph margins and the line numbers.'));\r\nexport var editorUnnecessaryCodeBorder = registerColor('editorUnnecessaryCode.border', { dark: null, light: null, hc: Color.fromHex('#fff').transparent(0.8) }, nls.localize('unnecessaryCodeBorder', 'Border color of unnecessary (unused) source code in the editor.'));\r\nexport var editorUnnecessaryCodeOpacity = registerColor('editorUnnecessaryCode.opacity', { dark: Color.fromHex('#000a'), light: Color.fromHex('#0007'), hc: null }, nls.localize('unnecessaryCodeOpacity', 'Opacity of unnecessary (unused) source code in the editor. For example, \"#000000c0\" will render the code with 75% opacity. For high contrast themes, use the  \\'editorUnnecessaryCode.border\\' theme color to underline unnecessary code instead of fading it out.'));\r\nexport var overviewRulerError = registerColor('editorOverviewRuler.errorForeground', { dark: new Color(new RGBA(255, 18, 18, 0.7)), light: new Color(new RGBA(255, 18, 18, 0.7)), hc: new Color(new RGBA(255, 50, 50, 1)) }, nls.localize('overviewRuleError', 'Overview ruler marker color for errors.'));\r\nexport var overviewRulerWarning = registerColor('editorOverviewRuler.warningForeground', { dark: editorWarningForeground, light: editorWarningForeground, hc: editorWarningBorder }, nls.localize('overviewRuleWarning', 'Overview ruler marker color for warnings.'));\r\nexport var overviewRulerInfo = registerColor('editorOverviewRuler.infoForeground', { dark: editorInfoForeground, light: editorInfoForeground, hc: editorInfoBorder }, nls.localize('overviewRuleInfo', 'Overview ruler marker color for infos.'));\r\n// contains all color rules that used to defined in editor/browser/widget/editor.css\r\nregisterThemingParticipant(function (theme, collector) {\r\n    var background = theme.getColor(editorBackground);\r\n    if (background) {\r\n        collector.addRule(\".monaco-editor, .monaco-editor-background, .monaco-editor .inputarea.ime-input { background-color: \" + background + \"; }\");\r\n    }\r\n    var foreground = theme.getColor(editorForeground);\r\n    if (foreground) {\r\n        collector.addRule(\".monaco-editor, .monaco-editor .inputarea.ime-input { color: \" + foreground + \"; }\");\r\n    }\r\n    var gutter = theme.getColor(editorGutter);\r\n    if (gutter) {\r\n        collector.addRule(\".monaco-editor .margin { background-color: \" + gutter + \"; }\");\r\n    }\r\n    var rangeHighlight = theme.getColor(editorRangeHighlight);\r\n    if (rangeHighlight) {\r\n        collector.addRule(\".monaco-editor .rangeHighlight { background-color: \" + rangeHighlight + \"; }\");\r\n    }\r\n    var rangeHighlightBorder = theme.getColor(editorRangeHighlightBorder);\r\n    if (rangeHighlightBorder) {\r\n        collector.addRule(\".monaco-editor .rangeHighlight { border: 1px \" + (theme.type === 'hc' ? 'dotted' : 'solid') + \" \" + rangeHighlightBorder + \"; }\");\r\n    }\r\n    var symbolHighlight = theme.getColor(editorSymbolHighlight);\r\n    if (symbolHighlight) {\r\n        collector.addRule(\".monaco-editor .symbolHighlight { background-color: \" + symbolHighlight + \"; }\");\r\n    }\r\n    var symbolHighlightBorder = theme.getColor(editorSymbolHighlightBorder);\r\n    if (symbolHighlightBorder) {\r\n        collector.addRule(\".monaco-editor .symbolHighlight { border: 1px \" + (theme.type === 'hc' ? 'dotted' : 'solid') + \" \" + symbolHighlightBorder + \"; }\");\r\n    }\r\n    var invisibles = theme.getColor(editorWhitespaces);\r\n    if (invisibles) {\r\n        collector.addRule(\".vs-whitespace { color: \" + invisibles + \" !important; }\");\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}