{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as nls from '../../../nls.js';\nimport { EditorAction, registerEditorAction } from '../../browser/editorExtensions.js';\nimport { ReplaceCommand } from '../../common/commands/replaceCommand.js';\nimport { Range } from '../../common/core/range.js';\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\nimport { MoveOperations } from '../../common/controller/cursorMoveOperations.js';\n\nvar TransposeLettersAction =\n/** @class */\nfunction (_super) {\n  __extends(TransposeLettersAction, _super);\n\n  function TransposeLettersAction() {\n    return _super.call(this, {\n      id: 'editor.action.transposeLetters',\n      label: nls.localize('transposeLetters.label', \"Transpose Letters\"),\n      alias: 'Transpose Letters',\n      precondition: EditorContextKeys.writable,\n      kbOpts: {\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 0,\n        mac: {\n          primary: 256\n          /* WinCtrl */\n          | 50\n          /* KEY_T */\n\n        },\n        weight: 100\n        /* EditorContrib */\n\n      }\n    }) || this;\n  }\n\n  TransposeLettersAction.prototype.run = function (accessor, editor) {\n    if (!editor.hasModel()) {\n      return;\n    }\n\n    var model = editor.getModel();\n    var commands = [];\n    var selections = editor.getSelections();\n\n    for (var _i = 0, selections_1 = selections; _i < selections_1.length; _i++) {\n      var selection = selections_1[_i];\n\n      if (!selection.isEmpty()) {\n        continue;\n      }\n\n      var lineNumber = selection.startLineNumber;\n      var column = selection.startColumn;\n      var lastColumn = model.getLineMaxColumn(lineNumber);\n\n      if (lineNumber === 1 && (column === 1 || column === 2 && lastColumn === 2)) {\n        // at beginning of file, nothing to do\n        continue;\n      } // handle special case: when at end of line, transpose left two chars\n      // otherwise, transpose left and right chars\n\n\n      var endPosition = column === lastColumn ? selection.getPosition() : MoveOperations.rightPosition(model, selection.getPosition().lineNumber, selection.getPosition().column);\n      var middlePosition = MoveOperations.leftPosition(model, endPosition.lineNumber, endPosition.column);\n      var beginPosition = MoveOperations.leftPosition(model, middlePosition.lineNumber, middlePosition.column);\n      var leftChar = model.getValueInRange(Range.fromPositions(beginPosition, middlePosition));\n      var rightChar = model.getValueInRange(Range.fromPositions(middlePosition, endPosition));\n      var replaceRange = Range.fromPositions(beginPosition, endPosition);\n      commands.push(new ReplaceCommand(replaceRange, rightChar + leftChar));\n    }\n\n    if (commands.length > 0) {\n      editor.pushUndoStop();\n      editor.executeCommands(this.id, commands);\n      editor.pushUndoStop();\n    }\n  };\n\n  return TransposeLettersAction;\n}(EditorAction);\n\nregisterEditorAction(TransposeLettersAction);","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/contrib/caretOperations/transpose.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","nls","EditorAction","registerEditorAction","ReplaceCommand","Range","EditorContextKeys","MoveOperations","TransposeLettersAction","_super","call","id","label","localize","alias","precondition","writable","kbOpts","kbExpr","textInputFocus","primary","mac","weight","run","accessor","editor","hasModel","model","getModel","commands","selections","getSelections","_i","selections_1","length","selection","isEmpty","lineNumber","startLineNumber","column","startColumn","lastColumn","getLineMaxColumn","endPosition","getPosition","rightPosition","middlePosition","leftPosition","beginPosition","leftChar","getValueInRange","fromPositions","rightChar","replaceRange","push","pushUndoStop","executeCommands"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport * as nls from '../../../nls.js';\r\nimport { EditorAction, registerEditorAction } from '../../browser/editorExtensions.js';\r\nimport { ReplaceCommand } from '../../common/commands/replaceCommand.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { MoveOperations } from '../../common/controller/cursorMoveOperations.js';\r\nvar TransposeLettersAction = /** @class */ (function (_super) {\r\n    __extends(TransposeLettersAction, _super);\r\n    function TransposeLettersAction() {\r\n        return _super.call(this, {\r\n            id: 'editor.action.transposeLetters',\r\n            label: nls.localize('transposeLetters.label', \"Transpose Letters\"),\r\n            alias: 'Transpose Letters',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 0,\r\n                mac: {\r\n                    primary: 256 /* WinCtrl */ | 50 /* KEY_T */\r\n                },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        }) || this;\r\n    }\r\n    TransposeLettersAction.prototype.run = function (accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        var model = editor.getModel();\r\n        var commands = [];\r\n        var selections = editor.getSelections();\r\n        for (var _i = 0, selections_1 = selections; _i < selections_1.length; _i++) {\r\n            var selection = selections_1[_i];\r\n            if (!selection.isEmpty()) {\r\n                continue;\r\n            }\r\n            var lineNumber = selection.startLineNumber;\r\n            var column = selection.startColumn;\r\n            var lastColumn = model.getLineMaxColumn(lineNumber);\r\n            if (lineNumber === 1 && (column === 1 || (column === 2 && lastColumn === 2))) {\r\n                // at beginning of file, nothing to do\r\n                continue;\r\n            }\r\n            // handle special case: when at end of line, transpose left two chars\r\n            // otherwise, transpose left and right chars\r\n            var endPosition = (column === lastColumn) ?\r\n                selection.getPosition() :\r\n                MoveOperations.rightPosition(model, selection.getPosition().lineNumber, selection.getPosition().column);\r\n            var middlePosition = MoveOperations.leftPosition(model, endPosition.lineNumber, endPosition.column);\r\n            var beginPosition = MoveOperations.leftPosition(model, middlePosition.lineNumber, middlePosition.column);\r\n            var leftChar = model.getValueInRange(Range.fromPositions(beginPosition, middlePosition));\r\n            var rightChar = model.getValueInRange(Range.fromPositions(middlePosition, endPosition));\r\n            var replaceRange = Range.fromPositions(beginPosition, endPosition);\r\n            commands.push(new ReplaceCommand(replaceRange, rightChar + leftChar));\r\n        }\r\n        if (commands.length > 0) {\r\n            editor.pushUndoStop();\r\n            editor.executeCommands(this.id, commands);\r\n            editor.pushUndoStop();\r\n        }\r\n    };\r\n    return TransposeLettersAction;\r\n}(EditorAction));\r\nregisterEditorAction(TransposeLettersAction);\r\n"]},"metadata":{},"sourceType":"module"}