{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar TooltipRichContent = require(\"./TooltipRichContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\nvar _model = require(\"../../util/model\");\n\nvar getTooltipRenderMode = _model.getTooltipRenderMode;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipModel = ecModel.getComponent('tooltip');\n    var renderMode = tooltipModel.get('renderMode');\n    this._renderMode = getTooltipRenderMode(renderMode);\n    var tooltipContent;\n\n    if (this._renderMode === 'html') {\n      tooltipContent = new TooltipContent(api.getDom(), api);\n      this._newLine = '<br/>';\n    } else {\n      tooltipContent = new TooltipRichContent(api);\n      this._newLine = '\\n';\n    }\n\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        !api.isDisposed() && self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    var renderMode = this._renderMode;\n    var newLine = this._newLine;\n    var markers = {};\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            var seriesTooltip = series.formatTooltip(dataIndex, true, null, renderMode);\n            var html;\n\n            if (zrUtil.isObject(seriesTooltip)) {\n              html = seriesTooltip.html;\n              var newMarkers = seriesTooltip.markers;\n              zrUtil.merge(markers, newMarkers);\n            } else {\n              html = seriesTooltip;\n            }\n\n            seriesDefaultHTML.push(html);\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n\n        if (renderMode !== 'html') {\n          singleDefaultHTML.push(seriesDefaultHTML.join(newLine));\n        } else {\n          singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + newLine : '') + seriesDefaultHTML.join(newLine));\n        }\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join(this._newLine + this._newLine);\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr, undefined, markers);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var seriesTooltip = dataModel.formatTooltip(dataIndex, false, dataType, this._renderMode);\n    var defaultHtml;\n    var markers;\n\n    if (zrUtil.isObject(seriesTooltip)) {\n      defaultHtml = seriesTooltip.html;\n      markers = seriesTooltip.markers;\n    } else {\n      defaultHtml = seriesTooltip;\n      markers = null;\n    }\n\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target, markers);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el, markers) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html, markers, tooltipModel);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html, markers, tooltipModel);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (Model.isInstance(tooltipOpt)) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, content, viewWidth, viewHeight, gapH, gapV) {\n  var size = content.getOuterSize();\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, content, viewWidth, viewHeight) {\n  var size = content.getOuterSize();\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/echarts/lib/component/tooltip/TooltipView.js"],"names":["echarts","require","zrUtil","env","TooltipContent","TooltipRichContent","formatUtil","numberUtil","graphic","findPointFromSeries","layoutUtil","Model","globalListener","axisHelper","axisPointerViewHelper","_model","getTooltipRenderMode","bind","each","parsePercent","proxyRect","Rect","shape","x","y","width","height","_default","extendComponentView","type","init","ecModel","api","node","tooltipModel","getComponent","renderMode","get","_renderMode","tooltipContent","getDom","_newLine","_tooltipContent","render","group","removeAll","_tooltipModel","_ecModel","_api","_lastDataByCoordSys","_alwaysShowContent","update","setEnterable","_initGlobalListener","_keepShow","triggerOn","register","currTrigger","e","dispatchAction","indexOf","_tryShow","_hide","_lastX","_lastY","self","clearTimeout","_refreshUpdateTimeout","setTimeout","isDisposed","manuallyShowTip","payload","from","uid","makeDispatchAction","_ticket","dataByCoordSys","tooltip","el","position","offsetX","offsetY","target","event","tooltipOption","seriesIndex","_manuallyAxisShowTip","pointInfo","cx","point","cy","getZr","findHover","manuallyHideTip","hideLater","dataIndex","coordSysAxesInfo","seriesModel","getSeriesByIndex","data","getData","buildTooltipModel","getItemModel","coordinateSystem","model","length","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","cb","delay","_showTimout","globalTooltipModel","singleDefaultHTML","singleParamsList","singleTooltipModel","newLine","markers","itemCoordSys","dataByAxis","item","axisModel","axisDim","axisIndex","axisValue","value","seriesDefaultHTML","valueLabel","getValueLabel","axis","seriesDataIndices","valueLabelOpt","idxItem","series","dataIndexInside","dataParams","getDataParams","axisType","axisId","getAxisRawValue","axisValueLabel","push","seriesTooltip","formatTooltip","html","isObject","newMarkers","merge","firstLine","join","encodeHTML","reverse","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","Math","random","undefined","dataModel","dataType","tooltipTrigger","params","defaultHtml","asyncTicket","name","getRawIndex","tooltipOpt","content","formatter","subTooltipModel","formatTpl","callback","cbTicket","setContent","show","viewWidth","getWidth","viewHeight","getHeight","contentSize","getSize","align","vAlign","rect","getBoundingRect","clone","applyTransform","transform","viewSize","slice","isArray","layoutRect","getLayoutRect","pos","calcTooltipPosition","refixTooltipPosition","isCenterAlign","confineTooltipPosition","moveTo","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","thisItem","lastIndices","newIndices","lastIdxItem","j","newIdxItem","dispose","hide","unregister","modelCascade","resultModel","pop","isInstance","gapH","gapV","size","getOuterSize","min","max","domWidth","domHeight","gap","rectWidth","rectHeight","module","exports"],"mappings":"AACA;;;;;;;;;;;;;;;;;;AAmBA,IAAIA,OAAO,GAAGC,OAAO,CAAC,eAAD,CAArB;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,uBAAD,CAApB;;AAEA,IAAIE,GAAG,GAAGF,OAAO,CAAC,sBAAD,CAAjB;;AAEA,IAAIG,cAAc,GAAGH,OAAO,CAAC,kBAAD,CAA5B;;AAEA,IAAII,kBAAkB,GAAGJ,OAAO,CAAC,sBAAD,CAAhC;;AAEA,IAAIK,UAAU,GAAGL,OAAO,CAAC,mBAAD,CAAxB;;AAEA,IAAIM,UAAU,GAAGN,OAAO,CAAC,mBAAD,CAAxB;;AAEA,IAAIO,OAAO,GAAGP,OAAO,CAAC,oBAAD,CAArB;;AAEA,IAAIQ,mBAAmB,GAAGR,OAAO,CAAC,oCAAD,CAAjC;;AAEA,IAAIS,UAAU,GAAGT,OAAO,CAAC,mBAAD,CAAxB;;AAEA,IAAIU,KAAK,GAAGV,OAAO,CAAC,mBAAD,CAAnB;;AAEA,IAAIW,cAAc,GAAGX,OAAO,CAAC,+BAAD,CAA5B;;AAEA,IAAIY,UAAU,GAAGZ,OAAO,CAAC,wBAAD,CAAxB;;AAEA,IAAIa,qBAAqB,GAAGb,OAAO,CAAC,2BAAD,CAAnC;;AAEA,IAAIc,MAAM,GAAGd,OAAO,CAAC,kBAAD,CAApB;;AAEA,IAAIe,oBAAoB,GAAGD,MAAM,CAACC,oBAAlC;AAEA;;;;;;;;;;;;;;;;;;;AAkBA,IAAIC,IAAI,GAAGf,MAAM,CAACe,IAAlB;AACA,IAAIC,IAAI,GAAGhB,MAAM,CAACgB,IAAlB;AACA,IAAIC,YAAY,GAAGZ,UAAU,CAACY,YAA9B;AACA,IAAIC,SAAS,GAAG,IAAIZ,OAAO,CAACa,IAAZ,CAAiB;AAC/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,CAAC,EAAE,CAAC,CADC;AAELC,IAAAA,CAAC,EAAE,CAAC,CAFC;AAGLC,IAAAA,KAAK,EAAE,CAHF;AAILC,IAAAA,MAAM,EAAE;AAJH;AADwB,CAAjB,CAAhB;;AASA,IAAIC,QAAQ,GAAG3B,OAAO,CAAC4B,mBAAR,CAA4B;AACzCC,EAAAA,IAAI,EAAE,SADmC;AAEzCC,EAAAA,IAAI,EAAE,UAAUC,OAAV,EAAmBC,GAAnB,EAAwB;AAC5B,QAAI7B,GAAG,CAAC8B,IAAR,EAAc;AACZ;AACD;;AAED,QAAIC,YAAY,GAAGH,OAAO,CAACI,YAAR,CAAqB,SAArB,CAAnB;AACA,QAAIC,UAAU,GAAGF,YAAY,CAACG,GAAb,CAAiB,YAAjB,CAAjB;AACA,SAAKC,WAAL,GAAmBtB,oBAAoB,CAACoB,UAAD,CAAvC;AACA,QAAIG,cAAJ;;AAEA,QAAI,KAAKD,WAAL,KAAqB,MAAzB,EAAiC;AAC/BC,MAAAA,cAAc,GAAG,IAAInC,cAAJ,CAAmB4B,GAAG,CAACQ,MAAJ,EAAnB,EAAiCR,GAAjC,CAAjB;AACA,WAAKS,QAAL,GAAgB,OAAhB;AACD,KAHD,MAGO;AACLF,MAAAA,cAAc,GAAG,IAAIlC,kBAAJ,CAAuB2B,GAAvB,CAAjB;AACA,WAAKS,QAAL,GAAgB,IAAhB;AACD;;AAED,SAAKC,eAAL,GAAuBH,cAAvB;AACD,GArBwC;AAsBzCI,EAAAA,MAAM,EAAE,UAAUT,YAAV,EAAwBH,OAAxB,EAAiCC,GAAjC,EAAsC;AAC5C,QAAI7B,GAAG,CAAC8B,IAAR,EAAc;AACZ;AACD,KAH2C,CAG1C;;;AAGF,SAAKW,KAAL,CAAWC,SAAX;AACA;;;;;AAKA,SAAKC,aAAL,GAAqBZ,YAArB;AACA;;;;;AAKA,SAAKa,QAAL,GAAgBhB,OAAhB;AACA;;;;;AAKA,SAAKiB,IAAL,GAAYhB,GAAZ;AACA;;;;;;AAMA,SAAKiB,mBAAL,GAA2B,IAA3B;AACA;;;;;AAKA,SAAKC,kBAAL,GAA0BhB,YAAY,CAACG,GAAb,CAAiB,mBAAjB,CAA1B;AACA,QAAIE,cAAc,GAAG,KAAKG,eAA1B;AACAH,IAAAA,cAAc,CAACY,MAAf;AACAZ,IAAAA,cAAc,CAACa,YAAf,CAA4BlB,YAAY,CAACG,GAAb,CAAiB,WAAjB,CAA5B;;AAEA,SAAKgB,mBAAL;;AAEA,SAAKC,SAAL;AACD,GAnEwC;AAoEzCD,EAAAA,mBAAmB,EAAE,YAAY;AAC/B,QAAInB,YAAY,GAAG,KAAKY,aAAxB;AACA,QAAIS,SAAS,GAAGrB,YAAY,CAACG,GAAb,CAAiB,WAAjB,CAAhB;AACAzB,IAAAA,cAAc,CAAC4C,QAAf,CAAwB,aAAxB,EAAuC,KAAKR,IAA5C,EAAkD/B,IAAI,CAAC,UAAUwC,WAAV,EAAuBC,CAAvB,EAA0BC,cAA1B,EAA0C;AAC/F;AACA,UAAIJ,SAAS,KAAK,MAAlB,EAA0B;AACxB,YAAIA,SAAS,CAACK,OAAV,CAAkBH,WAAlB,KAAkC,CAAtC,EAAyC;AACvC,eAAKI,QAAL,CAAcH,CAAd,EAAiBC,cAAjB;AACD,SAFD,MAEO,IAAIF,WAAW,KAAK,OAApB,EAA6B;AAClC,eAAKK,KAAL,CAAWH,cAAX;AACD;AACF;AACF,KATqD,EASnD,IATmD,CAAtD;AAUD,GAjFwC;AAkFzCL,EAAAA,SAAS,EAAE,YAAY;AACrB,QAAIpB,YAAY,GAAG,KAAKY,aAAxB;AACA,QAAIf,OAAO,GAAG,KAAKgB,QAAnB;AACA,QAAIf,GAAG,GAAG,KAAKgB,IAAf,CAHqB,CAGA;;AAErB,QAAI,KAAKe,MAAL,IAAe,IAAf,IAAuB,KAAKC,MAAL,IAAe,IAAtC,CAA2C;AAC/C;AACA;AAFI,OAGD9B,YAAY,CAACG,GAAb,CAAiB,WAAjB,MAAkC,MAHrC,EAG6C;AAC3C,UAAI4B,IAAI,GAAG,IAAX;AACAC,MAAAA,YAAY,CAAC,KAAKC,qBAAN,CAAZ;AACA,WAAKA,qBAAL,GAA6BC,UAAU,CAAC,YAAY;AAClD;AACA;AACA;AACA,SAACpC,GAAG,CAACqC,UAAJ,EAAD,IAAqBJ,IAAI,CAACK,eAAL,CAAqBpC,YAArB,EAAmCH,OAAnC,EAA4CC,GAA5C,EAAiD;AACpET,UAAAA,CAAC,EAAE0C,IAAI,CAACF,MAD4D;AAEpEvC,UAAAA,CAAC,EAAEyC,IAAI,CAACD;AAF4D,SAAjD,CAArB;AAID,OARsC,CAAvC;AASD;AACF,GAvGwC;;AAyGzC;;;;;;;;;;;;;;;;AAgBAM,EAAAA,eAAe,EAAE,UAAUpC,YAAV,EAAwBH,OAAxB,EAAiCC,GAAjC,EAAsCuC,OAAtC,EAA+C;AAC9D,QAAIA,OAAO,CAACC,IAAR,KAAiB,KAAKC,GAAtB,IAA6BtE,GAAG,CAAC8B,IAArC,EAA2C;AACzC;AACD;;AAED,QAAI0B,cAAc,GAAGe,kBAAkB,CAACH,OAAD,EAAUvC,GAAV,CAAvC,CAL8D,CAKP;;AAEvD,SAAK2C,OAAL,GAAe,EAAf,CAP8D,CAO3C;;AAEnB,QAAIC,cAAc,GAAGL,OAAO,CAACK,cAA7B;;AAEA,QAAIL,OAAO,CAACM,OAAR,IAAmBN,OAAO,CAAChD,CAAR,IAAa,IAAhC,IAAwCgD,OAAO,CAAC/C,CAAR,IAAa,IAAzD,EAA+D;AAC7D,UAAIsD,EAAE,GAAG1D,SAAT;AACA0D,MAAAA,EAAE,CAACC,QAAH,GAAc,CAACR,OAAO,CAAChD,CAAT,EAAYgD,OAAO,CAAC/C,CAApB,CAAd;AACAsD,MAAAA,EAAE,CAAC3B,MAAH;AACA2B,MAAAA,EAAE,CAACD,OAAH,GAAaN,OAAO,CAACM,OAArB,CAJ6D,CAI/B;;AAE9B,WAAKhB,QAAL,CAAc;AACZmB,QAAAA,OAAO,EAAET,OAAO,CAAChD,CADL;AAEZ0D,QAAAA,OAAO,EAAEV,OAAO,CAAC/C,CAFL;AAGZ0D,QAAAA,MAAM,EAAEJ;AAHI,OAAd,EAIGnB,cAJH;AAKD,KAXD,MAWO,IAAIiB,cAAJ,EAAoB;AACzB,WAAKf,QAAL,CAAc;AACZmB,QAAAA,OAAO,EAAET,OAAO,CAAChD,CADL;AAEZ0D,QAAAA,OAAO,EAAEV,OAAO,CAAC/C,CAFL;AAGZuD,QAAAA,QAAQ,EAAER,OAAO,CAACQ,QAHN;AAIZI,QAAAA,KAAK,EAAE,EAJK;AAKZP,QAAAA,cAAc,EAAEL,OAAO,CAACK,cALZ;AAMZQ,QAAAA,aAAa,EAAEb,OAAO,CAACa;AANX,OAAd,EAOGzB,cAPH;AAQD,KATM,MASA,IAAIY,OAAO,CAACc,WAAR,IAAuB,IAA3B,EAAiC;AACtC,UAAI,KAAKC,oBAAL,CAA0BpD,YAA1B,EAAwCH,OAAxC,EAAiDC,GAAjD,EAAsDuC,OAAtD,CAAJ,EAAoE;AAClE;AACD;;AAED,UAAIgB,SAAS,GAAG9E,mBAAmB,CAAC8D,OAAD,EAAUxC,OAAV,CAAnC;AACA,UAAIyD,EAAE,GAAGD,SAAS,CAACE,KAAV,CAAgB,CAAhB,CAAT;AACA,UAAIC,EAAE,GAAGH,SAAS,CAACE,KAAV,CAAgB,CAAhB,CAAT;;AAEA,UAAID,EAAE,IAAI,IAAN,IAAcE,EAAE,IAAI,IAAxB,EAA8B;AAC5B,aAAK7B,QAAL,CAAc;AACZmB,UAAAA,OAAO,EAAEQ,EADG;AAEZP,UAAAA,OAAO,EAAES,EAFG;AAGZX,UAAAA,QAAQ,EAAER,OAAO,CAACQ,QAHN;AAIZG,UAAAA,MAAM,EAAEK,SAAS,CAACT,EAJN;AAKZK,UAAAA,KAAK,EAAE;AALK,SAAd,EAMGxB,cANH;AAOD;AACF,KAlBM,MAkBA,IAAIY,OAAO,CAAChD,CAAR,IAAa,IAAb,IAAqBgD,OAAO,CAAC/C,CAAR,IAAa,IAAtC,EAA4C;AACjD;AACA;AACAQ,MAAAA,GAAG,CAAC2B,cAAJ,CAAmB;AACjB9B,QAAAA,IAAI,EAAE,mBADW;AAEjBN,QAAAA,CAAC,EAAEgD,OAAO,CAAChD,CAFM;AAGjBC,QAAAA,CAAC,EAAE+C,OAAO,CAAC/C;AAHM,OAAnB;;AAMA,WAAKqC,QAAL,CAAc;AACZmB,QAAAA,OAAO,EAAET,OAAO,CAAChD,CADL;AAEZ0D,QAAAA,OAAO,EAAEV,OAAO,CAAC/C,CAFL;AAGZuD,QAAAA,QAAQ,EAAER,OAAO,CAACQ,QAHN;AAIZG,QAAAA,MAAM,EAAElD,GAAG,CAAC2D,KAAJ,GAAYC,SAAZ,CAAsBrB,OAAO,CAAChD,CAA9B,EAAiCgD,OAAO,CAAC/C,CAAzC,EAA4C0D,MAJxC;AAKZC,QAAAA,KAAK,EAAE;AALK,OAAd,EAMGxB,cANH;AAOD;AACF,GA3LwC;AA4LzCkC,EAAAA,eAAe,EAAE,UAAU3D,YAAV,EAAwBH,OAAxB,EAAiCC,GAAjC,EAAsCuC,OAAtC,EAA+C;AAC9D,QAAIhC,cAAc,GAAG,KAAKG,eAA1B;;AAEA,QAAI,CAAC,KAAKQ,kBAAN,IAA4B,KAAKJ,aAArC,EAAoD;AAClDP,MAAAA,cAAc,CAACuD,SAAf,CAAyB,KAAKhD,aAAL,CAAmBT,GAAnB,CAAuB,WAAvB,CAAzB;AACD;;AAED,SAAK0B,MAAL,GAAc,KAAKC,MAAL,GAAc,IAA5B;;AAEA,QAAIO,OAAO,CAACC,IAAR,KAAiB,KAAKC,GAA1B,EAA+B;AAC7B,WAAKX,KAAL,CAAWY,kBAAkB,CAACH,OAAD,EAAUvC,GAAV,CAA7B;AACD;AACF,GAxMwC;AAyMzC;AACA;AACA;AACAsD,EAAAA,oBAAoB,EAAE,UAAUpD,YAAV,EAAwBH,OAAxB,EAAiCC,GAAjC,EAAsCuC,OAAtC,EAA+C;AACnE,QAAIc,WAAW,GAAGd,OAAO,CAACc,WAA1B;AACA,QAAIU,SAAS,GAAGxB,OAAO,CAACwB,SAAxB;AACA,QAAIC,gBAAgB,GAAGjE,OAAO,CAACI,YAAR,CAAqB,aAArB,EAAoC6D,gBAA3D;;AAEA,QAAIX,WAAW,IAAI,IAAf,IAAuBU,SAAS,IAAI,IAApC,IAA4CC,gBAAgB,IAAI,IAApE,EAA0E;AACxE;AACD;;AAED,QAAIC,WAAW,GAAGlE,OAAO,CAACmE,gBAAR,CAAyBb,WAAzB,CAAlB;;AAEA,QAAI,CAACY,WAAL,EAAkB;AAChB;AACD;;AAED,QAAIE,IAAI,GAAGF,WAAW,CAACG,OAAZ,EAAX;AACA,QAAIlE,YAAY,GAAGmE,iBAAiB,CAAC,CAACF,IAAI,CAACG,YAAL,CAAkBP,SAAlB,CAAD,EAA+BE,WAA/B,EAA4C,CAACA,WAAW,CAACM,gBAAZ,IAAgC,EAAjC,EAAqCC,KAAjF,EAAwFtE,YAAxF,CAAD,CAApC;;AAEA,QAAIA,YAAY,CAACG,GAAb,CAAiB,SAAjB,MAAgC,MAApC,EAA4C;AAC1C;AACD;;AAEDL,IAAAA,GAAG,CAAC2B,cAAJ,CAAmB;AACjB9B,MAAAA,IAAI,EAAE,mBADW;AAEjBwD,MAAAA,WAAW,EAAEA,WAFI;AAGjBU,MAAAA,SAAS,EAAEA,SAHM;AAIjBhB,MAAAA,QAAQ,EAAER,OAAO,CAACQ;AAJD,KAAnB;AAMA,WAAO,IAAP;AACD,GAzOwC;AA0OzClB,EAAAA,QAAQ,EAAE,UAAUH,CAAV,EAAaC,cAAb,EAA6B;AACrC,QAAImB,EAAE,GAAGpB,CAAC,CAACwB,MAAX;AACA,QAAIhD,YAAY,GAAG,KAAKY,aAAxB;;AAEA,QAAI,CAACZ,YAAL,EAAmB;AACjB;AACD,KANoC,CAMnC;;;AAGF,SAAK6B,MAAL,GAAcL,CAAC,CAACsB,OAAhB;AACA,SAAKhB,MAAL,GAAcN,CAAC,CAACuB,OAAhB;AACA,QAAIL,cAAc,GAAGlB,CAAC,CAACkB,cAAvB;;AAEA,QAAIA,cAAc,IAAIA,cAAc,CAAC6B,MAArC,EAA6C;AAC3C,WAAKC,gBAAL,CAAsB9B,cAAtB,EAAsClB,CAAtC;AACD,KAFD,CAEE;AAFF,SAGK,IAAIoB,EAAE,IAAIA,EAAE,CAACiB,SAAH,IAAgB,IAA1B,EAAgC;AACjC,aAAK9C,mBAAL,GAA2B,IAA3B;;AAEA,aAAK0D,sBAAL,CAA4BjD,CAA5B,EAA+BoB,EAA/B,EAAmCnB,cAAnC;AACD,OAJE,CAID;AAJC,WAKE,IAAImB,EAAE,IAAIA,EAAE,CAACD,OAAb,EAAsB;AACvB,eAAK5B,mBAAL,GAA2B,IAA3B;;AAEA,eAAK2D,yBAAL,CAA+BlD,CAA/B,EAAkCoB,EAAlC,EAAsCnB,cAAtC;AACD,SAJE,MAII;AACL,eAAKV,mBAAL,GAA2B,IAA3B;;AAEA,eAAKa,KAAL,CAAWH,cAAX;AACD;AACN,GAxQwC;AAyQzCkD,EAAAA,WAAW,EAAE,UAAU3E,YAAV,EAAwB4E,EAAxB,EAA4B;AACvC;AACA;AACA;AACA;AACA,QAAIC,KAAK,GAAG7E,YAAY,CAACG,GAAb,CAAiB,WAAjB,CAAZ;AACAyE,IAAAA,EAAE,GAAG5G,MAAM,CAACe,IAAP,CAAY6F,EAAZ,EAAgB,IAAhB,CAAL;AACA5C,IAAAA,YAAY,CAAC,KAAK8C,WAAN,CAAZ;AACAD,IAAAA,KAAK,GAAG,CAAR,GAAY,KAAKC,WAAL,GAAmB5C,UAAU,CAAC0C,EAAD,EAAKC,KAAL,CAAzC,GAAuDD,EAAE,EAAzD;AACD,GAlRwC;AAmRzCJ,EAAAA,gBAAgB,EAAE,UAAU9B,cAAV,EAA0BlB,CAA1B,EAA6B;AAC7C,QAAI3B,OAAO,GAAG,KAAKgB,QAAnB;AACA,QAAIkE,kBAAkB,GAAG,KAAKnE,aAA9B;AACA,QAAI2C,KAAK,GAAG,CAAC/B,CAAC,CAACsB,OAAH,EAAYtB,CAAC,CAACuB,OAAd,CAAZ;AACA,QAAIiC,iBAAiB,GAAG,EAAxB;AACA,QAAIC,gBAAgB,GAAG,EAAvB;AACA,QAAIC,kBAAkB,GAAGf,iBAAiB,CAAC,CAAC3C,CAAC,CAAC0B,aAAH,EAAkB6B,kBAAlB,CAAD,CAA1C;AACA,QAAI7E,UAAU,GAAG,KAAKE,WAAtB;AACA,QAAI+E,OAAO,GAAG,KAAK5E,QAAnB;AACA,QAAI6E,OAAO,GAAG,EAAd;AACApG,IAAAA,IAAI,CAAC0D,cAAD,EAAiB,UAAU2C,YAAV,EAAwB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACArG,MAAAA,IAAI,CAACqG,YAAY,CAACC,UAAd,EAA0B,UAAUC,IAAV,EAAgB;AAC5C,YAAIC,SAAS,GAAG3F,OAAO,CAACI,YAAR,CAAqBsF,IAAI,CAACE,OAAL,GAAe,MAApC,EAA4CF,IAAI,CAACG,SAAjD,CAAhB;AACA,YAAIC,SAAS,GAAGJ,IAAI,CAACK,KAArB;AACA,YAAIC,iBAAiB,GAAG,EAAxB;;AAEA,YAAI,CAACL,SAAD,IAAcG,SAAS,IAAI,IAA/B,EAAqC;AACnC;AACD;;AAED,YAAIG,UAAU,GAAGlH,qBAAqB,CAACmH,aAAtB,CAAoCJ,SAApC,EAA+CH,SAAS,CAACQ,IAAzD,EAA+DnG,OAA/D,EAAwE0F,IAAI,CAACU,iBAA7E,EAAgGV,IAAI,CAACW,aAArG,CAAjB;AACAlI,QAAAA,MAAM,CAACgB,IAAP,CAAYuG,IAAI,CAACU,iBAAjB,EAAoC,UAAUE,OAAV,EAAmB;AACrD,cAAIC,MAAM,GAAGvG,OAAO,CAACmE,gBAAR,CAAyBmC,OAAO,CAAChD,WAAjC,CAAb;AACA,cAAIU,SAAS,GAAGsC,OAAO,CAACE,eAAxB;AACA,cAAIC,UAAU,GAAGF,MAAM,IAAIA,MAAM,CAACG,aAAP,CAAqB1C,SAArB,CAA3B;AACAyC,UAAAA,UAAU,CAACb,OAAX,GAAqBF,IAAI,CAACE,OAA1B;AACAa,UAAAA,UAAU,CAACZ,SAAX,GAAuBH,IAAI,CAACG,SAA5B;AACAY,UAAAA,UAAU,CAACE,QAAX,GAAsBjB,IAAI,CAACiB,QAA3B;AACAF,UAAAA,UAAU,CAACG,MAAX,GAAoBlB,IAAI,CAACkB,MAAzB;AACAH,UAAAA,UAAU,CAACX,SAAX,GAAuBhH,UAAU,CAAC+H,eAAX,CAA2BlB,SAAS,CAACQ,IAArC,EAA2CL,SAA3C,CAAvB;AACAW,UAAAA,UAAU,CAACK,cAAX,GAA4Bb,UAA5B;;AAEA,cAAIQ,UAAJ,EAAgB;AACdrB,YAAAA,gBAAgB,CAAC2B,IAAjB,CAAsBN,UAAtB;AACA,gBAAIO,aAAa,GAAGT,MAAM,CAACU,aAAP,CAAqBjD,SAArB,EAAgC,IAAhC,EAAsC,IAAtC,EAA4C3D,UAA5C,CAApB;AACA,gBAAI6G,IAAJ;;AAEA,gBAAI/I,MAAM,CAACgJ,QAAP,CAAgBH,aAAhB,CAAJ,EAAoC;AAClCE,cAAAA,IAAI,GAAGF,aAAa,CAACE,IAArB;AACA,kBAAIE,UAAU,GAAGJ,aAAa,CAACzB,OAA/B;AACApH,cAAAA,MAAM,CAACkJ,KAAP,CAAa9B,OAAb,EAAsB6B,UAAtB;AACD,aAJD,MAIO;AACLF,cAAAA,IAAI,GAAGF,aAAP;AACD;;AAEDhB,YAAAA,iBAAiB,CAACe,IAAlB,CAAuBG,IAAvB;AACD;AACF,SA1BD,EAV4C,CAoCxC;AACJ;AACA;AACA;;AAEA,YAAII,SAAS,GAAGrB,UAAhB;;AAEA,YAAI5F,UAAU,KAAK,MAAnB,EAA2B;AACzB8E,UAAAA,iBAAiB,CAAC4B,IAAlB,CAAuBf,iBAAiB,CAACuB,IAAlB,CAAuBjC,OAAvB,CAAvB;AACD,SAFD,MAEO;AACLH,UAAAA,iBAAiB,CAAC4B,IAAlB,CAAuB,CAACO,SAAS,GAAG/I,UAAU,CAACiJ,UAAX,CAAsBF,SAAtB,IAAmChC,OAAtC,GAAgD,EAA1D,IAAgEU,iBAAiB,CAACuB,IAAlB,CAAuBjC,OAAvB,CAAvF;AACD;AACF,OAhDG,CAAJ;AAiDD,KA5DG,EA4DD,IA5DC,CAAJ,CAV6C,CAsEnC;;AAEVH,IAAAA,iBAAiB,CAACsC,OAAlB;AACAtC,IAAAA,iBAAiB,GAAGA,iBAAiB,CAACoC,IAAlB,CAAuB,KAAK7G,QAAL,GAAgB,KAAKA,QAA5C,CAApB;AACA,QAAIgH,YAAY,GAAG/F,CAAC,CAACqB,QAArB;;AAEA,SAAK8B,WAAL,CAAiBO,kBAAjB,EAAqC,YAAY;AAC/C,UAAI,KAAKsC,8BAAL,CAAoC9E,cAApC,CAAJ,EAAyD;AACvD,aAAK+E,eAAL,CAAqBvC,kBAArB,EAAyCqC,YAAzC,EAAuDhE,KAAK,CAAC,CAAD,CAA5D,EAAiEA,KAAK,CAAC,CAAD,CAAtE,EAA2E,KAAK/C,eAAhF,EAAiGyE,gBAAjG;AACD,OAFD,MAEO;AACL,aAAKyC,mBAAL,CAAyBxC,kBAAzB,EAA6CF,iBAA7C,EAAgEC,gBAAhE,EAAkF0C,IAAI,CAACC,MAAL,EAAlF,EAAiGrE,KAAK,CAAC,CAAD,CAAtG,EAA2GA,KAAK,CAAC,CAAD,CAAhH,EAAqHgE,YAArH,EAAmIM,SAAnI,EAA8IzC,OAA9I;AACD;AACF,KAND,EA5E6C,CAkFzC;AACJ;;AAED,GAxWwC;AAyWzCX,EAAAA,sBAAsB,EAAE,UAAUjD,CAAV,EAAaoB,EAAb,EAAiBnB,cAAjB,EAAiC;AACvD,QAAI5B,OAAO,GAAG,KAAKgB,QAAnB,CADuD,CAC1B;AAC7B;AACA;;AAEA,QAAIsC,WAAW,GAAGP,EAAE,CAACO,WAArB;AACA,QAAIY,WAAW,GAAGlE,OAAO,CAACmE,gBAAR,CAAyBb,WAAzB,CAAlB,CANuD,CAME;;AAEzD,QAAI2E,SAAS,GAAGlF,EAAE,CAACkF,SAAH,IAAgB/D,WAAhC;AACA,QAAIF,SAAS,GAAGjB,EAAE,CAACiB,SAAnB;AACA,QAAIkE,QAAQ,GAAGnF,EAAE,CAACmF,QAAlB;AACA,QAAI9D,IAAI,GAAG6D,SAAS,CAAC5D,OAAV,EAAX;AACA,QAAIlE,YAAY,GAAGmE,iBAAiB,CAAC,CAACF,IAAI,CAACG,YAAL,CAAkBP,SAAlB,CAAD,EAA+BiE,SAA/B,EAA0C/D,WAAW,IAAI,CAACA,WAAW,CAACM,gBAAZ,IAAgC,EAAjC,EAAqCC,KAA9F,EAAqG,KAAK1D,aAA1G,CAAD,CAApC;AACA,QAAIoH,cAAc,GAAGhI,YAAY,CAACG,GAAb,CAAiB,SAAjB,CAArB;;AAEA,QAAI6H,cAAc,IAAI,IAAlB,IAA0BA,cAAc,KAAK,MAAjD,EAAyD;AACvD;AACD;;AAED,QAAIC,MAAM,GAAGH,SAAS,CAACvB,aAAV,CAAwB1C,SAAxB,EAAmCkE,QAAnC,CAAb;AACA,QAAIlB,aAAa,GAAGiB,SAAS,CAAChB,aAAV,CAAwBjD,SAAxB,EAAmC,KAAnC,EAA0CkE,QAA1C,EAAoD,KAAK3H,WAAzD,CAApB;AACA,QAAI8H,WAAJ;AACA,QAAI9C,OAAJ;;AAEA,QAAIpH,MAAM,CAACgJ,QAAP,CAAgBH,aAAhB,CAAJ,EAAoC;AAClCqB,MAAAA,WAAW,GAAGrB,aAAa,CAACE,IAA5B;AACA3B,MAAAA,OAAO,GAAGyB,aAAa,CAACzB,OAAxB;AACD,KAHD,MAGO;AACL8C,MAAAA,WAAW,GAAGrB,aAAd;AACAzB,MAAAA,OAAO,GAAG,IAAV;AACD;;AAED,QAAI+C,WAAW,GAAG,UAAUL,SAAS,CAACM,IAApB,GAA2B,GAA3B,GAAiCvE,SAAnD;;AAEA,SAAKc,WAAL,CAAiB3E,YAAjB,EAA+B,YAAY;AACzC,WAAK0H,mBAAL,CAAyB1H,YAAzB,EAAuCkI,WAAvC,EAAoDD,MAApD,EAA4DE,WAA5D,EAAyE3G,CAAC,CAACsB,OAA3E,EAAoFtB,CAAC,CAACuB,OAAtF,EAA+FvB,CAAC,CAACqB,QAAjG,EAA2GrB,CAAC,CAACwB,MAA7G,EAAqHoC,OAArH;AACD,KAFD,EAlCuD,CAoCnD;AACJ;;;AAGA3D,IAAAA,cAAc,CAAC;AACb9B,MAAAA,IAAI,EAAE,SADO;AAEb0G,MAAAA,eAAe,EAAExC,SAFJ;AAGbA,MAAAA,SAAS,EAAEI,IAAI,CAACoE,WAAL,CAAiBxE,SAAjB,CAHE;AAIbV,MAAAA,WAAW,EAAEA,WAJA;AAKbb,MAAAA,IAAI,EAAE,KAAKC;AALE,KAAD,CAAd;AAOD,GAxZwC;AAyZzCmC,EAAAA,yBAAyB,EAAE,UAAUlD,CAAV,EAAaoB,EAAb,EAAiBnB,cAAjB,EAAiC;AAC1D,QAAI6G,UAAU,GAAG1F,EAAE,CAACD,OAApB;;AAEA,QAAI,OAAO2F,UAAP,KAAsB,QAA1B,EAAoC;AAClC,UAAIC,OAAO,GAAGD,UAAd;AACAA,MAAAA,UAAU,GAAG;AACXC,QAAAA,OAAO,EAAEA,OADE;AAEX;AACAC,QAAAA,SAAS,EAAED;AAHA,OAAb;AAKD;;AAED,QAAIE,eAAe,GAAG,IAAIhK,KAAJ,CAAU6J,UAAV,EAAsB,KAAK1H,aAA3B,EAA0C,KAAKC,QAA/C,CAAtB;AACA,QAAIqH,WAAW,GAAGO,eAAe,CAACtI,GAAhB,CAAoB,SAApB,CAAlB;AACA,QAAIgI,WAAW,GAAGR,IAAI,CAACC,MAAL,EAAlB,CAd0D,CAczB;AACjC;AACA;;AAEA,SAAKjD,WAAL,CAAiB8D,eAAjB,EAAkC,YAAY;AAC5C,WAAKf,mBAAL,CAAyBe,eAAzB,EAA0CP,WAA1C,EAAuDO,eAAe,CAACtI,GAAhB,CAAoB,iBAApB,KAA0C,EAAjG,EAAqGgI,WAArG,EAAkH3G,CAAC,CAACsB,OAApH,EAA6HtB,CAAC,CAACuB,OAA/H,EAAwIvB,CAAC,CAACqB,QAA1I,EAAoJD,EAApJ;AACD,KAFD,EAlB0D,CAoBtD;;;AAGJnB,IAAAA,cAAc,CAAC;AACb9B,MAAAA,IAAI,EAAE,SADO;AAEb2C,MAAAA,IAAI,EAAE,KAAKC;AAFE,KAAD,CAAd;AAID,GApbwC;AAqbzCmF,EAAAA,mBAAmB,EAAE,UAAU1H,YAAV,EAAwBkI,WAAxB,EAAqCD,MAArC,EAA6CE,WAA7C,EAA0D9I,CAA1D,EAA6DC,CAA7D,EAAgEiI,YAAhE,EAA8E3E,EAA9E,EAAkFwC,OAAlF,EAA2F;AAC9G;AACA,SAAK3C,OAAL,GAAe,EAAf;;AAEA,QAAI,CAACzC,YAAY,CAACG,GAAb,CAAiB,aAAjB,CAAD,IAAoC,CAACH,YAAY,CAACG,GAAb,CAAiB,MAAjB,CAAzC,EAAmE;AACjE;AACD;;AAED,QAAIE,cAAc,GAAG,KAAKG,eAA1B;AACA,QAAIgI,SAAS,GAAGxI,YAAY,CAACG,GAAb,CAAiB,WAAjB,CAAhB;AACAoH,IAAAA,YAAY,GAAGA,YAAY,IAAIvH,YAAY,CAACG,GAAb,CAAiB,UAAjB,CAA/B;AACA,QAAI4G,IAAI,GAAGmB,WAAX;;AAEA,QAAIM,SAAS,IAAI,OAAOA,SAAP,KAAqB,QAAtC,EAAgD;AAC9CzB,MAAAA,IAAI,GAAG3I,UAAU,CAACsK,SAAX,CAAqBF,SAArB,EAAgCP,MAAhC,EAAwC,IAAxC,CAAP;AACD,KAFD,MAEO,IAAI,OAAOO,SAAP,KAAqB,UAAzB,EAAqC;AAC1C,UAAIG,QAAQ,GAAG5J,IAAI,CAAC,UAAU6J,QAAV,EAAoB7B,IAApB,EAA0B;AAC5C,YAAI6B,QAAQ,KAAK,KAAKnG,OAAtB,EAA+B;AAC7BpC,UAAAA,cAAc,CAACwI,UAAf,CAA0B9B,IAA1B,EAAgC3B,OAAhC,EAAyCpF,YAAzC;;AAEA,eAAKyH,eAAL,CAAqBzH,YAArB,EAAmCuH,YAAnC,EAAiDlI,CAAjD,EAAoDC,CAApD,EAAuDe,cAAvD,EAAuE4H,MAAvE,EAA+ErF,EAA/E;AACD;AACF,OANkB,EAMhB,IANgB,CAAnB;AAOA,WAAKH,OAAL,GAAe0F,WAAf;AACApB,MAAAA,IAAI,GAAGyB,SAAS,CAACP,MAAD,EAASE,WAAT,EAAsBQ,QAAtB,CAAhB;AACD;;AAEDtI,IAAAA,cAAc,CAACwI,UAAf,CAA0B9B,IAA1B,EAAgC3B,OAAhC,EAAyCpF,YAAzC;AACAK,IAAAA,cAAc,CAACyI,IAAf,CAAoB9I,YAApB;;AAEA,SAAKyH,eAAL,CAAqBzH,YAArB,EAAmCuH,YAAnC,EAAiDlI,CAAjD,EAAoDC,CAApD,EAAuDe,cAAvD,EAAuE4H,MAAvE,EAA+ErF,EAA/E;AACD,GApdwC;;AAsdzC;;;;;;;;;;AAUA6E,EAAAA,eAAe,EAAE,UAAUzH,YAAV,EAAwBuH,YAAxB,EAAsClI,CAAtC,EAAyCC,CAAzC,EAA4CiJ,OAA5C,EAAqDN,MAArD,EAA6DrF,EAA7D,EAAiE;AAChF,QAAImG,SAAS,GAAG,KAAKjI,IAAL,CAAUkI,QAAV,EAAhB;;AAEA,QAAIC,UAAU,GAAG,KAAKnI,IAAL,CAAUoI,SAAV,EAAjB;;AAEA3B,IAAAA,YAAY,GAAGA,YAAY,IAAIvH,YAAY,CAACG,GAAb,CAAiB,UAAjB,CAA/B;AACA,QAAIgJ,WAAW,GAAGZ,OAAO,CAACa,OAAR,EAAlB;AACA,QAAIC,KAAK,GAAGrJ,YAAY,CAACG,GAAb,CAAiB,OAAjB,CAAZ;AACA,QAAImJ,MAAM,GAAGtJ,YAAY,CAACG,GAAb,CAAiB,eAAjB,CAAb;AACA,QAAIoJ,IAAI,GAAG3G,EAAE,IAAIA,EAAE,CAAC4G,eAAH,GAAqBC,KAArB,EAAjB;AACA7G,IAAAA,EAAE,IAAI2G,IAAI,CAACG,cAAL,CAAoB9G,EAAE,CAAC+G,SAAvB,CAAN;;AAEA,QAAI,OAAOpC,YAAP,KAAwB,UAA5B,EAAwC;AACtC;AACAA,MAAAA,YAAY,GAAGA,YAAY,CAAC,CAAClI,CAAD,EAAIC,CAAJ,CAAD,EAAS2I,MAAT,EAAiBM,OAAO,CAAC3F,EAAzB,EAA6B2G,IAA7B,EAAmC;AAC5DK,QAAAA,QAAQ,EAAE,CAACb,SAAD,EAAYE,UAAZ,CADkD;AAE5DE,QAAAA,WAAW,EAAEA,WAAW,CAACU,KAAZ;AAF+C,OAAnC,CAA3B;AAID;;AAED,QAAI7L,MAAM,CAAC8L,OAAP,CAAevC,YAAf,CAAJ,EAAkC;AAChClI,MAAAA,CAAC,GAAGJ,YAAY,CAACsI,YAAY,CAAC,CAAD,CAAb,EAAkBwB,SAAlB,CAAhB;AACAzJ,MAAAA,CAAC,GAAGL,YAAY,CAACsI,YAAY,CAAC,CAAD,CAAb,EAAkB0B,UAAlB,CAAhB;AACD,KAHD,MAGO,IAAIjL,MAAM,CAACgJ,QAAP,CAAgBO,YAAhB,CAAJ,EAAmC;AACxCA,MAAAA,YAAY,CAAChI,KAAb,GAAqB4J,WAAW,CAAC,CAAD,CAAhC;AACA5B,MAAAA,YAAY,CAAC/H,MAAb,GAAsB2J,WAAW,CAAC,CAAD,CAAjC;AACA,UAAIY,UAAU,GAAGvL,UAAU,CAACwL,aAAX,CAAyBzC,YAAzB,EAAuC;AACtDhI,QAAAA,KAAK,EAAEwJ,SAD+C;AAEtDvJ,QAAAA,MAAM,EAAEyJ;AAF8C,OAAvC,CAAjB;AAIA5J,MAAAA,CAAC,GAAG0K,UAAU,CAAC1K,CAAf;AACAC,MAAAA,CAAC,GAAGyK,UAAU,CAACzK,CAAf;AACA+J,MAAAA,KAAK,GAAG,IAAR,CATwC,CAS1B;AACd;;AAEAC,MAAAA,MAAM,GAAG,IAAT;AACD,KAbM,CAaL;AAbK,SAcF,IAAI,OAAO/B,YAAP,KAAwB,QAAxB,IAAoC3E,EAAxC,EAA4C;AAC7C,YAAIqH,GAAG,GAAGC,mBAAmB,CAAC3C,YAAD,EAAegC,IAAf,EAAqBJ,WAArB,CAA7B;AACA9J,QAAAA,CAAC,GAAG4K,GAAG,CAAC,CAAD,CAAP;AACA3K,QAAAA,CAAC,GAAG2K,GAAG,CAAC,CAAD,CAAP;AACD,OAJE,MAII;AACL,YAAIA,GAAG,GAAGE,oBAAoB,CAAC9K,CAAD,EAAIC,CAAJ,EAAOiJ,OAAP,EAAgBQ,SAAhB,EAA2BE,UAA3B,EAAuCI,KAAK,GAAG,IAAH,GAAU,EAAtD,EAA0DC,MAAM,GAAG,IAAH,GAAU,EAA1E,CAA9B;AACAjK,QAAAA,CAAC,GAAG4K,GAAG,CAAC,CAAD,CAAP;AACA3K,QAAAA,CAAC,GAAG2K,GAAG,CAAC,CAAD,CAAP;AACD;;AAEHZ,IAAAA,KAAK,KAAKhK,CAAC,IAAI+K,aAAa,CAACf,KAAD,CAAb,GAAuBF,WAAW,CAAC,CAAD,CAAX,GAAiB,CAAxC,GAA4CE,KAAK,KAAK,OAAV,GAAoBF,WAAW,CAAC,CAAD,CAA/B,GAAqC,CAA3F,CAAL;AACAG,IAAAA,MAAM,KAAKhK,CAAC,IAAI8K,aAAa,CAACd,MAAD,CAAb,GAAwBH,WAAW,CAAC,CAAD,CAAX,GAAiB,CAAzC,GAA6CG,MAAM,KAAK,QAAX,GAAsBH,WAAW,CAAC,CAAD,CAAjC,GAAuC,CAA9F,CAAN;;AAEA,QAAInJ,YAAY,CAACG,GAAb,CAAiB,SAAjB,CAAJ,EAAiC;AAC/B,UAAI8J,GAAG,GAAGI,sBAAsB,CAAChL,CAAD,EAAIC,CAAJ,EAAOiJ,OAAP,EAAgBQ,SAAhB,EAA2BE,UAA3B,CAAhC;AACA5J,MAAAA,CAAC,GAAG4K,GAAG,CAAC,CAAD,CAAP;AACA3K,MAAAA,CAAC,GAAG2K,GAAG,CAAC,CAAD,CAAP;AACD;;AAED1B,IAAAA,OAAO,CAAC+B,MAAR,CAAejL,CAAf,EAAkBC,CAAlB;AACD,GAzhBwC;AA0hBzC;AACA;AACAkI,EAAAA,8BAA8B,EAAE,UAAU9E,cAAV,EAA0B;AACxD,QAAI6H,YAAY,GAAG,KAAKxJ,mBAAxB;AACA,QAAIyJ,iBAAiB,GAAG,CAAC,CAACD,YAAF,IAAkBA,YAAY,CAAChG,MAAb,KAAwB7B,cAAc,CAAC6B,MAAjF;AACAiG,IAAAA,iBAAiB,IAAIxL,IAAI,CAACuL,YAAD,EAAe,UAAUE,gBAAV,EAA4BC,aAA5B,EAA2C;AACjF,UAAIC,cAAc,GAAGF,gBAAgB,CAACnF,UAAjB,IAA+B,EAApD;AACA,UAAIsF,gBAAgB,GAAGlI,cAAc,CAACgI,aAAD,CAAd,IAAiC,EAAxD;AACA,UAAIG,cAAc,GAAGD,gBAAgB,CAACtF,UAAjB,IAA+B,EAApD;AACAkF,MAAAA,iBAAiB,IAAIG,cAAc,CAACpG,MAAf,KAA0BsG,cAAc,CAACtG,MAA9D;AACAiG,MAAAA,iBAAiB,IAAIxL,IAAI,CAAC2L,cAAD,EAAiB,UAAUG,QAAV,EAAoBC,SAApB,EAA+B;AACvE,YAAIC,QAAQ,GAAGH,cAAc,CAACE,SAAD,CAAd,IAA6B,EAA5C;AACA,YAAIE,WAAW,GAAGH,QAAQ,CAAC7E,iBAAT,IAA8B,EAAhD;AACA,YAAIiF,UAAU,GAAGF,QAAQ,CAAC/E,iBAAT,IAA8B,EAA/C;AACAuE,QAAAA,iBAAiB,IAAIM,QAAQ,CAAClF,KAAT,KAAmBoF,QAAQ,CAACpF,KAA5B,IAAqCkF,QAAQ,CAACtE,QAAT,KAAsBwE,QAAQ,CAACxE,QAApE,IAAgFsE,QAAQ,CAACrE,MAAT,KAAoBuE,QAAQ,CAACvE,MAA7G,IAAuHwE,WAAW,CAAC1G,MAAZ,KAAuB2G,UAAU,CAAC3G,MAA9K;AACAiG,QAAAA,iBAAiB,IAAIxL,IAAI,CAACiM,WAAD,EAAc,UAAUE,WAAV,EAAuBC,CAAvB,EAA0B;AAC/D,cAAIC,UAAU,GAAGH,UAAU,CAACE,CAAD,CAA3B;AACAZ,UAAAA,iBAAiB,IAAIW,WAAW,CAAChI,WAAZ,KAA4BkI,UAAU,CAAClI,WAAvC,IAAsDgI,WAAW,CAACtH,SAAZ,KAA0BwH,UAAU,CAACxH,SAAhH;AACD,SAHwB,CAAzB;AAID,OATwB,CAAzB;AAUD,KAfwB,CAAzB;AAgBA,SAAK9C,mBAAL,GAA2B2B,cAA3B;AACA,WAAO,CAAC,CAAC8H,iBAAT;AACD,GAjjBwC;AAkjBzC5I,EAAAA,KAAK,EAAE,UAAUH,cAAV,EAA0B;AAC/B;AACA;AACA;AACA;AACA,SAAKV,mBAAL,GAA2B,IAA3B;AACAU,IAAAA,cAAc,CAAC;AACb9B,MAAAA,IAAI,EAAE,SADO;AAEb2C,MAAAA,IAAI,EAAE,KAAKC;AAFE,KAAD,CAAd;AAID,GA5jBwC;AA6jBzC+I,EAAAA,OAAO,EAAE,UAAUzL,OAAV,EAAmBC,GAAnB,EAAwB;AAC/B,QAAI7B,GAAG,CAAC8B,IAAR,EAAc;AACZ;AACD;;AAED,SAAKS,eAAL,CAAqB+K,IAArB;;AAEA7M,IAAAA,cAAc,CAAC8M,UAAf,CAA0B,aAA1B,EAAyC1L,GAAzC;AACD;AArkBwC,CAA5B,CAAf;AAukBA;;;;;;AAMA,SAASqE,iBAAT,CAA2BsH,YAA3B,EAAyC;AACvC,MAAIC,WAAW,GAAGD,YAAY,CAACE,GAAb,EAAlB;;AAEA,SAAOF,YAAY,CAAClH,MAApB,EAA4B;AAC1B,QAAI+D,UAAU,GAAGmD,YAAY,CAACE,GAAb,EAAjB;;AAEA,QAAIrD,UAAJ,EAAgB;AACd,UAAI7J,KAAK,CAACmN,UAAN,CAAiBtD,UAAjB,CAAJ,EAAkC;AAChCA,QAAAA,UAAU,GAAGA,UAAU,CAACnI,GAAX,CAAe,SAAf,EAA0B,IAA1B,CAAb;AACD,OAHa,CAGZ;AACF;AACA;AACA;AACA;;;AAGA,UAAI,OAAOmI,UAAP,KAAsB,QAA1B,EAAoC;AAClCA,QAAAA,UAAU,GAAG;AACXE,UAAAA,SAAS,EAAEF;AADA,SAAb;AAGD;;AAEDoD,MAAAA,WAAW,GAAG,IAAIjN,KAAJ,CAAU6J,UAAV,EAAsBoD,WAAtB,EAAmCA,WAAW,CAAC7L,OAA/C,CAAd;AACD;AACF;;AAED,SAAO6L,WAAP;AACD;;AAED,SAASlJ,kBAAT,CAA4BH,OAA5B,EAAqCvC,GAArC,EAA0C;AACxC,SAAOuC,OAAO,CAACZ,cAAR,IAA0BzD,MAAM,CAACe,IAAP,CAAYe,GAAG,CAAC2B,cAAhB,EAAgC3B,GAAhC,CAAjC;AACD;;AAED,SAASqK,oBAAT,CAA8B9K,CAA9B,EAAiCC,CAAjC,EAAoCiJ,OAApC,EAA6CQ,SAA7C,EAAwDE,UAAxD,EAAoE4C,IAApE,EAA0EC,IAA1E,EAAgF;AAC9E,MAAIC,IAAI,GAAGxD,OAAO,CAACyD,YAAR,EAAX;AACA,MAAIzM,KAAK,GAAGwM,IAAI,CAACxM,KAAjB;AACA,MAAIC,MAAM,GAAGuM,IAAI,CAACvM,MAAlB;;AAEA,MAAIqM,IAAI,IAAI,IAAZ,EAAkB;AAChB,QAAIxM,CAAC,GAAGE,KAAJ,GAAYsM,IAAZ,GAAmB9C,SAAvB,EAAkC;AAChC1J,MAAAA,CAAC,IAAIE,KAAK,GAAGsM,IAAb;AACD,KAFD,MAEO;AACLxM,MAAAA,CAAC,IAAIwM,IAAL;AACD;AACF;;AAED,MAAIC,IAAI,IAAI,IAAZ,EAAkB;AAChB,QAAIxM,CAAC,GAAGE,MAAJ,GAAasM,IAAb,GAAoB7C,UAAxB,EAAoC;AAClC3J,MAAAA,CAAC,IAAIE,MAAM,GAAGsM,IAAd;AACD,KAFD,MAEO;AACLxM,MAAAA,CAAC,IAAIwM,IAAL;AACD;AACF;;AAED,SAAO,CAACzM,CAAD,EAAIC,CAAJ,CAAP;AACD;;AAED,SAAS+K,sBAAT,CAAgChL,CAAhC,EAAmCC,CAAnC,EAAsCiJ,OAAtC,EAA+CQ,SAA/C,EAA0DE,UAA1D,EAAsE;AACpE,MAAI8C,IAAI,GAAGxD,OAAO,CAACyD,YAAR,EAAX;AACA,MAAIzM,KAAK,GAAGwM,IAAI,CAACxM,KAAjB;AACA,MAAIC,MAAM,GAAGuM,IAAI,CAACvM,MAAlB;AACAH,EAAAA,CAAC,GAAGsI,IAAI,CAACsE,GAAL,CAAS5M,CAAC,GAAGE,KAAb,EAAoBwJ,SAApB,IAAiCxJ,KAArC;AACAD,EAAAA,CAAC,GAAGqI,IAAI,CAACsE,GAAL,CAAS3M,CAAC,GAAGE,MAAb,EAAqByJ,UAArB,IAAmCzJ,MAAvC;AACAH,EAAAA,CAAC,GAAGsI,IAAI,CAACuE,GAAL,CAAS7M,CAAT,EAAY,CAAZ,CAAJ;AACAC,EAAAA,CAAC,GAAGqI,IAAI,CAACuE,GAAL,CAAS5M,CAAT,EAAY,CAAZ,CAAJ;AACA,SAAO,CAACD,CAAD,EAAIC,CAAJ,CAAP;AACD;;AAED,SAAS4K,mBAAT,CAA6BrH,QAA7B,EAAuC0G,IAAvC,EAA6CJ,WAA7C,EAA0D;AACxD,MAAIgD,QAAQ,GAAGhD,WAAW,CAAC,CAAD,CAA1B;AACA,MAAIiD,SAAS,GAAGjD,WAAW,CAAC,CAAD,CAA3B;AACA,MAAIkD,GAAG,GAAG,CAAV;AACA,MAAIhN,CAAC,GAAG,CAAR;AACA,MAAIC,CAAC,GAAG,CAAR;AACA,MAAIgN,SAAS,GAAG/C,IAAI,CAAChK,KAArB;AACA,MAAIgN,UAAU,GAAGhD,IAAI,CAAC/J,MAAtB;;AAEA,UAAQqD,QAAR;AACE,SAAK,QAAL;AACExD,MAAAA,CAAC,GAAGkK,IAAI,CAAClK,CAAL,GAASiN,SAAS,GAAG,CAArB,GAAyBH,QAAQ,GAAG,CAAxC;AACA7M,MAAAA,CAAC,GAAGiK,IAAI,CAACjK,CAAL,GAASiN,UAAU,GAAG,CAAtB,GAA0BH,SAAS,GAAG,CAA1C;AACA;;AAEF,SAAK,KAAL;AACE/M,MAAAA,CAAC,GAAGkK,IAAI,CAAClK,CAAL,GAASiN,SAAS,GAAG,CAArB,GAAyBH,QAAQ,GAAG,CAAxC;AACA7M,MAAAA,CAAC,GAAGiK,IAAI,CAACjK,CAAL,GAAS8M,SAAT,GAAqBC,GAAzB;AACA;;AAEF,SAAK,QAAL;AACEhN,MAAAA,CAAC,GAAGkK,IAAI,CAAClK,CAAL,GAASiN,SAAS,GAAG,CAArB,GAAyBH,QAAQ,GAAG,CAAxC;AACA7M,MAAAA,CAAC,GAAGiK,IAAI,CAACjK,CAAL,GAASiN,UAAT,GAAsBF,GAA1B;AACA;;AAEF,SAAK,MAAL;AACEhN,MAAAA,CAAC,GAAGkK,IAAI,CAAClK,CAAL,GAAS8M,QAAT,GAAoBE,GAAxB;AACA/M,MAAAA,CAAC,GAAGiK,IAAI,CAACjK,CAAL,GAASiN,UAAU,GAAG,CAAtB,GAA0BH,SAAS,GAAG,CAA1C;AACA;;AAEF,SAAK,OAAL;AACE/M,MAAAA,CAAC,GAAGkK,IAAI,CAAClK,CAAL,GAASiN,SAAT,GAAqBD,GAAzB;AACA/M,MAAAA,CAAC,GAAGiK,IAAI,CAACjK,CAAL,GAASiN,UAAU,GAAG,CAAtB,GAA0BH,SAAS,GAAG,CAA1C;AAvBJ;;AA0BA,SAAO,CAAC/M,CAAD,EAAIC,CAAJ,CAAP;AACD;;AAED,SAAS8K,aAAT,CAAuBf,KAAvB,EAA8B;AAC5B,SAAOA,KAAK,KAAK,QAAV,IAAsBA,KAAK,KAAK,QAAvC;AACD;;AAEDmD,MAAM,CAACC,OAAP,GAAiBhN,QAAjB","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar TooltipRichContent = require(\"./TooltipRichContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\nvar _model = require(\"../../util/model\");\n\nvar getTooltipRenderMode = _model.getTooltipRenderMode;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipModel = ecModel.getComponent('tooltip');\n    var renderMode = tooltipModel.get('renderMode');\n    this._renderMode = getTooltipRenderMode(renderMode);\n    var tooltipContent;\n\n    if (this._renderMode === 'html') {\n      tooltipContent = new TooltipContent(api.getDom(), api);\n      this._newLine = '<br/>';\n    } else {\n      tooltipContent = new TooltipRichContent(api);\n      this._newLine = '\\n';\n    }\n\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        !api.isDisposed() && self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    var renderMode = this._renderMode;\n    var newLine = this._newLine;\n    var markers = {};\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            var seriesTooltip = series.formatTooltip(dataIndex, true, null, renderMode);\n            var html;\n\n            if (zrUtil.isObject(seriesTooltip)) {\n              html = seriesTooltip.html;\n              var newMarkers = seriesTooltip.markers;\n              zrUtil.merge(markers, newMarkers);\n            } else {\n              html = seriesTooltip;\n            }\n\n            seriesDefaultHTML.push(html);\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n\n        if (renderMode !== 'html') {\n          singleDefaultHTML.push(seriesDefaultHTML.join(newLine));\n        } else {\n          singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + newLine : '') + seriesDefaultHTML.join(newLine));\n        }\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join(this._newLine + this._newLine);\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr, undefined, markers);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var seriesTooltip = dataModel.formatTooltip(dataIndex, false, dataType, this._renderMode);\n    var defaultHtml;\n    var markers;\n\n    if (zrUtil.isObject(seriesTooltip)) {\n      defaultHtml = seriesTooltip.html;\n      markers = seriesTooltip.markers;\n    } else {\n      defaultHtml = seriesTooltip;\n      markers = null;\n    }\n\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target, markers);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el, markers) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html, markers, tooltipModel);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html, markers, tooltipModel);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (Model.isInstance(tooltipOpt)) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, content, viewWidth, viewHeight, gapH, gapV) {\n  var size = content.getOuterSize();\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, content, viewWidth, viewHeight) {\n  var size = content.getOuterSize();\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}