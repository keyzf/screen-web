{"ast":null,"code":"import { sort_modules, change_item, change_item_arr, get_screen_data } from '../actions/screen-actions';\nimport { fromJS } from 'immutable';\nconst initialState = fromJS();\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case get_screen_data:\n      return fromJS(action.data);\n\n    case sort_modules:\n      return state.set(\"modules\", fromJS(action.data));\n\n    case change_item:\n      let newMudules = state.get(\"modules\").map(item => {\n        if (item.get(\"id\") === action.data.id) {\n          return item.mergeDeep(fromJS(action.data.data));\n        } else {\n          return item;\n        }\n      });\n      return state.set(\"modules\", newMudules);\n\n    case change_item_arr:\n      let newMudules2 = state.get(\"modules\").map(item => {\n        if (item.get(\"id\") === action.data.id) {\n          console.log(action.data);\n          return item.setIn(action.data.path, fromJS(action.data.data));\n        } else {\n          return item;\n        }\n      });\n      return state.set(\"modules\", newMudules2);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/src/store/reducers/screen-reducer.js"],"names":["sort_modules","change_item","change_item_arr","get_screen_data","fromJS","initialState","state","action","type","data","set","newMudules","get","map","item","id","mergeDeep","newMudules2","console","log","setIn","path"],"mappings":"AAAA,SACIA,YADJ,EAEIC,WAFJ,EAGIC,eAHJ,EAIIC,eAJJ,QAKO,2BALP;AAMA,SAASC,MAAT,QAAuB,WAAvB;AAEA,MAAMC,YAAY,GAAGD,MAAM,EAA3B;AAEA,gBAAe,CAACE,KAAK,GAACD,YAAP,EAAoBE,MAApB,KAA6B;AACxC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKL,eAAL;AACI,aAAOC,MAAM,CAACG,MAAM,CAACE,IAAR,CAAb;;AACJ,SAAKT,YAAL;AACI,aAAOM,KAAK,CAACI,GAAN,CAAU,SAAV,EAAoBN,MAAM,CAACG,MAAM,CAACE,IAAR,CAA1B,CAAP;;AACJ,SAAKR,WAAL;AACI,UAAIU,UAAU,GAAGL,KAAK,CAACM,GAAN,CAAU,SAAV,EAAqBC,GAArB,CAAyBC,IAAI,IAAE;AAC5C,YAAGA,IAAI,CAACF,GAAL,CAAS,IAAT,MAAmBL,MAAM,CAACE,IAAP,CAAYM,EAAlC,EAAqC;AACjC,iBAAOD,IAAI,CAACE,SAAL,CAAeZ,MAAM,CAACG,MAAM,CAACE,IAAP,CAAYA,IAAb,CAArB,CAAP;AACH,SAFD,MAEK;AACD,iBAAOK,IAAP;AACH;AACJ,OANgB,CAAjB;AAOA,aAAOR,KAAK,CAACI,GAAN,CAAU,SAAV,EAAoBC,UAApB,CAAP;;AACJ,SAAKT,eAAL;AACI,UAAIe,WAAW,GAAGX,KAAK,CAACM,GAAN,CAAU,SAAV,EAAqBC,GAArB,CAAyBC,IAAI,IAAE;AAC7C,YAAGA,IAAI,CAACF,GAAL,CAAS,IAAT,MAAmBL,MAAM,CAACE,IAAP,CAAYM,EAAlC,EAAqC;AACjCG,UAAAA,OAAO,CAACC,GAAR,CAAYZ,MAAM,CAACE,IAAnB;AACA,iBAAOK,IAAI,CAACM,KAAL,CAAWb,MAAM,CAACE,IAAP,CAAYY,IAAvB,EAA4BjB,MAAM,CAACG,MAAM,CAACE,IAAP,CAAYA,IAAb,CAAlC,CAAP;AACH,SAHD,MAGK;AACD,iBAAOK,IAAP;AACH;AACJ,OAPiB,CAAlB;AAQA,aAAOR,KAAK,CAACI,GAAN,CAAU,SAAV,EAAoBO,WAApB,CAAP;;AACJ;AACI,aAAOX,KAAP;AAzBR;AA2BH,CA5BD","sourcesContent":["import { \n    sort_modules,\n    change_item,\n    change_item_arr,\n    get_screen_data\n} from '../actions/screen-actions'\nimport { fromJS } from 'immutable';\n\nconst initialState = fromJS()\n\nexport default (state=initialState,action)=>{\n    switch (action.type){\n        case get_screen_data:\n            return fromJS(action.data)\n        case sort_modules:\n            return state.set(\"modules\",fromJS(action.data))\n        case change_item:\n            let newMudules = state.get(\"modules\").map(item=>{\n                if(item.get(\"id\") === action.data.id){\n                    return item.mergeDeep(fromJS(action.data.data))\n                }else{\n                    return item\n                }\n            })\n            return state.set(\"modules\",newMudules)\n        case change_item_arr:\n            let newMudules2 = state.get(\"modules\").map(item=>{\n                if(item.get(\"id\") === action.data.id){\n                    console.log(action.data)\n                    return item.setIn(action.data.path,fromJS(action.data.data))\n                }else{\n                    return item\n                }\n            })\n            return state.set(\"modules\",newMudules2)\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}