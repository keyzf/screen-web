{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as nls from '../../../nls.js';\nimport { KeyChord } from '../../../base/common/keyCodes.js';\nimport { CoreEditingCommands } from '../../browser/controller/coreCommands.js';\nimport { EditorAction, registerEditorAction } from '../../browser/editorExtensions.js';\nimport { ReplaceCommand, ReplaceCommandThatPreservesSelection, ReplaceCommandThatSelectsText } from '../../common/commands/replaceCommand.js';\nimport { TrimTrailingWhitespaceCommand } from '../../common/commands/trimTrailingWhitespaceCommand.js';\nimport { TypeOperations } from '../../common/controller/cursorTypeOperations.js';\nimport { EditOperation } from '../../common/core/editOperation.js';\nimport { Position } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { Selection } from '../../common/core/selection.js';\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\nimport { CopyLinesCommand } from './copyLinesCommand.js';\nimport { MoveLinesCommand } from './moveLinesCommand.js';\nimport { SortLinesCommand } from './sortLinesCommand.js'; // copy lines\n\nvar AbstractCopyLinesAction =\n/** @class */\nfunction (_super) {\n  __extends(AbstractCopyLinesAction, _super);\n\n  function AbstractCopyLinesAction(down, opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this.down = down;\n    return _this;\n  }\n\n  AbstractCopyLinesAction.prototype.run = function (_accessor, editor) {\n    var commands = [];\n    var selections = editor.getSelections() || [];\n\n    for (var _i = 0, selections_1 = selections; _i < selections_1.length; _i++) {\n      var selection = selections_1[_i];\n      commands.push(new CopyLinesCommand(selection, this.down));\n    }\n\n    editor.pushUndoStop();\n    editor.executeCommands(this.id, commands);\n    editor.pushUndoStop();\n  };\n\n  return AbstractCopyLinesAction;\n}(EditorAction);\n\nvar CopyLinesUpAction =\n/** @class */\nfunction (_super) {\n  __extends(CopyLinesUpAction, _super);\n\n  function CopyLinesUpAction() {\n    return _super.call(this, false, {\n      id: 'editor.action.copyLinesUpAction',\n      label: nls.localize('lines.copyUp', \"Copy Line Up\"),\n      alias: 'Copy Line Up',\n      precondition: EditorContextKeys.writable,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 512\n        /* Alt */\n        | 1024\n        /* Shift */\n        | 16\n        /* UpArrow */\n        ,\n        linux: {\n          primary: 2048\n          /* CtrlCmd */\n          | 512\n          /* Alt */\n          | 1024\n          /* Shift */\n          | 16\n          /* UpArrow */\n\n        },\n        weight: 100\n        /* EditorContrib */\n\n      },\n      menuOpts: {\n        menuId: 25\n        /* MenubarSelectionMenu */\n        ,\n        group: '2_line',\n        title: nls.localize({\n          key: 'miCopyLinesUp',\n          comment: ['&& denotes a mnemonic']\n        }, \"&&Copy Line Up\"),\n        order: 1\n      }\n    }) || this;\n  }\n\n  return CopyLinesUpAction;\n}(AbstractCopyLinesAction);\n\nvar CopyLinesDownAction =\n/** @class */\nfunction (_super) {\n  __extends(CopyLinesDownAction, _super);\n\n  function CopyLinesDownAction() {\n    return _super.call(this, true, {\n      id: 'editor.action.copyLinesDownAction',\n      label: nls.localize('lines.copyDown', \"Copy Line Down\"),\n      alias: 'Copy Line Down',\n      precondition: EditorContextKeys.writable,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 512\n        /* Alt */\n        | 1024\n        /* Shift */\n        | 18\n        /* DownArrow */\n        ,\n        linux: {\n          primary: 2048\n          /* CtrlCmd */\n          | 512\n          /* Alt */\n          | 1024\n          /* Shift */\n          | 18\n          /* DownArrow */\n\n        },\n        weight: 100\n        /* EditorContrib */\n\n      },\n      menuOpts: {\n        menuId: 25\n        /* MenubarSelectionMenu */\n        ,\n        group: '2_line',\n        title: nls.localize({\n          key: 'miCopyLinesDown',\n          comment: ['&& denotes a mnemonic']\n        }, \"Co&&py Line Down\"),\n        order: 2\n      }\n    }) || this;\n  }\n\n  return CopyLinesDownAction;\n}(AbstractCopyLinesAction);\n\nvar DuplicateSelectionAction =\n/** @class */\nfunction (_super) {\n  __extends(DuplicateSelectionAction, _super);\n\n  function DuplicateSelectionAction() {\n    return _super.call(this, {\n      id: 'editor.action.duplicateSelection',\n      label: nls.localize('duplicateSelection', \"Duplicate Selection\"),\n      alias: 'Duplicate Selection',\n      precondition: EditorContextKeys.writable,\n      menuOpts: {\n        menuId: 25\n        /* MenubarSelectionMenu */\n        ,\n        group: '2_line',\n        title: nls.localize({\n          key: 'miDuplicateSelection',\n          comment: ['&& denotes a mnemonic']\n        }, \"&&Duplicate Selection\"),\n        order: 5\n      }\n    }) || this;\n  }\n\n  DuplicateSelectionAction.prototype.run = function (accessor, editor, args) {\n    if (!editor.hasModel()) {\n      return;\n    }\n\n    var commands = [];\n    var selections = editor.getSelections();\n    var model = editor.getModel();\n\n    for (var _i = 0, selections_2 = selections; _i < selections_2.length; _i++) {\n      var selection = selections_2[_i];\n\n      if (selection.isEmpty()) {\n        commands.push(new CopyLinesCommand(selection, true));\n      } else {\n        var insertSelection = new Selection(selection.endLineNumber, selection.endColumn, selection.endLineNumber, selection.endColumn);\n        commands.push(new ReplaceCommandThatSelectsText(insertSelection, model.getValueInRange(selection)));\n      }\n    }\n\n    editor.pushUndoStop();\n    editor.executeCommands(this.id, commands);\n    editor.pushUndoStop();\n  };\n\n  return DuplicateSelectionAction;\n}(EditorAction);\n\nexport { DuplicateSelectionAction }; // move lines\n\nvar AbstractMoveLinesAction =\n/** @class */\nfunction (_super) {\n  __extends(AbstractMoveLinesAction, _super);\n\n  function AbstractMoveLinesAction(down, opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this.down = down;\n    return _this;\n  }\n\n  AbstractMoveLinesAction.prototype.run = function (_accessor, editor) {\n    var commands = [];\n    var selections = editor.getSelections() || [];\n    var autoIndent = editor.getOption(8\n    /* autoIndent */\n    );\n\n    for (var _i = 0, selections_3 = selections; _i < selections_3.length; _i++) {\n      var selection = selections_3[_i];\n      commands.push(new MoveLinesCommand(selection, this.down, autoIndent));\n    }\n\n    editor.pushUndoStop();\n    editor.executeCommands(this.id, commands);\n    editor.pushUndoStop();\n  };\n\n  return AbstractMoveLinesAction;\n}(EditorAction);\n\nvar MoveLinesUpAction =\n/** @class */\nfunction (_super) {\n  __extends(MoveLinesUpAction, _super);\n\n  function MoveLinesUpAction() {\n    return _super.call(this, false, {\n      id: 'editor.action.moveLinesUpAction',\n      label: nls.localize('lines.moveUp', \"Move Line Up\"),\n      alias: 'Move Line Up',\n      precondition: EditorContextKeys.writable,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 512\n        /* Alt */\n        | 16\n        /* UpArrow */\n        ,\n        linux: {\n          primary: 512\n          /* Alt */\n          | 16\n          /* UpArrow */\n\n        },\n        weight: 100\n        /* EditorContrib */\n\n      },\n      menuOpts: {\n        menuId: 25\n        /* MenubarSelectionMenu */\n        ,\n        group: '2_line',\n        title: nls.localize({\n          key: 'miMoveLinesUp',\n          comment: ['&& denotes a mnemonic']\n        }, \"Mo&&ve Line Up\"),\n        order: 3\n      }\n    }) || this;\n  }\n\n  return MoveLinesUpAction;\n}(AbstractMoveLinesAction);\n\nvar MoveLinesDownAction =\n/** @class */\nfunction (_super) {\n  __extends(MoveLinesDownAction, _super);\n\n  function MoveLinesDownAction() {\n    return _super.call(this, true, {\n      id: 'editor.action.moveLinesDownAction',\n      label: nls.localize('lines.moveDown', \"Move Line Down\"),\n      alias: 'Move Line Down',\n      precondition: EditorContextKeys.writable,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 512\n        /* Alt */\n        | 18\n        /* DownArrow */\n        ,\n        linux: {\n          primary: 512\n          /* Alt */\n          | 18\n          /* DownArrow */\n\n        },\n        weight: 100\n        /* EditorContrib */\n\n      },\n      menuOpts: {\n        menuId: 25\n        /* MenubarSelectionMenu */\n        ,\n        group: '2_line',\n        title: nls.localize({\n          key: 'miMoveLinesDown',\n          comment: ['&& denotes a mnemonic']\n        }, \"Move &&Line Down\"),\n        order: 4\n      }\n    }) || this;\n  }\n\n  return MoveLinesDownAction;\n}(AbstractMoveLinesAction);\n\nvar AbstractSortLinesAction =\n/** @class */\nfunction (_super) {\n  __extends(AbstractSortLinesAction, _super);\n\n  function AbstractSortLinesAction(descending, opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this.descending = descending;\n    return _this;\n  }\n\n  AbstractSortLinesAction.prototype.run = function (_accessor, editor) {\n    var selections = editor.getSelections() || [];\n\n    for (var _i = 0, selections_4 = selections; _i < selections_4.length; _i++) {\n      var selection = selections_4[_i];\n\n      if (!SortLinesCommand.canRun(editor.getModel(), selection, this.descending)) {\n        return;\n      }\n    }\n\n    var commands = [];\n\n    for (var i = 0, len = selections.length; i < len; i++) {\n      commands[i] = new SortLinesCommand(selections[i], this.descending);\n    }\n\n    editor.pushUndoStop();\n    editor.executeCommands(this.id, commands);\n    editor.pushUndoStop();\n  };\n\n  return AbstractSortLinesAction;\n}(EditorAction);\n\nexport { AbstractSortLinesAction };\n\nvar SortLinesAscendingAction =\n/** @class */\nfunction (_super) {\n  __extends(SortLinesAscendingAction, _super);\n\n  function SortLinesAscendingAction() {\n    return _super.call(this, false, {\n      id: 'editor.action.sortLinesAscending',\n      label: nls.localize('lines.sortAscending', \"Sort Lines Ascending\"),\n      alias: 'Sort Lines Ascending',\n      precondition: EditorContextKeys.writable\n    }) || this;\n  }\n\n  return SortLinesAscendingAction;\n}(AbstractSortLinesAction);\n\nexport { SortLinesAscendingAction };\n\nvar SortLinesDescendingAction =\n/** @class */\nfunction (_super) {\n  __extends(SortLinesDescendingAction, _super);\n\n  function SortLinesDescendingAction() {\n    return _super.call(this, true, {\n      id: 'editor.action.sortLinesDescending',\n      label: nls.localize('lines.sortDescending', \"Sort Lines Descending\"),\n      alias: 'Sort Lines Descending',\n      precondition: EditorContextKeys.writable\n    }) || this;\n  }\n\n  return SortLinesDescendingAction;\n}(AbstractSortLinesAction);\n\nexport { SortLinesDescendingAction };\n\nvar TrimTrailingWhitespaceAction =\n/** @class */\nfunction (_super) {\n  __extends(TrimTrailingWhitespaceAction, _super);\n\n  function TrimTrailingWhitespaceAction() {\n    return _super.call(this, {\n      id: TrimTrailingWhitespaceAction.ID,\n      label: nls.localize('lines.trimTrailingWhitespace', \"Trim Trailing Whitespace\"),\n      alias: 'Trim Trailing Whitespace',\n      precondition: EditorContextKeys.writable,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: KeyChord(2048\n        /* CtrlCmd */\n        | 41\n        /* KEY_K */\n        , 2048\n        /* CtrlCmd */\n        | 54\n        /* KEY_X */\n        ),\n        weight: 100\n        /* EditorContrib */\n\n      }\n    }) || this;\n  }\n\n  TrimTrailingWhitespaceAction.prototype.run = function (_accessor, editor, args) {\n    var cursors = [];\n\n    if (args.reason === 'auto-save') {\n      // See https://github.com/editorconfig/editorconfig-vscode/issues/47\n      // It is very convenient for the editor config extension to invoke this action.\n      // So, if we get a reason:'auto-save' passed in, let's preserve cursor positions.\n      cursors = (editor.getSelections() || []).map(function (s) {\n        return new Position(s.positionLineNumber, s.positionColumn);\n      });\n    }\n\n    var selection = editor.getSelection();\n\n    if (selection === null) {\n      return;\n    }\n\n    var command = new TrimTrailingWhitespaceCommand(selection, cursors);\n    editor.pushUndoStop();\n    editor.executeCommands(this.id, [command]);\n    editor.pushUndoStop();\n  };\n\n  TrimTrailingWhitespaceAction.ID = 'editor.action.trimTrailingWhitespace';\n  return TrimTrailingWhitespaceAction;\n}(EditorAction);\n\nexport { TrimTrailingWhitespaceAction };\n\nvar DeleteLinesAction =\n/** @class */\nfunction (_super) {\n  __extends(DeleteLinesAction, _super);\n\n  function DeleteLinesAction() {\n    return _super.call(this, {\n      id: 'editor.action.deleteLines',\n      label: nls.localize('lines.delete', \"Delete Line\"),\n      alias: 'Delete Line',\n      precondition: EditorContextKeys.writable,\n      kbOpts: {\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 2048\n        /* CtrlCmd */\n        | 1024\n        /* Shift */\n        | 41\n        /* KEY_K */\n        ,\n        weight: 100\n        /* EditorContrib */\n\n      }\n    }) || this;\n  }\n\n  DeleteLinesAction.prototype.run = function (_accessor, editor) {\n    if (!editor.hasModel()) {\n      return;\n    }\n\n    var ops = this._getLinesToRemove(editor);\n\n    var model = editor.getModel();\n\n    if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n      // Model is empty\n      return;\n    }\n\n    var linesDeleted = 0;\n    var edits = [];\n    var cursorState = [];\n\n    for (var i = 0, len = ops.length; i < len; i++) {\n      var op = ops[i];\n      var startLineNumber = op.startLineNumber;\n      var endLineNumber = op.endLineNumber;\n      var startColumn = 1;\n      var endColumn = model.getLineMaxColumn(endLineNumber);\n\n      if (endLineNumber < model.getLineCount()) {\n        endLineNumber += 1;\n        endColumn = 1;\n      } else if (startLineNumber > 1) {\n        startLineNumber -= 1;\n        startColumn = model.getLineMaxColumn(startLineNumber);\n      }\n\n      edits.push(EditOperation.replace(new Selection(startLineNumber, startColumn, endLineNumber, endColumn), ''));\n      cursorState.push(new Selection(startLineNumber - linesDeleted, op.positionColumn, startLineNumber - linesDeleted, op.positionColumn));\n      linesDeleted += op.endLineNumber - op.startLineNumber + 1;\n    }\n\n    editor.pushUndoStop();\n    editor.executeEdits(this.id, edits, cursorState);\n    editor.pushUndoStop();\n  };\n\n  DeleteLinesAction.prototype._getLinesToRemove = function (editor) {\n    // Construct delete operations\n    var operations = editor.getSelections().map(function (s) {\n      var endLineNumber = s.endLineNumber;\n\n      if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\n        endLineNumber -= 1;\n      }\n\n      return {\n        startLineNumber: s.startLineNumber,\n        selectionStartColumn: s.selectionStartColumn,\n        endLineNumber: endLineNumber,\n        positionColumn: s.positionColumn\n      };\n    }); // Sort delete operations\n\n    operations.sort(function (a, b) {\n      if (a.startLineNumber === b.startLineNumber) {\n        return a.endLineNumber - b.endLineNumber;\n      }\n\n      return a.startLineNumber - b.startLineNumber;\n    }); // Merge delete operations which are adjacent or overlapping\n\n    var mergedOperations = [];\n    var previousOperation = operations[0];\n\n    for (var i = 1; i < operations.length; i++) {\n      if (previousOperation.endLineNumber + 1 >= operations[i].startLineNumber) {\n        // Merge current operations into the previous one\n        previousOperation.endLineNumber = operations[i].endLineNumber;\n      } else {\n        // Push previous operation\n        mergedOperations.push(previousOperation);\n        previousOperation = operations[i];\n      }\n    } // Push the last operation\n\n\n    mergedOperations.push(previousOperation);\n    return mergedOperations;\n  };\n\n  return DeleteLinesAction;\n}(EditorAction);\n\nexport { DeleteLinesAction };\n\nvar IndentLinesAction =\n/** @class */\nfunction (_super) {\n  __extends(IndentLinesAction, _super);\n\n  function IndentLinesAction() {\n    return _super.call(this, {\n      id: 'editor.action.indentLines',\n      label: nls.localize('lines.indent', \"Indent Line\"),\n      alias: 'Indent Line',\n      precondition: EditorContextKeys.writable,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 2048\n        /* CtrlCmd */\n        | 89\n        /* US_CLOSE_SQUARE_BRACKET */\n        ,\n        weight: 100\n        /* EditorContrib */\n\n      }\n    }) || this;\n  }\n\n  IndentLinesAction.prototype.run = function (_accessor, editor) {\n    var cursors = editor._getCursors();\n\n    if (!cursors) {\n      return;\n    }\n\n    editor.pushUndoStop();\n    editor.executeCommands(this.id, TypeOperations.indent(cursors.context.config, editor.getModel(), editor.getSelections()));\n    editor.pushUndoStop();\n  };\n\n  return IndentLinesAction;\n}(EditorAction);\n\nexport { IndentLinesAction };\n\nvar OutdentLinesAction =\n/** @class */\nfunction (_super) {\n  __extends(OutdentLinesAction, _super);\n\n  function OutdentLinesAction() {\n    return _super.call(this, {\n      id: 'editor.action.outdentLines',\n      label: nls.localize('lines.outdent', \"Outdent Line\"),\n      alias: 'Outdent Line',\n      precondition: EditorContextKeys.writable,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 2048\n        /* CtrlCmd */\n        | 87\n        /* US_OPEN_SQUARE_BRACKET */\n        ,\n        weight: 100\n        /* EditorContrib */\n\n      }\n    }) || this;\n  }\n\n  OutdentLinesAction.prototype.run = function (_accessor, editor) {\n    CoreEditingCommands.Outdent.runEditorCommand(_accessor, editor, null);\n  };\n\n  return OutdentLinesAction;\n}(EditorAction);\n\nvar InsertLineBeforeAction =\n/** @class */\nfunction (_super) {\n  __extends(InsertLineBeforeAction, _super);\n\n  function InsertLineBeforeAction() {\n    return _super.call(this, {\n      id: 'editor.action.insertLineBefore',\n      label: nls.localize('lines.insertBefore', \"Insert Line Above\"),\n      alias: 'Insert Line Above',\n      precondition: EditorContextKeys.writable,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 2048\n        /* CtrlCmd */\n        | 1024\n        /* Shift */\n        | 3\n        /* Enter */\n        ,\n        weight: 100\n        /* EditorContrib */\n\n      }\n    }) || this;\n  }\n\n  InsertLineBeforeAction.prototype.run = function (_accessor, editor) {\n    var cursors = editor._getCursors();\n\n    if (!cursors) {\n      return;\n    }\n\n    editor.pushUndoStop();\n    editor.executeCommands(this.id, TypeOperations.lineInsertBefore(cursors.context.config, editor.getModel(), editor.getSelections()));\n  };\n\n  return InsertLineBeforeAction;\n}(EditorAction);\n\nexport { InsertLineBeforeAction };\n\nvar InsertLineAfterAction =\n/** @class */\nfunction (_super) {\n  __extends(InsertLineAfterAction, _super);\n\n  function InsertLineAfterAction() {\n    return _super.call(this, {\n      id: 'editor.action.insertLineAfter',\n      label: nls.localize('lines.insertAfter', \"Insert Line Below\"),\n      alias: 'Insert Line Below',\n      precondition: EditorContextKeys.writable,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 2048\n        /* CtrlCmd */\n        | 3\n        /* Enter */\n        ,\n        weight: 100\n        /* EditorContrib */\n\n      }\n    }) || this;\n  }\n\n  InsertLineAfterAction.prototype.run = function (_accessor, editor) {\n    var cursors = editor._getCursors();\n\n    if (!cursors) {\n      return;\n    }\n\n    editor.pushUndoStop();\n    editor.executeCommands(this.id, TypeOperations.lineInsertAfter(cursors.context.config, editor.getModel(), editor.getSelections()));\n  };\n\n  return InsertLineAfterAction;\n}(EditorAction);\n\nexport { InsertLineAfterAction };\n\nvar AbstractDeleteAllToBoundaryAction =\n/** @class */\nfunction (_super) {\n  __extends(AbstractDeleteAllToBoundaryAction, _super);\n\n  function AbstractDeleteAllToBoundaryAction() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  AbstractDeleteAllToBoundaryAction.prototype.run = function (_accessor, editor) {\n    if (!editor.hasModel()) {\n      return;\n    }\n\n    var primaryCursor = editor.getSelection();\n\n    var rangesToDelete = this._getRangesToDelete(editor); // merge overlapping selections\n\n\n    var effectiveRanges = [];\n\n    for (var i = 0, count = rangesToDelete.length - 1; i < count; i++) {\n      var range = rangesToDelete[i];\n      var nextRange = rangesToDelete[i + 1];\n\n      if (Range.intersectRanges(range, nextRange) === null) {\n        effectiveRanges.push(range);\n      } else {\n        rangesToDelete[i + 1] = Range.plusRange(range, nextRange);\n      }\n    }\n\n    effectiveRanges.push(rangesToDelete[rangesToDelete.length - 1]);\n\n    var endCursorState = this._getEndCursorState(primaryCursor, effectiveRanges);\n\n    var edits = effectiveRanges.map(function (range) {\n      return EditOperation.replace(range, '');\n    });\n    editor.pushUndoStop();\n    editor.executeEdits(this.id, edits, endCursorState);\n    editor.pushUndoStop();\n  };\n\n  return AbstractDeleteAllToBoundaryAction;\n}(EditorAction);\n\nexport { AbstractDeleteAllToBoundaryAction };\n\nvar DeleteAllLeftAction =\n/** @class */\nfunction (_super) {\n  __extends(DeleteAllLeftAction, _super);\n\n  function DeleteAllLeftAction() {\n    return _super.call(this, {\n      id: 'deleteAllLeft',\n      label: nls.localize('lines.deleteAllLeft', \"Delete All Left\"),\n      alias: 'Delete All Left',\n      precondition: EditorContextKeys.writable,\n      kbOpts: {\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 0,\n        mac: {\n          primary: 2048\n          /* CtrlCmd */\n          | 1\n          /* Backspace */\n\n        },\n        weight: 100\n        /* EditorContrib */\n\n      }\n    }) || this;\n  }\n\n  DeleteAllLeftAction.prototype._getEndCursorState = function (primaryCursor, rangesToDelete) {\n    var endPrimaryCursor = null;\n    var endCursorState = [];\n    var deletedLines = 0;\n    rangesToDelete.forEach(function (range) {\n      var endCursor;\n\n      if (range.endColumn === 1 && deletedLines > 0) {\n        var newStartLine = range.startLineNumber - deletedLines;\n        endCursor = new Selection(newStartLine, range.startColumn, newStartLine, range.startColumn);\n      } else {\n        endCursor = new Selection(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n      }\n\n      deletedLines += range.endLineNumber - range.startLineNumber;\n\n      if (range.intersectRanges(primaryCursor)) {\n        endPrimaryCursor = endCursor;\n      } else {\n        endCursorState.push(endCursor);\n      }\n    });\n\n    if (endPrimaryCursor) {\n      endCursorState.unshift(endPrimaryCursor);\n    }\n\n    return endCursorState;\n  };\n\n  DeleteAllLeftAction.prototype._getRangesToDelete = function (editor) {\n    var selections = editor.getSelections();\n\n    if (selections === null) {\n      return [];\n    }\n\n    var rangesToDelete = selections;\n    var model = editor.getModel();\n\n    if (model === null) {\n      return [];\n    }\n\n    rangesToDelete.sort(Range.compareRangesUsingStarts);\n    rangesToDelete = rangesToDelete.map(function (selection) {\n      if (selection.isEmpty()) {\n        if (selection.startColumn === 1) {\n          var deleteFromLine = Math.max(1, selection.startLineNumber - 1);\n          var deleteFromColumn = selection.startLineNumber === 1 ? 1 : model.getLineContent(deleteFromLine).length + 1;\n          return new Range(deleteFromLine, deleteFromColumn, selection.startLineNumber, 1);\n        } else {\n          return new Range(selection.startLineNumber, 1, selection.startLineNumber, selection.startColumn);\n        }\n      } else {\n        return new Range(selection.startLineNumber, 1, selection.endLineNumber, selection.endColumn);\n      }\n    });\n    return rangesToDelete;\n  };\n\n  return DeleteAllLeftAction;\n}(AbstractDeleteAllToBoundaryAction);\n\nexport { DeleteAllLeftAction };\n\nvar DeleteAllRightAction =\n/** @class */\nfunction (_super) {\n  __extends(DeleteAllRightAction, _super);\n\n  function DeleteAllRightAction() {\n    return _super.call(this, {\n      id: 'deleteAllRight',\n      label: nls.localize('lines.deleteAllRight', \"Delete All Right\"),\n      alias: 'Delete All Right',\n      precondition: EditorContextKeys.writable,\n      kbOpts: {\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 0,\n        mac: {\n          primary: 256\n          /* WinCtrl */\n          | 41\n          /* KEY_K */\n          ,\n          secondary: [2048\n          /* CtrlCmd */\n          | 20\n          /* Delete */\n          ]\n        },\n        weight: 100\n        /* EditorContrib */\n\n      }\n    }) || this;\n  }\n\n  DeleteAllRightAction.prototype._getEndCursorState = function (primaryCursor, rangesToDelete) {\n    var endPrimaryCursor = null;\n    var endCursorState = [];\n\n    for (var i = 0, len = rangesToDelete.length, offset = 0; i < len; i++) {\n      var range = rangesToDelete[i];\n      var endCursor = new Selection(range.startLineNumber - offset, range.startColumn, range.startLineNumber - offset, range.startColumn);\n\n      if (range.intersectRanges(primaryCursor)) {\n        endPrimaryCursor = endCursor;\n      } else {\n        endCursorState.push(endCursor);\n      }\n    }\n\n    if (endPrimaryCursor) {\n      endCursorState.unshift(endPrimaryCursor);\n    }\n\n    return endCursorState;\n  };\n\n  DeleteAllRightAction.prototype._getRangesToDelete = function (editor) {\n    var model = editor.getModel();\n\n    if (model === null) {\n      return [];\n    }\n\n    var selections = editor.getSelections();\n\n    if (selections === null) {\n      return [];\n    }\n\n    var rangesToDelete = selections.map(function (sel) {\n      if (sel.isEmpty()) {\n        var maxColumn = model.getLineMaxColumn(sel.startLineNumber);\n\n        if (sel.startColumn === maxColumn) {\n          return new Range(sel.startLineNumber, sel.startColumn, sel.startLineNumber + 1, 1);\n        } else {\n          return new Range(sel.startLineNumber, sel.startColumn, sel.startLineNumber, maxColumn);\n        }\n      }\n\n      return sel;\n    });\n    rangesToDelete.sort(Range.compareRangesUsingStarts);\n    return rangesToDelete;\n  };\n\n  return DeleteAllRightAction;\n}(AbstractDeleteAllToBoundaryAction);\n\nexport { DeleteAllRightAction };\n\nvar JoinLinesAction =\n/** @class */\nfunction (_super) {\n  __extends(JoinLinesAction, _super);\n\n  function JoinLinesAction() {\n    return _super.call(this, {\n      id: 'editor.action.joinLines',\n      label: nls.localize('lines.joinLines', \"Join Lines\"),\n      alias: 'Join Lines',\n      precondition: EditorContextKeys.writable,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 0,\n        mac: {\n          primary: 256\n          /* WinCtrl */\n          | 40\n          /* KEY_J */\n\n        },\n        weight: 100\n        /* EditorContrib */\n\n      }\n    }) || this;\n  }\n\n  JoinLinesAction.prototype.run = function (_accessor, editor) {\n    var selections = editor.getSelections();\n\n    if (selections === null) {\n      return;\n    }\n\n    var primaryCursor = editor.getSelection();\n\n    if (primaryCursor === null) {\n      return;\n    }\n\n    selections.sort(Range.compareRangesUsingStarts);\n    var reducedSelections = [];\n    var lastSelection = selections.reduce(function (previousValue, currentValue) {\n      if (previousValue.isEmpty()) {\n        if (previousValue.endLineNumber === currentValue.startLineNumber) {\n          if (primaryCursor.equalsSelection(previousValue)) {\n            primaryCursor = currentValue;\n          }\n\n          return currentValue;\n        }\n\n        if (currentValue.startLineNumber > previousValue.endLineNumber + 1) {\n          reducedSelections.push(previousValue);\n          return currentValue;\n        } else {\n          return new Selection(previousValue.startLineNumber, previousValue.startColumn, currentValue.endLineNumber, currentValue.endColumn);\n        }\n      } else {\n        if (currentValue.startLineNumber > previousValue.endLineNumber) {\n          reducedSelections.push(previousValue);\n          return currentValue;\n        } else {\n          return new Selection(previousValue.startLineNumber, previousValue.startColumn, currentValue.endLineNumber, currentValue.endColumn);\n        }\n      }\n    });\n    reducedSelections.push(lastSelection);\n    var model = editor.getModel();\n\n    if (model === null) {\n      return;\n    }\n\n    var edits = [];\n    var endCursorState = [];\n    var endPrimaryCursor = primaryCursor;\n    var lineOffset = 0;\n\n    for (var i = 0, len = reducedSelections.length; i < len; i++) {\n      var selection = reducedSelections[i];\n      var startLineNumber = selection.startLineNumber;\n      var startColumn = 1;\n      var columnDeltaOffset = 0;\n      var endLineNumber = void 0,\n          endColumn = void 0;\n      var selectionEndPositionOffset = model.getLineContent(selection.endLineNumber).length - selection.endColumn;\n\n      if (selection.isEmpty() || selection.startLineNumber === selection.endLineNumber) {\n        var position = selection.getStartPosition();\n\n        if (position.lineNumber < model.getLineCount()) {\n          endLineNumber = startLineNumber + 1;\n          endColumn = model.getLineMaxColumn(endLineNumber);\n        } else {\n          endLineNumber = position.lineNumber;\n          endColumn = model.getLineMaxColumn(position.lineNumber);\n        }\n      } else {\n        endLineNumber = selection.endLineNumber;\n        endColumn = model.getLineMaxColumn(endLineNumber);\n      }\n\n      var trimmedLinesContent = model.getLineContent(startLineNumber);\n\n      for (var i_1 = startLineNumber + 1; i_1 <= endLineNumber; i_1++) {\n        var lineText = model.getLineContent(i_1);\n        var firstNonWhitespaceIdx = model.getLineFirstNonWhitespaceColumn(i_1);\n\n        if (firstNonWhitespaceIdx >= 1) {\n          var insertSpace = true;\n\n          if (trimmedLinesContent === '') {\n            insertSpace = false;\n          }\n\n          if (insertSpace && (trimmedLinesContent.charAt(trimmedLinesContent.length - 1) === ' ' || trimmedLinesContent.charAt(trimmedLinesContent.length - 1) === '\\t')) {\n            insertSpace = false;\n            trimmedLinesContent = trimmedLinesContent.replace(/[\\s\\uFEFF\\xA0]+$/g, ' ');\n          }\n\n          var lineTextWithoutIndent = lineText.substr(firstNonWhitespaceIdx - 1);\n          trimmedLinesContent += (insertSpace ? ' ' : '') + lineTextWithoutIndent;\n\n          if (insertSpace) {\n            columnDeltaOffset = lineTextWithoutIndent.length + 1;\n          } else {\n            columnDeltaOffset = lineTextWithoutIndent.length;\n          }\n        } else {\n          columnDeltaOffset = 0;\n        }\n      }\n\n      var deleteSelection = new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n\n      if (!deleteSelection.isEmpty()) {\n        var resultSelection = void 0;\n\n        if (selection.isEmpty()) {\n          edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\n          resultSelection = new Selection(deleteSelection.startLineNumber - lineOffset, trimmedLinesContent.length - columnDeltaOffset + 1, startLineNumber - lineOffset, trimmedLinesContent.length - columnDeltaOffset + 1);\n        } else {\n          if (selection.startLineNumber === selection.endLineNumber) {\n            edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\n            resultSelection = new Selection(selection.startLineNumber - lineOffset, selection.startColumn, selection.endLineNumber - lineOffset, selection.endColumn);\n          } else {\n            edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\n            resultSelection = new Selection(selection.startLineNumber - lineOffset, selection.startColumn, selection.startLineNumber - lineOffset, trimmedLinesContent.length - selectionEndPositionOffset);\n          }\n        }\n\n        if (Range.intersectRanges(deleteSelection, primaryCursor) !== null) {\n          endPrimaryCursor = resultSelection;\n        } else {\n          endCursorState.push(resultSelection);\n        }\n      }\n\n      lineOffset += deleteSelection.endLineNumber - deleteSelection.startLineNumber;\n    }\n\n    endCursorState.unshift(endPrimaryCursor);\n    editor.pushUndoStop();\n    editor.executeEdits(this.id, edits, endCursorState);\n    editor.pushUndoStop();\n  };\n\n  return JoinLinesAction;\n}(EditorAction);\n\nexport { JoinLinesAction };\n\nvar TransposeAction =\n/** @class */\nfunction (_super) {\n  __extends(TransposeAction, _super);\n\n  function TransposeAction() {\n    return _super.call(this, {\n      id: 'editor.action.transpose',\n      label: nls.localize('editor.transpose', \"Transpose characters around the cursor\"),\n      alias: 'Transpose characters around the cursor',\n      precondition: EditorContextKeys.writable\n    }) || this;\n  }\n\n  TransposeAction.prototype.run = function (_accessor, editor) {\n    var selections = editor.getSelections();\n\n    if (selections === null) {\n      return;\n    }\n\n    var model = editor.getModel();\n\n    if (model === null) {\n      return;\n    }\n\n    var commands = [];\n\n    for (var i = 0, len = selections.length; i < len; i++) {\n      var selection = selections[i];\n\n      if (!selection.isEmpty()) {\n        continue;\n      }\n\n      var cursor = selection.getStartPosition();\n      var maxColumn = model.getLineMaxColumn(cursor.lineNumber);\n\n      if (cursor.column >= maxColumn) {\n        if (cursor.lineNumber === model.getLineCount()) {\n          continue;\n        } // The cursor is at the end of current line and current line is not empty\n        // then we transpose the character before the cursor and the line break if there is any following line.\n\n\n        var deleteSelection = new Range(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber + 1, 1);\n        var chars = model.getValueInRange(deleteSelection).split('').reverse().join('');\n        commands.push(new ReplaceCommand(new Selection(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber + 1, 1), chars));\n      } else {\n        var deleteSelection = new Range(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber, cursor.column + 1);\n        var chars = model.getValueInRange(deleteSelection).split('').reverse().join('');\n        commands.push(new ReplaceCommandThatPreservesSelection(deleteSelection, chars, new Selection(cursor.lineNumber, cursor.column + 1, cursor.lineNumber, cursor.column + 1)));\n      }\n    }\n\n    editor.pushUndoStop();\n    editor.executeCommands(this.id, commands);\n    editor.pushUndoStop();\n  };\n\n  return TransposeAction;\n}(EditorAction);\n\nexport { TransposeAction };\n\nvar AbstractCaseAction =\n/** @class */\nfunction (_super) {\n  __extends(AbstractCaseAction, _super);\n\n  function AbstractCaseAction() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  AbstractCaseAction.prototype.run = function (_accessor, editor) {\n    var selections = editor.getSelections();\n\n    if (selections === null) {\n      return;\n    }\n\n    var model = editor.getModel();\n\n    if (model === null) {\n      return;\n    }\n\n    var wordSeparators = editor.getOption(96\n    /* wordSeparators */\n    );\n    var commands = [];\n\n    for (var i = 0, len = selections.length; i < len; i++) {\n      var selection = selections[i];\n\n      if (selection.isEmpty()) {\n        var cursor = selection.getStartPosition();\n        var word = model.getWordAtPosition(cursor);\n\n        if (!word) {\n          continue;\n        }\n\n        var wordRange = new Range(cursor.lineNumber, word.startColumn, cursor.lineNumber, word.endColumn);\n        var text = model.getValueInRange(wordRange);\n        commands.push(new ReplaceCommandThatPreservesSelection(wordRange, this._modifyText(text, wordSeparators), new Selection(cursor.lineNumber, cursor.column, cursor.lineNumber, cursor.column)));\n      } else {\n        var text = model.getValueInRange(selection);\n        commands.push(new ReplaceCommandThatPreservesSelection(selection, this._modifyText(text, wordSeparators), selection));\n      }\n    }\n\n    editor.pushUndoStop();\n    editor.executeCommands(this.id, commands);\n    editor.pushUndoStop();\n  };\n\n  return AbstractCaseAction;\n}(EditorAction);\n\nexport { AbstractCaseAction };\n\nvar UpperCaseAction =\n/** @class */\nfunction (_super) {\n  __extends(UpperCaseAction, _super);\n\n  function UpperCaseAction() {\n    return _super.call(this, {\n      id: 'editor.action.transformToUppercase',\n      label: nls.localize('editor.transformToUppercase', \"Transform to Uppercase\"),\n      alias: 'Transform to Uppercase',\n      precondition: EditorContextKeys.writable\n    }) || this;\n  }\n\n  UpperCaseAction.prototype._modifyText = function (text, wordSeparators) {\n    return text.toLocaleUpperCase();\n  };\n\n  return UpperCaseAction;\n}(AbstractCaseAction);\n\nexport { UpperCaseAction };\n\nvar LowerCaseAction =\n/** @class */\nfunction (_super) {\n  __extends(LowerCaseAction, _super);\n\n  function LowerCaseAction() {\n    return _super.call(this, {\n      id: 'editor.action.transformToLowercase',\n      label: nls.localize('editor.transformToLowercase', \"Transform to Lowercase\"),\n      alias: 'Transform to Lowercase',\n      precondition: EditorContextKeys.writable\n    }) || this;\n  }\n\n  LowerCaseAction.prototype._modifyText = function (text, wordSeparators) {\n    return text.toLocaleLowerCase();\n  };\n\n  return LowerCaseAction;\n}(AbstractCaseAction);\n\nexport { LowerCaseAction };\n\nvar TitleCaseAction =\n/** @class */\nfunction (_super) {\n  __extends(TitleCaseAction, _super);\n\n  function TitleCaseAction() {\n    return _super.call(this, {\n      id: 'editor.action.transformToTitlecase',\n      label: nls.localize('editor.transformToTitlecase', \"Transform to Title Case\"),\n      alias: 'Transform to Title Case',\n      precondition: EditorContextKeys.writable\n    }) || this;\n  }\n\n  TitleCaseAction.prototype._modifyText = function (text, wordSeparators) {\n    var separators = '\\r\\n\\t ' + wordSeparators;\n    var excludedChars = separators.split('');\n    var title = '';\n    var startUpperCase = true;\n\n    for (var i = 0; i < text.length; i++) {\n      var currentChar = text[i];\n\n      if (excludedChars.indexOf(currentChar) >= 0) {\n        startUpperCase = true;\n        title += currentChar;\n      } else if (startUpperCase) {\n        startUpperCase = false;\n        title += currentChar.toLocaleUpperCase();\n      } else {\n        title += currentChar.toLocaleLowerCase();\n      }\n    }\n\n    return title;\n  };\n\n  return TitleCaseAction;\n}(AbstractCaseAction);\n\nexport { TitleCaseAction };\nregisterEditorAction(CopyLinesUpAction);\nregisterEditorAction(CopyLinesDownAction);\nregisterEditorAction(DuplicateSelectionAction);\nregisterEditorAction(MoveLinesUpAction);\nregisterEditorAction(MoveLinesDownAction);\nregisterEditorAction(SortLinesAscendingAction);\nregisterEditorAction(SortLinesDescendingAction);\nregisterEditorAction(TrimTrailingWhitespaceAction);\nregisterEditorAction(DeleteLinesAction);\nregisterEditorAction(IndentLinesAction);\nregisterEditorAction(OutdentLinesAction);\nregisterEditorAction(InsertLineBeforeAction);\nregisterEditorAction(InsertLineAfterAction);\nregisterEditorAction(DeleteAllLeftAction);\nregisterEditorAction(DeleteAllRightAction);\nregisterEditorAction(JoinLinesAction);\nregisterEditorAction(TransposeAction);\nregisterEditorAction(UpperCaseAction);\nregisterEditorAction(LowerCaseAction);\nregisterEditorAction(TitleCaseAction);","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/linesOperations.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","nls","KeyChord","CoreEditingCommands","EditorAction","registerEditorAction","ReplaceCommand","ReplaceCommandThatPreservesSelection","ReplaceCommandThatSelectsText","TrimTrailingWhitespaceCommand","TypeOperations","EditOperation","Position","Range","Selection","EditorContextKeys","CopyLinesCommand","MoveLinesCommand","SortLinesCommand","AbstractCopyLinesAction","_super","down","opts","_this","call","run","_accessor","editor","commands","selections","getSelections","_i","selections_1","length","selection","push","pushUndoStop","executeCommands","id","CopyLinesUpAction","label","localize","alias","precondition","writable","kbOpts","kbExpr","editorTextFocus","primary","linux","weight","menuOpts","menuId","group","title","key","comment","order","CopyLinesDownAction","DuplicateSelectionAction","accessor","args","hasModel","model","getModel","selections_2","isEmpty","insertSelection","endLineNumber","endColumn","getValueInRange","AbstractMoveLinesAction","autoIndent","getOption","selections_3","MoveLinesUpAction","MoveLinesDownAction","AbstractSortLinesAction","descending","selections_4","canRun","i","len","SortLinesAscendingAction","SortLinesDescendingAction","TrimTrailingWhitespaceAction","ID","cursors","reason","map","s","positionLineNumber","positionColumn","getSelection","command","DeleteLinesAction","textInputFocus","ops","_getLinesToRemove","getLineCount","getLineMaxColumn","linesDeleted","edits","cursorState","op","startLineNumber","startColumn","replace","executeEdits","operations","selectionStartColumn","sort","a","mergedOperations","previousOperation","IndentLinesAction","_getCursors","indent","context","config","OutdentLinesAction","Outdent","runEditorCommand","InsertLineBeforeAction","lineInsertBefore","InsertLineAfterAction","lineInsertAfter","AbstractDeleteAllToBoundaryAction","apply","arguments","primaryCursor","rangesToDelete","_getRangesToDelete","effectiveRanges","count","range","nextRange","intersectRanges","plusRange","endCursorState","_getEndCursorState","DeleteAllLeftAction","mac","endPrimaryCursor","deletedLines","forEach","endCursor","newStartLine","unshift","compareRangesUsingStarts","deleteFromLine","Math","max","deleteFromColumn","getLineContent","DeleteAllRightAction","secondary","offset","sel","maxColumn","JoinLinesAction","reducedSelections","lastSelection","reduce","previousValue","currentValue","equalsSelection","lineOffset","columnDeltaOffset","selectionEndPositionOffset","position","getStartPosition","lineNumber","trimmedLinesContent","i_1","lineText","firstNonWhitespaceIdx","getLineFirstNonWhitespaceColumn","insertSpace","charAt","lineTextWithoutIndent","substr","deleteSelection","resultSelection","TransposeAction","cursor","column","chars","split","reverse","join","AbstractCaseAction","wordSeparators","word","getWordAtPosition","wordRange","text","_modifyText","UpperCaseAction","toLocaleUpperCase","LowerCaseAction","toLocaleLowerCase","TitleCaseAction","separators","excludedChars","startUpperCase","currentChar","indexOf"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport * as nls from '../../../nls.js';\r\nimport { KeyChord } from '../../../base/common/keyCodes.js';\r\nimport { CoreEditingCommands } from '../../browser/controller/coreCommands.js';\r\nimport { EditorAction, registerEditorAction } from '../../browser/editorExtensions.js';\r\nimport { ReplaceCommand, ReplaceCommandThatPreservesSelection, ReplaceCommandThatSelectsText } from '../../common/commands/replaceCommand.js';\r\nimport { TrimTrailingWhitespaceCommand } from '../../common/commands/trimTrailingWhitespaceCommand.js';\r\nimport { TypeOperations } from '../../common/controller/cursorTypeOperations.js';\r\nimport { EditOperation } from '../../common/core/editOperation.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { CopyLinesCommand } from './copyLinesCommand.js';\r\nimport { MoveLinesCommand } from './moveLinesCommand.js';\r\nimport { SortLinesCommand } from './sortLinesCommand.js';\r\n// copy lines\r\nvar AbstractCopyLinesAction = /** @class */ (function (_super) {\r\n    __extends(AbstractCopyLinesAction, _super);\r\n    function AbstractCopyLinesAction(down, opts) {\r\n        var _this = _super.call(this, opts) || this;\r\n        _this.down = down;\r\n        return _this;\r\n    }\r\n    AbstractCopyLinesAction.prototype.run = function (_accessor, editor) {\r\n        var commands = [];\r\n        var selections = editor.getSelections() || [];\r\n        for (var _i = 0, selections_1 = selections; _i < selections_1.length; _i++) {\r\n            var selection = selections_1[_i];\r\n            commands.push(new CopyLinesCommand(selection, this.down));\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, commands);\r\n        editor.pushUndoStop();\r\n    };\r\n    return AbstractCopyLinesAction;\r\n}(EditorAction));\r\nvar CopyLinesUpAction = /** @class */ (function (_super) {\r\n    __extends(CopyLinesUpAction, _super);\r\n    function CopyLinesUpAction() {\r\n        return _super.call(this, false, {\r\n            id: 'editor.action.copyLinesUpAction',\r\n            label: nls.localize('lines.copyUp', \"Copy Line Up\"),\r\n            alias: 'Copy Line Up',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 512 /* Alt */ | 1024 /* Shift */ | 16 /* UpArrow */,\r\n                linux: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 1024 /* Shift */ | 16 /* UpArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: 25 /* MenubarSelectionMenu */,\r\n                group: '2_line',\r\n                title: nls.localize({ key: 'miCopyLinesUp', comment: ['&& denotes a mnemonic'] }, \"&&Copy Line Up\"),\r\n                order: 1\r\n            }\r\n        }) || this;\r\n    }\r\n    return CopyLinesUpAction;\r\n}(AbstractCopyLinesAction));\r\nvar CopyLinesDownAction = /** @class */ (function (_super) {\r\n    __extends(CopyLinesDownAction, _super);\r\n    function CopyLinesDownAction() {\r\n        return _super.call(this, true, {\r\n            id: 'editor.action.copyLinesDownAction',\r\n            label: nls.localize('lines.copyDown', \"Copy Line Down\"),\r\n            alias: 'Copy Line Down',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 512 /* Alt */ | 1024 /* Shift */ | 18 /* DownArrow */,\r\n                linux: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 1024 /* Shift */ | 18 /* DownArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: 25 /* MenubarSelectionMenu */,\r\n                group: '2_line',\r\n                title: nls.localize({ key: 'miCopyLinesDown', comment: ['&& denotes a mnemonic'] }, \"Co&&py Line Down\"),\r\n                order: 2\r\n            }\r\n        }) || this;\r\n    }\r\n    return CopyLinesDownAction;\r\n}(AbstractCopyLinesAction));\r\nvar DuplicateSelectionAction = /** @class */ (function (_super) {\r\n    __extends(DuplicateSelectionAction, _super);\r\n    function DuplicateSelectionAction() {\r\n        return _super.call(this, {\r\n            id: 'editor.action.duplicateSelection',\r\n            label: nls.localize('duplicateSelection', \"Duplicate Selection\"),\r\n            alias: 'Duplicate Selection',\r\n            precondition: EditorContextKeys.writable,\r\n            menuOpts: {\r\n                menuId: 25 /* MenubarSelectionMenu */,\r\n                group: '2_line',\r\n                title: nls.localize({ key: 'miDuplicateSelection', comment: ['&& denotes a mnemonic'] }, \"&&Duplicate Selection\"),\r\n                order: 5\r\n            }\r\n        }) || this;\r\n    }\r\n    DuplicateSelectionAction.prototype.run = function (accessor, editor, args) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        var commands = [];\r\n        var selections = editor.getSelections();\r\n        var model = editor.getModel();\r\n        for (var _i = 0, selections_2 = selections; _i < selections_2.length; _i++) {\r\n            var selection = selections_2[_i];\r\n            if (selection.isEmpty()) {\r\n                commands.push(new CopyLinesCommand(selection, true));\r\n            }\r\n            else {\r\n                var insertSelection = new Selection(selection.endLineNumber, selection.endColumn, selection.endLineNumber, selection.endColumn);\r\n                commands.push(new ReplaceCommandThatSelectsText(insertSelection, model.getValueInRange(selection)));\r\n            }\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, commands);\r\n        editor.pushUndoStop();\r\n    };\r\n    return DuplicateSelectionAction;\r\n}(EditorAction));\r\nexport { DuplicateSelectionAction };\r\n// move lines\r\nvar AbstractMoveLinesAction = /** @class */ (function (_super) {\r\n    __extends(AbstractMoveLinesAction, _super);\r\n    function AbstractMoveLinesAction(down, opts) {\r\n        var _this = _super.call(this, opts) || this;\r\n        _this.down = down;\r\n        return _this;\r\n    }\r\n    AbstractMoveLinesAction.prototype.run = function (_accessor, editor) {\r\n        var commands = [];\r\n        var selections = editor.getSelections() || [];\r\n        var autoIndent = editor.getOption(8 /* autoIndent */);\r\n        for (var _i = 0, selections_3 = selections; _i < selections_3.length; _i++) {\r\n            var selection = selections_3[_i];\r\n            commands.push(new MoveLinesCommand(selection, this.down, autoIndent));\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, commands);\r\n        editor.pushUndoStop();\r\n    };\r\n    return AbstractMoveLinesAction;\r\n}(EditorAction));\r\nvar MoveLinesUpAction = /** @class */ (function (_super) {\r\n    __extends(MoveLinesUpAction, _super);\r\n    function MoveLinesUpAction() {\r\n        return _super.call(this, false, {\r\n            id: 'editor.action.moveLinesUpAction',\r\n            label: nls.localize('lines.moveUp', \"Move Line Up\"),\r\n            alias: 'Move Line Up',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 512 /* Alt */ | 16 /* UpArrow */,\r\n                linux: { primary: 512 /* Alt */ | 16 /* UpArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: 25 /* MenubarSelectionMenu */,\r\n                group: '2_line',\r\n                title: nls.localize({ key: 'miMoveLinesUp', comment: ['&& denotes a mnemonic'] }, \"Mo&&ve Line Up\"),\r\n                order: 3\r\n            }\r\n        }) || this;\r\n    }\r\n    return MoveLinesUpAction;\r\n}(AbstractMoveLinesAction));\r\nvar MoveLinesDownAction = /** @class */ (function (_super) {\r\n    __extends(MoveLinesDownAction, _super);\r\n    function MoveLinesDownAction() {\r\n        return _super.call(this, true, {\r\n            id: 'editor.action.moveLinesDownAction',\r\n            label: nls.localize('lines.moveDown', \"Move Line Down\"),\r\n            alias: 'Move Line Down',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 512 /* Alt */ | 18 /* DownArrow */,\r\n                linux: { primary: 512 /* Alt */ | 18 /* DownArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: 25 /* MenubarSelectionMenu */,\r\n                group: '2_line',\r\n                title: nls.localize({ key: 'miMoveLinesDown', comment: ['&& denotes a mnemonic'] }, \"Move &&Line Down\"),\r\n                order: 4\r\n            }\r\n        }) || this;\r\n    }\r\n    return MoveLinesDownAction;\r\n}(AbstractMoveLinesAction));\r\nvar AbstractSortLinesAction = /** @class */ (function (_super) {\r\n    __extends(AbstractSortLinesAction, _super);\r\n    function AbstractSortLinesAction(descending, opts) {\r\n        var _this = _super.call(this, opts) || this;\r\n        _this.descending = descending;\r\n        return _this;\r\n    }\r\n    AbstractSortLinesAction.prototype.run = function (_accessor, editor) {\r\n        var selections = editor.getSelections() || [];\r\n        for (var _i = 0, selections_4 = selections; _i < selections_4.length; _i++) {\r\n            var selection = selections_4[_i];\r\n            if (!SortLinesCommand.canRun(editor.getModel(), selection, this.descending)) {\r\n                return;\r\n            }\r\n        }\r\n        var commands = [];\r\n        for (var i = 0, len = selections.length; i < len; i++) {\r\n            commands[i] = new SortLinesCommand(selections[i], this.descending);\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, commands);\r\n        editor.pushUndoStop();\r\n    };\r\n    return AbstractSortLinesAction;\r\n}(EditorAction));\r\nexport { AbstractSortLinesAction };\r\nvar SortLinesAscendingAction = /** @class */ (function (_super) {\r\n    __extends(SortLinesAscendingAction, _super);\r\n    function SortLinesAscendingAction() {\r\n        return _super.call(this, false, {\r\n            id: 'editor.action.sortLinesAscending',\r\n            label: nls.localize('lines.sortAscending', \"Sort Lines Ascending\"),\r\n            alias: 'Sort Lines Ascending',\r\n            precondition: EditorContextKeys.writable\r\n        }) || this;\r\n    }\r\n    return SortLinesAscendingAction;\r\n}(AbstractSortLinesAction));\r\nexport { SortLinesAscendingAction };\r\nvar SortLinesDescendingAction = /** @class */ (function (_super) {\r\n    __extends(SortLinesDescendingAction, _super);\r\n    function SortLinesDescendingAction() {\r\n        return _super.call(this, true, {\r\n            id: 'editor.action.sortLinesDescending',\r\n            label: nls.localize('lines.sortDescending', \"Sort Lines Descending\"),\r\n            alias: 'Sort Lines Descending',\r\n            precondition: EditorContextKeys.writable\r\n        }) || this;\r\n    }\r\n    return SortLinesDescendingAction;\r\n}(AbstractSortLinesAction));\r\nexport { SortLinesDescendingAction };\r\nvar TrimTrailingWhitespaceAction = /** @class */ (function (_super) {\r\n    __extends(TrimTrailingWhitespaceAction, _super);\r\n    function TrimTrailingWhitespaceAction() {\r\n        return _super.call(this, {\r\n            id: TrimTrailingWhitespaceAction.ID,\r\n            label: nls.localize('lines.trimTrailingWhitespace', \"Trim Trailing Whitespace\"),\r\n            alias: 'Trim Trailing Whitespace',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 54 /* KEY_X */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        }) || this;\r\n    }\r\n    TrimTrailingWhitespaceAction.prototype.run = function (_accessor, editor, args) {\r\n        var cursors = [];\r\n        if (args.reason === 'auto-save') {\r\n            // See https://github.com/editorconfig/editorconfig-vscode/issues/47\r\n            // It is very convenient for the editor config extension to invoke this action.\r\n            // So, if we get a reason:'auto-save' passed in, let's preserve cursor positions.\r\n            cursors = (editor.getSelections() || []).map(function (s) { return new Position(s.positionLineNumber, s.positionColumn); });\r\n        }\r\n        var selection = editor.getSelection();\r\n        if (selection === null) {\r\n            return;\r\n        }\r\n        var command = new TrimTrailingWhitespaceCommand(selection, cursors);\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, [command]);\r\n        editor.pushUndoStop();\r\n    };\r\n    TrimTrailingWhitespaceAction.ID = 'editor.action.trimTrailingWhitespace';\r\n    return TrimTrailingWhitespaceAction;\r\n}(EditorAction));\r\nexport { TrimTrailingWhitespaceAction };\r\nvar DeleteLinesAction = /** @class */ (function (_super) {\r\n    __extends(DeleteLinesAction, _super);\r\n    function DeleteLinesAction() {\r\n        return _super.call(this, {\r\n            id: 'editor.action.deleteLines',\r\n            label: nls.localize('lines.delete', \"Delete Line\"),\r\n            alias: 'Delete Line',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 41 /* KEY_K */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        }) || this;\r\n    }\r\n    DeleteLinesAction.prototype.run = function (_accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        var ops = this._getLinesToRemove(editor);\r\n        var model = editor.getModel();\r\n        if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\r\n            // Model is empty\r\n            return;\r\n        }\r\n        var linesDeleted = 0;\r\n        var edits = [];\r\n        var cursorState = [];\r\n        for (var i = 0, len = ops.length; i < len; i++) {\r\n            var op = ops[i];\r\n            var startLineNumber = op.startLineNumber;\r\n            var endLineNumber = op.endLineNumber;\r\n            var startColumn = 1;\r\n            var endColumn = model.getLineMaxColumn(endLineNumber);\r\n            if (endLineNumber < model.getLineCount()) {\r\n                endLineNumber += 1;\r\n                endColumn = 1;\r\n            }\r\n            else if (startLineNumber > 1) {\r\n                startLineNumber -= 1;\r\n                startColumn = model.getLineMaxColumn(startLineNumber);\r\n            }\r\n            edits.push(EditOperation.replace(new Selection(startLineNumber, startColumn, endLineNumber, endColumn), ''));\r\n            cursorState.push(new Selection(startLineNumber - linesDeleted, op.positionColumn, startLineNumber - linesDeleted, op.positionColumn));\r\n            linesDeleted += (op.endLineNumber - op.startLineNumber + 1);\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeEdits(this.id, edits, cursorState);\r\n        editor.pushUndoStop();\r\n    };\r\n    DeleteLinesAction.prototype._getLinesToRemove = function (editor) {\r\n        // Construct delete operations\r\n        var operations = editor.getSelections().map(function (s) {\r\n            var endLineNumber = s.endLineNumber;\r\n            if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\r\n                endLineNumber -= 1;\r\n            }\r\n            return {\r\n                startLineNumber: s.startLineNumber,\r\n                selectionStartColumn: s.selectionStartColumn,\r\n                endLineNumber: endLineNumber,\r\n                positionColumn: s.positionColumn\r\n            };\r\n        });\r\n        // Sort delete operations\r\n        operations.sort(function (a, b) {\r\n            if (a.startLineNumber === b.startLineNumber) {\r\n                return a.endLineNumber - b.endLineNumber;\r\n            }\r\n            return a.startLineNumber - b.startLineNumber;\r\n        });\r\n        // Merge delete operations which are adjacent or overlapping\r\n        var mergedOperations = [];\r\n        var previousOperation = operations[0];\r\n        for (var i = 1; i < operations.length; i++) {\r\n            if (previousOperation.endLineNumber + 1 >= operations[i].startLineNumber) {\r\n                // Merge current operations into the previous one\r\n                previousOperation.endLineNumber = operations[i].endLineNumber;\r\n            }\r\n            else {\r\n                // Push previous operation\r\n                mergedOperations.push(previousOperation);\r\n                previousOperation = operations[i];\r\n            }\r\n        }\r\n        // Push the last operation\r\n        mergedOperations.push(previousOperation);\r\n        return mergedOperations;\r\n    };\r\n    return DeleteLinesAction;\r\n}(EditorAction));\r\nexport { DeleteLinesAction };\r\nvar IndentLinesAction = /** @class */ (function (_super) {\r\n    __extends(IndentLinesAction, _super);\r\n    function IndentLinesAction() {\r\n        return _super.call(this, {\r\n            id: 'editor.action.indentLines',\r\n            label: nls.localize('lines.indent', \"Indent Line\"),\r\n            alias: 'Indent Line',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 89 /* US_CLOSE_SQUARE_BRACKET */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        }) || this;\r\n    }\r\n    IndentLinesAction.prototype.run = function (_accessor, editor) {\r\n        var cursors = editor._getCursors();\r\n        if (!cursors) {\r\n            return;\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, TypeOperations.indent(cursors.context.config, editor.getModel(), editor.getSelections()));\r\n        editor.pushUndoStop();\r\n    };\r\n    return IndentLinesAction;\r\n}(EditorAction));\r\nexport { IndentLinesAction };\r\nvar OutdentLinesAction = /** @class */ (function (_super) {\r\n    __extends(OutdentLinesAction, _super);\r\n    function OutdentLinesAction() {\r\n        return _super.call(this, {\r\n            id: 'editor.action.outdentLines',\r\n            label: nls.localize('lines.outdent', \"Outdent Line\"),\r\n            alias: 'Outdent Line',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 87 /* US_OPEN_SQUARE_BRACKET */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        }) || this;\r\n    }\r\n    OutdentLinesAction.prototype.run = function (_accessor, editor) {\r\n        CoreEditingCommands.Outdent.runEditorCommand(_accessor, editor, null);\r\n    };\r\n    return OutdentLinesAction;\r\n}(EditorAction));\r\nvar InsertLineBeforeAction = /** @class */ (function (_super) {\r\n    __extends(InsertLineBeforeAction, _super);\r\n    function InsertLineBeforeAction() {\r\n        return _super.call(this, {\r\n            id: 'editor.action.insertLineBefore',\r\n            label: nls.localize('lines.insertBefore', \"Insert Line Above\"),\r\n            alias: 'Insert Line Above',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 3 /* Enter */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        }) || this;\r\n    }\r\n    InsertLineBeforeAction.prototype.run = function (_accessor, editor) {\r\n        var cursors = editor._getCursors();\r\n        if (!cursors) {\r\n            return;\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, TypeOperations.lineInsertBefore(cursors.context.config, editor.getModel(), editor.getSelections()));\r\n    };\r\n    return InsertLineBeforeAction;\r\n}(EditorAction));\r\nexport { InsertLineBeforeAction };\r\nvar InsertLineAfterAction = /** @class */ (function (_super) {\r\n    __extends(InsertLineAfterAction, _super);\r\n    function InsertLineAfterAction() {\r\n        return _super.call(this, {\r\n            id: 'editor.action.insertLineAfter',\r\n            label: nls.localize('lines.insertAfter', \"Insert Line Below\"),\r\n            alias: 'Insert Line Below',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 3 /* Enter */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        }) || this;\r\n    }\r\n    InsertLineAfterAction.prototype.run = function (_accessor, editor) {\r\n        var cursors = editor._getCursors();\r\n        if (!cursors) {\r\n            return;\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, TypeOperations.lineInsertAfter(cursors.context.config, editor.getModel(), editor.getSelections()));\r\n    };\r\n    return InsertLineAfterAction;\r\n}(EditorAction));\r\nexport { InsertLineAfterAction };\r\nvar AbstractDeleteAllToBoundaryAction = /** @class */ (function (_super) {\r\n    __extends(AbstractDeleteAllToBoundaryAction, _super);\r\n    function AbstractDeleteAllToBoundaryAction() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    AbstractDeleteAllToBoundaryAction.prototype.run = function (_accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        var primaryCursor = editor.getSelection();\r\n        var rangesToDelete = this._getRangesToDelete(editor);\r\n        // merge overlapping selections\r\n        var effectiveRanges = [];\r\n        for (var i = 0, count = rangesToDelete.length - 1; i < count; i++) {\r\n            var range = rangesToDelete[i];\r\n            var nextRange = rangesToDelete[i + 1];\r\n            if (Range.intersectRanges(range, nextRange) === null) {\r\n                effectiveRanges.push(range);\r\n            }\r\n            else {\r\n                rangesToDelete[i + 1] = Range.plusRange(range, nextRange);\r\n            }\r\n        }\r\n        effectiveRanges.push(rangesToDelete[rangesToDelete.length - 1]);\r\n        var endCursorState = this._getEndCursorState(primaryCursor, effectiveRanges);\r\n        var edits = effectiveRanges.map(function (range) {\r\n            return EditOperation.replace(range, '');\r\n        });\r\n        editor.pushUndoStop();\r\n        editor.executeEdits(this.id, edits, endCursorState);\r\n        editor.pushUndoStop();\r\n    };\r\n    return AbstractDeleteAllToBoundaryAction;\r\n}(EditorAction));\r\nexport { AbstractDeleteAllToBoundaryAction };\r\nvar DeleteAllLeftAction = /** @class */ (function (_super) {\r\n    __extends(DeleteAllLeftAction, _super);\r\n    function DeleteAllLeftAction() {\r\n        return _super.call(this, {\r\n            id: 'deleteAllLeft',\r\n            label: nls.localize('lines.deleteAllLeft', \"Delete All Left\"),\r\n            alias: 'Delete All Left',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 0,\r\n                mac: { primary: 2048 /* CtrlCmd */ | 1 /* Backspace */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        }) || this;\r\n    }\r\n    DeleteAllLeftAction.prototype._getEndCursorState = function (primaryCursor, rangesToDelete) {\r\n        var endPrimaryCursor = null;\r\n        var endCursorState = [];\r\n        var deletedLines = 0;\r\n        rangesToDelete.forEach(function (range) {\r\n            var endCursor;\r\n            if (range.endColumn === 1 && deletedLines > 0) {\r\n                var newStartLine = range.startLineNumber - deletedLines;\r\n                endCursor = new Selection(newStartLine, range.startColumn, newStartLine, range.startColumn);\r\n            }\r\n            else {\r\n                endCursor = new Selection(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\r\n            }\r\n            deletedLines += range.endLineNumber - range.startLineNumber;\r\n            if (range.intersectRanges(primaryCursor)) {\r\n                endPrimaryCursor = endCursor;\r\n            }\r\n            else {\r\n                endCursorState.push(endCursor);\r\n            }\r\n        });\r\n        if (endPrimaryCursor) {\r\n            endCursorState.unshift(endPrimaryCursor);\r\n        }\r\n        return endCursorState;\r\n    };\r\n    DeleteAllLeftAction.prototype._getRangesToDelete = function (editor) {\r\n        var selections = editor.getSelections();\r\n        if (selections === null) {\r\n            return [];\r\n        }\r\n        var rangesToDelete = selections;\r\n        var model = editor.getModel();\r\n        if (model === null) {\r\n            return [];\r\n        }\r\n        rangesToDelete.sort(Range.compareRangesUsingStarts);\r\n        rangesToDelete = rangesToDelete.map(function (selection) {\r\n            if (selection.isEmpty()) {\r\n                if (selection.startColumn === 1) {\r\n                    var deleteFromLine = Math.max(1, selection.startLineNumber - 1);\r\n                    var deleteFromColumn = selection.startLineNumber === 1 ? 1 : model.getLineContent(deleteFromLine).length + 1;\r\n                    return new Range(deleteFromLine, deleteFromColumn, selection.startLineNumber, 1);\r\n                }\r\n                else {\r\n                    return new Range(selection.startLineNumber, 1, selection.startLineNumber, selection.startColumn);\r\n                }\r\n            }\r\n            else {\r\n                return new Range(selection.startLineNumber, 1, selection.endLineNumber, selection.endColumn);\r\n            }\r\n        });\r\n        return rangesToDelete;\r\n    };\r\n    return DeleteAllLeftAction;\r\n}(AbstractDeleteAllToBoundaryAction));\r\nexport { DeleteAllLeftAction };\r\nvar DeleteAllRightAction = /** @class */ (function (_super) {\r\n    __extends(DeleteAllRightAction, _super);\r\n    function DeleteAllRightAction() {\r\n        return _super.call(this, {\r\n            id: 'deleteAllRight',\r\n            label: nls.localize('lines.deleteAllRight', \"Delete All Right\"),\r\n            alias: 'Delete All Right',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 0,\r\n                mac: { primary: 256 /* WinCtrl */ | 41 /* KEY_K */, secondary: [2048 /* CtrlCmd */ | 20 /* Delete */] },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        }) || this;\r\n    }\r\n    DeleteAllRightAction.prototype._getEndCursorState = function (primaryCursor, rangesToDelete) {\r\n        var endPrimaryCursor = null;\r\n        var endCursorState = [];\r\n        for (var i = 0, len = rangesToDelete.length, offset = 0; i < len; i++) {\r\n            var range = rangesToDelete[i];\r\n            var endCursor = new Selection(range.startLineNumber - offset, range.startColumn, range.startLineNumber - offset, range.startColumn);\r\n            if (range.intersectRanges(primaryCursor)) {\r\n                endPrimaryCursor = endCursor;\r\n            }\r\n            else {\r\n                endCursorState.push(endCursor);\r\n            }\r\n        }\r\n        if (endPrimaryCursor) {\r\n            endCursorState.unshift(endPrimaryCursor);\r\n        }\r\n        return endCursorState;\r\n    };\r\n    DeleteAllRightAction.prototype._getRangesToDelete = function (editor) {\r\n        var model = editor.getModel();\r\n        if (model === null) {\r\n            return [];\r\n        }\r\n        var selections = editor.getSelections();\r\n        if (selections === null) {\r\n            return [];\r\n        }\r\n        var rangesToDelete = selections.map(function (sel) {\r\n            if (sel.isEmpty()) {\r\n                var maxColumn = model.getLineMaxColumn(sel.startLineNumber);\r\n                if (sel.startColumn === maxColumn) {\r\n                    return new Range(sel.startLineNumber, sel.startColumn, sel.startLineNumber + 1, 1);\r\n                }\r\n                else {\r\n                    return new Range(sel.startLineNumber, sel.startColumn, sel.startLineNumber, maxColumn);\r\n                }\r\n            }\r\n            return sel;\r\n        });\r\n        rangesToDelete.sort(Range.compareRangesUsingStarts);\r\n        return rangesToDelete;\r\n    };\r\n    return DeleteAllRightAction;\r\n}(AbstractDeleteAllToBoundaryAction));\r\nexport { DeleteAllRightAction };\r\nvar JoinLinesAction = /** @class */ (function (_super) {\r\n    __extends(JoinLinesAction, _super);\r\n    function JoinLinesAction() {\r\n        return _super.call(this, {\r\n            id: 'editor.action.joinLines',\r\n            label: nls.localize('lines.joinLines', \"Join Lines\"),\r\n            alias: 'Join Lines',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 0,\r\n                mac: { primary: 256 /* WinCtrl */ | 40 /* KEY_J */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        }) || this;\r\n    }\r\n    JoinLinesAction.prototype.run = function (_accessor, editor) {\r\n        var selections = editor.getSelections();\r\n        if (selections === null) {\r\n            return;\r\n        }\r\n        var primaryCursor = editor.getSelection();\r\n        if (primaryCursor === null) {\r\n            return;\r\n        }\r\n        selections.sort(Range.compareRangesUsingStarts);\r\n        var reducedSelections = [];\r\n        var lastSelection = selections.reduce(function (previousValue, currentValue) {\r\n            if (previousValue.isEmpty()) {\r\n                if (previousValue.endLineNumber === currentValue.startLineNumber) {\r\n                    if (primaryCursor.equalsSelection(previousValue)) {\r\n                        primaryCursor = currentValue;\r\n                    }\r\n                    return currentValue;\r\n                }\r\n                if (currentValue.startLineNumber > previousValue.endLineNumber + 1) {\r\n                    reducedSelections.push(previousValue);\r\n                    return currentValue;\r\n                }\r\n                else {\r\n                    return new Selection(previousValue.startLineNumber, previousValue.startColumn, currentValue.endLineNumber, currentValue.endColumn);\r\n                }\r\n            }\r\n            else {\r\n                if (currentValue.startLineNumber > previousValue.endLineNumber) {\r\n                    reducedSelections.push(previousValue);\r\n                    return currentValue;\r\n                }\r\n                else {\r\n                    return new Selection(previousValue.startLineNumber, previousValue.startColumn, currentValue.endLineNumber, currentValue.endColumn);\r\n                }\r\n            }\r\n        });\r\n        reducedSelections.push(lastSelection);\r\n        var model = editor.getModel();\r\n        if (model === null) {\r\n            return;\r\n        }\r\n        var edits = [];\r\n        var endCursorState = [];\r\n        var endPrimaryCursor = primaryCursor;\r\n        var lineOffset = 0;\r\n        for (var i = 0, len = reducedSelections.length; i < len; i++) {\r\n            var selection = reducedSelections[i];\r\n            var startLineNumber = selection.startLineNumber;\r\n            var startColumn = 1;\r\n            var columnDeltaOffset = 0;\r\n            var endLineNumber = void 0, endColumn = void 0;\r\n            var selectionEndPositionOffset = model.getLineContent(selection.endLineNumber).length - selection.endColumn;\r\n            if (selection.isEmpty() || selection.startLineNumber === selection.endLineNumber) {\r\n                var position = selection.getStartPosition();\r\n                if (position.lineNumber < model.getLineCount()) {\r\n                    endLineNumber = startLineNumber + 1;\r\n                    endColumn = model.getLineMaxColumn(endLineNumber);\r\n                }\r\n                else {\r\n                    endLineNumber = position.lineNumber;\r\n                    endColumn = model.getLineMaxColumn(position.lineNumber);\r\n                }\r\n            }\r\n            else {\r\n                endLineNumber = selection.endLineNumber;\r\n                endColumn = model.getLineMaxColumn(endLineNumber);\r\n            }\r\n            var trimmedLinesContent = model.getLineContent(startLineNumber);\r\n            for (var i_1 = startLineNumber + 1; i_1 <= endLineNumber; i_1++) {\r\n                var lineText = model.getLineContent(i_1);\r\n                var firstNonWhitespaceIdx = model.getLineFirstNonWhitespaceColumn(i_1);\r\n                if (firstNonWhitespaceIdx >= 1) {\r\n                    var insertSpace = true;\r\n                    if (trimmedLinesContent === '') {\r\n                        insertSpace = false;\r\n                    }\r\n                    if (insertSpace && (trimmedLinesContent.charAt(trimmedLinesContent.length - 1) === ' ' ||\r\n                        trimmedLinesContent.charAt(trimmedLinesContent.length - 1) === '\\t')) {\r\n                        insertSpace = false;\r\n                        trimmedLinesContent = trimmedLinesContent.replace(/[\\s\\uFEFF\\xA0]+$/g, ' ');\r\n                    }\r\n                    var lineTextWithoutIndent = lineText.substr(firstNonWhitespaceIdx - 1);\r\n                    trimmedLinesContent += (insertSpace ? ' ' : '') + lineTextWithoutIndent;\r\n                    if (insertSpace) {\r\n                        columnDeltaOffset = lineTextWithoutIndent.length + 1;\r\n                    }\r\n                    else {\r\n                        columnDeltaOffset = lineTextWithoutIndent.length;\r\n                    }\r\n                }\r\n                else {\r\n                    columnDeltaOffset = 0;\r\n                }\r\n            }\r\n            var deleteSelection = new Range(startLineNumber, startColumn, endLineNumber, endColumn);\r\n            if (!deleteSelection.isEmpty()) {\r\n                var resultSelection = void 0;\r\n                if (selection.isEmpty()) {\r\n                    edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\r\n                    resultSelection = new Selection(deleteSelection.startLineNumber - lineOffset, trimmedLinesContent.length - columnDeltaOffset + 1, startLineNumber - lineOffset, trimmedLinesContent.length - columnDeltaOffset + 1);\r\n                }\r\n                else {\r\n                    if (selection.startLineNumber === selection.endLineNumber) {\r\n                        edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\r\n                        resultSelection = new Selection(selection.startLineNumber - lineOffset, selection.startColumn, selection.endLineNumber - lineOffset, selection.endColumn);\r\n                    }\r\n                    else {\r\n                        edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\r\n                        resultSelection = new Selection(selection.startLineNumber - lineOffset, selection.startColumn, selection.startLineNumber - lineOffset, trimmedLinesContent.length - selectionEndPositionOffset);\r\n                    }\r\n                }\r\n                if (Range.intersectRanges(deleteSelection, primaryCursor) !== null) {\r\n                    endPrimaryCursor = resultSelection;\r\n                }\r\n                else {\r\n                    endCursorState.push(resultSelection);\r\n                }\r\n            }\r\n            lineOffset += deleteSelection.endLineNumber - deleteSelection.startLineNumber;\r\n        }\r\n        endCursorState.unshift(endPrimaryCursor);\r\n        editor.pushUndoStop();\r\n        editor.executeEdits(this.id, edits, endCursorState);\r\n        editor.pushUndoStop();\r\n    };\r\n    return JoinLinesAction;\r\n}(EditorAction));\r\nexport { JoinLinesAction };\r\nvar TransposeAction = /** @class */ (function (_super) {\r\n    __extends(TransposeAction, _super);\r\n    function TransposeAction() {\r\n        return _super.call(this, {\r\n            id: 'editor.action.transpose',\r\n            label: nls.localize('editor.transpose', \"Transpose characters around the cursor\"),\r\n            alias: 'Transpose characters around the cursor',\r\n            precondition: EditorContextKeys.writable\r\n        }) || this;\r\n    }\r\n    TransposeAction.prototype.run = function (_accessor, editor) {\r\n        var selections = editor.getSelections();\r\n        if (selections === null) {\r\n            return;\r\n        }\r\n        var model = editor.getModel();\r\n        if (model === null) {\r\n            return;\r\n        }\r\n        var commands = [];\r\n        for (var i = 0, len = selections.length; i < len; i++) {\r\n            var selection = selections[i];\r\n            if (!selection.isEmpty()) {\r\n                continue;\r\n            }\r\n            var cursor = selection.getStartPosition();\r\n            var maxColumn = model.getLineMaxColumn(cursor.lineNumber);\r\n            if (cursor.column >= maxColumn) {\r\n                if (cursor.lineNumber === model.getLineCount()) {\r\n                    continue;\r\n                }\r\n                // The cursor is at the end of current line and current line is not empty\r\n                // then we transpose the character before the cursor and the line break if there is any following line.\r\n                var deleteSelection = new Range(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber + 1, 1);\r\n                var chars = model.getValueInRange(deleteSelection).split('').reverse().join('');\r\n                commands.push(new ReplaceCommand(new Selection(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber + 1, 1), chars));\r\n            }\r\n            else {\r\n                var deleteSelection = new Range(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber, cursor.column + 1);\r\n                var chars = model.getValueInRange(deleteSelection).split('').reverse().join('');\r\n                commands.push(new ReplaceCommandThatPreservesSelection(deleteSelection, chars, new Selection(cursor.lineNumber, cursor.column + 1, cursor.lineNumber, cursor.column + 1)));\r\n            }\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, commands);\r\n        editor.pushUndoStop();\r\n    };\r\n    return TransposeAction;\r\n}(EditorAction));\r\nexport { TransposeAction };\r\nvar AbstractCaseAction = /** @class */ (function (_super) {\r\n    __extends(AbstractCaseAction, _super);\r\n    function AbstractCaseAction() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    AbstractCaseAction.prototype.run = function (_accessor, editor) {\r\n        var selections = editor.getSelections();\r\n        if (selections === null) {\r\n            return;\r\n        }\r\n        var model = editor.getModel();\r\n        if (model === null) {\r\n            return;\r\n        }\r\n        var wordSeparators = editor.getOption(96 /* wordSeparators */);\r\n        var commands = [];\r\n        for (var i = 0, len = selections.length; i < len; i++) {\r\n            var selection = selections[i];\r\n            if (selection.isEmpty()) {\r\n                var cursor = selection.getStartPosition();\r\n                var word = model.getWordAtPosition(cursor);\r\n                if (!word) {\r\n                    continue;\r\n                }\r\n                var wordRange = new Range(cursor.lineNumber, word.startColumn, cursor.lineNumber, word.endColumn);\r\n                var text = model.getValueInRange(wordRange);\r\n                commands.push(new ReplaceCommandThatPreservesSelection(wordRange, this._modifyText(text, wordSeparators), new Selection(cursor.lineNumber, cursor.column, cursor.lineNumber, cursor.column)));\r\n            }\r\n            else {\r\n                var text = model.getValueInRange(selection);\r\n                commands.push(new ReplaceCommandThatPreservesSelection(selection, this._modifyText(text, wordSeparators), selection));\r\n            }\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, commands);\r\n        editor.pushUndoStop();\r\n    };\r\n    return AbstractCaseAction;\r\n}(EditorAction));\r\nexport { AbstractCaseAction };\r\nvar UpperCaseAction = /** @class */ (function (_super) {\r\n    __extends(UpperCaseAction, _super);\r\n    function UpperCaseAction() {\r\n        return _super.call(this, {\r\n            id: 'editor.action.transformToUppercase',\r\n            label: nls.localize('editor.transformToUppercase', \"Transform to Uppercase\"),\r\n            alias: 'Transform to Uppercase',\r\n            precondition: EditorContextKeys.writable\r\n        }) || this;\r\n    }\r\n    UpperCaseAction.prototype._modifyText = function (text, wordSeparators) {\r\n        return text.toLocaleUpperCase();\r\n    };\r\n    return UpperCaseAction;\r\n}(AbstractCaseAction));\r\nexport { UpperCaseAction };\r\nvar LowerCaseAction = /** @class */ (function (_super) {\r\n    __extends(LowerCaseAction, _super);\r\n    function LowerCaseAction() {\r\n        return _super.call(this, {\r\n            id: 'editor.action.transformToLowercase',\r\n            label: nls.localize('editor.transformToLowercase', \"Transform to Lowercase\"),\r\n            alias: 'Transform to Lowercase',\r\n            precondition: EditorContextKeys.writable\r\n        }) || this;\r\n    }\r\n    LowerCaseAction.prototype._modifyText = function (text, wordSeparators) {\r\n        return text.toLocaleLowerCase();\r\n    };\r\n    return LowerCaseAction;\r\n}(AbstractCaseAction));\r\nexport { LowerCaseAction };\r\nvar TitleCaseAction = /** @class */ (function (_super) {\r\n    __extends(TitleCaseAction, _super);\r\n    function TitleCaseAction() {\r\n        return _super.call(this, {\r\n            id: 'editor.action.transformToTitlecase',\r\n            label: nls.localize('editor.transformToTitlecase', \"Transform to Title Case\"),\r\n            alias: 'Transform to Title Case',\r\n            precondition: EditorContextKeys.writable\r\n        }) || this;\r\n    }\r\n    TitleCaseAction.prototype._modifyText = function (text, wordSeparators) {\r\n        var separators = '\\r\\n\\t ' + wordSeparators;\r\n        var excludedChars = separators.split('');\r\n        var title = '';\r\n        var startUpperCase = true;\r\n        for (var i = 0; i < text.length; i++) {\r\n            var currentChar = text[i];\r\n            if (excludedChars.indexOf(currentChar) >= 0) {\r\n                startUpperCase = true;\r\n                title += currentChar;\r\n            }\r\n            else if (startUpperCase) {\r\n                startUpperCase = false;\r\n                title += currentChar.toLocaleUpperCase();\r\n            }\r\n            else {\r\n                title += currentChar.toLocaleLowerCase();\r\n            }\r\n        }\r\n        return title;\r\n    };\r\n    return TitleCaseAction;\r\n}(AbstractCaseAction));\r\nexport { TitleCaseAction };\r\nregisterEditorAction(CopyLinesUpAction);\r\nregisterEditorAction(CopyLinesDownAction);\r\nregisterEditorAction(DuplicateSelectionAction);\r\nregisterEditorAction(MoveLinesUpAction);\r\nregisterEditorAction(MoveLinesDownAction);\r\nregisterEditorAction(SortLinesAscendingAction);\r\nregisterEditorAction(SortLinesDescendingAction);\r\nregisterEditorAction(TrimTrailingWhitespaceAction);\r\nregisterEditorAction(DeleteLinesAction);\r\nregisterEditorAction(IndentLinesAction);\r\nregisterEditorAction(OutdentLinesAction);\r\nregisterEditorAction(InsertLineBeforeAction);\r\nregisterEditorAction(InsertLineAfterAction);\r\nregisterEditorAction(DeleteAllLeftAction);\r\nregisterEditorAction(DeleteAllRightAction);\r\nregisterEditorAction(JoinLinesAction);\r\nregisterEditorAction(TransposeAction);\r\nregisterEditorAction(UpperCaseAction);\r\nregisterEditorAction(LowerCaseAction);\r\nregisterEditorAction(TitleCaseAction);\r\n"]},"metadata":{},"sourceType":"module"}