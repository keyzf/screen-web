{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport * as mime from '../../../base/common/mime.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { LanguageIdentifier } from '../modes.js';\nimport { ModesRegistry } from '../modes/modesRegistry.js';\nimport { NULL_LANGUAGE_IDENTIFIER, NULL_MODE_ID } from '../modes/nullMode.js';\nimport { Extensions } from '../../../platform/configuration/common/configurationRegistry.js';\nimport { Registry } from '../../../platform/registry/common/platform.js';\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar LanguagesRegistry =\n/** @class */\nfunction (_super) {\n  __extends(LanguagesRegistry, _super);\n\n  function LanguagesRegistry(useModesRegistry, warnOnOverwrite) {\n    if (useModesRegistry === void 0) {\n      useModesRegistry = true;\n    }\n\n    if (warnOnOverwrite === void 0) {\n      warnOnOverwrite = false;\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this._onDidChange = _this._register(new Emitter());\n    _this.onDidChange = _this._onDidChange.event;\n    _this._warnOnOverwrite = warnOnOverwrite;\n    _this._nextLanguageId2 = 1;\n    _this._languageIdToLanguage = [];\n    _this._languageToLanguageId = Object.create(null);\n    _this._languages = {};\n    _this._mimeTypesMap = {};\n    _this._nameMap = {};\n    _this._lowercaseNameMap = {};\n\n    if (useModesRegistry) {\n      _this._initializeFromRegistry();\n\n      _this._register(ModesRegistry.onDidChangeLanguages(function (m) {\n        return _this._initializeFromRegistry();\n      }));\n    }\n\n    return _this;\n  }\n\n  LanguagesRegistry.prototype._initializeFromRegistry = function () {\n    this._languages = {};\n    this._mimeTypesMap = {};\n    this._nameMap = {};\n    this._lowercaseNameMap = {};\n    var desc = ModesRegistry.getLanguages();\n\n    this._registerLanguages(desc);\n  };\n\n  LanguagesRegistry.prototype._registerLanguages = function (desc) {\n    var _this = this;\n\n    for (var _i = 0, desc_1 = desc; _i < desc_1.length; _i++) {\n      var d = desc_1[_i];\n\n      this._registerLanguage(d);\n    } // Rebuild fast path maps\n\n\n    this._mimeTypesMap = {};\n    this._nameMap = {};\n    this._lowercaseNameMap = {};\n    Object.keys(this._languages).forEach(function (langId) {\n      var language = _this._languages[langId];\n\n      if (language.name) {\n        _this._nameMap[language.name] = language.identifier;\n      }\n\n      language.aliases.forEach(function (alias) {\n        _this._lowercaseNameMap[alias.toLowerCase()] = language.identifier;\n      });\n      language.mimetypes.forEach(function (mimetype) {\n        _this._mimeTypesMap[mimetype] = language.identifier;\n      });\n    });\n    Registry.as(Extensions.Configuration).registerOverrideIdentifiers(ModesRegistry.getLanguages().map(function (language) {\n      return language.id;\n    }));\n\n    this._onDidChange.fire();\n  };\n\n  LanguagesRegistry.prototype._getLanguageId = function (language) {\n    if (this._languageToLanguageId[language]) {\n      return this._languageToLanguageId[language];\n    }\n\n    var languageId = this._nextLanguageId2++;\n    this._languageIdToLanguage[languageId] = language;\n    this._languageToLanguageId[language] = languageId;\n    return languageId;\n  };\n\n  LanguagesRegistry.prototype._registerLanguage = function (lang) {\n    var langId = lang.id;\n    var resolvedLanguage;\n\n    if (hasOwnProperty.call(this._languages, langId)) {\n      resolvedLanguage = this._languages[langId];\n    } else {\n      var languageId = this._getLanguageId(langId);\n\n      resolvedLanguage = {\n        identifier: new LanguageIdentifier(langId, languageId),\n        name: null,\n        mimetypes: [],\n        aliases: [],\n        extensions: [],\n        filenames: [],\n        configurationFiles: []\n      };\n      this._languages[langId] = resolvedLanguage;\n    }\n\n    this._mergeLanguage(resolvedLanguage, lang);\n  };\n\n  LanguagesRegistry.prototype._mergeLanguage = function (resolvedLanguage, lang) {\n    var _a;\n\n    var langId = lang.id;\n    var primaryMime = null;\n\n    if (Array.isArray(lang.mimetypes) && lang.mimetypes.length > 0) {\n      (_a = resolvedLanguage.mimetypes).push.apply(_a, lang.mimetypes);\n\n      primaryMime = lang.mimetypes[0];\n    }\n\n    if (!primaryMime) {\n      primaryMime = \"text/x-\" + langId;\n      resolvedLanguage.mimetypes.push(primaryMime);\n    }\n\n    if (Array.isArray(lang.extensions)) {\n      for (var _i = 0, _b = lang.extensions; _i < _b.length; _i++) {\n        var extension = _b[_i];\n        mime.registerTextMime({\n          id: langId,\n          mime: primaryMime,\n          extension: extension\n        }, this._warnOnOverwrite);\n        resolvedLanguage.extensions.push(extension);\n      }\n    }\n\n    if (Array.isArray(lang.filenames)) {\n      for (var _c = 0, _d = lang.filenames; _c < _d.length; _c++) {\n        var filename = _d[_c];\n        mime.registerTextMime({\n          id: langId,\n          mime: primaryMime,\n          filename: filename\n        }, this._warnOnOverwrite);\n        resolvedLanguage.filenames.push(filename);\n      }\n    }\n\n    if (Array.isArray(lang.filenamePatterns)) {\n      for (var _e = 0, _f = lang.filenamePatterns; _e < _f.length; _e++) {\n        var filenamePattern = _f[_e];\n        mime.registerTextMime({\n          id: langId,\n          mime: primaryMime,\n          filepattern: filenamePattern\n        }, this._warnOnOverwrite);\n      }\n    }\n\n    if (typeof lang.firstLine === 'string' && lang.firstLine.length > 0) {\n      var firstLineRegexStr = lang.firstLine;\n\n      if (firstLineRegexStr.charAt(0) !== '^') {\n        firstLineRegexStr = '^' + firstLineRegexStr;\n      }\n\n      try {\n        var firstLineRegex = new RegExp(firstLineRegexStr);\n\n        if (!strings.regExpLeadsToEndlessLoop(firstLineRegex)) {\n          mime.registerTextMime({\n            id: langId,\n            mime: primaryMime,\n            firstline: firstLineRegex\n          }, this._warnOnOverwrite);\n        }\n      } catch (err) {\n        // Most likely, the regex was bad\n        onUnexpectedError(err);\n      }\n    }\n\n    resolvedLanguage.aliases.push(langId);\n    var langAliases = null;\n\n    if (typeof lang.aliases !== 'undefined' && Array.isArray(lang.aliases)) {\n      if (lang.aliases.length === 0) {\n        // signal that this language should not get a name\n        langAliases = [null];\n      } else {\n        langAliases = lang.aliases;\n      }\n    }\n\n    if (langAliases !== null) {\n      for (var _g = 0, langAliases_1 = langAliases; _g < langAliases_1.length; _g++) {\n        var langAlias = langAliases_1[_g];\n\n        if (!langAlias || langAlias.length === 0) {\n          continue;\n        }\n\n        resolvedLanguage.aliases.push(langAlias);\n      }\n    }\n\n    var containsAliases = langAliases !== null && langAliases.length > 0;\n\n    if (containsAliases && langAliases[0] === null) {// signal that this language should not get a name\n    } else {\n      var bestName = (containsAliases ? langAliases[0] : null) || langId;\n\n      if (containsAliases || !resolvedLanguage.name) {\n        resolvedLanguage.name = bestName;\n      }\n    }\n\n    if (lang.configuration) {\n      resolvedLanguage.configurationFiles.push(lang.configuration);\n    }\n  };\n\n  LanguagesRegistry.prototype.isRegisteredMode = function (mimetypeOrModeId) {\n    // Is this a known mime type ?\n    if (hasOwnProperty.call(this._mimeTypesMap, mimetypeOrModeId)) {\n      return true;\n    } // Is this a known mode id ?\n\n\n    return hasOwnProperty.call(this._languages, mimetypeOrModeId);\n  };\n\n  LanguagesRegistry.prototype.getModeIdForLanguageNameLowercase = function (languageNameLower) {\n    if (!hasOwnProperty.call(this._lowercaseNameMap, languageNameLower)) {\n      return null;\n    }\n\n    return this._lowercaseNameMap[languageNameLower].language;\n  };\n\n  LanguagesRegistry.prototype.extractModeIds = function (commaSeparatedMimetypesOrCommaSeparatedIds) {\n    var _this = this;\n\n    if (!commaSeparatedMimetypesOrCommaSeparatedIds) {\n      return [];\n    }\n\n    return commaSeparatedMimetypesOrCommaSeparatedIds.split(',').map(function (mimeTypeOrId) {\n      return mimeTypeOrId.trim();\n    }).map(function (mimeTypeOrId) {\n      if (hasOwnProperty.call(_this._mimeTypesMap, mimeTypeOrId)) {\n        return _this._mimeTypesMap[mimeTypeOrId].language;\n      }\n\n      return mimeTypeOrId;\n    }).filter(function (modeId) {\n      return hasOwnProperty.call(_this._languages, modeId);\n    });\n  };\n\n  LanguagesRegistry.prototype.getLanguageIdentifier = function (_modeId) {\n    if (_modeId === NULL_MODE_ID || _modeId === 0\n    /* Null */\n    ) {\n        return NULL_LANGUAGE_IDENTIFIER;\n      }\n\n    var modeId;\n\n    if (typeof _modeId === 'string') {\n      modeId = _modeId;\n    } else {\n      modeId = this._languageIdToLanguage[_modeId];\n\n      if (!modeId) {\n        return null;\n      }\n    }\n\n    if (!hasOwnProperty.call(this._languages, modeId)) {\n      return null;\n    }\n\n    return this._languages[modeId].identifier;\n  };\n\n  LanguagesRegistry.prototype.getModeIdsFromFilepathOrFirstLine = function (resource, firstLine) {\n    if (!resource && !firstLine) {\n      return [];\n    }\n\n    var mimeTypes = mime.guessMimeTypes(resource, firstLine);\n    return this.extractModeIds(mimeTypes.join(','));\n  };\n\n  return LanguagesRegistry;\n}(Disposable);\n\nexport { LanguagesRegistry };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/common/services/languagesRegistry.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","onUnexpectedError","Emitter","Disposable","mime","strings","LanguageIdentifier","ModesRegistry","NULL_LANGUAGE_IDENTIFIER","NULL_MODE_ID","Extensions","Registry","LanguagesRegistry","_super","useModesRegistry","warnOnOverwrite","_this","call","_onDidChange","_register","onDidChange","event","_warnOnOverwrite","_nextLanguageId2","_languageIdToLanguage","_languageToLanguageId","_languages","_mimeTypesMap","_nameMap","_lowercaseNameMap","_initializeFromRegistry","onDidChangeLanguages","m","desc","getLanguages","_registerLanguages","_i","desc_1","length","_registerLanguage","keys","forEach","langId","language","name","identifier","aliases","alias","toLowerCase","mimetypes","mimetype","as","Configuration","registerOverrideIdentifiers","map","id","fire","_getLanguageId","languageId","lang","resolvedLanguage","extensions","filenames","configurationFiles","_mergeLanguage","_a","primaryMime","isArray","push","apply","_b","extension","registerTextMime","_c","_d","filename","filenamePatterns","_e","_f","filenamePattern","filepattern","firstLine","firstLineRegexStr","charAt","firstLineRegex","RegExp","regExpLeadsToEndlessLoop","firstline","err","langAliases","_g","langAliases_1","langAlias","containsAliases","bestName","configuration","isRegisteredMode","mimetypeOrModeId","getModeIdForLanguageNameLowercase","languageNameLower","extractModeIds","commaSeparatedMimetypesOrCommaSeparatedIds","split","mimeTypeOrId","trim","filter","modeId","getLanguageIdentifier","_modeId","getModeIdsFromFilepathOrFirstLine","resource","mimeTypes","guessMimeTypes","join"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport * as mime from '../../../base/common/mime.js';\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { LanguageIdentifier } from '../modes.js';\r\nimport { ModesRegistry } from '../modes/modesRegistry.js';\r\nimport { NULL_LANGUAGE_IDENTIFIER, NULL_MODE_ID } from '../modes/nullMode.js';\r\nimport { Extensions } from '../../../platform/configuration/common/configurationRegistry.js';\r\nimport { Registry } from '../../../platform/registry/common/platform.js';\r\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\r\nvar LanguagesRegistry = /** @class */ (function (_super) {\r\n    __extends(LanguagesRegistry, _super);\r\n    function LanguagesRegistry(useModesRegistry, warnOnOverwrite) {\r\n        if (useModesRegistry === void 0) { useModesRegistry = true; }\r\n        if (warnOnOverwrite === void 0) { warnOnOverwrite = false; }\r\n        var _this = _super.call(this) || this;\r\n        _this._onDidChange = _this._register(new Emitter());\r\n        _this.onDidChange = _this._onDidChange.event;\r\n        _this._warnOnOverwrite = warnOnOverwrite;\r\n        _this._nextLanguageId2 = 1;\r\n        _this._languageIdToLanguage = [];\r\n        _this._languageToLanguageId = Object.create(null);\r\n        _this._languages = {};\r\n        _this._mimeTypesMap = {};\r\n        _this._nameMap = {};\r\n        _this._lowercaseNameMap = {};\r\n        if (useModesRegistry) {\r\n            _this._initializeFromRegistry();\r\n            _this._register(ModesRegistry.onDidChangeLanguages(function (m) { return _this._initializeFromRegistry(); }));\r\n        }\r\n        return _this;\r\n    }\r\n    LanguagesRegistry.prototype._initializeFromRegistry = function () {\r\n        this._languages = {};\r\n        this._mimeTypesMap = {};\r\n        this._nameMap = {};\r\n        this._lowercaseNameMap = {};\r\n        var desc = ModesRegistry.getLanguages();\r\n        this._registerLanguages(desc);\r\n    };\r\n    LanguagesRegistry.prototype._registerLanguages = function (desc) {\r\n        var _this = this;\r\n        for (var _i = 0, desc_1 = desc; _i < desc_1.length; _i++) {\r\n            var d = desc_1[_i];\r\n            this._registerLanguage(d);\r\n        }\r\n        // Rebuild fast path maps\r\n        this._mimeTypesMap = {};\r\n        this._nameMap = {};\r\n        this._lowercaseNameMap = {};\r\n        Object.keys(this._languages).forEach(function (langId) {\r\n            var language = _this._languages[langId];\r\n            if (language.name) {\r\n                _this._nameMap[language.name] = language.identifier;\r\n            }\r\n            language.aliases.forEach(function (alias) {\r\n                _this._lowercaseNameMap[alias.toLowerCase()] = language.identifier;\r\n            });\r\n            language.mimetypes.forEach(function (mimetype) {\r\n                _this._mimeTypesMap[mimetype] = language.identifier;\r\n            });\r\n        });\r\n        Registry.as(Extensions.Configuration).registerOverrideIdentifiers(ModesRegistry.getLanguages().map(function (language) { return language.id; }));\r\n        this._onDidChange.fire();\r\n    };\r\n    LanguagesRegistry.prototype._getLanguageId = function (language) {\r\n        if (this._languageToLanguageId[language]) {\r\n            return this._languageToLanguageId[language];\r\n        }\r\n        var languageId = this._nextLanguageId2++;\r\n        this._languageIdToLanguage[languageId] = language;\r\n        this._languageToLanguageId[language] = languageId;\r\n        return languageId;\r\n    };\r\n    LanguagesRegistry.prototype._registerLanguage = function (lang) {\r\n        var langId = lang.id;\r\n        var resolvedLanguage;\r\n        if (hasOwnProperty.call(this._languages, langId)) {\r\n            resolvedLanguage = this._languages[langId];\r\n        }\r\n        else {\r\n            var languageId = this._getLanguageId(langId);\r\n            resolvedLanguage = {\r\n                identifier: new LanguageIdentifier(langId, languageId),\r\n                name: null,\r\n                mimetypes: [],\r\n                aliases: [],\r\n                extensions: [],\r\n                filenames: [],\r\n                configurationFiles: []\r\n            };\r\n            this._languages[langId] = resolvedLanguage;\r\n        }\r\n        this._mergeLanguage(resolvedLanguage, lang);\r\n    };\r\n    LanguagesRegistry.prototype._mergeLanguage = function (resolvedLanguage, lang) {\r\n        var _a;\r\n        var langId = lang.id;\r\n        var primaryMime = null;\r\n        if (Array.isArray(lang.mimetypes) && lang.mimetypes.length > 0) {\r\n            (_a = resolvedLanguage.mimetypes).push.apply(_a, lang.mimetypes);\r\n            primaryMime = lang.mimetypes[0];\r\n        }\r\n        if (!primaryMime) {\r\n            primaryMime = \"text/x-\" + langId;\r\n            resolvedLanguage.mimetypes.push(primaryMime);\r\n        }\r\n        if (Array.isArray(lang.extensions)) {\r\n            for (var _i = 0, _b = lang.extensions; _i < _b.length; _i++) {\r\n                var extension = _b[_i];\r\n                mime.registerTextMime({ id: langId, mime: primaryMime, extension: extension }, this._warnOnOverwrite);\r\n                resolvedLanguage.extensions.push(extension);\r\n            }\r\n        }\r\n        if (Array.isArray(lang.filenames)) {\r\n            for (var _c = 0, _d = lang.filenames; _c < _d.length; _c++) {\r\n                var filename = _d[_c];\r\n                mime.registerTextMime({ id: langId, mime: primaryMime, filename: filename }, this._warnOnOverwrite);\r\n                resolvedLanguage.filenames.push(filename);\r\n            }\r\n        }\r\n        if (Array.isArray(lang.filenamePatterns)) {\r\n            for (var _e = 0, _f = lang.filenamePatterns; _e < _f.length; _e++) {\r\n                var filenamePattern = _f[_e];\r\n                mime.registerTextMime({ id: langId, mime: primaryMime, filepattern: filenamePattern }, this._warnOnOverwrite);\r\n            }\r\n        }\r\n        if (typeof lang.firstLine === 'string' && lang.firstLine.length > 0) {\r\n            var firstLineRegexStr = lang.firstLine;\r\n            if (firstLineRegexStr.charAt(0) !== '^') {\r\n                firstLineRegexStr = '^' + firstLineRegexStr;\r\n            }\r\n            try {\r\n                var firstLineRegex = new RegExp(firstLineRegexStr);\r\n                if (!strings.regExpLeadsToEndlessLoop(firstLineRegex)) {\r\n                    mime.registerTextMime({ id: langId, mime: primaryMime, firstline: firstLineRegex }, this._warnOnOverwrite);\r\n                }\r\n            }\r\n            catch (err) {\r\n                // Most likely, the regex was bad\r\n                onUnexpectedError(err);\r\n            }\r\n        }\r\n        resolvedLanguage.aliases.push(langId);\r\n        var langAliases = null;\r\n        if (typeof lang.aliases !== 'undefined' && Array.isArray(lang.aliases)) {\r\n            if (lang.aliases.length === 0) {\r\n                // signal that this language should not get a name\r\n                langAliases = [null];\r\n            }\r\n            else {\r\n                langAliases = lang.aliases;\r\n            }\r\n        }\r\n        if (langAliases !== null) {\r\n            for (var _g = 0, langAliases_1 = langAliases; _g < langAliases_1.length; _g++) {\r\n                var langAlias = langAliases_1[_g];\r\n                if (!langAlias || langAlias.length === 0) {\r\n                    continue;\r\n                }\r\n                resolvedLanguage.aliases.push(langAlias);\r\n            }\r\n        }\r\n        var containsAliases = (langAliases !== null && langAliases.length > 0);\r\n        if (containsAliases && langAliases[0] === null) {\r\n            // signal that this language should not get a name\r\n        }\r\n        else {\r\n            var bestName = (containsAliases ? langAliases[0] : null) || langId;\r\n            if (containsAliases || !resolvedLanguage.name) {\r\n                resolvedLanguage.name = bestName;\r\n            }\r\n        }\r\n        if (lang.configuration) {\r\n            resolvedLanguage.configurationFiles.push(lang.configuration);\r\n        }\r\n    };\r\n    LanguagesRegistry.prototype.isRegisteredMode = function (mimetypeOrModeId) {\r\n        // Is this a known mime type ?\r\n        if (hasOwnProperty.call(this._mimeTypesMap, mimetypeOrModeId)) {\r\n            return true;\r\n        }\r\n        // Is this a known mode id ?\r\n        return hasOwnProperty.call(this._languages, mimetypeOrModeId);\r\n    };\r\n    LanguagesRegistry.prototype.getModeIdForLanguageNameLowercase = function (languageNameLower) {\r\n        if (!hasOwnProperty.call(this._lowercaseNameMap, languageNameLower)) {\r\n            return null;\r\n        }\r\n        return this._lowercaseNameMap[languageNameLower].language;\r\n    };\r\n    LanguagesRegistry.prototype.extractModeIds = function (commaSeparatedMimetypesOrCommaSeparatedIds) {\r\n        var _this = this;\r\n        if (!commaSeparatedMimetypesOrCommaSeparatedIds) {\r\n            return [];\r\n        }\r\n        return (commaSeparatedMimetypesOrCommaSeparatedIds.\r\n            split(',').\r\n            map(function (mimeTypeOrId) { return mimeTypeOrId.trim(); }).\r\n            map(function (mimeTypeOrId) {\r\n            if (hasOwnProperty.call(_this._mimeTypesMap, mimeTypeOrId)) {\r\n                return _this._mimeTypesMap[mimeTypeOrId].language;\r\n            }\r\n            return mimeTypeOrId;\r\n        }).\r\n            filter(function (modeId) {\r\n            return hasOwnProperty.call(_this._languages, modeId);\r\n        }));\r\n    };\r\n    LanguagesRegistry.prototype.getLanguageIdentifier = function (_modeId) {\r\n        if (_modeId === NULL_MODE_ID || _modeId === 0 /* Null */) {\r\n            return NULL_LANGUAGE_IDENTIFIER;\r\n        }\r\n        var modeId;\r\n        if (typeof _modeId === 'string') {\r\n            modeId = _modeId;\r\n        }\r\n        else {\r\n            modeId = this._languageIdToLanguage[_modeId];\r\n            if (!modeId) {\r\n                return null;\r\n            }\r\n        }\r\n        if (!hasOwnProperty.call(this._languages, modeId)) {\r\n            return null;\r\n        }\r\n        return this._languages[modeId].identifier;\r\n    };\r\n    LanguagesRegistry.prototype.getModeIdsFromFilepathOrFirstLine = function (resource, firstLine) {\r\n        if (!resource && !firstLine) {\r\n            return [];\r\n        }\r\n        var mimeTypes = mime.guessMimeTypes(resource, firstLine);\r\n        return this.extractModeIds(mimeTypes.join(','));\r\n    };\r\n    return LanguagesRegistry;\r\n}(Disposable));\r\nexport { LanguagesRegistry };\r\n"]},"metadata":{},"sourceType":"module"}