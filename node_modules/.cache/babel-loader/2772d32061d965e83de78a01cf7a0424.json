{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar _typeof = {\n  number: 'number',\n  string: 'string',\n  undefined: 'undefined',\n  object: 'object',\n  function: 'function'\n};\n/**\r\n * @returns whether the provided parameter is a JavaScript Array or not.\r\n */\n\nexport function isArray(array) {\n  if (Array.isArray) {\n    return Array.isArray(array);\n  }\n\n  if (array && typeof array.length === _typeof.number && array.constructor === Array) {\n    return true;\n  }\n\n  return false;\n}\n/**\r\n * @returns whether the provided parameter is a JavaScript String or not.\r\n */\n\nexport function isString(str) {\n  if (typeof str === _typeof.string || str instanceof String) {\n    return true;\n  }\n\n  return false;\n}\n/**\r\n *\r\n * @returns whether the provided parameter is of type `object` but **not**\r\n *\t`null`, an `array`, a `regexp`, nor a `date`.\r\n */\n\nexport function isObject(obj) {\n  // The method can't do a type cast since there are type (like strings) which\n  // are subclasses of any put not positvely matched by the function. Hence type\n  // narrowing results in wrong results.\n  return typeof obj === _typeof.object && obj !== null && !Array.isArray(obj) && !(obj instanceof RegExp) && !(obj instanceof Date);\n}\n/**\r\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\r\n * @returns whether the provided parameter is a JavaScript Number or not.\r\n */\n\nexport function isNumber(obj) {\n  if ((typeof obj === _typeof.number || obj instanceof Number) && !isNaN(obj)) {\n    return true;\n  }\n\n  return false;\n}\n/**\r\n * @returns whether the provided parameter is a JavaScript Boolean or not.\r\n */\n\nexport function isBoolean(obj) {\n  return obj === true || obj === false;\n}\n/**\r\n * @returns whether the provided parameter is undefined.\r\n */\n\nexport function isUndefined(obj) {\n  return typeof obj === _typeof.undefined;\n}\n/**\r\n * @returns whether the provided parameter is undefined or null.\r\n */\n\nexport function isUndefinedOrNull(obj) {\n  return isUndefined(obj) || obj === null;\n}\nexport function assertType(condition, type) {\n  if (!condition) {\n    throw new Error(type ? \"Unexpected type, expected '\" + type + \"'\" : 'Unexpected type');\n  }\n}\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\r\n * @returns whether the provided parameter is an empty JavaScript Object or not.\r\n */\n\nexport function isEmptyObject(obj) {\n  if (!isObject(obj)) {\n    return false;\n  }\n\n  for (var key in obj) {\n    if (hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\r\n * @returns whether the provided parameter is a JavaScript Function or not.\r\n */\n\nexport function isFunction(obj) {\n  return typeof obj === _typeof.function;\n}\nexport function validateConstraints(args, constraints) {\n  var len = Math.min(args.length, constraints.length);\n\n  for (var i = 0; i < len; i++) {\n    validateConstraint(args[i], constraints[i]);\n  }\n}\nexport function validateConstraint(arg, constraint) {\n  if (isString(constraint)) {\n    if (typeof arg !== constraint) {\n      throw new Error(\"argument does not match constraint: typeof \" + constraint);\n    }\n  } else if (isFunction(constraint)) {\n    try {\n      if (arg instanceof constraint) {\n        return;\n      }\n    } catch (_a) {// ignore\n    }\n\n    if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n      return;\n    }\n\n    if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n      return;\n    }\n\n    throw new Error(\"argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true\");\n  }\n}\nexport function getAllPropertyNames(obj) {\n  var res = [];\n  var proto = Object.getPrototypeOf(obj);\n\n  while (Object.prototype !== proto) {\n    res = res.concat(Object.getOwnPropertyNames(proto));\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return res;\n}\nexport function getAllMethodNames(obj) {\n  var methods = [];\n\n  for (var _i = 0, _a = getAllPropertyNames(obj); _i < _a.length; _i++) {\n    var prop = _a[_i];\n\n    if (typeof obj[prop] === 'function') {\n      methods.push(prop);\n    }\n  }\n\n  return methods;\n}\nexport function createProxyObject(methodNames, invoke) {\n  var createProxyMethod = function (method) {\n    return function () {\n      var args = Array.prototype.slice.call(arguments, 0);\n      return invoke(method, args);\n    };\n  };\n\n  var result = {};\n\n  for (var _i = 0, methodNames_1 = methodNames; _i < methodNames_1.length; _i++) {\n    var methodName = methodNames_1[_i];\n    result[methodName] = createProxyMethod(methodName);\n  }\n\n  return result;\n}\n/**\r\n * Converts null to undefined, passes all other values through.\r\n */\n\nexport function withNullAsUndefined(x) {\n  return x === null ? undefined : x;\n}\n/**\r\n * Converts undefined to null, passes all other values through.\r\n */\n\nexport function withUndefinedAsNull(x) {\n  return typeof x === 'undefined' ? null : x;\n}","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/base/common/types.js"],"names":["_typeof","number","string","undefined","object","function","isArray","array","Array","length","constructor","isString","str","String","isObject","obj","RegExp","Date","isNumber","Number","isNaN","isBoolean","isUndefined","isUndefinedOrNull","assertType","condition","type","Error","hasOwnProperty","Object","prototype","isEmptyObject","key","call","isFunction","validateConstraints","args","constraints","len","Math","min","i","validateConstraint","arg","constraint","_a","getAllPropertyNames","res","proto","getPrototypeOf","concat","getOwnPropertyNames","getAllMethodNames","methods","_i","prop","push","createProxyObject","methodNames","invoke","createProxyMethod","method","slice","arguments","result","methodNames_1","methodName","withNullAsUndefined","x","withUndefinedAsNull"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar _typeof = {\r\n    number: 'number',\r\n    string: 'string',\r\n    undefined: 'undefined',\r\n    object: 'object',\r\n    function: 'function'\r\n};\r\n/**\r\n * @returns whether the provided parameter is a JavaScript Array or not.\r\n */\r\nexport function isArray(array) {\r\n    if (Array.isArray) {\r\n        return Array.isArray(array);\r\n    }\r\n    if (array && typeof (array.length) === _typeof.number && array.constructor === Array) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @returns whether the provided parameter is a JavaScript String or not.\r\n */\r\nexport function isString(str) {\r\n    if (typeof (str) === _typeof.string || str instanceof String) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n *\r\n * @returns whether the provided parameter is of type `object` but **not**\r\n *\t`null`, an `array`, a `regexp`, nor a `date`.\r\n */\r\nexport function isObject(obj) {\r\n    // The method can't do a type cast since there are type (like strings) which\r\n    // are subclasses of any put not positvely matched by the function. Hence type\r\n    // narrowing results in wrong results.\r\n    return typeof obj === _typeof.object\r\n        && obj !== null\r\n        && !Array.isArray(obj)\r\n        && !(obj instanceof RegExp)\r\n        && !(obj instanceof Date);\r\n}\r\n/**\r\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\r\n * @returns whether the provided parameter is a JavaScript Number or not.\r\n */\r\nexport function isNumber(obj) {\r\n    if ((typeof (obj) === _typeof.number || obj instanceof Number) && !isNaN(obj)) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @returns whether the provided parameter is a JavaScript Boolean or not.\r\n */\r\nexport function isBoolean(obj) {\r\n    return obj === true || obj === false;\r\n}\r\n/**\r\n * @returns whether the provided parameter is undefined.\r\n */\r\nexport function isUndefined(obj) {\r\n    return typeof (obj) === _typeof.undefined;\r\n}\r\n/**\r\n * @returns whether the provided parameter is undefined or null.\r\n */\r\nexport function isUndefinedOrNull(obj) {\r\n    return isUndefined(obj) || obj === null;\r\n}\r\nexport function assertType(condition, type) {\r\n    if (!condition) {\r\n        throw new Error(type ? \"Unexpected type, expected '\" + type + \"'\" : 'Unexpected type');\r\n    }\r\n}\r\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\r\n/**\r\n * @returns whether the provided parameter is an empty JavaScript Object or not.\r\n */\r\nexport function isEmptyObject(obj) {\r\n    if (!isObject(obj)) {\r\n        return false;\r\n    }\r\n    for (var key in obj) {\r\n        if (hasOwnProperty.call(obj, key)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * @returns whether the provided parameter is a JavaScript Function or not.\r\n */\r\nexport function isFunction(obj) {\r\n    return typeof obj === _typeof.function;\r\n}\r\nexport function validateConstraints(args, constraints) {\r\n    var len = Math.min(args.length, constraints.length);\r\n    for (var i = 0; i < len; i++) {\r\n        validateConstraint(args[i], constraints[i]);\r\n    }\r\n}\r\nexport function validateConstraint(arg, constraint) {\r\n    if (isString(constraint)) {\r\n        if (typeof arg !== constraint) {\r\n            throw new Error(\"argument does not match constraint: typeof \" + constraint);\r\n        }\r\n    }\r\n    else if (isFunction(constraint)) {\r\n        try {\r\n            if (arg instanceof constraint) {\r\n                return;\r\n            }\r\n        }\r\n        catch (_a) {\r\n            // ignore\r\n        }\r\n        if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\r\n            return;\r\n        }\r\n        if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\r\n            return;\r\n        }\r\n        throw new Error(\"argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true\");\r\n    }\r\n}\r\nexport function getAllPropertyNames(obj) {\r\n    var res = [];\r\n    var proto = Object.getPrototypeOf(obj);\r\n    while (Object.prototype !== proto) {\r\n        res = res.concat(Object.getOwnPropertyNames(proto));\r\n        proto = Object.getPrototypeOf(proto);\r\n    }\r\n    return res;\r\n}\r\nexport function getAllMethodNames(obj) {\r\n    var methods = [];\r\n    for (var _i = 0, _a = getAllPropertyNames(obj); _i < _a.length; _i++) {\r\n        var prop = _a[_i];\r\n        if (typeof obj[prop] === 'function') {\r\n            methods.push(prop);\r\n        }\r\n    }\r\n    return methods;\r\n}\r\nexport function createProxyObject(methodNames, invoke) {\r\n    var createProxyMethod = function (method) {\r\n        return function () {\r\n            var args = Array.prototype.slice.call(arguments, 0);\r\n            return invoke(method, args);\r\n        };\r\n    };\r\n    var result = {};\r\n    for (var _i = 0, methodNames_1 = methodNames; _i < methodNames_1.length; _i++) {\r\n        var methodName = methodNames_1[_i];\r\n        result[methodName] = createProxyMethod(methodName);\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Converts null to undefined, passes all other values through.\r\n */\r\nexport function withNullAsUndefined(x) {\r\n    return x === null ? undefined : x;\r\n}\r\n/**\r\n * Converts undefined to null, passes all other values through.\r\n */\r\nexport function withUndefinedAsNull(x) {\r\n    return typeof x === 'undefined' ? null : x;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}