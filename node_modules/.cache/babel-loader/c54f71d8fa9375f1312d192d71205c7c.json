{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { URI } from './uri.js';\nimport * as platform from './platform.js';\nexport var Schemas;\n\n(function (Schemas) {\n  /**\r\n   * A schema that is used for models that exist in memory\r\n   * only and that have no correspondence on a server or such.\r\n   */\n  Schemas.inMemory = 'inmemory';\n  /**\r\n   * A schema that is used for setting files\r\n   */\n\n  Schemas.vscode = 'vscode';\n  /**\r\n   * A schema that is used for internal private files\r\n   */\n\n  Schemas.internal = 'private';\n  /**\r\n   * A walk-through document.\r\n   */\n\n  Schemas.walkThrough = 'walkThrough';\n  /**\r\n   * An embedded code snippet.\r\n   */\n\n  Schemas.walkThroughSnippet = 'walkThroughSnippet';\n  Schemas.http = 'http';\n  Schemas.https = 'https';\n  Schemas.file = 'file';\n  Schemas.mailto = 'mailto';\n  Schemas.untitled = 'untitled';\n  Schemas.data = 'data';\n  Schemas.command = 'command';\n  Schemas.vscodeRemote = 'vscode-remote';\n  Schemas.vscodeRemoteResource = 'vscode-remote-resource';\n  Schemas.userData = 'vscode-userdata';\n})(Schemas || (Schemas = {}));\n\nvar RemoteAuthoritiesImpl =\n/** @class */\nfunction () {\n  function RemoteAuthoritiesImpl() {\n    this._hosts = Object.create(null);\n    this._ports = Object.create(null);\n    this._connectionTokens = Object.create(null);\n    this._preferredWebSchema = 'http';\n    this._delegate = null;\n  }\n\n  RemoteAuthoritiesImpl.prototype.setPreferredWebSchema = function (schema) {\n    this._preferredWebSchema = schema;\n  };\n\n  RemoteAuthoritiesImpl.prototype.rewrite = function (uri) {\n    if (this._delegate) {\n      return this._delegate(uri);\n    }\n\n    var authority = uri.authority;\n    var host = this._hosts[authority];\n\n    if (host && host.indexOf(':') !== -1) {\n      host = \"[\" + host + \"]\";\n    }\n\n    var port = this._ports[authority];\n    var connectionToken = this._connectionTokens[authority];\n    var query = \"path=\" + encodeURIComponent(uri.path);\n\n    if (typeof connectionToken === 'string') {\n      query += \"&tkn=\" + encodeURIComponent(connectionToken);\n    }\n\n    return URI.from({\n      scheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n      authority: host + \":\" + port,\n      path: \"/vscode-remote-resource\",\n      query: query\n    });\n  };\n\n  return RemoteAuthoritiesImpl;\n}();\n\nexport var RemoteAuthorities = new RemoteAuthoritiesImpl();","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/base/common/network.js"],"names":["URI","platform","Schemas","inMemory","vscode","internal","walkThrough","walkThroughSnippet","http","https","file","mailto","untitled","data","command","vscodeRemote","vscodeRemoteResource","userData","RemoteAuthoritiesImpl","_hosts","Object","create","_ports","_connectionTokens","_preferredWebSchema","_delegate","prototype","setPreferredWebSchema","schema","rewrite","uri","authority","host","indexOf","port","connectionToken","query","encodeURIComponent","path","from","scheme","isWeb","RemoteAuthorities"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { URI } from './uri.js';\r\nimport * as platform from './platform.js';\r\nexport var Schemas;\r\n(function (Schemas) {\r\n    /**\r\n     * A schema that is used for models that exist in memory\r\n     * only and that have no correspondence on a server or such.\r\n     */\r\n    Schemas.inMemory = 'inmemory';\r\n    /**\r\n     * A schema that is used for setting files\r\n     */\r\n    Schemas.vscode = 'vscode';\r\n    /**\r\n     * A schema that is used for internal private files\r\n     */\r\n    Schemas.internal = 'private';\r\n    /**\r\n     * A walk-through document.\r\n     */\r\n    Schemas.walkThrough = 'walkThrough';\r\n    /**\r\n     * An embedded code snippet.\r\n     */\r\n    Schemas.walkThroughSnippet = 'walkThroughSnippet';\r\n    Schemas.http = 'http';\r\n    Schemas.https = 'https';\r\n    Schemas.file = 'file';\r\n    Schemas.mailto = 'mailto';\r\n    Schemas.untitled = 'untitled';\r\n    Schemas.data = 'data';\r\n    Schemas.command = 'command';\r\n    Schemas.vscodeRemote = 'vscode-remote';\r\n    Schemas.vscodeRemoteResource = 'vscode-remote-resource';\r\n    Schemas.userData = 'vscode-userdata';\r\n})(Schemas || (Schemas = {}));\r\nvar RemoteAuthoritiesImpl = /** @class */ (function () {\r\n    function RemoteAuthoritiesImpl() {\r\n        this._hosts = Object.create(null);\r\n        this._ports = Object.create(null);\r\n        this._connectionTokens = Object.create(null);\r\n        this._preferredWebSchema = 'http';\r\n        this._delegate = null;\r\n    }\r\n    RemoteAuthoritiesImpl.prototype.setPreferredWebSchema = function (schema) {\r\n        this._preferredWebSchema = schema;\r\n    };\r\n    RemoteAuthoritiesImpl.prototype.rewrite = function (uri) {\r\n        if (this._delegate) {\r\n            return this._delegate(uri);\r\n        }\r\n        var authority = uri.authority;\r\n        var host = this._hosts[authority];\r\n        if (host && host.indexOf(':') !== -1) {\r\n            host = \"[\" + host + \"]\";\r\n        }\r\n        var port = this._ports[authority];\r\n        var connectionToken = this._connectionTokens[authority];\r\n        var query = \"path=\" + encodeURIComponent(uri.path);\r\n        if (typeof connectionToken === 'string') {\r\n            query += \"&tkn=\" + encodeURIComponent(connectionToken);\r\n        }\r\n        return URI.from({\r\n            scheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\r\n            authority: host + \":\" + port,\r\n            path: \"/vscode-remote-resource\",\r\n            query: query\r\n        });\r\n    };\r\n    return RemoteAuthoritiesImpl;\r\n}());\r\nexport var RemoteAuthorities = new RemoteAuthoritiesImpl();\r\n"]},"metadata":{},"sourceType":"module"}