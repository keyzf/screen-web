{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { CursorState, SingleCursorState } from './cursorCommon.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { Selection } from '../core/selection.js';\n\nvar OneCursor =\n/** @class */\nfunction () {\n  function OneCursor(context) {\n    this._selTrackedRange = null;\n    this._trackSelection = true;\n\n    this._setState(context, new SingleCursorState(new Range(1, 1, 1, 1), 0, new Position(1, 1), 0), new SingleCursorState(new Range(1, 1, 1, 1), 0, new Position(1, 1), 0));\n  }\n\n  OneCursor.prototype.dispose = function (context) {\n    this._removeTrackedRange(context);\n  };\n\n  OneCursor.prototype.startTrackingSelection = function (context) {\n    this._trackSelection = true;\n\n    this._updateTrackedRange(context);\n  };\n\n  OneCursor.prototype.stopTrackingSelection = function (context) {\n    this._trackSelection = false;\n\n    this._removeTrackedRange(context);\n  };\n\n  OneCursor.prototype._updateTrackedRange = function (context) {\n    if (!this._trackSelection) {\n      // don't track the selection\n      return;\n    }\n\n    this._selTrackedRange = context.model._setTrackedRange(this._selTrackedRange, this.modelState.selection, 0\n    /* AlwaysGrowsWhenTypingAtEdges */\n    );\n  };\n\n  OneCursor.prototype._removeTrackedRange = function (context) {\n    this._selTrackedRange = context.model._setTrackedRange(this._selTrackedRange, null, 0\n    /* AlwaysGrowsWhenTypingAtEdges */\n    );\n  };\n\n  OneCursor.prototype.asCursorState = function () {\n    return new CursorState(this.modelState, this.viewState);\n  };\n\n  OneCursor.prototype.readSelectionFromMarkers = function (context) {\n    var range = context.model._getTrackedRange(this._selTrackedRange);\n\n    if (this.modelState.selection.getDirection() === 0\n    /* LTR */\n    ) {\n        return new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n      }\n\n    return new Selection(range.endLineNumber, range.endColumn, range.startLineNumber, range.startColumn);\n  };\n\n  OneCursor.prototype.ensureValidState = function (context) {\n    this._setState(context, this.modelState, this.viewState);\n  };\n\n  OneCursor.prototype.setState = function (context, modelState, viewState) {\n    this._setState(context, modelState, viewState);\n  };\n\n  OneCursor.prototype._setState = function (context, modelState, viewState) {\n    if (!modelState) {\n      if (!viewState) {\n        return;\n      } // We only have the view state => compute the model state\n\n\n      var selectionStart = context.model.validateRange(context.convertViewRangeToModelRange(viewState.selectionStart));\n      var position = context.model.validatePosition(context.convertViewPositionToModelPosition(viewState.position.lineNumber, viewState.position.column));\n      modelState = new SingleCursorState(selectionStart, viewState.selectionStartLeftoverVisibleColumns, position, viewState.leftoverVisibleColumns);\n    } else {\n      // Validate new model state\n      var selectionStart = context.model.validateRange(modelState.selectionStart);\n      var selectionStartLeftoverVisibleColumns = modelState.selectionStart.equalsRange(selectionStart) ? modelState.selectionStartLeftoverVisibleColumns : 0;\n      var position = context.model.validatePosition(modelState.position);\n      var leftoverVisibleColumns = modelState.position.equals(position) ? modelState.leftoverVisibleColumns : 0;\n      modelState = new SingleCursorState(selectionStart, selectionStartLeftoverVisibleColumns, position, leftoverVisibleColumns);\n    }\n\n    if (!viewState) {\n      // We only have the model state => compute the view state\n      var viewSelectionStart1 = context.convertModelPositionToViewPosition(new Position(modelState.selectionStart.startLineNumber, modelState.selectionStart.startColumn));\n      var viewSelectionStart2 = context.convertModelPositionToViewPosition(new Position(modelState.selectionStart.endLineNumber, modelState.selectionStart.endColumn));\n      var viewSelectionStart = new Range(viewSelectionStart1.lineNumber, viewSelectionStart1.column, viewSelectionStart2.lineNumber, viewSelectionStart2.column);\n      var viewPosition = context.convertModelPositionToViewPosition(modelState.position);\n      viewState = new SingleCursorState(viewSelectionStart, modelState.selectionStartLeftoverVisibleColumns, viewPosition, modelState.leftoverVisibleColumns);\n    } else {\n      // Validate new view state\n      var viewSelectionStart = context.validateViewRange(viewState.selectionStart, modelState.selectionStart);\n      var viewPosition = context.validateViewPosition(viewState.position, modelState.position);\n      viewState = new SingleCursorState(viewSelectionStart, modelState.selectionStartLeftoverVisibleColumns, viewPosition, modelState.leftoverVisibleColumns);\n    }\n\n    this.modelState = modelState;\n    this.viewState = viewState;\n\n    this._updateTrackedRange(context);\n  };\n\n  return OneCursor;\n}();\n\nexport { OneCursor };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/common/controller/oneCursor.js"],"names":["CursorState","SingleCursorState","Position","Range","Selection","OneCursor","context","_selTrackedRange","_trackSelection","_setState","prototype","dispose","_removeTrackedRange","startTrackingSelection","_updateTrackedRange","stopTrackingSelection","model","_setTrackedRange","modelState","selection","asCursorState","viewState","readSelectionFromMarkers","range","_getTrackedRange","getDirection","startLineNumber","startColumn","endLineNumber","endColumn","ensureValidState","setState","selectionStart","validateRange","convertViewRangeToModelRange","position","validatePosition","convertViewPositionToModelPosition","lineNumber","column","selectionStartLeftoverVisibleColumns","leftoverVisibleColumns","equalsRange","equals","viewSelectionStart1","convertModelPositionToViewPosition","viewSelectionStart2","viewSelectionStart","viewPosition","validateViewRange","validateViewPosition"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { CursorState, SingleCursorState } from './cursorCommon.js';\r\nimport { Position } from '../core/position.js';\r\nimport { Range } from '../core/range.js';\r\nimport { Selection } from '../core/selection.js';\r\nvar OneCursor = /** @class */ (function () {\r\n    function OneCursor(context) {\r\n        this._selTrackedRange = null;\r\n        this._trackSelection = true;\r\n        this._setState(context, new SingleCursorState(new Range(1, 1, 1, 1), 0, new Position(1, 1), 0), new SingleCursorState(new Range(1, 1, 1, 1), 0, new Position(1, 1), 0));\r\n    }\r\n    OneCursor.prototype.dispose = function (context) {\r\n        this._removeTrackedRange(context);\r\n    };\r\n    OneCursor.prototype.startTrackingSelection = function (context) {\r\n        this._trackSelection = true;\r\n        this._updateTrackedRange(context);\r\n    };\r\n    OneCursor.prototype.stopTrackingSelection = function (context) {\r\n        this._trackSelection = false;\r\n        this._removeTrackedRange(context);\r\n    };\r\n    OneCursor.prototype._updateTrackedRange = function (context) {\r\n        if (!this._trackSelection) {\r\n            // don't track the selection\r\n            return;\r\n        }\r\n        this._selTrackedRange = context.model._setTrackedRange(this._selTrackedRange, this.modelState.selection, 0 /* AlwaysGrowsWhenTypingAtEdges */);\r\n    };\r\n    OneCursor.prototype._removeTrackedRange = function (context) {\r\n        this._selTrackedRange = context.model._setTrackedRange(this._selTrackedRange, null, 0 /* AlwaysGrowsWhenTypingAtEdges */);\r\n    };\r\n    OneCursor.prototype.asCursorState = function () {\r\n        return new CursorState(this.modelState, this.viewState);\r\n    };\r\n    OneCursor.prototype.readSelectionFromMarkers = function (context) {\r\n        var range = context.model._getTrackedRange(this._selTrackedRange);\r\n        if (this.modelState.selection.getDirection() === 0 /* LTR */) {\r\n            return new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\r\n        }\r\n        return new Selection(range.endLineNumber, range.endColumn, range.startLineNumber, range.startColumn);\r\n    };\r\n    OneCursor.prototype.ensureValidState = function (context) {\r\n        this._setState(context, this.modelState, this.viewState);\r\n    };\r\n    OneCursor.prototype.setState = function (context, modelState, viewState) {\r\n        this._setState(context, modelState, viewState);\r\n    };\r\n    OneCursor.prototype._setState = function (context, modelState, viewState) {\r\n        if (!modelState) {\r\n            if (!viewState) {\r\n                return;\r\n            }\r\n            // We only have the view state => compute the model state\r\n            var selectionStart = context.model.validateRange(context.convertViewRangeToModelRange(viewState.selectionStart));\r\n            var position = context.model.validatePosition(context.convertViewPositionToModelPosition(viewState.position.lineNumber, viewState.position.column));\r\n            modelState = new SingleCursorState(selectionStart, viewState.selectionStartLeftoverVisibleColumns, position, viewState.leftoverVisibleColumns);\r\n        }\r\n        else {\r\n            // Validate new model state\r\n            var selectionStart = context.model.validateRange(modelState.selectionStart);\r\n            var selectionStartLeftoverVisibleColumns = modelState.selectionStart.equalsRange(selectionStart) ? modelState.selectionStartLeftoverVisibleColumns : 0;\r\n            var position = context.model.validatePosition(modelState.position);\r\n            var leftoverVisibleColumns = modelState.position.equals(position) ? modelState.leftoverVisibleColumns : 0;\r\n            modelState = new SingleCursorState(selectionStart, selectionStartLeftoverVisibleColumns, position, leftoverVisibleColumns);\r\n        }\r\n        if (!viewState) {\r\n            // We only have the model state => compute the view state\r\n            var viewSelectionStart1 = context.convertModelPositionToViewPosition(new Position(modelState.selectionStart.startLineNumber, modelState.selectionStart.startColumn));\r\n            var viewSelectionStart2 = context.convertModelPositionToViewPosition(new Position(modelState.selectionStart.endLineNumber, modelState.selectionStart.endColumn));\r\n            var viewSelectionStart = new Range(viewSelectionStart1.lineNumber, viewSelectionStart1.column, viewSelectionStart2.lineNumber, viewSelectionStart2.column);\r\n            var viewPosition = context.convertModelPositionToViewPosition(modelState.position);\r\n            viewState = new SingleCursorState(viewSelectionStart, modelState.selectionStartLeftoverVisibleColumns, viewPosition, modelState.leftoverVisibleColumns);\r\n        }\r\n        else {\r\n            // Validate new view state\r\n            var viewSelectionStart = context.validateViewRange(viewState.selectionStart, modelState.selectionStart);\r\n            var viewPosition = context.validateViewPosition(viewState.position, modelState.position);\r\n            viewState = new SingleCursorState(viewSelectionStart, modelState.selectionStartLeftoverVisibleColumns, viewPosition, modelState.leftoverVisibleColumns);\r\n        }\r\n        this.modelState = modelState;\r\n        this.viewState = viewState;\r\n        this._updateTrackedRange(context);\r\n    };\r\n    return OneCursor;\r\n}());\r\nexport { OneCursor };\r\n"]},"metadata":{},"sourceType":"module"}