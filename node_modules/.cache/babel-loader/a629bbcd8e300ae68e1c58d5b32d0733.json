{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { RunOnceScheduler, TimeoutTimer } from '../../../base/common/async.js';\nimport { dispose, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { ReplaceCommand, ReplaceCommandThatPreservesSelection } from '../../common/commands/replaceCommand.js';\nimport { Position } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { Selection } from '../../common/core/selection.js';\nimport { SearchParams } from '../../common/model/textModelSearch.js';\nimport { FindDecorations } from './findDecorations.js';\nimport { ReplaceAllCommand } from './replaceAllCommand.js';\nimport { ReplacePattern, parseReplaceString } from './replacePattern.js';\nimport { RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\nexport var CONTEXT_FIND_WIDGET_VISIBLE = new RawContextKey('findWidgetVisible', false); // Keep ContextKey use of 'Focussed' to not break when clauses\n\nexport var CONTEXT_FIND_INPUT_FOCUSED = new RawContextKey('findInputFocussed', false);\nexport var CONTEXT_REPLACE_INPUT_FOCUSED = new RawContextKey('replaceInputFocussed', false);\nexport var ToggleCaseSensitiveKeybinding = {\n  primary: 512\n  /* Alt */\n  | 33\n  /* KEY_C */\n  ,\n  mac: {\n    primary: 2048\n    /* CtrlCmd */\n    | 512\n    /* Alt */\n    | 33\n    /* KEY_C */\n\n  }\n};\nexport var ToggleWholeWordKeybinding = {\n  primary: 512\n  /* Alt */\n  | 53\n  /* KEY_W */\n  ,\n  mac: {\n    primary: 2048\n    /* CtrlCmd */\n    | 512\n    /* Alt */\n    | 53\n    /* KEY_W */\n\n  }\n};\nexport var ToggleRegexKeybinding = {\n  primary: 512\n  /* Alt */\n  | 48\n  /* KEY_R */\n  ,\n  mac: {\n    primary: 2048\n    /* CtrlCmd */\n    | 512\n    /* Alt */\n    | 48\n    /* KEY_R */\n\n  }\n};\nexport var ToggleSearchScopeKeybinding = {\n  primary: 512\n  /* Alt */\n  | 42\n  /* KEY_L */\n  ,\n  mac: {\n    primary: 2048\n    /* CtrlCmd */\n    | 512\n    /* Alt */\n    | 42\n    /* KEY_L */\n\n  }\n};\nexport var FIND_IDS = {\n  StartFindAction: 'actions.find',\n  StartFindWithSelection: 'actions.findWithSelection',\n  NextMatchFindAction: 'editor.action.nextMatchFindAction',\n  PreviousMatchFindAction: 'editor.action.previousMatchFindAction',\n  NextSelectionMatchFindAction: 'editor.action.nextSelectionMatchFindAction',\n  PreviousSelectionMatchFindAction: 'editor.action.previousSelectionMatchFindAction',\n  StartFindReplaceAction: 'editor.action.startFindReplaceAction',\n  CloseFindWidgetCommand: 'closeFindWidget',\n  ToggleCaseSensitiveCommand: 'toggleFindCaseSensitive',\n  ToggleWholeWordCommand: 'toggleFindWholeWord',\n  ToggleRegexCommand: 'toggleFindRegex',\n  ToggleSearchScopeCommand: 'toggleFindInSelection',\n  TogglePreserveCaseCommand: 'togglePreserveCase',\n  ReplaceOneAction: 'editor.action.replaceOne',\n  ReplaceAllAction: 'editor.action.replaceAll',\n  SelectAllMatchesAction: 'editor.action.selectAllMatches'\n};\nexport var MATCHES_LIMIT = 19999;\nvar RESEARCH_DELAY = 240;\n\nvar FindModelBoundToEditorModel =\n/** @class */\nfunction () {\n  function FindModelBoundToEditorModel(editor, state) {\n    var _this = this;\n\n    this._toDispose = new DisposableStore();\n    this._editor = editor;\n    this._state = state;\n    this._isDisposed = false;\n    this._startSearchingTimer = new TimeoutTimer();\n    this._decorations = new FindDecorations(editor);\n\n    this._toDispose.add(this._decorations);\n\n    this._updateDecorationsScheduler = new RunOnceScheduler(function () {\n      return _this.research(false);\n    }, 100);\n\n    this._toDispose.add(this._updateDecorationsScheduler);\n\n    this._toDispose.add(this._editor.onDidChangeCursorPosition(function (e) {\n      if (e.reason === 3\n      /* Explicit */\n      || e.reason === 5\n      /* Undo */\n      || e.reason === 6\n      /* Redo */\n      ) {\n          _this._decorations.setStartPosition(_this._editor.getPosition());\n        }\n    }));\n\n    this._ignoreModelContentChanged = false;\n\n    this._toDispose.add(this._editor.onDidChangeModelContent(function (e) {\n      if (_this._ignoreModelContentChanged) {\n        return;\n      }\n\n      if (e.isFlush) {\n        // a model.setValue() was called\n        _this._decorations.reset();\n      }\n\n      _this._decorations.setStartPosition(_this._editor.getPosition());\n\n      _this._updateDecorationsScheduler.schedule();\n    }));\n\n    this._toDispose.add(this._state.onFindReplaceStateChange(function (e) {\n      return _this._onStateChanged(e);\n    }));\n\n    this.research(false, this._state.searchScope);\n  }\n\n  FindModelBoundToEditorModel.prototype.dispose = function () {\n    this._isDisposed = true;\n    dispose(this._startSearchingTimer);\n\n    this._toDispose.dispose();\n  };\n\n  FindModelBoundToEditorModel.prototype._onStateChanged = function (e) {\n    var _this = this;\n\n    if (this._isDisposed) {\n      // The find model is disposed during a find state changed event\n      return;\n    }\n\n    if (!this._editor.hasModel()) {\n      // The find model will be disposed momentarily\n      return;\n    }\n\n    if (e.searchString || e.isReplaceRevealed || e.isRegex || e.wholeWord || e.matchCase || e.searchScope) {\n      var model = this._editor.getModel();\n\n      if (model.isTooLargeForSyncing()) {\n        this._startSearchingTimer.cancel();\n\n        this._startSearchingTimer.setIfNotSet(function () {\n          if (e.searchScope) {\n            _this.research(e.moveCursor, _this._state.searchScope);\n          } else {\n            _this.research(e.moveCursor);\n          }\n        }, RESEARCH_DELAY);\n      } else {\n        if (e.searchScope) {\n          this.research(e.moveCursor, this._state.searchScope);\n        } else {\n          this.research(e.moveCursor);\n        }\n      }\n    }\n  };\n\n  FindModelBoundToEditorModel._getSearchRange = function (model, findScope) {\n    // If we have set now or before a find scope, use it for computing the search range\n    if (findScope) {\n      return findScope;\n    }\n\n    return model.getFullModelRange();\n  };\n\n  FindModelBoundToEditorModel.prototype.research = function (moveCursor, newFindScope) {\n    var findScope = null;\n\n    if (typeof newFindScope !== 'undefined') {\n      findScope = newFindScope;\n    } else {\n      findScope = this._decorations.getFindScope();\n    }\n\n    if (findScope !== null) {\n      if (findScope.startLineNumber !== findScope.endLineNumber) {\n        if (findScope.endColumn === 1) {\n          findScope = new Range(findScope.startLineNumber, 1, findScope.endLineNumber - 1, this._editor.getModel().getLineMaxColumn(findScope.endLineNumber - 1));\n        } else {\n          // multiline find scope => expand to line starts / ends\n          findScope = new Range(findScope.startLineNumber, 1, findScope.endLineNumber, this._editor.getModel().getLineMaxColumn(findScope.endLineNumber));\n        }\n      }\n    }\n\n    var findMatches = this._findMatches(findScope, false, MATCHES_LIMIT);\n\n    this._decorations.set(findMatches, findScope);\n\n    this._state.changeMatchInfo(this._decorations.getCurrentMatchesPosition(this._editor.getSelection()), this._decorations.getCount(), undefined);\n\n    if (moveCursor) {\n      this._moveToNextMatch(this._decorations.getStartPosition());\n    }\n  };\n\n  FindModelBoundToEditorModel.prototype._hasMatches = function () {\n    return this._state.matchesCount > 0;\n  };\n\n  FindModelBoundToEditorModel.prototype._cannotFind = function () {\n    if (!this._hasMatches()) {\n      var findScope = this._decorations.getFindScope();\n\n      if (findScope) {\n        // Reveal the selection so user is reminded that 'selection find' is on.\n        this._editor.revealRangeInCenterIfOutsideViewport(findScope, 0\n        /* Smooth */\n        );\n      }\n\n      return true;\n    }\n\n    return false;\n  };\n\n  FindModelBoundToEditorModel.prototype._setCurrentFindMatch = function (match) {\n    var matchesPosition = this._decorations.setCurrentFindMatch(match);\n\n    this._state.changeMatchInfo(matchesPosition, this._decorations.getCount(), match);\n\n    this._editor.setSelection(match);\n\n    this._editor.revealRangeInCenterIfOutsideViewport(match, 0\n    /* Smooth */\n    );\n  };\n\n  FindModelBoundToEditorModel.prototype._prevSearchPosition = function (before) {\n    var isUsingLineStops = this._state.isRegex && (this._state.searchString.indexOf('^') >= 0 || this._state.searchString.indexOf('$') >= 0);\n    var lineNumber = before.lineNumber,\n        column = before.column;\n\n    var model = this._editor.getModel();\n\n    if (isUsingLineStops || column === 1) {\n      if (lineNumber === 1) {\n        lineNumber = model.getLineCount();\n      } else {\n        lineNumber--;\n      }\n\n      column = model.getLineMaxColumn(lineNumber);\n    } else {\n      column--;\n    }\n\n    return new Position(lineNumber, column);\n  };\n\n  FindModelBoundToEditorModel.prototype._moveToPrevMatch = function (before, isRecursed) {\n    if (isRecursed === void 0) {\n      isRecursed = false;\n    }\n\n    if (this._decorations.getCount() < MATCHES_LIMIT) {\n      var prevMatchRange = this._decorations.matchBeforePosition(before);\n\n      if (prevMatchRange && prevMatchRange.isEmpty() && prevMatchRange.getStartPosition().equals(before)) {\n        before = this._prevSearchPosition(before);\n        prevMatchRange = this._decorations.matchBeforePosition(before);\n      }\n\n      if (prevMatchRange) {\n        this._setCurrentFindMatch(prevMatchRange);\n      }\n\n      return;\n    }\n\n    if (this._cannotFind()) {\n      return;\n    }\n\n    var findScope = this._decorations.getFindScope();\n\n    var searchRange = FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), findScope); // ...(----)...|...\n\n\n    if (searchRange.getEndPosition().isBefore(before)) {\n      before = searchRange.getEndPosition();\n    } // ...|...(----)...\n\n\n    if (before.isBefore(searchRange.getStartPosition())) {\n      before = searchRange.getEndPosition();\n    }\n\n    var lineNumber = before.lineNumber,\n        column = before.column;\n\n    var model = this._editor.getModel();\n\n    var position = new Position(lineNumber, column);\n    var prevMatch = model.findPreviousMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(96\n    /* wordSeparators */\n    ) : null, false);\n\n    if (prevMatch && prevMatch.range.isEmpty() && prevMatch.range.getStartPosition().equals(position)) {\n      // Looks like we're stuck at this position, unacceptable!\n      position = this._prevSearchPosition(position);\n      prevMatch = model.findPreviousMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(96\n      /* wordSeparators */\n      ) : null, false);\n    }\n\n    if (!prevMatch) {\n      // there is precisely one match and selection is on top of it\n      return;\n    }\n\n    if (!isRecursed && !searchRange.containsRange(prevMatch.range)) {\n      return this._moveToPrevMatch(prevMatch.range.getStartPosition(), true);\n    }\n\n    this._setCurrentFindMatch(prevMatch.range);\n  };\n\n  FindModelBoundToEditorModel.prototype.moveToPrevMatch = function () {\n    this._moveToPrevMatch(this._editor.getSelection().getStartPosition());\n  };\n\n  FindModelBoundToEditorModel.prototype._nextSearchPosition = function (after) {\n    var isUsingLineStops = this._state.isRegex && (this._state.searchString.indexOf('^') >= 0 || this._state.searchString.indexOf('$') >= 0);\n    var lineNumber = after.lineNumber,\n        column = after.column;\n\n    var model = this._editor.getModel();\n\n    if (isUsingLineStops || column === model.getLineMaxColumn(lineNumber)) {\n      if (lineNumber === model.getLineCount()) {\n        lineNumber = 1;\n      } else {\n        lineNumber++;\n      }\n\n      column = 1;\n    } else {\n      column++;\n    }\n\n    return new Position(lineNumber, column);\n  };\n\n  FindModelBoundToEditorModel.prototype._moveToNextMatch = function (after) {\n    if (this._decorations.getCount() < MATCHES_LIMIT) {\n      var nextMatchRange = this._decorations.matchAfterPosition(after);\n\n      if (nextMatchRange && nextMatchRange.isEmpty() && nextMatchRange.getStartPosition().equals(after)) {\n        // Looks like we're stuck at this position, unacceptable!\n        after = this._nextSearchPosition(after);\n        nextMatchRange = this._decorations.matchAfterPosition(after);\n      }\n\n      if (nextMatchRange) {\n        this._setCurrentFindMatch(nextMatchRange);\n      }\n\n      return;\n    }\n\n    var nextMatch = this._getNextMatch(after, false, true);\n\n    if (nextMatch) {\n      this._setCurrentFindMatch(nextMatch.range);\n    }\n  };\n\n  FindModelBoundToEditorModel.prototype._getNextMatch = function (after, captureMatches, forceMove, isRecursed) {\n    if (isRecursed === void 0) {\n      isRecursed = false;\n    }\n\n    if (this._cannotFind()) {\n      return null;\n    }\n\n    var findScope = this._decorations.getFindScope();\n\n    var searchRange = FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), findScope); // ...(----)...|...\n\n\n    if (searchRange.getEndPosition().isBefore(after)) {\n      after = searchRange.getStartPosition();\n    } // ...|...(----)...\n\n\n    if (after.isBefore(searchRange.getStartPosition())) {\n      after = searchRange.getStartPosition();\n    }\n\n    var lineNumber = after.lineNumber,\n        column = after.column;\n\n    var model = this._editor.getModel();\n\n    var position = new Position(lineNumber, column);\n    var nextMatch = model.findNextMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(96\n    /* wordSeparators */\n    ) : null, captureMatches);\n\n    if (forceMove && nextMatch && nextMatch.range.isEmpty() && nextMatch.range.getStartPosition().equals(position)) {\n      // Looks like we're stuck at this position, unacceptable!\n      position = this._nextSearchPosition(position);\n      nextMatch = model.findNextMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(96\n      /* wordSeparators */\n      ) : null, captureMatches);\n    }\n\n    if (!nextMatch) {\n      // there is precisely one match and selection is on top of it\n      return null;\n    }\n\n    if (!isRecursed && !searchRange.containsRange(nextMatch.range)) {\n      return this._getNextMatch(nextMatch.range.getEndPosition(), captureMatches, forceMove, true);\n    }\n\n    return nextMatch;\n  };\n\n  FindModelBoundToEditorModel.prototype.moveToNextMatch = function () {\n    this._moveToNextMatch(this._editor.getSelection().getEndPosition());\n  };\n\n  FindModelBoundToEditorModel.prototype._getReplacePattern = function () {\n    if (this._state.isRegex) {\n      return parseReplaceString(this._state.replaceString);\n    }\n\n    return ReplacePattern.fromStaticValue(this._state.replaceString);\n  };\n\n  FindModelBoundToEditorModel.prototype.replace = function () {\n    if (!this._hasMatches()) {\n      return;\n    }\n\n    var replacePattern = this._getReplacePattern();\n\n    var selection = this._editor.getSelection();\n\n    var nextMatch = this._getNextMatch(selection.getStartPosition(), true, false);\n\n    if (nextMatch) {\n      if (selection.equalsRange(nextMatch.range)) {\n        // selection sits on a find match => replace it!\n        var replaceString = replacePattern.buildReplaceString(nextMatch.matches, this._state.preserveCase);\n        var command = new ReplaceCommand(selection, replaceString);\n\n        this._executeEditorCommand('replace', command);\n\n        this._decorations.setStartPosition(new Position(selection.startLineNumber, selection.startColumn + replaceString.length));\n\n        this.research(true);\n      } else {\n        this._decorations.setStartPosition(this._editor.getPosition());\n\n        this._setCurrentFindMatch(nextMatch.range);\n      }\n    }\n  };\n\n  FindModelBoundToEditorModel.prototype._findMatches = function (findScope, captureMatches, limitResultCount) {\n    var searchRange = FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), findScope);\n\n    return this._editor.getModel().findMatches(this._state.searchString, searchRange, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(96\n    /* wordSeparators */\n    ) : null, captureMatches, limitResultCount);\n  };\n\n  FindModelBoundToEditorModel.prototype.replaceAll = function () {\n    if (!this._hasMatches()) {\n      return;\n    }\n\n    var findScope = this._decorations.getFindScope();\n\n    if (findScope === null && this._state.matchesCount >= MATCHES_LIMIT) {\n      // Doing a replace on the entire file that is over ${MATCHES_LIMIT} matches\n      this._largeReplaceAll();\n    } else {\n      this._regularReplaceAll(findScope);\n    }\n\n    this.research(false);\n  };\n\n  FindModelBoundToEditorModel.prototype._largeReplaceAll = function () {\n    var searchParams = new SearchParams(this._state.searchString, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(96\n    /* wordSeparators */\n    ) : null);\n    var searchData = searchParams.parseSearchRequest();\n\n    if (!searchData) {\n      return;\n    }\n\n    var searchRegex = searchData.regex;\n\n    if (!searchRegex.multiline) {\n      var mod = 'mu';\n\n      if (searchRegex.ignoreCase) {\n        mod += 'i';\n      }\n\n      if (searchRegex.global) {\n        mod += 'g';\n      }\n\n      searchRegex = new RegExp(searchRegex.source, mod);\n    }\n\n    var model = this._editor.getModel();\n\n    var modelText = model.getValue(1\n    /* LF */\n    );\n    var fullModelRange = model.getFullModelRange();\n\n    var replacePattern = this._getReplacePattern();\n\n    var resultText;\n    var preserveCase = this._state.preserveCase;\n\n    if (replacePattern.hasReplacementPatterns || preserveCase) {\n      resultText = modelText.replace(searchRegex, function () {\n        return replacePattern.buildReplaceString(arguments, preserveCase);\n      });\n    } else {\n      resultText = modelText.replace(searchRegex, replacePattern.buildReplaceString(null, preserveCase));\n    }\n\n    var command = new ReplaceCommandThatPreservesSelection(fullModelRange, resultText, this._editor.getSelection());\n\n    this._executeEditorCommand('replaceAll', command);\n  };\n\n  FindModelBoundToEditorModel.prototype._regularReplaceAll = function (findScope) {\n    var replacePattern = this._getReplacePattern(); // Get all the ranges (even more than the highlighted ones)\n\n\n    var matches = this._findMatches(findScope, replacePattern.hasReplacementPatterns || this._state.preserveCase, 1073741824\n    /* MAX_SAFE_SMALL_INTEGER */\n    );\n\n    var replaceStrings = [];\n\n    for (var i = 0, len = matches.length; i < len; i++) {\n      replaceStrings[i] = replacePattern.buildReplaceString(matches[i].matches, this._state.preserveCase);\n    }\n\n    var command = new ReplaceAllCommand(this._editor.getSelection(), matches.map(function (m) {\n      return m.range;\n    }), replaceStrings);\n\n    this._executeEditorCommand('replaceAll', command);\n  };\n\n  FindModelBoundToEditorModel.prototype.selectAllMatches = function () {\n    if (!this._hasMatches()) {\n      return;\n    }\n\n    var findScope = this._decorations.getFindScope(); // Get all the ranges (even more than the highlighted ones)\n\n\n    var matches = this._findMatches(findScope, false, 1073741824\n    /* MAX_SAFE_SMALL_INTEGER */\n    );\n\n    var selections = matches.map(function (m) {\n      return new Selection(m.range.startLineNumber, m.range.startColumn, m.range.endLineNumber, m.range.endColumn);\n    }); // If one of the ranges is the editor selection, then maintain it as primary\n\n    var editorSelection = this._editor.getSelection();\n\n    for (var i = 0, len = selections.length; i < len; i++) {\n      var sel = selections[i];\n\n      if (sel.equalsRange(editorSelection)) {\n        selections = [editorSelection].concat(selections.slice(0, i)).concat(selections.slice(i + 1));\n        break;\n      }\n    }\n\n    this._editor.setSelections(selections);\n  };\n\n  FindModelBoundToEditorModel.prototype._executeEditorCommand = function (source, command) {\n    try {\n      this._ignoreModelContentChanged = true;\n\n      this._editor.pushUndoStop();\n\n      this._editor.executeCommand(source, command);\n\n      this._editor.pushUndoStop();\n    } finally {\n      this._ignoreModelContentChanged = false;\n    }\n  };\n\n  return FindModelBoundToEditorModel;\n}();\n\nexport { FindModelBoundToEditorModel };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/contrib/find/findModel.js"],"names":["RunOnceScheduler","TimeoutTimer","dispose","DisposableStore","ReplaceCommand","ReplaceCommandThatPreservesSelection","Position","Range","Selection","SearchParams","FindDecorations","ReplaceAllCommand","ReplacePattern","parseReplaceString","RawContextKey","CONTEXT_FIND_WIDGET_VISIBLE","CONTEXT_FIND_INPUT_FOCUSED","CONTEXT_REPLACE_INPUT_FOCUSED","ToggleCaseSensitiveKeybinding","primary","mac","ToggleWholeWordKeybinding","ToggleRegexKeybinding","ToggleSearchScopeKeybinding","FIND_IDS","StartFindAction","StartFindWithSelection","NextMatchFindAction","PreviousMatchFindAction","NextSelectionMatchFindAction","PreviousSelectionMatchFindAction","StartFindReplaceAction","CloseFindWidgetCommand","ToggleCaseSensitiveCommand","ToggleWholeWordCommand","ToggleRegexCommand","ToggleSearchScopeCommand","TogglePreserveCaseCommand","ReplaceOneAction","ReplaceAllAction","SelectAllMatchesAction","MATCHES_LIMIT","RESEARCH_DELAY","FindModelBoundToEditorModel","editor","state","_this","_toDispose","_editor","_state","_isDisposed","_startSearchingTimer","_decorations","add","_updateDecorationsScheduler","research","onDidChangeCursorPosition","e","reason","setStartPosition","getPosition","_ignoreModelContentChanged","onDidChangeModelContent","isFlush","reset","schedule","onFindReplaceStateChange","_onStateChanged","searchScope","prototype","hasModel","searchString","isReplaceRevealed","isRegex","wholeWord","matchCase","model","getModel","isTooLargeForSyncing","cancel","setIfNotSet","moveCursor","_getSearchRange","findScope","getFullModelRange","newFindScope","getFindScope","startLineNumber","endLineNumber","endColumn","getLineMaxColumn","findMatches","_findMatches","set","changeMatchInfo","getCurrentMatchesPosition","getSelection","getCount","undefined","_moveToNextMatch","getStartPosition","_hasMatches","matchesCount","_cannotFind","revealRangeInCenterIfOutsideViewport","_setCurrentFindMatch","match","matchesPosition","setCurrentFindMatch","setSelection","_prevSearchPosition","before","isUsingLineStops","indexOf","lineNumber","column","getLineCount","_moveToPrevMatch","isRecursed","prevMatchRange","matchBeforePosition","isEmpty","equals","searchRange","getEndPosition","isBefore","position","prevMatch","findPreviousMatch","getOption","range","containsRange","moveToPrevMatch","_nextSearchPosition","after","nextMatchRange","matchAfterPosition","nextMatch","_getNextMatch","captureMatches","forceMove","findNextMatch","moveToNextMatch","_getReplacePattern","replaceString","fromStaticValue","replace","replacePattern","selection","equalsRange","buildReplaceString","matches","preserveCase","command","_executeEditorCommand","startColumn","length","limitResultCount","replaceAll","_largeReplaceAll","_regularReplaceAll","searchParams","searchData","parseSearchRequest","searchRegex","regex","multiline","mod","ignoreCase","global","RegExp","source","modelText","getValue","fullModelRange","resultText","hasReplacementPatterns","arguments","replaceStrings","i","len","map","m","selectAllMatches","selections","editorSelection","sel","concat","slice","setSelections","pushUndoStop","executeCommand"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { RunOnceScheduler, TimeoutTimer } from '../../../base/common/async.js';\r\nimport { dispose, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { ReplaceCommand, ReplaceCommandThatPreservesSelection } from '../../common/commands/replaceCommand.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { SearchParams } from '../../common/model/textModelSearch.js';\r\nimport { FindDecorations } from './findDecorations.js';\r\nimport { ReplaceAllCommand } from './replaceAllCommand.js';\r\nimport { ReplacePattern, parseReplaceString } from './replacePattern.js';\r\nimport { RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\r\nexport var CONTEXT_FIND_WIDGET_VISIBLE = new RawContextKey('findWidgetVisible', false);\r\n// Keep ContextKey use of 'Focussed' to not break when clauses\r\nexport var CONTEXT_FIND_INPUT_FOCUSED = new RawContextKey('findInputFocussed', false);\r\nexport var CONTEXT_REPLACE_INPUT_FOCUSED = new RawContextKey('replaceInputFocussed', false);\r\nexport var ToggleCaseSensitiveKeybinding = {\r\n    primary: 512 /* Alt */ | 33 /* KEY_C */,\r\n    mac: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 33 /* KEY_C */ }\r\n};\r\nexport var ToggleWholeWordKeybinding = {\r\n    primary: 512 /* Alt */ | 53 /* KEY_W */,\r\n    mac: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 53 /* KEY_W */ }\r\n};\r\nexport var ToggleRegexKeybinding = {\r\n    primary: 512 /* Alt */ | 48 /* KEY_R */,\r\n    mac: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 48 /* KEY_R */ }\r\n};\r\nexport var ToggleSearchScopeKeybinding = {\r\n    primary: 512 /* Alt */ | 42 /* KEY_L */,\r\n    mac: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 42 /* KEY_L */ }\r\n};\r\nexport var FIND_IDS = {\r\n    StartFindAction: 'actions.find',\r\n    StartFindWithSelection: 'actions.findWithSelection',\r\n    NextMatchFindAction: 'editor.action.nextMatchFindAction',\r\n    PreviousMatchFindAction: 'editor.action.previousMatchFindAction',\r\n    NextSelectionMatchFindAction: 'editor.action.nextSelectionMatchFindAction',\r\n    PreviousSelectionMatchFindAction: 'editor.action.previousSelectionMatchFindAction',\r\n    StartFindReplaceAction: 'editor.action.startFindReplaceAction',\r\n    CloseFindWidgetCommand: 'closeFindWidget',\r\n    ToggleCaseSensitiveCommand: 'toggleFindCaseSensitive',\r\n    ToggleWholeWordCommand: 'toggleFindWholeWord',\r\n    ToggleRegexCommand: 'toggleFindRegex',\r\n    ToggleSearchScopeCommand: 'toggleFindInSelection',\r\n    TogglePreserveCaseCommand: 'togglePreserveCase',\r\n    ReplaceOneAction: 'editor.action.replaceOne',\r\n    ReplaceAllAction: 'editor.action.replaceAll',\r\n    SelectAllMatchesAction: 'editor.action.selectAllMatches'\r\n};\r\nexport var MATCHES_LIMIT = 19999;\r\nvar RESEARCH_DELAY = 240;\r\nvar FindModelBoundToEditorModel = /** @class */ (function () {\r\n    function FindModelBoundToEditorModel(editor, state) {\r\n        var _this = this;\r\n        this._toDispose = new DisposableStore();\r\n        this._editor = editor;\r\n        this._state = state;\r\n        this._isDisposed = false;\r\n        this._startSearchingTimer = new TimeoutTimer();\r\n        this._decorations = new FindDecorations(editor);\r\n        this._toDispose.add(this._decorations);\r\n        this._updateDecorationsScheduler = new RunOnceScheduler(function () { return _this.research(false); }, 100);\r\n        this._toDispose.add(this._updateDecorationsScheduler);\r\n        this._toDispose.add(this._editor.onDidChangeCursorPosition(function (e) {\r\n            if (e.reason === 3 /* Explicit */\r\n                || e.reason === 5 /* Undo */\r\n                || e.reason === 6 /* Redo */) {\r\n                _this._decorations.setStartPosition(_this._editor.getPosition());\r\n            }\r\n        }));\r\n        this._ignoreModelContentChanged = false;\r\n        this._toDispose.add(this._editor.onDidChangeModelContent(function (e) {\r\n            if (_this._ignoreModelContentChanged) {\r\n                return;\r\n            }\r\n            if (e.isFlush) {\r\n                // a model.setValue() was called\r\n                _this._decorations.reset();\r\n            }\r\n            _this._decorations.setStartPosition(_this._editor.getPosition());\r\n            _this._updateDecorationsScheduler.schedule();\r\n        }));\r\n        this._toDispose.add(this._state.onFindReplaceStateChange(function (e) { return _this._onStateChanged(e); }));\r\n        this.research(false, this._state.searchScope);\r\n    }\r\n    FindModelBoundToEditorModel.prototype.dispose = function () {\r\n        this._isDisposed = true;\r\n        dispose(this._startSearchingTimer);\r\n        this._toDispose.dispose();\r\n    };\r\n    FindModelBoundToEditorModel.prototype._onStateChanged = function (e) {\r\n        var _this = this;\r\n        if (this._isDisposed) {\r\n            // The find model is disposed during a find state changed event\r\n            return;\r\n        }\r\n        if (!this._editor.hasModel()) {\r\n            // The find model will be disposed momentarily\r\n            return;\r\n        }\r\n        if (e.searchString || e.isReplaceRevealed || e.isRegex || e.wholeWord || e.matchCase || e.searchScope) {\r\n            var model = this._editor.getModel();\r\n            if (model.isTooLargeForSyncing()) {\r\n                this._startSearchingTimer.cancel();\r\n                this._startSearchingTimer.setIfNotSet(function () {\r\n                    if (e.searchScope) {\r\n                        _this.research(e.moveCursor, _this._state.searchScope);\r\n                    }\r\n                    else {\r\n                        _this.research(e.moveCursor);\r\n                    }\r\n                }, RESEARCH_DELAY);\r\n            }\r\n            else {\r\n                if (e.searchScope) {\r\n                    this.research(e.moveCursor, this._state.searchScope);\r\n                }\r\n                else {\r\n                    this.research(e.moveCursor);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    FindModelBoundToEditorModel._getSearchRange = function (model, findScope) {\r\n        // If we have set now or before a find scope, use it for computing the search range\r\n        if (findScope) {\r\n            return findScope;\r\n        }\r\n        return model.getFullModelRange();\r\n    };\r\n    FindModelBoundToEditorModel.prototype.research = function (moveCursor, newFindScope) {\r\n        var findScope = null;\r\n        if (typeof newFindScope !== 'undefined') {\r\n            findScope = newFindScope;\r\n        }\r\n        else {\r\n            findScope = this._decorations.getFindScope();\r\n        }\r\n        if (findScope !== null) {\r\n            if (findScope.startLineNumber !== findScope.endLineNumber) {\r\n                if (findScope.endColumn === 1) {\r\n                    findScope = new Range(findScope.startLineNumber, 1, findScope.endLineNumber - 1, this._editor.getModel().getLineMaxColumn(findScope.endLineNumber - 1));\r\n                }\r\n                else {\r\n                    // multiline find scope => expand to line starts / ends\r\n                    findScope = new Range(findScope.startLineNumber, 1, findScope.endLineNumber, this._editor.getModel().getLineMaxColumn(findScope.endLineNumber));\r\n                }\r\n            }\r\n        }\r\n        var findMatches = this._findMatches(findScope, false, MATCHES_LIMIT);\r\n        this._decorations.set(findMatches, findScope);\r\n        this._state.changeMatchInfo(this._decorations.getCurrentMatchesPosition(this._editor.getSelection()), this._decorations.getCount(), undefined);\r\n        if (moveCursor) {\r\n            this._moveToNextMatch(this._decorations.getStartPosition());\r\n        }\r\n    };\r\n    FindModelBoundToEditorModel.prototype._hasMatches = function () {\r\n        return (this._state.matchesCount > 0);\r\n    };\r\n    FindModelBoundToEditorModel.prototype._cannotFind = function () {\r\n        if (!this._hasMatches()) {\r\n            var findScope = this._decorations.getFindScope();\r\n            if (findScope) {\r\n                // Reveal the selection so user is reminded that 'selection find' is on.\r\n                this._editor.revealRangeInCenterIfOutsideViewport(findScope, 0 /* Smooth */);\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    FindModelBoundToEditorModel.prototype._setCurrentFindMatch = function (match) {\r\n        var matchesPosition = this._decorations.setCurrentFindMatch(match);\r\n        this._state.changeMatchInfo(matchesPosition, this._decorations.getCount(), match);\r\n        this._editor.setSelection(match);\r\n        this._editor.revealRangeInCenterIfOutsideViewport(match, 0 /* Smooth */);\r\n    };\r\n    FindModelBoundToEditorModel.prototype._prevSearchPosition = function (before) {\r\n        var isUsingLineStops = this._state.isRegex && (this._state.searchString.indexOf('^') >= 0\r\n            || this._state.searchString.indexOf('$') >= 0);\r\n        var lineNumber = before.lineNumber, column = before.column;\r\n        var model = this._editor.getModel();\r\n        if (isUsingLineStops || column === 1) {\r\n            if (lineNumber === 1) {\r\n                lineNumber = model.getLineCount();\r\n            }\r\n            else {\r\n                lineNumber--;\r\n            }\r\n            column = model.getLineMaxColumn(lineNumber);\r\n        }\r\n        else {\r\n            column--;\r\n        }\r\n        return new Position(lineNumber, column);\r\n    };\r\n    FindModelBoundToEditorModel.prototype._moveToPrevMatch = function (before, isRecursed) {\r\n        if (isRecursed === void 0) { isRecursed = false; }\r\n        if (this._decorations.getCount() < MATCHES_LIMIT) {\r\n            var prevMatchRange = this._decorations.matchBeforePosition(before);\r\n            if (prevMatchRange && prevMatchRange.isEmpty() && prevMatchRange.getStartPosition().equals(before)) {\r\n                before = this._prevSearchPosition(before);\r\n                prevMatchRange = this._decorations.matchBeforePosition(before);\r\n            }\r\n            if (prevMatchRange) {\r\n                this._setCurrentFindMatch(prevMatchRange);\r\n            }\r\n            return;\r\n        }\r\n        if (this._cannotFind()) {\r\n            return;\r\n        }\r\n        var findScope = this._decorations.getFindScope();\r\n        var searchRange = FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), findScope);\r\n        // ...(----)...|...\r\n        if (searchRange.getEndPosition().isBefore(before)) {\r\n            before = searchRange.getEndPosition();\r\n        }\r\n        // ...|...(----)...\r\n        if (before.isBefore(searchRange.getStartPosition())) {\r\n            before = searchRange.getEndPosition();\r\n        }\r\n        var lineNumber = before.lineNumber, column = before.column;\r\n        var model = this._editor.getModel();\r\n        var position = new Position(lineNumber, column);\r\n        var prevMatch = model.findPreviousMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(96 /* wordSeparators */) : null, false);\r\n        if (prevMatch && prevMatch.range.isEmpty() && prevMatch.range.getStartPosition().equals(position)) {\r\n            // Looks like we're stuck at this position, unacceptable!\r\n            position = this._prevSearchPosition(position);\r\n            prevMatch = model.findPreviousMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(96 /* wordSeparators */) : null, false);\r\n        }\r\n        if (!prevMatch) {\r\n            // there is precisely one match and selection is on top of it\r\n            return;\r\n        }\r\n        if (!isRecursed && !searchRange.containsRange(prevMatch.range)) {\r\n            return this._moveToPrevMatch(prevMatch.range.getStartPosition(), true);\r\n        }\r\n        this._setCurrentFindMatch(prevMatch.range);\r\n    };\r\n    FindModelBoundToEditorModel.prototype.moveToPrevMatch = function () {\r\n        this._moveToPrevMatch(this._editor.getSelection().getStartPosition());\r\n    };\r\n    FindModelBoundToEditorModel.prototype._nextSearchPosition = function (after) {\r\n        var isUsingLineStops = this._state.isRegex && (this._state.searchString.indexOf('^') >= 0\r\n            || this._state.searchString.indexOf('$') >= 0);\r\n        var lineNumber = after.lineNumber, column = after.column;\r\n        var model = this._editor.getModel();\r\n        if (isUsingLineStops || column === model.getLineMaxColumn(lineNumber)) {\r\n            if (lineNumber === model.getLineCount()) {\r\n                lineNumber = 1;\r\n            }\r\n            else {\r\n                lineNumber++;\r\n            }\r\n            column = 1;\r\n        }\r\n        else {\r\n            column++;\r\n        }\r\n        return new Position(lineNumber, column);\r\n    };\r\n    FindModelBoundToEditorModel.prototype._moveToNextMatch = function (after) {\r\n        if (this._decorations.getCount() < MATCHES_LIMIT) {\r\n            var nextMatchRange = this._decorations.matchAfterPosition(after);\r\n            if (nextMatchRange && nextMatchRange.isEmpty() && nextMatchRange.getStartPosition().equals(after)) {\r\n                // Looks like we're stuck at this position, unacceptable!\r\n                after = this._nextSearchPosition(after);\r\n                nextMatchRange = this._decorations.matchAfterPosition(after);\r\n            }\r\n            if (nextMatchRange) {\r\n                this._setCurrentFindMatch(nextMatchRange);\r\n            }\r\n            return;\r\n        }\r\n        var nextMatch = this._getNextMatch(after, false, true);\r\n        if (nextMatch) {\r\n            this._setCurrentFindMatch(nextMatch.range);\r\n        }\r\n    };\r\n    FindModelBoundToEditorModel.prototype._getNextMatch = function (after, captureMatches, forceMove, isRecursed) {\r\n        if (isRecursed === void 0) { isRecursed = false; }\r\n        if (this._cannotFind()) {\r\n            return null;\r\n        }\r\n        var findScope = this._decorations.getFindScope();\r\n        var searchRange = FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), findScope);\r\n        // ...(----)...|...\r\n        if (searchRange.getEndPosition().isBefore(after)) {\r\n            after = searchRange.getStartPosition();\r\n        }\r\n        // ...|...(----)...\r\n        if (after.isBefore(searchRange.getStartPosition())) {\r\n            after = searchRange.getStartPosition();\r\n        }\r\n        var lineNumber = after.lineNumber, column = after.column;\r\n        var model = this._editor.getModel();\r\n        var position = new Position(lineNumber, column);\r\n        var nextMatch = model.findNextMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(96 /* wordSeparators */) : null, captureMatches);\r\n        if (forceMove && nextMatch && nextMatch.range.isEmpty() && nextMatch.range.getStartPosition().equals(position)) {\r\n            // Looks like we're stuck at this position, unacceptable!\r\n            position = this._nextSearchPosition(position);\r\n            nextMatch = model.findNextMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(96 /* wordSeparators */) : null, captureMatches);\r\n        }\r\n        if (!nextMatch) {\r\n            // there is precisely one match and selection is on top of it\r\n            return null;\r\n        }\r\n        if (!isRecursed && !searchRange.containsRange(nextMatch.range)) {\r\n            return this._getNextMatch(nextMatch.range.getEndPosition(), captureMatches, forceMove, true);\r\n        }\r\n        return nextMatch;\r\n    };\r\n    FindModelBoundToEditorModel.prototype.moveToNextMatch = function () {\r\n        this._moveToNextMatch(this._editor.getSelection().getEndPosition());\r\n    };\r\n    FindModelBoundToEditorModel.prototype._getReplacePattern = function () {\r\n        if (this._state.isRegex) {\r\n            return parseReplaceString(this._state.replaceString);\r\n        }\r\n        return ReplacePattern.fromStaticValue(this._state.replaceString);\r\n    };\r\n    FindModelBoundToEditorModel.prototype.replace = function () {\r\n        if (!this._hasMatches()) {\r\n            return;\r\n        }\r\n        var replacePattern = this._getReplacePattern();\r\n        var selection = this._editor.getSelection();\r\n        var nextMatch = this._getNextMatch(selection.getStartPosition(), true, false);\r\n        if (nextMatch) {\r\n            if (selection.equalsRange(nextMatch.range)) {\r\n                // selection sits on a find match => replace it!\r\n                var replaceString = replacePattern.buildReplaceString(nextMatch.matches, this._state.preserveCase);\r\n                var command = new ReplaceCommand(selection, replaceString);\r\n                this._executeEditorCommand('replace', command);\r\n                this._decorations.setStartPosition(new Position(selection.startLineNumber, selection.startColumn + replaceString.length));\r\n                this.research(true);\r\n            }\r\n            else {\r\n                this._decorations.setStartPosition(this._editor.getPosition());\r\n                this._setCurrentFindMatch(nextMatch.range);\r\n            }\r\n        }\r\n    };\r\n    FindModelBoundToEditorModel.prototype._findMatches = function (findScope, captureMatches, limitResultCount) {\r\n        var searchRange = FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), findScope);\r\n        return this._editor.getModel().findMatches(this._state.searchString, searchRange, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(96 /* wordSeparators */) : null, captureMatches, limitResultCount);\r\n    };\r\n    FindModelBoundToEditorModel.prototype.replaceAll = function () {\r\n        if (!this._hasMatches()) {\r\n            return;\r\n        }\r\n        var findScope = this._decorations.getFindScope();\r\n        if (findScope === null && this._state.matchesCount >= MATCHES_LIMIT) {\r\n            // Doing a replace on the entire file that is over ${MATCHES_LIMIT} matches\r\n            this._largeReplaceAll();\r\n        }\r\n        else {\r\n            this._regularReplaceAll(findScope);\r\n        }\r\n        this.research(false);\r\n    };\r\n    FindModelBoundToEditorModel.prototype._largeReplaceAll = function () {\r\n        var searchParams = new SearchParams(this._state.searchString, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(96 /* wordSeparators */) : null);\r\n        var searchData = searchParams.parseSearchRequest();\r\n        if (!searchData) {\r\n            return;\r\n        }\r\n        var searchRegex = searchData.regex;\r\n        if (!searchRegex.multiline) {\r\n            var mod = 'mu';\r\n            if (searchRegex.ignoreCase) {\r\n                mod += 'i';\r\n            }\r\n            if (searchRegex.global) {\r\n                mod += 'g';\r\n            }\r\n            searchRegex = new RegExp(searchRegex.source, mod);\r\n        }\r\n        var model = this._editor.getModel();\r\n        var modelText = model.getValue(1 /* LF */);\r\n        var fullModelRange = model.getFullModelRange();\r\n        var replacePattern = this._getReplacePattern();\r\n        var resultText;\r\n        var preserveCase = this._state.preserveCase;\r\n        if (replacePattern.hasReplacementPatterns || preserveCase) {\r\n            resultText = modelText.replace(searchRegex, function () {\r\n                return replacePattern.buildReplaceString(arguments, preserveCase);\r\n            });\r\n        }\r\n        else {\r\n            resultText = modelText.replace(searchRegex, replacePattern.buildReplaceString(null, preserveCase));\r\n        }\r\n        var command = new ReplaceCommandThatPreservesSelection(fullModelRange, resultText, this._editor.getSelection());\r\n        this._executeEditorCommand('replaceAll', command);\r\n    };\r\n    FindModelBoundToEditorModel.prototype._regularReplaceAll = function (findScope) {\r\n        var replacePattern = this._getReplacePattern();\r\n        // Get all the ranges (even more than the highlighted ones)\r\n        var matches = this._findMatches(findScope, replacePattern.hasReplacementPatterns || this._state.preserveCase, 1073741824 /* MAX_SAFE_SMALL_INTEGER */);\r\n        var replaceStrings = [];\r\n        for (var i = 0, len = matches.length; i < len; i++) {\r\n            replaceStrings[i] = replacePattern.buildReplaceString(matches[i].matches, this._state.preserveCase);\r\n        }\r\n        var command = new ReplaceAllCommand(this._editor.getSelection(), matches.map(function (m) { return m.range; }), replaceStrings);\r\n        this._executeEditorCommand('replaceAll', command);\r\n    };\r\n    FindModelBoundToEditorModel.prototype.selectAllMatches = function () {\r\n        if (!this._hasMatches()) {\r\n            return;\r\n        }\r\n        var findScope = this._decorations.getFindScope();\r\n        // Get all the ranges (even more than the highlighted ones)\r\n        var matches = this._findMatches(findScope, false, 1073741824 /* MAX_SAFE_SMALL_INTEGER */);\r\n        var selections = matches.map(function (m) { return new Selection(m.range.startLineNumber, m.range.startColumn, m.range.endLineNumber, m.range.endColumn); });\r\n        // If one of the ranges is the editor selection, then maintain it as primary\r\n        var editorSelection = this._editor.getSelection();\r\n        for (var i = 0, len = selections.length; i < len; i++) {\r\n            var sel = selections[i];\r\n            if (sel.equalsRange(editorSelection)) {\r\n                selections = [editorSelection].concat(selections.slice(0, i)).concat(selections.slice(i + 1));\r\n                break;\r\n            }\r\n        }\r\n        this._editor.setSelections(selections);\r\n    };\r\n    FindModelBoundToEditorModel.prototype._executeEditorCommand = function (source, command) {\r\n        try {\r\n            this._ignoreModelContentChanged = true;\r\n            this._editor.pushUndoStop();\r\n            this._editor.executeCommand(source, command);\r\n            this._editor.pushUndoStop();\r\n        }\r\n        finally {\r\n            this._ignoreModelContentChanged = false;\r\n        }\r\n    };\r\n    return FindModelBoundToEditorModel;\r\n}());\r\nexport { FindModelBoundToEditorModel };\r\n"]},"metadata":{},"sourceType":"module"}