{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { CancellationTokenSource } from './cancellation.js';\nimport * as errors from './errors.js';\nimport { toDisposable } from './lifecycle.js';\nexport function isThenable(obj) {\n  return obj && typeof obj.then === 'function';\n}\nexport function createCancelablePromise(callback) {\n  var source = new CancellationTokenSource();\n  var thenable = callback(source.token);\n  var promise = new Promise(function (resolve, reject) {\n    source.token.onCancellationRequested(function () {\n      reject(errors.canceled());\n    });\n    Promise.resolve(thenable).then(function (value) {\n      source.dispose();\n      resolve(value);\n    }, function (err) {\n      source.dispose();\n      reject(err);\n    });\n  });\n  return new (\n  /** @class */\n  function () {\n    function class_1() {}\n\n    class_1.prototype.cancel = function () {\n      source.cancel();\n    };\n\n    class_1.prototype.then = function (resolve, reject) {\n      return promise.then(resolve, reject);\n    };\n\n    class_1.prototype.catch = function (reject) {\n      return this.then(undefined, reject);\n    };\n\n    class_1.prototype.finally = function (onfinally) {\n      return promise.finally(onfinally);\n    };\n\n    return class_1;\n  }())();\n}\nexport function raceCancellation(promise, token, defaultValue) {\n  return Promise.race([promise, new Promise(function (resolve) {\n    return token.onCancellationRequested(function () {\n      return resolve(defaultValue);\n    });\n  })]);\n}\n/**\r\n * A helper to delay execution of a task that is being requested often.\r\n *\r\n * Following the throttler, now imagine the mail man wants to optimize the number of\r\n * trips proactively. The trip itself can be long, so he decides not to make the trip\r\n * as soon as a letter is submitted. Instead he waits a while, in case more\r\n * letters are submitted. After said waiting period, if no letters were submitted, he\r\n * decides to make the trip. Imagine that N more letters were submitted after the first\r\n * one, all within a short period of time between each other. Even though N+1\r\n * submissions occurred, only 1 delivery was made.\r\n *\r\n * The delayer offers this behavior via the trigger() method, into which both the task\r\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\r\n * the example:\r\n *\r\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\r\n * \t\tconst letters = [];\r\n *\r\n * \t\tfunction letterReceived(l) {\r\n * \t\t\tletters.push(l);\r\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\r\n * \t\t}\r\n */\n\nvar Delayer =\n/** @class */\nfunction () {\n  function Delayer(defaultDelay) {\n    this.defaultDelay = defaultDelay;\n    this.timeout = null;\n    this.completionPromise = null;\n    this.doResolve = null;\n    this.doReject = null;\n    this.task = null;\n  }\n\n  Delayer.prototype.trigger = function (task, delay) {\n    var _this = this;\n\n    if (delay === void 0) {\n      delay = this.defaultDelay;\n    }\n\n    this.task = task;\n    this.cancelTimeout();\n\n    if (!this.completionPromise) {\n      this.completionPromise = new Promise(function (c, e) {\n        _this.doResolve = c;\n        _this.doReject = e;\n      }).then(function () {\n        _this.completionPromise = null;\n        _this.doResolve = null;\n\n        if (_this.task) {\n          var task_1 = _this.task;\n          _this.task = null;\n          return task_1();\n        }\n\n        return undefined;\n      });\n    }\n\n    this.timeout = setTimeout(function () {\n      _this.timeout = null;\n\n      if (_this.doResolve) {\n        _this.doResolve(null);\n      }\n    }, delay);\n    return this.completionPromise;\n  };\n\n  Delayer.prototype.isTriggered = function () {\n    return this.timeout !== null;\n  };\n\n  Delayer.prototype.cancel = function () {\n    this.cancelTimeout();\n\n    if (this.completionPromise) {\n      if (this.doReject) {\n        this.doReject(errors.canceled());\n      }\n\n      this.completionPromise = null;\n    }\n  };\n\n  Delayer.prototype.cancelTimeout = function () {\n    if (this.timeout !== null) {\n      clearTimeout(this.timeout);\n      this.timeout = null;\n    }\n  };\n\n  Delayer.prototype.dispose = function () {\n    this.cancelTimeout();\n  };\n\n  return Delayer;\n}();\n\nexport { Delayer };\nexport function timeout(millis, token) {\n  if (!token) {\n    return createCancelablePromise(function (token) {\n      return timeout(millis, token);\n    });\n  }\n\n  return new Promise(function (resolve, reject) {\n    var handle = setTimeout(resolve, millis);\n    token.onCancellationRequested(function () {\n      clearTimeout(handle);\n      reject(errors.canceled());\n    });\n  });\n}\nexport function disposableTimeout(handler, timeout) {\n  if (timeout === void 0) {\n    timeout = 0;\n  }\n\n  var timer = setTimeout(handler, timeout);\n  return toDisposable(function () {\n    return clearTimeout(timer);\n  });\n}\nexport function first(promiseFactories, shouldStop, defaultValue) {\n  if (shouldStop === void 0) {\n    shouldStop = function (t) {\n      return !!t;\n    };\n  }\n\n  if (defaultValue === void 0) {\n    defaultValue = null;\n  }\n\n  var index = 0;\n  var len = promiseFactories.length;\n\n  var loop = function () {\n    if (index >= len) {\n      return Promise.resolve(defaultValue);\n    }\n\n    var factory = promiseFactories[index++];\n    var promise = Promise.resolve(factory());\n    return promise.then(function (result) {\n      if (shouldStop(result)) {\n        return Promise.resolve(result);\n      }\n\n      return loop();\n    });\n  };\n\n  return loop();\n}\n\nvar TimeoutTimer =\n/** @class */\nfunction () {\n  function TimeoutTimer(runner, timeout) {\n    this._token = -1;\n\n    if (typeof runner === 'function' && typeof timeout === 'number') {\n      this.setIfNotSet(runner, timeout);\n    }\n  }\n\n  TimeoutTimer.prototype.dispose = function () {\n    this.cancel();\n  };\n\n  TimeoutTimer.prototype.cancel = function () {\n    if (this._token !== -1) {\n      clearTimeout(this._token);\n      this._token = -1;\n    }\n  };\n\n  TimeoutTimer.prototype.cancelAndSet = function (runner, timeout) {\n    var _this = this;\n\n    this.cancel();\n    this._token = setTimeout(function () {\n      _this._token = -1;\n      runner();\n    }, timeout);\n  };\n\n  TimeoutTimer.prototype.setIfNotSet = function (runner, timeout) {\n    var _this = this;\n\n    if (this._token !== -1) {\n      // timer is already set\n      return;\n    }\n\n    this._token = setTimeout(function () {\n      _this._token = -1;\n      runner();\n    }, timeout);\n  };\n\n  return TimeoutTimer;\n}();\n\nexport { TimeoutTimer };\n\nvar IntervalTimer =\n/** @class */\nfunction () {\n  function IntervalTimer() {\n    this._token = -1;\n  }\n\n  IntervalTimer.prototype.dispose = function () {\n    this.cancel();\n  };\n\n  IntervalTimer.prototype.cancel = function () {\n    if (this._token !== -1) {\n      clearInterval(this._token);\n      this._token = -1;\n    }\n  };\n\n  IntervalTimer.prototype.cancelAndSet = function (runner, interval) {\n    this.cancel();\n    this._token = setInterval(function () {\n      runner();\n    }, interval);\n  };\n\n  return IntervalTimer;\n}();\n\nexport { IntervalTimer };\n\nvar RunOnceScheduler =\n/** @class */\nfunction () {\n  function RunOnceScheduler(runner, timeout) {\n    this.timeoutToken = -1;\n    this.runner = runner;\n    this.timeout = timeout;\n    this.timeoutHandler = this.onTimeout.bind(this);\n  }\n  /**\r\n   * Dispose RunOnceScheduler\r\n   */\n\n\n  RunOnceScheduler.prototype.dispose = function () {\n    this.cancel();\n    this.runner = null;\n  };\n  /**\r\n   * Cancel current scheduled runner (if any).\r\n   */\n\n\n  RunOnceScheduler.prototype.cancel = function () {\n    if (this.isScheduled()) {\n      clearTimeout(this.timeoutToken);\n      this.timeoutToken = -1;\n    }\n  };\n  /**\r\n   * Cancel previous runner (if any) & schedule a new runner.\r\n   */\n\n\n  RunOnceScheduler.prototype.schedule = function (delay) {\n    if (delay === void 0) {\n      delay = this.timeout;\n    }\n\n    this.cancel();\n    this.timeoutToken = setTimeout(this.timeoutHandler, delay);\n  };\n  /**\r\n   * Returns true if scheduled.\r\n   */\n\n\n  RunOnceScheduler.prototype.isScheduled = function () {\n    return this.timeoutToken !== -1;\n  };\n\n  RunOnceScheduler.prototype.onTimeout = function () {\n    this.timeoutToken = -1;\n\n    if (this.runner) {\n      this.doRun();\n    }\n  };\n\n  RunOnceScheduler.prototype.doRun = function () {\n    if (this.runner) {\n      this.runner();\n    }\n  };\n\n  return RunOnceScheduler;\n}();\n\nexport { RunOnceScheduler };\n/**\r\n * Execute the callback the next time the browser is idle\r\n */\n\nexport var runWhenIdle;\n\n(function () {\n  if (typeof requestIdleCallback !== 'function' || typeof cancelIdleCallback !== 'function') {\n    var dummyIdle_1 = Object.freeze({\n      didTimeout: true,\n      timeRemaining: function () {\n        return 15;\n      }\n    });\n\n    runWhenIdle = function (runner) {\n      var handle = setTimeout(function () {\n        return runner(dummyIdle_1);\n      });\n      var disposed = false;\n      return {\n        dispose: function () {\n          if (disposed) {\n            return;\n          }\n\n          disposed = true;\n          clearTimeout(handle);\n        }\n      };\n    };\n  } else {\n    runWhenIdle = function (runner, timeout) {\n      var handle = requestIdleCallback(runner, typeof timeout === 'number' ? {\n        timeout: timeout\n      } : undefined);\n      var disposed = false;\n      return {\n        dispose: function () {\n          if (disposed) {\n            return;\n          }\n\n          disposed = true;\n          cancelIdleCallback(handle);\n        }\n      };\n    };\n  }\n})();\n/**\r\n * An implementation of the \"idle-until-urgent\"-strategy as introduced\r\n * here: https://philipwalton.com/articles/idle-until-urgent/\r\n */\n\n\nvar IdleValue =\n/** @class */\nfunction () {\n  function IdleValue(executor) {\n    var _this = this;\n\n    this._didRun = false;\n\n    this._executor = function () {\n      try {\n        _this._value = executor();\n      } catch (err) {\n        _this._error = err;\n      } finally {\n        _this._didRun = true;\n      }\n    };\n\n    this._handle = runWhenIdle(function () {\n      return _this._executor();\n    });\n  }\n\n  IdleValue.prototype.dispose = function () {\n    this._handle.dispose();\n  };\n\n  IdleValue.prototype.getValue = function () {\n    if (!this._didRun) {\n      this._handle.dispose();\n\n      this._executor();\n    }\n\n    if (this._error) {\n      throw this._error;\n    }\n\n    return this._value;\n  };\n\n  return IdleValue;\n}();\n\nexport { IdleValue };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/base/common/async.js"],"names":["CancellationTokenSource","errors","toDisposable","isThenable","obj","then","createCancelablePromise","callback","source","thenable","token","promise","Promise","resolve","reject","onCancellationRequested","canceled","value","dispose","err","class_1","prototype","cancel","catch","undefined","finally","onfinally","raceCancellation","defaultValue","race","Delayer","defaultDelay","timeout","completionPromise","doResolve","doReject","task","trigger","delay","_this","cancelTimeout","c","e","task_1","setTimeout","isTriggered","clearTimeout","millis","handle","disposableTimeout","handler","timer","first","promiseFactories","shouldStop","t","index","len","length","loop","factory","result","TimeoutTimer","runner","_token","setIfNotSet","cancelAndSet","IntervalTimer","clearInterval","interval","setInterval","RunOnceScheduler","timeoutToken","timeoutHandler","onTimeout","bind","isScheduled","schedule","doRun","runWhenIdle","requestIdleCallback","cancelIdleCallback","dummyIdle_1","Object","freeze","didTimeout","timeRemaining","disposed","IdleValue","executor","_didRun","_executor","_value","_error","_handle","getValue"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { CancellationTokenSource } from './cancellation.js';\r\nimport * as errors from './errors.js';\r\nimport { toDisposable } from './lifecycle.js';\r\nexport function isThenable(obj) {\r\n    return obj && typeof obj.then === 'function';\r\n}\r\nexport function createCancelablePromise(callback) {\r\n    var source = new CancellationTokenSource();\r\n    var thenable = callback(source.token);\r\n    var promise = new Promise(function (resolve, reject) {\r\n        source.token.onCancellationRequested(function () {\r\n            reject(errors.canceled());\r\n        });\r\n        Promise.resolve(thenable).then(function (value) {\r\n            source.dispose();\r\n            resolve(value);\r\n        }, function (err) {\r\n            source.dispose();\r\n            reject(err);\r\n        });\r\n    });\r\n    return new /** @class */ (function () {\r\n        function class_1() {\r\n        }\r\n        class_1.prototype.cancel = function () {\r\n            source.cancel();\r\n        };\r\n        class_1.prototype.then = function (resolve, reject) {\r\n            return promise.then(resolve, reject);\r\n        };\r\n        class_1.prototype.catch = function (reject) {\r\n            return this.then(undefined, reject);\r\n        };\r\n        class_1.prototype.finally = function (onfinally) {\r\n            return promise.finally(onfinally);\r\n        };\r\n        return class_1;\r\n    }());\r\n}\r\nexport function raceCancellation(promise, token, defaultValue) {\r\n    return Promise.race([promise, new Promise(function (resolve) { return token.onCancellationRequested(function () { return resolve(defaultValue); }); })]);\r\n}\r\n/**\r\n * A helper to delay execution of a task that is being requested often.\r\n *\r\n * Following the throttler, now imagine the mail man wants to optimize the number of\r\n * trips proactively. The trip itself can be long, so he decides not to make the trip\r\n * as soon as a letter is submitted. Instead he waits a while, in case more\r\n * letters are submitted. After said waiting period, if no letters were submitted, he\r\n * decides to make the trip. Imagine that N more letters were submitted after the first\r\n * one, all within a short period of time between each other. Even though N+1\r\n * submissions occurred, only 1 delivery was made.\r\n *\r\n * The delayer offers this behavior via the trigger() method, into which both the task\r\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\r\n * the example:\r\n *\r\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\r\n * \t\tconst letters = [];\r\n *\r\n * \t\tfunction letterReceived(l) {\r\n * \t\t\tletters.push(l);\r\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\r\n * \t\t}\r\n */\r\nvar Delayer = /** @class */ (function () {\r\n    function Delayer(defaultDelay) {\r\n        this.defaultDelay = defaultDelay;\r\n        this.timeout = null;\r\n        this.completionPromise = null;\r\n        this.doResolve = null;\r\n        this.doReject = null;\r\n        this.task = null;\r\n    }\r\n    Delayer.prototype.trigger = function (task, delay) {\r\n        var _this = this;\r\n        if (delay === void 0) { delay = this.defaultDelay; }\r\n        this.task = task;\r\n        this.cancelTimeout();\r\n        if (!this.completionPromise) {\r\n            this.completionPromise = new Promise(function (c, e) {\r\n                _this.doResolve = c;\r\n                _this.doReject = e;\r\n            }).then(function () {\r\n                _this.completionPromise = null;\r\n                _this.doResolve = null;\r\n                if (_this.task) {\r\n                    var task_1 = _this.task;\r\n                    _this.task = null;\r\n                    return task_1();\r\n                }\r\n                return undefined;\r\n            });\r\n        }\r\n        this.timeout = setTimeout(function () {\r\n            _this.timeout = null;\r\n            if (_this.doResolve) {\r\n                _this.doResolve(null);\r\n            }\r\n        }, delay);\r\n        return this.completionPromise;\r\n    };\r\n    Delayer.prototype.isTriggered = function () {\r\n        return this.timeout !== null;\r\n    };\r\n    Delayer.prototype.cancel = function () {\r\n        this.cancelTimeout();\r\n        if (this.completionPromise) {\r\n            if (this.doReject) {\r\n                this.doReject(errors.canceled());\r\n            }\r\n            this.completionPromise = null;\r\n        }\r\n    };\r\n    Delayer.prototype.cancelTimeout = function () {\r\n        if (this.timeout !== null) {\r\n            clearTimeout(this.timeout);\r\n            this.timeout = null;\r\n        }\r\n    };\r\n    Delayer.prototype.dispose = function () {\r\n        this.cancelTimeout();\r\n    };\r\n    return Delayer;\r\n}());\r\nexport { Delayer };\r\nexport function timeout(millis, token) {\r\n    if (!token) {\r\n        return createCancelablePromise(function (token) { return timeout(millis, token); });\r\n    }\r\n    return new Promise(function (resolve, reject) {\r\n        var handle = setTimeout(resolve, millis);\r\n        token.onCancellationRequested(function () {\r\n            clearTimeout(handle);\r\n            reject(errors.canceled());\r\n        });\r\n    });\r\n}\r\nexport function disposableTimeout(handler, timeout) {\r\n    if (timeout === void 0) { timeout = 0; }\r\n    var timer = setTimeout(handler, timeout);\r\n    return toDisposable(function () { return clearTimeout(timer); });\r\n}\r\nexport function first(promiseFactories, shouldStop, defaultValue) {\r\n    if (shouldStop === void 0) { shouldStop = function (t) { return !!t; }; }\r\n    if (defaultValue === void 0) { defaultValue = null; }\r\n    var index = 0;\r\n    var len = promiseFactories.length;\r\n    var loop = function () {\r\n        if (index >= len) {\r\n            return Promise.resolve(defaultValue);\r\n        }\r\n        var factory = promiseFactories[index++];\r\n        var promise = Promise.resolve(factory());\r\n        return promise.then(function (result) {\r\n            if (shouldStop(result)) {\r\n                return Promise.resolve(result);\r\n            }\r\n            return loop();\r\n        });\r\n    };\r\n    return loop();\r\n}\r\nvar TimeoutTimer = /** @class */ (function () {\r\n    function TimeoutTimer(runner, timeout) {\r\n        this._token = -1;\r\n        if (typeof runner === 'function' && typeof timeout === 'number') {\r\n            this.setIfNotSet(runner, timeout);\r\n        }\r\n    }\r\n    TimeoutTimer.prototype.dispose = function () {\r\n        this.cancel();\r\n    };\r\n    TimeoutTimer.prototype.cancel = function () {\r\n        if (this._token !== -1) {\r\n            clearTimeout(this._token);\r\n            this._token = -1;\r\n        }\r\n    };\r\n    TimeoutTimer.prototype.cancelAndSet = function (runner, timeout) {\r\n        var _this = this;\r\n        this.cancel();\r\n        this._token = setTimeout(function () {\r\n            _this._token = -1;\r\n            runner();\r\n        }, timeout);\r\n    };\r\n    TimeoutTimer.prototype.setIfNotSet = function (runner, timeout) {\r\n        var _this = this;\r\n        if (this._token !== -1) {\r\n            // timer is already set\r\n            return;\r\n        }\r\n        this._token = setTimeout(function () {\r\n            _this._token = -1;\r\n            runner();\r\n        }, timeout);\r\n    };\r\n    return TimeoutTimer;\r\n}());\r\nexport { TimeoutTimer };\r\nvar IntervalTimer = /** @class */ (function () {\r\n    function IntervalTimer() {\r\n        this._token = -1;\r\n    }\r\n    IntervalTimer.prototype.dispose = function () {\r\n        this.cancel();\r\n    };\r\n    IntervalTimer.prototype.cancel = function () {\r\n        if (this._token !== -1) {\r\n            clearInterval(this._token);\r\n            this._token = -1;\r\n        }\r\n    };\r\n    IntervalTimer.prototype.cancelAndSet = function (runner, interval) {\r\n        this.cancel();\r\n        this._token = setInterval(function () {\r\n            runner();\r\n        }, interval);\r\n    };\r\n    return IntervalTimer;\r\n}());\r\nexport { IntervalTimer };\r\nvar RunOnceScheduler = /** @class */ (function () {\r\n    function RunOnceScheduler(runner, timeout) {\r\n        this.timeoutToken = -1;\r\n        this.runner = runner;\r\n        this.timeout = timeout;\r\n        this.timeoutHandler = this.onTimeout.bind(this);\r\n    }\r\n    /**\r\n     * Dispose RunOnceScheduler\r\n     */\r\n    RunOnceScheduler.prototype.dispose = function () {\r\n        this.cancel();\r\n        this.runner = null;\r\n    };\r\n    /**\r\n     * Cancel current scheduled runner (if any).\r\n     */\r\n    RunOnceScheduler.prototype.cancel = function () {\r\n        if (this.isScheduled()) {\r\n            clearTimeout(this.timeoutToken);\r\n            this.timeoutToken = -1;\r\n        }\r\n    };\r\n    /**\r\n     * Cancel previous runner (if any) & schedule a new runner.\r\n     */\r\n    RunOnceScheduler.prototype.schedule = function (delay) {\r\n        if (delay === void 0) { delay = this.timeout; }\r\n        this.cancel();\r\n        this.timeoutToken = setTimeout(this.timeoutHandler, delay);\r\n    };\r\n    /**\r\n     * Returns true if scheduled.\r\n     */\r\n    RunOnceScheduler.prototype.isScheduled = function () {\r\n        return this.timeoutToken !== -1;\r\n    };\r\n    RunOnceScheduler.prototype.onTimeout = function () {\r\n        this.timeoutToken = -1;\r\n        if (this.runner) {\r\n            this.doRun();\r\n        }\r\n    };\r\n    RunOnceScheduler.prototype.doRun = function () {\r\n        if (this.runner) {\r\n            this.runner();\r\n        }\r\n    };\r\n    return RunOnceScheduler;\r\n}());\r\nexport { RunOnceScheduler };\r\n/**\r\n * Execute the callback the next time the browser is idle\r\n */\r\nexport var runWhenIdle;\r\n(function () {\r\n    if (typeof requestIdleCallback !== 'function' || typeof cancelIdleCallback !== 'function') {\r\n        var dummyIdle_1 = Object.freeze({\r\n            didTimeout: true,\r\n            timeRemaining: function () { return 15; }\r\n        });\r\n        runWhenIdle = function (runner) {\r\n            var handle = setTimeout(function () { return runner(dummyIdle_1); });\r\n            var disposed = false;\r\n            return {\r\n                dispose: function () {\r\n                    if (disposed) {\r\n                        return;\r\n                    }\r\n                    disposed = true;\r\n                    clearTimeout(handle);\r\n                }\r\n            };\r\n        };\r\n    }\r\n    else {\r\n        runWhenIdle = function (runner, timeout) {\r\n            var handle = requestIdleCallback(runner, typeof timeout === 'number' ? { timeout: timeout } : undefined);\r\n            var disposed = false;\r\n            return {\r\n                dispose: function () {\r\n                    if (disposed) {\r\n                        return;\r\n                    }\r\n                    disposed = true;\r\n                    cancelIdleCallback(handle);\r\n                }\r\n            };\r\n        };\r\n    }\r\n})();\r\n/**\r\n * An implementation of the \"idle-until-urgent\"-strategy as introduced\r\n * here: https://philipwalton.com/articles/idle-until-urgent/\r\n */\r\nvar IdleValue = /** @class */ (function () {\r\n    function IdleValue(executor) {\r\n        var _this = this;\r\n        this._didRun = false;\r\n        this._executor = function () {\r\n            try {\r\n                _this._value = executor();\r\n            }\r\n            catch (err) {\r\n                _this._error = err;\r\n            }\r\n            finally {\r\n                _this._didRun = true;\r\n            }\r\n        };\r\n        this._handle = runWhenIdle(function () { return _this._executor(); });\r\n    }\r\n    IdleValue.prototype.dispose = function () {\r\n        this._handle.dispose();\r\n    };\r\n    IdleValue.prototype.getValue = function () {\r\n        if (!this._didRun) {\r\n            this._handle.dispose();\r\n            this._executor();\r\n        }\r\n        if (this._error) {\r\n            throw this._error;\r\n        }\r\n        return this._value;\r\n    };\r\n    return IdleValue;\r\n}());\r\nexport { IdleValue };\r\n"]},"metadata":{},"sourceType":"module"}