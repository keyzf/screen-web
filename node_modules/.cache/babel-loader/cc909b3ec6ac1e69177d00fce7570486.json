{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from './strings.js';\nexport function buildReplaceStringWithCasePreserved(matches, pattern) {\n  if (matches && matches[0] !== '') {\n    var containsHyphens = validateSpecificSpecialCharacter(matches, pattern, '-');\n    var containsUnderscores = validateSpecificSpecialCharacter(matches, pattern, '_');\n\n    if (containsHyphens && !containsUnderscores) {\n      return buildReplaceStringForSpecificSpecialCharacter(matches, pattern, '-');\n    } else if (!containsHyphens && containsUnderscores) {\n      return buildReplaceStringForSpecificSpecialCharacter(matches, pattern, '_');\n    }\n\n    if (matches[0].toUpperCase() === matches[0]) {\n      return pattern.toUpperCase();\n    } else if (matches[0].toLowerCase() === matches[0]) {\n      return pattern.toLowerCase();\n    } else if (strings.containsUppercaseCharacter(matches[0][0])) {\n      return pattern[0].toUpperCase() + pattern.substr(1);\n    } else {\n      // we don't understand its pattern yet.\n      return pattern;\n    }\n  } else {\n    return pattern;\n  }\n}\n\nfunction validateSpecificSpecialCharacter(matches, pattern, specialCharacter) {\n  var doesContainSpecialCharacter = matches[0].indexOf(specialCharacter) !== -1 && pattern.indexOf(specialCharacter) !== -1;\n  return doesContainSpecialCharacter && matches[0].split(specialCharacter).length === pattern.split(specialCharacter).length;\n}\n\nfunction buildReplaceStringForSpecificSpecialCharacter(matches, pattern, specialCharacter) {\n  var splitPatternAtSpecialCharacter = pattern.split(specialCharacter);\n  var splitMatchAtSpecialCharacter = matches[0].split(specialCharacter);\n  var replaceString = '';\n  splitPatternAtSpecialCharacter.forEach(function (splitValue, index) {\n    replaceString += buildReplaceStringWithCasePreserved([splitMatchAtSpecialCharacter[index]], splitValue) + specialCharacter;\n  });\n  return replaceString.slice(0, -1);\n}","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/base/common/search.js"],"names":["strings","buildReplaceStringWithCasePreserved","matches","pattern","containsHyphens","validateSpecificSpecialCharacter","containsUnderscores","buildReplaceStringForSpecificSpecialCharacter","toUpperCase","toLowerCase","containsUppercaseCharacter","substr","specialCharacter","doesContainSpecialCharacter","indexOf","split","length","splitPatternAtSpecialCharacter","splitMatchAtSpecialCharacter","replaceString","forEach","splitValue","index","slice"],"mappings":"AAAA;;;;AAIA,OAAO,KAAKA,OAAZ,MAAyB,cAAzB;AACA,OAAO,SAASC,mCAAT,CAA6CC,OAA7C,EAAsDC,OAAtD,EAA+D;AAClE,MAAID,OAAO,IAAKA,OAAO,CAAC,CAAD,CAAP,KAAe,EAA/B,EAAoC;AAChC,QAAIE,eAAe,GAAGC,gCAAgC,CAACH,OAAD,EAAUC,OAAV,EAAmB,GAAnB,CAAtD;AACA,QAAIG,mBAAmB,GAAGD,gCAAgC,CAACH,OAAD,EAAUC,OAAV,EAAmB,GAAnB,CAA1D;;AACA,QAAIC,eAAe,IAAI,CAACE,mBAAxB,EAA6C;AACzC,aAAOC,6CAA6C,CAACL,OAAD,EAAUC,OAAV,EAAmB,GAAnB,CAApD;AACH,KAFD,MAGK,IAAI,CAACC,eAAD,IAAoBE,mBAAxB,EAA6C;AAC9C,aAAOC,6CAA6C,CAACL,OAAD,EAAUC,OAAV,EAAmB,GAAnB,CAApD;AACH;;AACD,QAAID,OAAO,CAAC,CAAD,CAAP,CAAWM,WAAX,OAA6BN,OAAO,CAAC,CAAD,CAAxC,EAA6C;AACzC,aAAOC,OAAO,CAACK,WAAR,EAAP;AACH,KAFD,MAGK,IAAIN,OAAO,CAAC,CAAD,CAAP,CAAWO,WAAX,OAA6BP,OAAO,CAAC,CAAD,CAAxC,EAA6C;AAC9C,aAAOC,OAAO,CAACM,WAAR,EAAP;AACH,KAFI,MAGA,IAAIT,OAAO,CAACU,0BAAR,CAAmCR,OAAO,CAAC,CAAD,CAAP,CAAW,CAAX,CAAnC,CAAJ,EAAuD;AACxD,aAAOC,OAAO,CAAC,CAAD,CAAP,CAAWK,WAAX,KAA2BL,OAAO,CAACQ,MAAR,CAAe,CAAf,CAAlC;AACH,KAFI,MAGA;AACD;AACA,aAAOR,OAAP;AACH;AACJ,GAtBD,MAuBK;AACD,WAAOA,OAAP;AACH;AACJ;;AACD,SAASE,gCAAT,CAA0CH,OAA1C,EAAmDC,OAAnD,EAA4DS,gBAA5D,EAA8E;AAC1E,MAAIC,2BAA2B,GAAGX,OAAO,CAAC,CAAD,CAAP,CAAWY,OAAX,CAAmBF,gBAAnB,MAAyC,CAAC,CAA1C,IAA+CT,OAAO,CAACW,OAAR,CAAgBF,gBAAhB,MAAsC,CAAC,CAAxH;AACA,SAAOC,2BAA2B,IAAIX,OAAO,CAAC,CAAD,CAAP,CAAWa,KAAX,CAAiBH,gBAAjB,EAAmCI,MAAnC,KAA8Cb,OAAO,CAACY,KAAR,CAAcH,gBAAd,EAAgCI,MAApH;AACH;;AACD,SAAST,6CAAT,CAAuDL,OAAvD,EAAgEC,OAAhE,EAAyES,gBAAzE,EAA2F;AACvF,MAAIK,8BAA8B,GAAGd,OAAO,CAACY,KAAR,CAAcH,gBAAd,CAArC;AACA,MAAIM,4BAA4B,GAAGhB,OAAO,CAAC,CAAD,CAAP,CAAWa,KAAX,CAAiBH,gBAAjB,CAAnC;AACA,MAAIO,aAAa,GAAG,EAApB;AACAF,EAAAA,8BAA8B,CAACG,OAA/B,CAAuC,UAAUC,UAAV,EAAsBC,KAAtB,EAA6B;AAChEH,IAAAA,aAAa,IAAIlB,mCAAmC,CAAC,CAACiB,4BAA4B,CAACI,KAAD,CAA7B,CAAD,EAAwCD,UAAxC,CAAnC,GAAyFT,gBAA1G;AACH,GAFD;AAGA,SAAOO,aAAa,CAACI,KAAd,CAAoB,CAApB,EAAuB,CAAC,CAAxB,CAAP;AACH","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as strings from './strings.js';\r\nexport function buildReplaceStringWithCasePreserved(matches, pattern) {\r\n    if (matches && (matches[0] !== '')) {\r\n        var containsHyphens = validateSpecificSpecialCharacter(matches, pattern, '-');\r\n        var containsUnderscores = validateSpecificSpecialCharacter(matches, pattern, '_');\r\n        if (containsHyphens && !containsUnderscores) {\r\n            return buildReplaceStringForSpecificSpecialCharacter(matches, pattern, '-');\r\n        }\r\n        else if (!containsHyphens && containsUnderscores) {\r\n            return buildReplaceStringForSpecificSpecialCharacter(matches, pattern, '_');\r\n        }\r\n        if (matches[0].toUpperCase() === matches[0]) {\r\n            return pattern.toUpperCase();\r\n        }\r\n        else if (matches[0].toLowerCase() === matches[0]) {\r\n            return pattern.toLowerCase();\r\n        }\r\n        else if (strings.containsUppercaseCharacter(matches[0][0])) {\r\n            return pattern[0].toUpperCase() + pattern.substr(1);\r\n        }\r\n        else {\r\n            // we don't understand its pattern yet.\r\n            return pattern;\r\n        }\r\n    }\r\n    else {\r\n        return pattern;\r\n    }\r\n}\r\nfunction validateSpecificSpecialCharacter(matches, pattern, specialCharacter) {\r\n    var doesContainSpecialCharacter = matches[0].indexOf(specialCharacter) !== -1 && pattern.indexOf(specialCharacter) !== -1;\r\n    return doesContainSpecialCharacter && matches[0].split(specialCharacter).length === pattern.split(specialCharacter).length;\r\n}\r\nfunction buildReplaceStringForSpecificSpecialCharacter(matches, pattern, specialCharacter) {\r\n    var splitPatternAtSpecialCharacter = pattern.split(specialCharacter);\r\n    var splitMatchAtSpecialCharacter = matches[0].split(specialCharacter);\r\n    var replaceString = '';\r\n    splitPatternAtSpecialCharacter.forEach(function (splitValue, index) {\r\n        replaceString += buildReplaceStringWithCasePreserved([splitMatchAtSpecialCharacter[index]], splitValue) + specialCharacter;\r\n    });\r\n    return replaceString.slice(0, -1);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}