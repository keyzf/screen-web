{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../../base/common/strings.js';\nimport { Range } from '../../core/range.js';\n\nvar RichEditBracket =\n/** @class */\nfunction () {\n  function RichEditBracket(languageIdentifier, index, open, close, forwardRegex, reversedRegex) {\n    this.languageIdentifier = languageIdentifier;\n    this.index = index;\n    this.open = open;\n    this.close = close;\n    this.forwardRegex = forwardRegex;\n    this.reversedRegex = reversedRegex;\n    this._openSet = RichEditBracket._toSet(this.open);\n    this._closeSet = RichEditBracket._toSet(this.close);\n  }\n\n  RichEditBracket.prototype.isOpen = function (text) {\n    return this._openSet.has(text);\n  };\n\n  RichEditBracket.prototype.isClose = function (text) {\n    return this._closeSet.has(text);\n  };\n\n  RichEditBracket._toSet = function (arr) {\n    var result = new Set();\n\n    for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {\n      var element = arr_1[_i];\n      result.add(element);\n    }\n\n    return result;\n  };\n\n  return RichEditBracket;\n}();\n\nexport { RichEditBracket };\n\nfunction groupFuzzyBrackets(brackets) {\n  var N = brackets.length;\n  brackets = brackets.map(function (b) {\n    return [b[0].toLowerCase(), b[1].toLowerCase()];\n  });\n  var group = [];\n\n  for (var i = 0; i < N; i++) {\n    group[i] = i;\n  }\n\n  var areOverlapping = function (a, b) {\n    var aOpen = a[0],\n        aClose = a[1];\n    var bOpen = b[0],\n        bClose = b[1];\n    return aOpen === bOpen || aOpen === bClose || aClose === bOpen || aClose === bClose;\n  };\n\n  var mergeGroups = function (g1, g2) {\n    var newG = Math.min(g1, g2);\n    var oldG = Math.max(g1, g2);\n\n    for (var i = 0; i < N; i++) {\n      if (group[i] === oldG) {\n        group[i] = newG;\n      }\n    }\n  }; // group together brackets that have the same open or the same close sequence\n\n\n  for (var i = 0; i < N; i++) {\n    var a = brackets[i];\n\n    for (var j = i + 1; j < N; j++) {\n      var b = brackets[j];\n\n      if (areOverlapping(a, b)) {\n        mergeGroups(group[i], group[j]);\n      }\n    }\n  }\n\n  var result = [];\n\n  for (var g = 0; g < N; g++) {\n    var currentOpen = [];\n    var currentClose = [];\n\n    for (var i = 0; i < N; i++) {\n      if (group[i] === g) {\n        var _a = brackets[i],\n            open_1 = _a[0],\n            close_1 = _a[1];\n        currentOpen.push(open_1);\n        currentClose.push(close_1);\n      }\n    }\n\n    if (currentOpen.length > 0) {\n      result.push({\n        open: currentOpen,\n        close: currentClose\n      });\n    }\n  }\n\n  return result;\n}\n\nvar RichEditBrackets =\n/** @class */\nfunction () {\n  function RichEditBrackets(languageIdentifier, _brackets) {\n    var brackets = groupFuzzyBrackets(_brackets);\n    this.brackets = brackets.map(function (b, index) {\n      return new RichEditBracket(languageIdentifier, index, b.open, b.close, getRegexForBracketPair(b.open, b.close, brackets, index), getReversedRegexForBracketPair(b.open, b.close, brackets, index));\n    });\n    this.forwardRegex = getRegexForBrackets(this.brackets);\n    this.reversedRegex = getReversedRegexForBrackets(this.brackets);\n    this.textIsBracket = {};\n    this.textIsOpenBracket = {};\n    this.maxBracketLength = 0;\n\n    for (var _i = 0, _a = this.brackets; _i < _a.length; _i++) {\n      var bracket = _a[_i];\n\n      for (var _b = 0, _c = bracket.open; _b < _c.length; _b++) {\n        var open_2 = _c[_b];\n        this.textIsBracket[open_2] = bracket;\n        this.textIsOpenBracket[open_2] = true;\n        this.maxBracketLength = Math.max(this.maxBracketLength, open_2.length);\n      }\n\n      for (var _d = 0, _e = bracket.close; _d < _e.length; _d++) {\n        var close_2 = _e[_d];\n        this.textIsBracket[close_2] = bracket;\n        this.textIsOpenBracket[close_2] = false;\n        this.maxBracketLength = Math.max(this.maxBracketLength, close_2.length);\n      }\n    }\n  }\n\n  return RichEditBrackets;\n}();\n\nexport { RichEditBrackets };\n\nfunction collectSuperstrings(str, brackets, currentIndex, dest) {\n  for (var i = 0, len = brackets.length; i < len; i++) {\n    if (i === currentIndex) {\n      continue;\n    }\n\n    var bracket = brackets[i];\n\n    for (var _i = 0, _a = bracket.open; _i < _a.length; _i++) {\n      var open_3 = _a[_i];\n\n      if (open_3.indexOf(str) >= 0) {\n        dest.push(open_3);\n      }\n    }\n\n    for (var _b = 0, _c = bracket.close; _b < _c.length; _b++) {\n      var close_3 = _c[_b];\n\n      if (close_3.indexOf(str) >= 0) {\n        dest.push(close_3);\n      }\n    }\n  }\n}\n\nfunction lengthcmp(a, b) {\n  return a.length - b.length;\n}\n\nfunction unique(arr) {\n  if (arr.length <= 1) {\n    return arr;\n  }\n\n  var result = [];\n  var seen = new Set();\n\n  for (var _i = 0, arr_2 = arr; _i < arr_2.length; _i++) {\n    var element = arr_2[_i];\n\n    if (seen.has(element)) {\n      continue;\n    }\n\n    result.push(element);\n    seen.add(element);\n  }\n\n  return result;\n}\n\nfunction getRegexForBracketPair(open, close, brackets, currentIndex) {\n  // search in all brackets for other brackets that are a superstring of these brackets\n  var pieces = [];\n  pieces = pieces.concat(open);\n  pieces = pieces.concat(close);\n\n  for (var i = 0, len = pieces.length; i < len; i++) {\n    collectSuperstrings(pieces[i], brackets, currentIndex, pieces);\n  }\n\n  pieces = unique(pieces);\n  pieces.sort(lengthcmp);\n  pieces.reverse();\n  return createBracketOrRegExp(pieces);\n}\n\nfunction getReversedRegexForBracketPair(open, close, brackets, currentIndex) {\n  // search in all brackets for other brackets that are a superstring of these brackets\n  var pieces = [];\n  pieces = pieces.concat(open);\n  pieces = pieces.concat(close);\n\n  for (var i = 0, len = pieces.length; i < len; i++) {\n    collectSuperstrings(pieces[i], brackets, currentIndex, pieces);\n  }\n\n  pieces = unique(pieces);\n  pieces.sort(lengthcmp);\n  pieces.reverse();\n  return createBracketOrRegExp(pieces.map(toReversedString));\n}\n\nfunction getRegexForBrackets(brackets) {\n  var pieces = [];\n\n  for (var _i = 0, brackets_1 = brackets; _i < brackets_1.length; _i++) {\n    var bracket = brackets_1[_i];\n\n    for (var _a = 0, _b = bracket.open; _a < _b.length; _a++) {\n      var open_4 = _b[_a];\n      pieces.push(open_4);\n    }\n\n    for (var _c = 0, _d = bracket.close; _c < _d.length; _c++) {\n      var close_4 = _d[_c];\n      pieces.push(close_4);\n    }\n  }\n\n  pieces = unique(pieces);\n  return createBracketOrRegExp(pieces);\n}\n\nfunction getReversedRegexForBrackets(brackets) {\n  var pieces = [];\n\n  for (var _i = 0, brackets_2 = brackets; _i < brackets_2.length; _i++) {\n    var bracket = brackets_2[_i];\n\n    for (var _a = 0, _b = bracket.open; _a < _b.length; _a++) {\n      var open_5 = _b[_a];\n      pieces.push(open_5);\n    }\n\n    for (var _c = 0, _d = bracket.close; _c < _d.length; _c++) {\n      var close_5 = _d[_c];\n      pieces.push(close_5);\n    }\n  }\n\n  pieces = unique(pieces);\n  return createBracketOrRegExp(pieces.map(toReversedString));\n}\n\nfunction prepareBracketForRegExp(str) {\n  // This bracket pair uses letters like e.g. \"begin\" - \"end\"\n  var insertWordBoundaries = /^[\\w ]+$/.test(str);\n  str = strings.escapeRegExpCharacters(str);\n  return insertWordBoundaries ? \"\\\\b\" + str + \"\\\\b\" : str;\n}\n\nfunction createBracketOrRegExp(pieces) {\n  var regexStr = \"(\" + pieces.map(prepareBracketForRegExp).join(')|(') + \")\";\n  return strings.createRegExp(regexStr, true);\n}\n\nvar toReversedString = function () {\n  function reverse(str) {\n    var reversedStr = '';\n\n    for (var i = str.length - 1; i >= 0; i--) {\n      reversedStr += str.charAt(i);\n    }\n\n    return reversedStr;\n  }\n\n  var lastInput = null;\n  var lastOutput = null;\n  return function toReversedString(str) {\n    if (lastInput !== str) {\n      lastInput = str;\n      lastOutput = reverse(lastInput);\n    }\n\n    return lastOutput;\n  };\n}();\n\nvar BracketsUtils =\n/** @class */\nfunction () {\n  function BracketsUtils() {}\n\n  BracketsUtils._findPrevBracketInText = function (reversedBracketRegex, lineNumber, reversedText, offset) {\n    var m = reversedText.match(reversedBracketRegex);\n\n    if (!m) {\n      return null;\n    }\n\n    var matchOffset = reversedText.length - (m.index || 0);\n    var matchLength = m[0].length;\n    var absoluteMatchOffset = offset + matchOffset;\n    return new Range(lineNumber, absoluteMatchOffset - matchLength + 1, lineNumber, absoluteMatchOffset + 1);\n  };\n\n  BracketsUtils.findPrevBracketInRange = function (reversedBracketRegex, lineNumber, lineText, startOffset, endOffset) {\n    // Because JS does not support backwards regex search, we search forwards in a reversed string with a reversed regex ;)\n    var reversedLineText = toReversedString(lineText);\n    var reversedSubstr = reversedLineText.substring(lineText.length - endOffset, lineText.length - startOffset);\n    return this._findPrevBracketInText(reversedBracketRegex, lineNumber, reversedSubstr, startOffset);\n  };\n\n  BracketsUtils.findNextBracketInText = function (bracketRegex, lineNumber, text, offset) {\n    var m = text.match(bracketRegex);\n\n    if (!m) {\n      return null;\n    }\n\n    var matchOffset = m.index || 0;\n    var matchLength = m[0].length;\n\n    if (matchLength === 0) {\n      return null;\n    }\n\n    var absoluteMatchOffset = offset + matchOffset;\n    return new Range(lineNumber, absoluteMatchOffset + 1, lineNumber, absoluteMatchOffset + 1 + matchLength);\n  };\n\n  BracketsUtils.findNextBracketInRange = function (bracketRegex, lineNumber, lineText, startOffset, endOffset) {\n    var substr = lineText.substring(startOffset, endOffset);\n    return this.findNextBracketInText(bracketRegex, lineNumber, substr, startOffset);\n  };\n\n  return BracketsUtils;\n}();\n\nexport { BracketsUtils };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/common/modes/supports/richEditBrackets.js"],"names":["strings","Range","RichEditBracket","languageIdentifier","index","open","close","forwardRegex","reversedRegex","_openSet","_toSet","_closeSet","prototype","isOpen","text","has","isClose","arr","result","Set","_i","arr_1","length","element","add","groupFuzzyBrackets","brackets","N","map","b","toLowerCase","group","i","areOverlapping","a","aOpen","aClose","bOpen","bClose","mergeGroups","g1","g2","newG","Math","min","oldG","max","j","g","currentOpen","currentClose","_a","open_1","close_1","push","RichEditBrackets","_brackets","getRegexForBracketPair","getReversedRegexForBracketPair","getRegexForBrackets","getReversedRegexForBrackets","textIsBracket","textIsOpenBracket","maxBracketLength","bracket","_b","_c","open_2","_d","_e","close_2","collectSuperstrings","str","currentIndex","dest","len","open_3","indexOf","close_3","lengthcmp","unique","seen","arr_2","pieces","concat","sort","reverse","createBracketOrRegExp","toReversedString","brackets_1","open_4","close_4","brackets_2","open_5","close_5","prepareBracketForRegExp","insertWordBoundaries","test","escapeRegExpCharacters","regexStr","join","createRegExp","reversedStr","charAt","lastInput","lastOutput","BracketsUtils","_findPrevBracketInText","reversedBracketRegex","lineNumber","reversedText","offset","m","match","matchOffset","matchLength","absoluteMatchOffset","findPrevBracketInRange","lineText","startOffset","endOffset","reversedLineText","reversedSubstr","substring","findNextBracketInText","bracketRegex","findNextBracketInRange","substr"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as strings from '../../../../base/common/strings.js';\r\nimport { Range } from '../../core/range.js';\r\nvar RichEditBracket = /** @class */ (function () {\r\n    function RichEditBracket(languageIdentifier, index, open, close, forwardRegex, reversedRegex) {\r\n        this.languageIdentifier = languageIdentifier;\r\n        this.index = index;\r\n        this.open = open;\r\n        this.close = close;\r\n        this.forwardRegex = forwardRegex;\r\n        this.reversedRegex = reversedRegex;\r\n        this._openSet = RichEditBracket._toSet(this.open);\r\n        this._closeSet = RichEditBracket._toSet(this.close);\r\n    }\r\n    RichEditBracket.prototype.isOpen = function (text) {\r\n        return this._openSet.has(text);\r\n    };\r\n    RichEditBracket.prototype.isClose = function (text) {\r\n        return this._closeSet.has(text);\r\n    };\r\n    RichEditBracket._toSet = function (arr) {\r\n        var result = new Set();\r\n        for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {\r\n            var element = arr_1[_i];\r\n            result.add(element);\r\n        }\r\n        return result;\r\n    };\r\n    return RichEditBracket;\r\n}());\r\nexport { RichEditBracket };\r\nfunction groupFuzzyBrackets(brackets) {\r\n    var N = brackets.length;\r\n    brackets = brackets.map(function (b) { return [b[0].toLowerCase(), b[1].toLowerCase()]; });\r\n    var group = [];\r\n    for (var i = 0; i < N; i++) {\r\n        group[i] = i;\r\n    }\r\n    var areOverlapping = function (a, b) {\r\n        var aOpen = a[0], aClose = a[1];\r\n        var bOpen = b[0], bClose = b[1];\r\n        return (aOpen === bOpen || aOpen === bClose || aClose === bOpen || aClose === bClose);\r\n    };\r\n    var mergeGroups = function (g1, g2) {\r\n        var newG = Math.min(g1, g2);\r\n        var oldG = Math.max(g1, g2);\r\n        for (var i = 0; i < N; i++) {\r\n            if (group[i] === oldG) {\r\n                group[i] = newG;\r\n            }\r\n        }\r\n    };\r\n    // group together brackets that have the same open or the same close sequence\r\n    for (var i = 0; i < N; i++) {\r\n        var a = brackets[i];\r\n        for (var j = i + 1; j < N; j++) {\r\n            var b = brackets[j];\r\n            if (areOverlapping(a, b)) {\r\n                mergeGroups(group[i], group[j]);\r\n            }\r\n        }\r\n    }\r\n    var result = [];\r\n    for (var g = 0; g < N; g++) {\r\n        var currentOpen = [];\r\n        var currentClose = [];\r\n        for (var i = 0; i < N; i++) {\r\n            if (group[i] === g) {\r\n                var _a = brackets[i], open_1 = _a[0], close_1 = _a[1];\r\n                currentOpen.push(open_1);\r\n                currentClose.push(close_1);\r\n            }\r\n        }\r\n        if (currentOpen.length > 0) {\r\n            result.push({\r\n                open: currentOpen,\r\n                close: currentClose\r\n            });\r\n        }\r\n    }\r\n    return result;\r\n}\r\nvar RichEditBrackets = /** @class */ (function () {\r\n    function RichEditBrackets(languageIdentifier, _brackets) {\r\n        var brackets = groupFuzzyBrackets(_brackets);\r\n        this.brackets = brackets.map(function (b, index) {\r\n            return new RichEditBracket(languageIdentifier, index, b.open, b.close, getRegexForBracketPair(b.open, b.close, brackets, index), getReversedRegexForBracketPair(b.open, b.close, brackets, index));\r\n        });\r\n        this.forwardRegex = getRegexForBrackets(this.brackets);\r\n        this.reversedRegex = getReversedRegexForBrackets(this.brackets);\r\n        this.textIsBracket = {};\r\n        this.textIsOpenBracket = {};\r\n        this.maxBracketLength = 0;\r\n        for (var _i = 0, _a = this.brackets; _i < _a.length; _i++) {\r\n            var bracket = _a[_i];\r\n            for (var _b = 0, _c = bracket.open; _b < _c.length; _b++) {\r\n                var open_2 = _c[_b];\r\n                this.textIsBracket[open_2] = bracket;\r\n                this.textIsOpenBracket[open_2] = true;\r\n                this.maxBracketLength = Math.max(this.maxBracketLength, open_2.length);\r\n            }\r\n            for (var _d = 0, _e = bracket.close; _d < _e.length; _d++) {\r\n                var close_2 = _e[_d];\r\n                this.textIsBracket[close_2] = bracket;\r\n                this.textIsOpenBracket[close_2] = false;\r\n                this.maxBracketLength = Math.max(this.maxBracketLength, close_2.length);\r\n            }\r\n        }\r\n    }\r\n    return RichEditBrackets;\r\n}());\r\nexport { RichEditBrackets };\r\nfunction collectSuperstrings(str, brackets, currentIndex, dest) {\r\n    for (var i = 0, len = brackets.length; i < len; i++) {\r\n        if (i === currentIndex) {\r\n            continue;\r\n        }\r\n        var bracket = brackets[i];\r\n        for (var _i = 0, _a = bracket.open; _i < _a.length; _i++) {\r\n            var open_3 = _a[_i];\r\n            if (open_3.indexOf(str) >= 0) {\r\n                dest.push(open_3);\r\n            }\r\n        }\r\n        for (var _b = 0, _c = bracket.close; _b < _c.length; _b++) {\r\n            var close_3 = _c[_b];\r\n            if (close_3.indexOf(str) >= 0) {\r\n                dest.push(close_3);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction lengthcmp(a, b) {\r\n    return a.length - b.length;\r\n}\r\nfunction unique(arr) {\r\n    if (arr.length <= 1) {\r\n        return arr;\r\n    }\r\n    var result = [];\r\n    var seen = new Set();\r\n    for (var _i = 0, arr_2 = arr; _i < arr_2.length; _i++) {\r\n        var element = arr_2[_i];\r\n        if (seen.has(element)) {\r\n            continue;\r\n        }\r\n        result.push(element);\r\n        seen.add(element);\r\n    }\r\n    return result;\r\n}\r\nfunction getRegexForBracketPair(open, close, brackets, currentIndex) {\r\n    // search in all brackets for other brackets that are a superstring of these brackets\r\n    var pieces = [];\r\n    pieces = pieces.concat(open);\r\n    pieces = pieces.concat(close);\r\n    for (var i = 0, len = pieces.length; i < len; i++) {\r\n        collectSuperstrings(pieces[i], brackets, currentIndex, pieces);\r\n    }\r\n    pieces = unique(pieces);\r\n    pieces.sort(lengthcmp);\r\n    pieces.reverse();\r\n    return createBracketOrRegExp(pieces);\r\n}\r\nfunction getReversedRegexForBracketPair(open, close, brackets, currentIndex) {\r\n    // search in all brackets for other brackets that are a superstring of these brackets\r\n    var pieces = [];\r\n    pieces = pieces.concat(open);\r\n    pieces = pieces.concat(close);\r\n    for (var i = 0, len = pieces.length; i < len; i++) {\r\n        collectSuperstrings(pieces[i], brackets, currentIndex, pieces);\r\n    }\r\n    pieces = unique(pieces);\r\n    pieces.sort(lengthcmp);\r\n    pieces.reverse();\r\n    return createBracketOrRegExp(pieces.map(toReversedString));\r\n}\r\nfunction getRegexForBrackets(brackets) {\r\n    var pieces = [];\r\n    for (var _i = 0, brackets_1 = brackets; _i < brackets_1.length; _i++) {\r\n        var bracket = brackets_1[_i];\r\n        for (var _a = 0, _b = bracket.open; _a < _b.length; _a++) {\r\n            var open_4 = _b[_a];\r\n            pieces.push(open_4);\r\n        }\r\n        for (var _c = 0, _d = bracket.close; _c < _d.length; _c++) {\r\n            var close_4 = _d[_c];\r\n            pieces.push(close_4);\r\n        }\r\n    }\r\n    pieces = unique(pieces);\r\n    return createBracketOrRegExp(pieces);\r\n}\r\nfunction getReversedRegexForBrackets(brackets) {\r\n    var pieces = [];\r\n    for (var _i = 0, brackets_2 = brackets; _i < brackets_2.length; _i++) {\r\n        var bracket = brackets_2[_i];\r\n        for (var _a = 0, _b = bracket.open; _a < _b.length; _a++) {\r\n            var open_5 = _b[_a];\r\n            pieces.push(open_5);\r\n        }\r\n        for (var _c = 0, _d = bracket.close; _c < _d.length; _c++) {\r\n            var close_5 = _d[_c];\r\n            pieces.push(close_5);\r\n        }\r\n    }\r\n    pieces = unique(pieces);\r\n    return createBracketOrRegExp(pieces.map(toReversedString));\r\n}\r\nfunction prepareBracketForRegExp(str) {\r\n    // This bracket pair uses letters like e.g. \"begin\" - \"end\"\r\n    var insertWordBoundaries = (/^[\\w ]+$/.test(str));\r\n    str = strings.escapeRegExpCharacters(str);\r\n    return (insertWordBoundaries ? \"\\\\b\" + str + \"\\\\b\" : str);\r\n}\r\nfunction createBracketOrRegExp(pieces) {\r\n    var regexStr = \"(\" + pieces.map(prepareBracketForRegExp).join(')|(') + \")\";\r\n    return strings.createRegExp(regexStr, true);\r\n}\r\nvar toReversedString = (function () {\r\n    function reverse(str) {\r\n        var reversedStr = '';\r\n        for (var i = str.length - 1; i >= 0; i--) {\r\n            reversedStr += str.charAt(i);\r\n        }\r\n        return reversedStr;\r\n    }\r\n    var lastInput = null;\r\n    var lastOutput = null;\r\n    return function toReversedString(str) {\r\n        if (lastInput !== str) {\r\n            lastInput = str;\r\n            lastOutput = reverse(lastInput);\r\n        }\r\n        return lastOutput;\r\n    };\r\n})();\r\nvar BracketsUtils = /** @class */ (function () {\r\n    function BracketsUtils() {\r\n    }\r\n    BracketsUtils._findPrevBracketInText = function (reversedBracketRegex, lineNumber, reversedText, offset) {\r\n        var m = reversedText.match(reversedBracketRegex);\r\n        if (!m) {\r\n            return null;\r\n        }\r\n        var matchOffset = reversedText.length - (m.index || 0);\r\n        var matchLength = m[0].length;\r\n        var absoluteMatchOffset = offset + matchOffset;\r\n        return new Range(lineNumber, absoluteMatchOffset - matchLength + 1, lineNumber, absoluteMatchOffset + 1);\r\n    };\r\n    BracketsUtils.findPrevBracketInRange = function (reversedBracketRegex, lineNumber, lineText, startOffset, endOffset) {\r\n        // Because JS does not support backwards regex search, we search forwards in a reversed string with a reversed regex ;)\r\n        var reversedLineText = toReversedString(lineText);\r\n        var reversedSubstr = reversedLineText.substring(lineText.length - endOffset, lineText.length - startOffset);\r\n        return this._findPrevBracketInText(reversedBracketRegex, lineNumber, reversedSubstr, startOffset);\r\n    };\r\n    BracketsUtils.findNextBracketInText = function (bracketRegex, lineNumber, text, offset) {\r\n        var m = text.match(bracketRegex);\r\n        if (!m) {\r\n            return null;\r\n        }\r\n        var matchOffset = m.index || 0;\r\n        var matchLength = m[0].length;\r\n        if (matchLength === 0) {\r\n            return null;\r\n        }\r\n        var absoluteMatchOffset = offset + matchOffset;\r\n        return new Range(lineNumber, absoluteMatchOffset + 1, lineNumber, absoluteMatchOffset + 1 + matchLength);\r\n    };\r\n    BracketsUtils.findNextBracketInRange = function (bracketRegex, lineNumber, lineText, startOffset, endOffset) {\r\n        var substr = lineText.substring(startOffset, endOffset);\r\n        return this.findNextBracketInText(bracketRegex, lineNumber, substr, startOffset);\r\n    };\r\n    return BracketsUtils;\r\n}());\r\nexport { BracketsUtils };\r\n"]},"metadata":{},"sourceType":"module"}