{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n*  Copyright (c) Microsoft Corporation. All rights reserved.\n*  Licensed under the MIT License. See License.txt in the project root for license information.\n*--------------------------------------------------------------------------------------------*/\nexport function startsWith(haystack, needle) {\n  if (haystack.length < needle.length) {\n    return false;\n  }\n\n  for (var i = 0; i < needle.length; i++) {\n    if (haystack[i] !== needle[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * Determines if haystack ends with needle.\n */\n\nexport function endsWith(haystack, needle) {\n  var diff = haystack.length - needle.length;\n\n  if (diff > 0) {\n    return haystack.lastIndexOf(needle) === diff;\n  } else if (diff === 0) {\n    return haystack === needle;\n  } else {\n    return false;\n  }\n}\nexport function convertSimple2RegExpPattern(pattern) {\n  return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\nexport function repeat(value, count) {\n  var s = '';\n\n  while (count > 0) {\n    if ((count & 1) === 1) {\n      s += value;\n    }\n\n    value += value;\n    count = count >>> 1;\n  }\n\n  return s;\n}","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/utils/strings.js"],"names":["startsWith","haystack","needle","length","i","endsWith","diff","lastIndexOf","convertSimple2RegExpPattern","pattern","replace","repeat","value","count","s"],"mappings":"AAAA;;;;AAIA,OAAO,SAASA,UAAT,CAAoBC,QAApB,EAA8BC,MAA9B,EAAsC;AACzC,MAAID,QAAQ,CAACE,MAAT,GAAkBD,MAAM,CAACC,MAA7B,EAAqC;AACjC,WAAO,KAAP;AACH;;AACD,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAAM,CAACC,MAA3B,EAAmCC,CAAC,EAApC,EAAwC;AACpC,QAAIH,QAAQ,CAACG,CAAD,CAAR,KAAgBF,MAAM,CAACE,CAAD,CAA1B,EAA+B;AAC3B,aAAO,KAAP;AACH;AACJ;;AACD,SAAO,IAAP;AACH;AACD;;;;AAGA,OAAO,SAASC,QAAT,CAAkBJ,QAAlB,EAA4BC,MAA5B,EAAoC;AACvC,MAAII,IAAI,GAAGL,QAAQ,CAACE,MAAT,GAAkBD,MAAM,CAACC,MAApC;;AACA,MAAIG,IAAI,GAAG,CAAX,EAAc;AACV,WAAOL,QAAQ,CAACM,WAAT,CAAqBL,MAArB,MAAiCI,IAAxC;AACH,GAFD,MAGK,IAAIA,IAAI,KAAK,CAAb,EAAgB;AACjB,WAAOL,QAAQ,KAAKC,MAApB;AACH,GAFI,MAGA;AACD,WAAO,KAAP;AACH;AACJ;AACD,OAAO,SAASM,2BAAT,CAAqCC,OAArC,EAA8C;AACjD,SAAOA,OAAO,CAACC,OAAR,CAAgB,uCAAhB,EAAyD,MAAzD,EAAiEA,OAAjE,CAAyE,OAAzE,EAAkF,IAAlF,CAAP;AACH;AACD,OAAO,SAASC,MAAT,CAAgBC,KAAhB,EAAuBC,KAAvB,EAA8B;AACjC,MAAIC,CAAC,GAAG,EAAR;;AACA,SAAOD,KAAK,GAAG,CAAf,EAAkB;AACd,QAAI,CAACA,KAAK,GAAG,CAAT,MAAgB,CAApB,EAAuB;AACnBC,MAAAA,CAAC,IAAIF,KAAL;AACH;;AACDA,IAAAA,KAAK,IAAIA,KAAT;AACAC,IAAAA,KAAK,GAAGA,KAAK,KAAK,CAAlB;AACH;;AACD,SAAOC,CAAP;AACH","sourcesContent":["/*---------------------------------------------------------------------------------------------\n*  Copyright (c) Microsoft Corporation. All rights reserved.\n*  Licensed under the MIT License. See License.txt in the project root for license information.\n*--------------------------------------------------------------------------------------------*/\nexport function startsWith(haystack, needle) {\n    if (haystack.length < needle.length) {\n        return false;\n    }\n    for (var i = 0; i < needle.length; i++) {\n        if (haystack[i] !== needle[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Determines if haystack ends with needle.\n */\nexport function endsWith(haystack, needle) {\n    var diff = haystack.length - needle.length;\n    if (diff > 0) {\n        return haystack.lastIndexOf(needle) === diff;\n    }\n    else if (diff === 0) {\n        return haystack === needle;\n    }\n    else {\n        return false;\n    }\n}\nexport function convertSimple2RegExpPattern(pattern) {\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\nexport function repeat(value, count) {\n    var s = '';\n    while (count > 0) {\n        if ((count & 1) === 1) {\n            s += value;\n        }\n        value += value;\n        count = count >>> 1;\n    }\n    return s;\n}\n"]},"metadata":{},"sourceType":"module"}