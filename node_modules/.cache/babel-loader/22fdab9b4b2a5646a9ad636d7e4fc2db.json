{"ast":null,"code":"import { sort_modules, change_item, change_item_arr, set_screen_data, change_screen, add_module, delete_module } from '../actions/screen-actions';\nimport { fromJS } from 'immutable';\nconst initialState = fromJS({\n  id: 1,\n  name: \"大屏数据\",\n  screen: {\n    //大屏背景数据\n    width: 1920,\n    height: 1080,\n    color: \"#303b48\",\n    backgroundImg: {\n      url: 'bg.png',\n      size: [\"80%\", \"auto\"],\n      position: [\"300\", \"40%\"]\n    },\n    poster: \"poster.png\"\n  },\n  modules: []\n});\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case set_screen_data:\n      //进入组件是给screen赋值\n      return fromJS(action.data);\n\n    case sort_modules:\n      //对modules进行排序，改变图层位置\n      return state.set(\"modules\", fromJS(action.data));\n\n    case change_screen:\n      //修改screen的数据\n      let newScreen = state.get(\"screen\").mergeDeep(fromJS(action.data));\n      return state.set(\"screen\", newScreen);\n\n    case change_item:\n      //修改id组件的值\n      let newMudules = state.get(\"modules\").map(item => {\n        if (item.get(\"id\") === action.data.id) {\n          return item.mergeDeep(fromJS(action.data.data));\n        } else {\n          return item;\n        }\n      });\n      return state.set(\"modules\", newMudules);\n\n    case change_item_arr:\n      //修改id组建的数组值\n      let newMudules2 = state.get(\"modules\").map(item => {\n        if (item.get(\"id\") === action.data.id) {\n          // console.log(action.data)\n          return item.setIn(action.data.path, fromJS(action.data.data));\n        } else {\n          return item;\n        }\n      });\n      return state.set(\"modules\", newMudules2);\n\n    case add_module:\n      // 新增组件\n      return state.mergeDeep(fromJS(action.data));\n\n    case delete_module:\n      console.log(action.data);\n      let index;\n      state.get(\"modules\").map((item, index) => {\n        console.log(item);\n        console.log(index);\n      });\n      return state;\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/src/store/reducers/screen-reducer.js"],"names":["sort_modules","change_item","change_item_arr","set_screen_data","change_screen","add_module","delete_module","fromJS","initialState","id","name","screen","width","height","color","backgroundImg","url","size","position","poster","modules","state","action","type","data","set","newScreen","get","mergeDeep","newMudules","map","item","newMudules2","setIn","path","console","log","index"],"mappings":"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","sourcesContent":["import { \n    sort_modules,\n    change_item,\n    change_item_arr,\n    set_screen_data,\n    change_screen,\n    add_module,\n    delete_module\n} from '../actions/screen-actions'\nimport { fromJS } from 'immutable';\n\nconst initialState = fromJS({\n    id:1,\n    name:\"大屏数据\",\n    screen:{//大屏背景数据\n        width:1920,\n        height:1080,\n        color:\"#303b48\",\n        backgroundImg:{\n            url:'bg.png',\n            size:[\"80%\",\"auto\"],\n            position:[\"300\",\"40%\"]\n        },\n        poster:\"poster.png\"\n    },\n    modules:[]\n})\n\nexport default (state=initialState,action)=>{\n    switch (action.type){\n        case set_screen_data: //进入组件是给screen赋值\n            return fromJS(action.data)\n        case sort_modules: //对modules进行排序，改变图层位置\n            return state.set(\"modules\",fromJS(action.data))\n        case change_screen: //修改screen的数据\n            let newScreen = state.get(\"screen\").mergeDeep(fromJS(action.data))\n            return state.set(\"screen\",newScreen)\n        case change_item: //修改id组件的值\n            let newMudules = state.get(\"modules\").map(item=>{\n                if(item.get(\"id\") === action.data.id){\n                    return item.mergeDeep(fromJS(action.data.data))\n                }else{\n                    return item\n                }\n            })\n            return state.set(\"modules\",newMudules)\n        case change_item_arr: //修改id组建的数组值\n            let newMudules2 = state.get(\"modules\").map(item=>{\n                if(item.get(\"id\") === action.data.id){\n                    // console.log(action.data)\n                    return item.setIn(action.data.path,fromJS(action.data.data))\n                }else{\n                    return item\n                }\n            })\n            return state.set(\"modules\",newMudules2)\n        case add_module: // 新增组件\n            return state.mergeDeep(fromJS(action.data))\n        case delete_module:\n            console.log(action.data)\n            let index\n            state.get(\"modules\").map((item,index)=>{\n                console.log(item)\n                console.log(index)\n            })\n            return state\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}