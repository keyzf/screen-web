{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { buildReplaceStringWithCasePreserved } from '../../../base/common/search.js';\n/**\r\n * Assigned when the replace pattern is entirely static.\r\n */\n\nvar StaticValueReplacePattern =\n/** @class */\nfunction () {\n  function StaticValueReplacePattern(staticValue) {\n    this.staticValue = staticValue;\n    this.kind = 0\n    /* StaticValue */\n    ;\n  }\n\n  return StaticValueReplacePattern;\n}();\n/**\r\n * Assigned when the replace pattern has replacemend patterns.\r\n */\n\n\nvar DynamicPiecesReplacePattern =\n/** @class */\nfunction () {\n  function DynamicPiecesReplacePattern(pieces) {\n    this.pieces = pieces;\n    this.kind = 1\n    /* DynamicPieces */\n    ;\n  }\n\n  return DynamicPiecesReplacePattern;\n}();\n\nvar ReplacePattern =\n/** @class */\nfunction () {\n  function ReplacePattern(pieces) {\n    if (!pieces || pieces.length === 0) {\n      this._state = new StaticValueReplacePattern('');\n    } else if (pieces.length === 1 && pieces[0].staticValue !== null) {\n      this._state = new StaticValueReplacePattern(pieces[0].staticValue);\n    } else {\n      this._state = new DynamicPiecesReplacePattern(pieces);\n    }\n  }\n\n  ReplacePattern.fromStaticValue = function (value) {\n    return new ReplacePattern([ReplacePiece.staticValue(value)]);\n  };\n\n  Object.defineProperty(ReplacePattern.prototype, \"hasReplacementPatterns\", {\n    get: function () {\n      return this._state.kind === 1\n      /* DynamicPieces */\n      ;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ReplacePattern.prototype.buildReplaceString = function (matches, preserveCase) {\n    if (this._state.kind === 0\n    /* StaticValue */\n    ) {\n        if (preserveCase) {\n          return buildReplaceStringWithCasePreserved(matches, this._state.staticValue);\n        } else {\n          return this._state.staticValue;\n        }\n      }\n\n    var result = '';\n\n    for (var i = 0, len = this._state.pieces.length; i < len; i++) {\n      var piece = this._state.pieces[i];\n\n      if (piece.staticValue !== null) {\n        // static value ReplacePiece\n        result += piece.staticValue;\n        continue;\n      } // match index ReplacePiece\n\n\n      result += ReplacePattern._substitute(piece.matchIndex, matches);\n    }\n\n    return result;\n  };\n\n  ReplacePattern._substitute = function (matchIndex, matches) {\n    if (matches === null) {\n      return '';\n    }\n\n    if (matchIndex === 0) {\n      return matches[0];\n    }\n\n    var remainder = '';\n\n    while (matchIndex > 0) {\n      if (matchIndex < matches.length) {\n        // A match can be undefined\n        var match = matches[matchIndex] || '';\n        return match + remainder;\n      }\n\n      remainder = String(matchIndex % 10) + remainder;\n      matchIndex = Math.floor(matchIndex / 10);\n    }\n\n    return '$' + remainder;\n  };\n\n  return ReplacePattern;\n}();\n\nexport { ReplacePattern };\n/**\r\n * A replace piece can either be a static string or an index to a specific match.\r\n */\n\nvar ReplacePiece =\n/** @class */\nfunction () {\n  function ReplacePiece(staticValue, matchIndex) {\n    this.staticValue = staticValue;\n    this.matchIndex = matchIndex;\n  }\n\n  ReplacePiece.staticValue = function (value) {\n    return new ReplacePiece(value, -1);\n  };\n\n  ReplacePiece.matchIndex = function (index) {\n    return new ReplacePiece(null, index);\n  };\n\n  return ReplacePiece;\n}();\n\nexport { ReplacePiece };\n\nvar ReplacePieceBuilder =\n/** @class */\nfunction () {\n  function ReplacePieceBuilder(source) {\n    this._source = source;\n    this._lastCharIndex = 0;\n    this._result = [];\n    this._resultLen = 0;\n    this._currentStaticPiece = '';\n  }\n\n  ReplacePieceBuilder.prototype.emitUnchanged = function (toCharIndex) {\n    this._emitStatic(this._source.substring(this._lastCharIndex, toCharIndex));\n\n    this._lastCharIndex = toCharIndex;\n  };\n\n  ReplacePieceBuilder.prototype.emitStatic = function (value, toCharIndex) {\n    this._emitStatic(value);\n\n    this._lastCharIndex = toCharIndex;\n  };\n\n  ReplacePieceBuilder.prototype._emitStatic = function (value) {\n    if (value.length === 0) {\n      return;\n    }\n\n    this._currentStaticPiece += value;\n  };\n\n  ReplacePieceBuilder.prototype.emitMatchIndex = function (index, toCharIndex) {\n    if (this._currentStaticPiece.length !== 0) {\n      this._result[this._resultLen++] = ReplacePiece.staticValue(this._currentStaticPiece);\n      this._currentStaticPiece = '';\n    }\n\n    this._result[this._resultLen++] = ReplacePiece.matchIndex(index);\n    this._lastCharIndex = toCharIndex;\n  };\n\n  ReplacePieceBuilder.prototype.finalize = function () {\n    this.emitUnchanged(this._source.length);\n\n    if (this._currentStaticPiece.length !== 0) {\n      this._result[this._resultLen++] = ReplacePiece.staticValue(this._currentStaticPiece);\n      this._currentStaticPiece = '';\n    }\n\n    return new ReplacePattern(this._result);\n  };\n\n  return ReplacePieceBuilder;\n}();\n/**\r\n * \\n\t\t\t=> inserts a LF\r\n * \\t\t\t\t=> inserts a TAB\r\n * \\\\\t\t\t=> inserts a \"\\\".\r\n * $$\t\t\t=> inserts a \"$\".\r\n * $& and $0\t=> inserts the matched substring.\r\n * $n\t\t\t=> Where n is a non-negative integer lesser than 100, inserts the nth parenthesized submatch string\r\n * everything else stays untouched\r\n *\r\n * Also see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#Specifying_a_string_as_a_parameter\r\n */\n\n\nexport function parseReplaceString(replaceString) {\n  if (!replaceString || replaceString.length === 0) {\n    return new ReplacePattern(null);\n  }\n\n  var result = new ReplacePieceBuilder(replaceString);\n\n  for (var i = 0, len = replaceString.length; i < len; i++) {\n    var chCode = replaceString.charCodeAt(i);\n\n    if (chCode === 92\n    /* Backslash */\n    ) {\n        // move to next char\n        i++;\n\n        if (i >= len) {\n          // string ends with a \\\n          break;\n        }\n\n        var nextChCode = replaceString.charCodeAt(i); // let replaceWithCharacter: string | null = null;\n\n        switch (nextChCode) {\n          case 92\n          /* Backslash */\n          :\n            // \\\\ => inserts a \"\\\"\n            result.emitUnchanged(i - 1);\n            result.emitStatic('\\\\', i + 1);\n            break;\n\n          case 110\n          /* n */\n          :\n            // \\n => inserts a LF\n            result.emitUnchanged(i - 1);\n            result.emitStatic('\\n', i + 1);\n            break;\n\n          case 116\n          /* t */\n          :\n            // \\t => inserts a TAB\n            result.emitUnchanged(i - 1);\n            result.emitStatic('\\t', i + 1);\n            break;\n        }\n\n        continue;\n      }\n\n    if (chCode === 36\n    /* DollarSign */\n    ) {\n        // move to next char\n        i++;\n\n        if (i >= len) {\n          // string ends with a $\n          break;\n        }\n\n        var nextChCode = replaceString.charCodeAt(i);\n\n        if (nextChCode === 36\n        /* DollarSign */\n        ) {\n            // $$ => inserts a \"$\"\n            result.emitUnchanged(i - 1);\n            result.emitStatic('$', i + 1);\n            continue;\n          }\n\n        if (nextChCode === 48\n        /* Digit0 */\n        || nextChCode === 38\n        /* Ampersand */\n        ) {\n            // $& and $0 => inserts the matched substring.\n            result.emitUnchanged(i - 1);\n            result.emitMatchIndex(0, i + 1);\n            continue;\n          }\n\n        if (49\n        /* Digit1 */\n        <= nextChCode && nextChCode <= 57\n        /* Digit9 */\n        ) {\n            // $n\n            var matchIndex = nextChCode - 48\n            /* Digit0 */\n            ; // peek next char to probe for $nn\n\n            if (i + 1 < len) {\n              var nextNextChCode = replaceString.charCodeAt(i + 1);\n\n              if (48\n              /* Digit0 */\n              <= nextNextChCode && nextNextChCode <= 57\n              /* Digit9 */\n              ) {\n                  // $nn\n                  // move to next char\n                  i++;\n                  matchIndex = matchIndex * 10 + (nextNextChCode - 48\n                  /* Digit0 */\n                  );\n                  result.emitUnchanged(i - 2);\n                  result.emitMatchIndex(matchIndex, i + 1);\n                  continue;\n                }\n            }\n\n            result.emitUnchanged(i - 1);\n            result.emitMatchIndex(matchIndex, i + 1);\n            continue;\n          }\n      }\n  }\n\n  return result.finalize();\n}","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/contrib/find/replacePattern.js"],"names":["buildReplaceStringWithCasePreserved","StaticValueReplacePattern","staticValue","kind","DynamicPiecesReplacePattern","pieces","ReplacePattern","length","_state","fromStaticValue","value","ReplacePiece","Object","defineProperty","prototype","get","enumerable","configurable","buildReplaceString","matches","preserveCase","result","i","len","piece","_substitute","matchIndex","remainder","match","String","Math","floor","index","ReplacePieceBuilder","source","_source","_lastCharIndex","_result","_resultLen","_currentStaticPiece","emitUnchanged","toCharIndex","_emitStatic","substring","emitStatic","emitMatchIndex","finalize","parseReplaceString","replaceString","chCode","charCodeAt","nextChCode","nextNextChCode"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { buildReplaceStringWithCasePreserved } from '../../../base/common/search.js';\r\n/**\r\n * Assigned when the replace pattern is entirely static.\r\n */\r\nvar StaticValueReplacePattern = /** @class */ (function () {\r\n    function StaticValueReplacePattern(staticValue) {\r\n        this.staticValue = staticValue;\r\n        this.kind = 0 /* StaticValue */;\r\n    }\r\n    return StaticValueReplacePattern;\r\n}());\r\n/**\r\n * Assigned when the replace pattern has replacemend patterns.\r\n */\r\nvar DynamicPiecesReplacePattern = /** @class */ (function () {\r\n    function DynamicPiecesReplacePattern(pieces) {\r\n        this.pieces = pieces;\r\n        this.kind = 1 /* DynamicPieces */;\r\n    }\r\n    return DynamicPiecesReplacePattern;\r\n}());\r\nvar ReplacePattern = /** @class */ (function () {\r\n    function ReplacePattern(pieces) {\r\n        if (!pieces || pieces.length === 0) {\r\n            this._state = new StaticValueReplacePattern('');\r\n        }\r\n        else if (pieces.length === 1 && pieces[0].staticValue !== null) {\r\n            this._state = new StaticValueReplacePattern(pieces[0].staticValue);\r\n        }\r\n        else {\r\n            this._state = new DynamicPiecesReplacePattern(pieces);\r\n        }\r\n    }\r\n    ReplacePattern.fromStaticValue = function (value) {\r\n        return new ReplacePattern([ReplacePiece.staticValue(value)]);\r\n    };\r\n    Object.defineProperty(ReplacePattern.prototype, \"hasReplacementPatterns\", {\r\n        get: function () {\r\n            return (this._state.kind === 1 /* DynamicPieces */);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ReplacePattern.prototype.buildReplaceString = function (matches, preserveCase) {\r\n        if (this._state.kind === 0 /* StaticValue */) {\r\n            if (preserveCase) {\r\n                return buildReplaceStringWithCasePreserved(matches, this._state.staticValue);\r\n            }\r\n            else {\r\n                return this._state.staticValue;\r\n            }\r\n        }\r\n        var result = '';\r\n        for (var i = 0, len = this._state.pieces.length; i < len; i++) {\r\n            var piece = this._state.pieces[i];\r\n            if (piece.staticValue !== null) {\r\n                // static value ReplacePiece\r\n                result += piece.staticValue;\r\n                continue;\r\n            }\r\n            // match index ReplacePiece\r\n            result += ReplacePattern._substitute(piece.matchIndex, matches);\r\n        }\r\n        return result;\r\n    };\r\n    ReplacePattern._substitute = function (matchIndex, matches) {\r\n        if (matches === null) {\r\n            return '';\r\n        }\r\n        if (matchIndex === 0) {\r\n            return matches[0];\r\n        }\r\n        var remainder = '';\r\n        while (matchIndex > 0) {\r\n            if (matchIndex < matches.length) {\r\n                // A match can be undefined\r\n                var match = (matches[matchIndex] || '');\r\n                return match + remainder;\r\n            }\r\n            remainder = String(matchIndex % 10) + remainder;\r\n            matchIndex = Math.floor(matchIndex / 10);\r\n        }\r\n        return '$' + remainder;\r\n    };\r\n    return ReplacePattern;\r\n}());\r\nexport { ReplacePattern };\r\n/**\r\n * A replace piece can either be a static string or an index to a specific match.\r\n */\r\nvar ReplacePiece = /** @class */ (function () {\r\n    function ReplacePiece(staticValue, matchIndex) {\r\n        this.staticValue = staticValue;\r\n        this.matchIndex = matchIndex;\r\n    }\r\n    ReplacePiece.staticValue = function (value) {\r\n        return new ReplacePiece(value, -1);\r\n    };\r\n    ReplacePiece.matchIndex = function (index) {\r\n        return new ReplacePiece(null, index);\r\n    };\r\n    return ReplacePiece;\r\n}());\r\nexport { ReplacePiece };\r\nvar ReplacePieceBuilder = /** @class */ (function () {\r\n    function ReplacePieceBuilder(source) {\r\n        this._source = source;\r\n        this._lastCharIndex = 0;\r\n        this._result = [];\r\n        this._resultLen = 0;\r\n        this._currentStaticPiece = '';\r\n    }\r\n    ReplacePieceBuilder.prototype.emitUnchanged = function (toCharIndex) {\r\n        this._emitStatic(this._source.substring(this._lastCharIndex, toCharIndex));\r\n        this._lastCharIndex = toCharIndex;\r\n    };\r\n    ReplacePieceBuilder.prototype.emitStatic = function (value, toCharIndex) {\r\n        this._emitStatic(value);\r\n        this._lastCharIndex = toCharIndex;\r\n    };\r\n    ReplacePieceBuilder.prototype._emitStatic = function (value) {\r\n        if (value.length === 0) {\r\n            return;\r\n        }\r\n        this._currentStaticPiece += value;\r\n    };\r\n    ReplacePieceBuilder.prototype.emitMatchIndex = function (index, toCharIndex) {\r\n        if (this._currentStaticPiece.length !== 0) {\r\n            this._result[this._resultLen++] = ReplacePiece.staticValue(this._currentStaticPiece);\r\n            this._currentStaticPiece = '';\r\n        }\r\n        this._result[this._resultLen++] = ReplacePiece.matchIndex(index);\r\n        this._lastCharIndex = toCharIndex;\r\n    };\r\n    ReplacePieceBuilder.prototype.finalize = function () {\r\n        this.emitUnchanged(this._source.length);\r\n        if (this._currentStaticPiece.length !== 0) {\r\n            this._result[this._resultLen++] = ReplacePiece.staticValue(this._currentStaticPiece);\r\n            this._currentStaticPiece = '';\r\n        }\r\n        return new ReplacePattern(this._result);\r\n    };\r\n    return ReplacePieceBuilder;\r\n}());\r\n/**\r\n * \\n\t\t\t=> inserts a LF\r\n * \\t\t\t\t=> inserts a TAB\r\n * \\\\\t\t\t=> inserts a \"\\\".\r\n * $$\t\t\t=> inserts a \"$\".\r\n * $& and $0\t=> inserts the matched substring.\r\n * $n\t\t\t=> Where n is a non-negative integer lesser than 100, inserts the nth parenthesized submatch string\r\n * everything else stays untouched\r\n *\r\n * Also see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#Specifying_a_string_as_a_parameter\r\n */\r\nexport function parseReplaceString(replaceString) {\r\n    if (!replaceString || replaceString.length === 0) {\r\n        return new ReplacePattern(null);\r\n    }\r\n    var result = new ReplacePieceBuilder(replaceString);\r\n    for (var i = 0, len = replaceString.length; i < len; i++) {\r\n        var chCode = replaceString.charCodeAt(i);\r\n        if (chCode === 92 /* Backslash */) {\r\n            // move to next char\r\n            i++;\r\n            if (i >= len) {\r\n                // string ends with a \\\r\n                break;\r\n            }\r\n            var nextChCode = replaceString.charCodeAt(i);\r\n            // let replaceWithCharacter: string | null = null;\r\n            switch (nextChCode) {\r\n                case 92 /* Backslash */:\r\n                    // \\\\ => inserts a \"\\\"\r\n                    result.emitUnchanged(i - 1);\r\n                    result.emitStatic('\\\\', i + 1);\r\n                    break;\r\n                case 110 /* n */:\r\n                    // \\n => inserts a LF\r\n                    result.emitUnchanged(i - 1);\r\n                    result.emitStatic('\\n', i + 1);\r\n                    break;\r\n                case 116 /* t */:\r\n                    // \\t => inserts a TAB\r\n                    result.emitUnchanged(i - 1);\r\n                    result.emitStatic('\\t', i + 1);\r\n                    break;\r\n            }\r\n            continue;\r\n        }\r\n        if (chCode === 36 /* DollarSign */) {\r\n            // move to next char\r\n            i++;\r\n            if (i >= len) {\r\n                // string ends with a $\r\n                break;\r\n            }\r\n            var nextChCode = replaceString.charCodeAt(i);\r\n            if (nextChCode === 36 /* DollarSign */) {\r\n                // $$ => inserts a \"$\"\r\n                result.emitUnchanged(i - 1);\r\n                result.emitStatic('$', i + 1);\r\n                continue;\r\n            }\r\n            if (nextChCode === 48 /* Digit0 */ || nextChCode === 38 /* Ampersand */) {\r\n                // $& and $0 => inserts the matched substring.\r\n                result.emitUnchanged(i - 1);\r\n                result.emitMatchIndex(0, i + 1);\r\n                continue;\r\n            }\r\n            if (49 /* Digit1 */ <= nextChCode && nextChCode <= 57 /* Digit9 */) {\r\n                // $n\r\n                var matchIndex = nextChCode - 48 /* Digit0 */;\r\n                // peek next char to probe for $nn\r\n                if (i + 1 < len) {\r\n                    var nextNextChCode = replaceString.charCodeAt(i + 1);\r\n                    if (48 /* Digit0 */ <= nextNextChCode && nextNextChCode <= 57 /* Digit9 */) {\r\n                        // $nn\r\n                        // move to next char\r\n                        i++;\r\n                        matchIndex = matchIndex * 10 + (nextNextChCode - 48 /* Digit0 */);\r\n                        result.emitUnchanged(i - 2);\r\n                        result.emitMatchIndex(matchIndex, i + 1);\r\n                        continue;\r\n                    }\r\n                }\r\n                result.emitUnchanged(i - 1);\r\n                result.emitMatchIndex(matchIndex, i + 1);\r\n                continue;\r\n            }\r\n        }\r\n    }\r\n    return result.finalize();\r\n}\r\n"]},"metadata":{},"sourceType":"module"}