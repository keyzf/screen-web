{"ast":null,"code":"var _jsxFileName = \"/Users/ifudata/eclipse-workspace/screen-web/src/components/Common/settings/SettingDataForm.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Row, Col, Form, Input, Select } from 'antd';\nimport MonacoEditor from 'react-monaco-editor';\nimport { connect } from 'react-redux';\nimport { changeItem, changeItemArr } from '../../../store/actions/screen-actions';\nimport { monacoEditorConfig } from '../../../config/monacoEditor';\nconst {\n  Option\n} = Select;\n\nclass SettingDataForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onEditorChange = (newValue, event) => {\n      // console.log(\"event\",event)\n      // console.log(\"onChange\", newValue); // eslint-disable-line no-console\n      console.log(JSON.stringify(newValue));\n      const {\n        id\n      } = this.props.module;\n      this.props.changeItemArr({\n        id,\n        path: [\"data\", \"data\"],\n        data: newValue\n      });\n    };\n\n    this.moduleDataTypeChange = value => {\n      const {\n        id\n      } = this.props.module;\n      this.props.changeItem({\n        id,\n        data: {\n          data: {\n            type: value\n          }\n        }\n      });\n    };\n\n    this.moduleDataUrlChange = e => {\n      const {\n        id\n      } = this.props.module;\n      this.props.changeItem({\n        id,\n        data: {\n          data: {\n            url: e.target.value\n          }\n        }\n      });\n    };\n\n    this.editorDidMount = (editor, monaco) => {// console.log(editor)\n      // console.log(monaco)\n    };\n  }\n\n  render() {\n    const {\n      data\n    } = this.props.module;\n    return React.createElement(\"div\", {\n      className: \"setting-form-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Row, {\n      gutter: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"\\u6570\\u636E\\u7C7B\\u578B\")), React.createElement(Col, {\n      span: 18,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Select, {\n      placeholder: \"\\u8BF7\\u9009\\u62E9\\u6570\\u636E\\u7C7B\\u578B\",\n      value: data.type,\n      dropdownClassName: \"dark-style\",\n      onChange: this.moduleDataTypeChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"api\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"API\"), React.createElement(Option, {\n      value: \"static\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"\\u9759\\u6001\\u6570\\u636E\")))), data.type === \"api\" ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"URL\")), React.createElement(Col, {\n      span: 18,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165url\",\n      value: data.url,\n      onChange: this.moduleDataUrlChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })))) : \"\", React.createElement(Col, {\n      span: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"\\u6570\\u636E\\u5C55\\u793A\")), React.createElement(Col, {\n      span: 18,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(MonacoEditor, {\n      width: \"207\",\n      height: \"200\",\n      value: data.data,\n      options: monacoEditorConfig,\n      theme: \"vs-dark\",\n      onChange: this.onEditorChange,\n      editorDidMount: this.editorDidMount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeItem(data) {\n      const action = changeItem(data);\n      dispatch(action);\n    },\n\n    changeItemArr(data) {\n      const action = changeItemArr(data);\n      dispatch(action);\n    }\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingDataForm);","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/src/components/Common/settings/SettingDataForm.js"],"names":["React","Component","Fragment","Row","Col","Form","Input","Select","MonacoEditor","connect","changeItem","changeItemArr","monacoEditorConfig","Option","SettingDataForm","onEditorChange","newValue","event","console","log","JSON","stringify","id","props","module","path","data","moduleDataTypeChange","value","type","moduleDataUrlChange","e","url","target","editorDidMount","editor","monaco","render","mapStateToProps","state","ownProps","mapDispatchToProps","dispatch","action"],"mappings":"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","sourcesContent":["import React,{ Component, Fragment } from 'react'\nimport { Row,Col,Form,Input,Select } from 'antd'\nimport MonacoEditor from 'react-monaco-editor';\nimport { connect } from 'react-redux'\nimport { changeItem,changeItemArr } from '../../../store/actions/screen-actions'\nimport { monacoEditorConfig } from '../../../config/monacoEditor'\nconst { Option } = Select;\nclass SettingDataForm extends Component{\n    onEditorChange = (newValue,event) => {\n        // console.log(\"event\",event)\n        // console.log(\"onChange\", newValue); // eslint-disable-line no-console\n        console.log(JSON.stringify(newValue))\n        const { id } = this.props.module\n        this.props.changeItemArr({\n            id,\n            path:[\"data\",\"data\"],\n            data:newValue\n        })\n    };\n    moduleDataTypeChange = (value)=>{\n        const { id } = this.props.module\n        this.props.changeItem({\n            id,\n            data:{\n                data:{\n                    type:value\n                }\n            }\n        })\n    }\n    moduleDataUrlChange = (e)=>{\n        const { id } = this.props.module\n        this.props.changeItem({\n            id,\n            data:{\n                data:{\n                    url:e.target.value\n                }\n            }\n        })\n    }\n    editorDidMount = (editor,monaco) => {\n        // console.log(editor)\n        // console.log(monaco)\n    };\n    render(){\n        const { data } = this.props.module\n        return (\n            <div className=\"setting-form-wrap\">\n                <Form>\n                    <Row gutter={10}>\n                    <Col span={6}>\n                            <label htmlFor=\"\">数据类型</label>\n                        </Col>\n                        <Col span={18}>\n                            <Form.Item>\n                                <Select\n                                    placeholder=\"请选择数据类型\"\n                                    value={data.type}\n                                    dropdownClassName=\"dark-style\"\n                                    onChange={this.moduleDataTypeChange}\n                                >\n                                    <Option value=\"api\">API</Option>\n                                    <Option value=\"static\">静态数据</Option>\n                                </Select>\n                            </Form.Item>\n                        </Col>\n                        {\n                            data.type===\"api\"?<Fragment>\n                                <Col span={6}>\n                                    <label htmlFor=\"\">URL</label>\n                                </Col>\n                                <Col span={18}>\n                                    <Form.Item>\n                                        <Input \n                                            placeholder=\"请输入url\" \n                                            value={data.url}\n                                            onChange={this.moduleDataUrlChange}\n                                        />\n                                    </Form.Item>\n                                </Col>\n                            </Fragment>:\"\"\n                        }\n                        <Col span={6}>\n                            <label htmlFor=\"\">数据展示</label>\n                        </Col>\n                        <Col span={18}>\n                            <MonacoEditor\n                                width=\"207\"\n                                height=\"200\"\n                                value={data.data}\n                                options={monacoEditorConfig}\n                                theme=\"vs-dark\"\n                                onChange={this.onEditorChange}\n                                editorDidMount={this.editorDidMount}\n                            />\n                        </Col>\n                    </Row>\n                </Form>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state,ownProps)=>{\n    return {\n        \n    }\n}\nconst mapDispatchToProps = dispatch=>{\n    return {\n        changeItem(data){\n            const action = changeItem(data)\n            dispatch(action)\n        },\n        changeItemArr(data){\n            const action = changeItemArr(data)\n            dispatch(action)\n        }\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(SettingDataForm)"]},"metadata":{},"sourceType":"module"}