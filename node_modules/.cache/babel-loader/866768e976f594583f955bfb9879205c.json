{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as ts from './lib/typescriptServices.js';\nimport { lib_dts, lib_es6_dts } from './lib/lib.js';\nvar DEFAULT_LIB = {\n  NAME: 'defaultLib:lib.d.ts',\n  CONTENTS: lib_dts\n};\nvar ES6_LIB = {\n  NAME: 'defaultLib:lib.es6.d.ts',\n  CONTENTS: lib_es6_dts\n};\n\nvar TypeScriptWorker =\n/** @class */\nfunction () {\n  function TypeScriptWorker(ctx, createData) {\n    this._extraLibs = Object.create(null);\n    this._languageService = ts.createLanguageService(this);\n    this._ctx = ctx;\n    this._compilerOptions = createData.compilerOptions;\n    this._extraLibs = createData.extraLibs;\n  } // --- language service host ---------------\n\n\n  TypeScriptWorker.prototype.getCompilationSettings = function () {\n    return this._compilerOptions;\n  };\n\n  TypeScriptWorker.prototype.getScriptFileNames = function () {\n    var models = this._ctx.getMirrorModels().map(function (model) {\n      return model.uri.toString();\n    });\n\n    return models.concat(Object.keys(this._extraLibs));\n  };\n\n  TypeScriptWorker.prototype._getModel = function (fileName) {\n    var models = this._ctx.getMirrorModels();\n\n    for (var i = 0; i < models.length; i++) {\n      if (models[i].uri.toString() === fileName) {\n        return models[i];\n      }\n    }\n\n    return null;\n  };\n\n  TypeScriptWorker.prototype.getScriptVersion = function (fileName) {\n    var model = this._getModel(fileName);\n\n    if (model) {\n      return model.version.toString();\n    } else if (this.isDefaultLibFileName(fileName)) {\n      // default lib is static\n      return '1';\n    } else if (fileName in this._extraLibs) {\n      return String(this._extraLibs[fileName].version);\n    }\n\n    return '';\n  };\n\n  TypeScriptWorker.prototype.getScriptSnapshot = function (fileName) {\n    var text;\n\n    var model = this._getModel(fileName);\n\n    if (model) {\n      // a true editor model\n      text = model.getValue();\n    } else if (fileName in this._extraLibs) {\n      // extra lib\n      text = this._extraLibs[fileName].content;\n    } else if (fileName === DEFAULT_LIB.NAME) {\n      text = DEFAULT_LIB.CONTENTS;\n    } else if (fileName === ES6_LIB.NAME) {\n      text = ES6_LIB.CONTENTS;\n    } else {\n      return;\n    }\n\n    return {\n      getText: function (start, end) {\n        return text.substring(start, end);\n      },\n      getLength: function () {\n        return text.length;\n      },\n      getChangeRange: function () {\n        return undefined;\n      }\n    };\n  };\n\n  TypeScriptWorker.prototype.getScriptKind = function (fileName) {\n    var suffix = fileName.substr(fileName.lastIndexOf('.') + 1);\n\n    switch (suffix) {\n      case 'ts':\n        return ts.ScriptKind.TS;\n\n      case 'tsx':\n        return ts.ScriptKind.TSX;\n\n      case 'js':\n        return ts.ScriptKind.JS;\n\n      case 'jsx':\n        return ts.ScriptKind.JSX;\n\n      default:\n        return this.getCompilationSettings().allowJs ? ts.ScriptKind.JS : ts.ScriptKind.TS;\n    }\n  };\n\n  TypeScriptWorker.prototype.getCurrentDirectory = function () {\n    return '';\n  };\n\n  TypeScriptWorker.prototype.getDefaultLibFileName = function (options) {\n    // TODO@joh support lib.es7.d.ts\n    return (options.target || ts.ScriptTarget.ES5) <= ts.ScriptTarget.ES5 ? DEFAULT_LIB.NAME : ES6_LIB.NAME;\n  };\n\n  TypeScriptWorker.prototype.isDefaultLibFileName = function (fileName) {\n    return fileName === this.getDefaultLibFileName(this._compilerOptions);\n  }; // --- language features\n\n\n  TypeScriptWorker.clearFiles = function (diagnostics) {\n    // Clear the `file` field, which cannot be JSON'yfied because it\n    // contains cyclic data structures.\n    diagnostics.forEach(function (diag) {\n      diag.file = undefined;\n      var related = diag.relatedInformation;\n\n      if (related) {\n        related.forEach(function (diag2) {\n          return diag2.file = undefined;\n        });\n      }\n    });\n    return diagnostics;\n  };\n\n  TypeScriptWorker.prototype.getSyntacticDiagnostics = function (fileName) {\n    var diagnostics = this._languageService.getSyntacticDiagnostics(fileName);\n\n    return Promise.resolve(TypeScriptWorker.clearFiles(diagnostics));\n  };\n\n  TypeScriptWorker.prototype.getSemanticDiagnostics = function (fileName) {\n    var diagnostics = this._languageService.getSemanticDiagnostics(fileName);\n\n    return Promise.resolve(TypeScriptWorker.clearFiles(diagnostics));\n  };\n\n  TypeScriptWorker.prototype.getSuggestionDiagnostics = function (fileName) {\n    var diagnostics = this._languageService.getSuggestionDiagnostics(fileName);\n\n    return Promise.resolve(TypeScriptWorker.clearFiles(diagnostics));\n  };\n\n  TypeScriptWorker.prototype.getCompilerOptionsDiagnostics = function (fileName) {\n    var diagnostics = this._languageService.getCompilerOptionsDiagnostics();\n\n    return Promise.resolve(TypeScriptWorker.clearFiles(diagnostics));\n  };\n\n  TypeScriptWorker.prototype.getCompletionsAtPosition = function (fileName, position) {\n    return Promise.resolve(this._languageService.getCompletionsAtPosition(fileName, position, undefined));\n  };\n\n  TypeScriptWorker.prototype.getCompletionEntryDetails = function (fileName, position, entry) {\n    return Promise.resolve(this._languageService.getCompletionEntryDetails(fileName, position, entry, undefined, undefined, undefined));\n  };\n\n  TypeScriptWorker.prototype.getSignatureHelpItems = function (fileName, position) {\n    return Promise.resolve(this._languageService.getSignatureHelpItems(fileName, position, undefined));\n  };\n\n  TypeScriptWorker.prototype.getQuickInfoAtPosition = function (fileName, position) {\n    return Promise.resolve(this._languageService.getQuickInfoAtPosition(fileName, position));\n  };\n\n  TypeScriptWorker.prototype.getOccurrencesAtPosition = function (fileName, position) {\n    return Promise.resolve(this._languageService.getOccurrencesAtPosition(fileName, position));\n  };\n\n  TypeScriptWorker.prototype.getDefinitionAtPosition = function (fileName, position) {\n    return Promise.resolve(this._languageService.getDefinitionAtPosition(fileName, position));\n  };\n\n  TypeScriptWorker.prototype.getReferencesAtPosition = function (fileName, position) {\n    return Promise.resolve(this._languageService.getReferencesAtPosition(fileName, position));\n  };\n\n  TypeScriptWorker.prototype.getNavigationBarItems = function (fileName) {\n    return Promise.resolve(this._languageService.getNavigationBarItems(fileName));\n  };\n\n  TypeScriptWorker.prototype.getFormattingEditsForDocument = function (fileName, options) {\n    return Promise.resolve(this._languageService.getFormattingEditsForDocument(fileName, options));\n  };\n\n  TypeScriptWorker.prototype.getFormattingEditsForRange = function (fileName, start, end, options) {\n    return Promise.resolve(this._languageService.getFormattingEditsForRange(fileName, start, end, options));\n  };\n\n  TypeScriptWorker.prototype.getFormattingEditsAfterKeystroke = function (fileName, postion, ch, options) {\n    return Promise.resolve(this._languageService.getFormattingEditsAfterKeystroke(fileName, postion, ch, options));\n  };\n\n  TypeScriptWorker.prototype.findRenameLocations = function (fileName, positon, findInStrings, findInComments, providePrefixAndSuffixTextForRename) {\n    return Promise.resolve(this._languageService.findRenameLocations(fileName, positon, findInStrings, findInComments, providePrefixAndSuffixTextForRename));\n  };\n\n  TypeScriptWorker.prototype.getRenameInfo = function (fileName, positon, options) {\n    return Promise.resolve(this._languageService.getRenameInfo(fileName, positon, options));\n  };\n\n  TypeScriptWorker.prototype.getEmitOutput = function (fileName) {\n    return Promise.resolve(this._languageService.getEmitOutput(fileName));\n  };\n\n  TypeScriptWorker.prototype.getCodeFixesAtPosition = function (fileName, start, end, errorCodes, formatOptions) {\n    var preferences = {};\n    return Promise.resolve(this._languageService.getCodeFixesAtPosition(fileName, start, end, errorCodes, formatOptions, preferences));\n  };\n\n  TypeScriptWorker.prototype.updateExtraLibs = function (extraLibs) {\n    this._extraLibs = extraLibs;\n  };\n\n  return TypeScriptWorker;\n}();\n\nexport { TypeScriptWorker };\nexport function create(ctx, createData) {\n  return new TypeScriptWorker(ctx, createData);\n}","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/language/typescript/tsWorker.js"],"names":["ts","lib_dts","lib_es6_dts","DEFAULT_LIB","NAME","CONTENTS","ES6_LIB","TypeScriptWorker","ctx","createData","_extraLibs","Object","create","_languageService","createLanguageService","_ctx","_compilerOptions","compilerOptions","extraLibs","prototype","getCompilationSettings","getScriptFileNames","models","getMirrorModels","map","model","uri","toString","concat","keys","_getModel","fileName","i","length","getScriptVersion","version","isDefaultLibFileName","String","getScriptSnapshot","text","getValue","content","getText","start","end","substring","getLength","getChangeRange","undefined","getScriptKind","suffix","substr","lastIndexOf","ScriptKind","TS","TSX","JS","JSX","allowJs","getCurrentDirectory","getDefaultLibFileName","options","target","ScriptTarget","ES5","clearFiles","diagnostics","forEach","diag","file","related","relatedInformation","diag2","getSyntacticDiagnostics","Promise","resolve","getSemanticDiagnostics","getSuggestionDiagnostics","getCompilerOptionsDiagnostics","getCompletionsAtPosition","position","getCompletionEntryDetails","entry","getSignatureHelpItems","getQuickInfoAtPosition","getOccurrencesAtPosition","getDefinitionAtPosition","getReferencesAtPosition","getNavigationBarItems","getFormattingEditsForDocument","getFormattingEditsForRange","getFormattingEditsAfterKeystroke","postion","ch","findRenameLocations","positon","findInStrings","findInComments","providePrefixAndSuffixTextForRename","getRenameInfo","getEmitOutput","getCodeFixesAtPosition","errorCodes","formatOptions","preferences","updateExtraLibs"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nimport * as ts from './lib/typescriptServices.js';\r\nimport { lib_dts, lib_es6_dts } from './lib/lib.js';\r\nvar DEFAULT_LIB = {\r\n    NAME: 'defaultLib:lib.d.ts',\r\n    CONTENTS: lib_dts\r\n};\r\nvar ES6_LIB = {\r\n    NAME: 'defaultLib:lib.es6.d.ts',\r\n    CONTENTS: lib_es6_dts\r\n};\r\nvar TypeScriptWorker = /** @class */ (function () {\r\n    function TypeScriptWorker(ctx, createData) {\r\n        this._extraLibs = Object.create(null);\r\n        this._languageService = ts.createLanguageService(this);\r\n        this._ctx = ctx;\r\n        this._compilerOptions = createData.compilerOptions;\r\n        this._extraLibs = createData.extraLibs;\r\n    }\r\n    // --- language service host ---------------\r\n    TypeScriptWorker.prototype.getCompilationSettings = function () {\r\n        return this._compilerOptions;\r\n    };\r\n    TypeScriptWorker.prototype.getScriptFileNames = function () {\r\n        var models = this._ctx.getMirrorModels().map(function (model) { return model.uri.toString(); });\r\n        return models.concat(Object.keys(this._extraLibs));\r\n    };\r\n    TypeScriptWorker.prototype._getModel = function (fileName) {\r\n        var models = this._ctx.getMirrorModels();\r\n        for (var i = 0; i < models.length; i++) {\r\n            if (models[i].uri.toString() === fileName) {\r\n                return models[i];\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    TypeScriptWorker.prototype.getScriptVersion = function (fileName) {\r\n        var model = this._getModel(fileName);\r\n        if (model) {\r\n            return model.version.toString();\r\n        }\r\n        else if (this.isDefaultLibFileName(fileName)) {\r\n            // default lib is static\r\n            return '1';\r\n        }\r\n        else if (fileName in this._extraLibs) {\r\n            return String(this._extraLibs[fileName].version);\r\n        }\r\n        return '';\r\n    };\r\n    TypeScriptWorker.prototype.getScriptSnapshot = function (fileName) {\r\n        var text;\r\n        var model = this._getModel(fileName);\r\n        if (model) {\r\n            // a true editor model\r\n            text = model.getValue();\r\n        }\r\n        else if (fileName in this._extraLibs) {\r\n            // extra lib\r\n            text = this._extraLibs[fileName].content;\r\n        }\r\n        else if (fileName === DEFAULT_LIB.NAME) {\r\n            text = DEFAULT_LIB.CONTENTS;\r\n        }\r\n        else if (fileName === ES6_LIB.NAME) {\r\n            text = ES6_LIB.CONTENTS;\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n        return {\r\n            getText: function (start, end) { return text.substring(start, end); },\r\n            getLength: function () { return text.length; },\r\n            getChangeRange: function () { return undefined; }\r\n        };\r\n    };\r\n    TypeScriptWorker.prototype.getScriptKind = function (fileName) {\r\n        var suffix = fileName.substr(fileName.lastIndexOf('.') + 1);\r\n        switch (suffix) {\r\n            case 'ts': return ts.ScriptKind.TS;\r\n            case 'tsx': return ts.ScriptKind.TSX;\r\n            case 'js': return ts.ScriptKind.JS;\r\n            case 'jsx': return ts.ScriptKind.JSX;\r\n            default: return this.getCompilationSettings().allowJs\r\n                ? ts.ScriptKind.JS\r\n                : ts.ScriptKind.TS;\r\n        }\r\n    };\r\n    TypeScriptWorker.prototype.getCurrentDirectory = function () {\r\n        return '';\r\n    };\r\n    TypeScriptWorker.prototype.getDefaultLibFileName = function (options) {\r\n        // TODO@joh support lib.es7.d.ts\r\n        return (options.target || ts.ScriptTarget.ES5) <= ts.ScriptTarget.ES5 ? DEFAULT_LIB.NAME : ES6_LIB.NAME;\r\n    };\r\n    TypeScriptWorker.prototype.isDefaultLibFileName = function (fileName) {\r\n        return fileName === this.getDefaultLibFileName(this._compilerOptions);\r\n    };\r\n    // --- language features\r\n    TypeScriptWorker.clearFiles = function (diagnostics) {\r\n        // Clear the `file` field, which cannot be JSON'yfied because it\r\n        // contains cyclic data structures.\r\n        diagnostics.forEach(function (diag) {\r\n            diag.file = undefined;\r\n            var related = diag.relatedInformation;\r\n            if (related) {\r\n                related.forEach(function (diag2) { return diag2.file = undefined; });\r\n            }\r\n        });\r\n        return diagnostics;\r\n    };\r\n    TypeScriptWorker.prototype.getSyntacticDiagnostics = function (fileName) {\r\n        var diagnostics = this._languageService.getSyntacticDiagnostics(fileName);\r\n        return Promise.resolve(TypeScriptWorker.clearFiles(diagnostics));\r\n    };\r\n    TypeScriptWorker.prototype.getSemanticDiagnostics = function (fileName) {\r\n        var diagnostics = this._languageService.getSemanticDiagnostics(fileName);\r\n        return Promise.resolve(TypeScriptWorker.clearFiles(diagnostics));\r\n    };\r\n    TypeScriptWorker.prototype.getSuggestionDiagnostics = function (fileName) {\r\n        var diagnostics = this._languageService.getSuggestionDiagnostics(fileName);\r\n        return Promise.resolve(TypeScriptWorker.clearFiles(diagnostics));\r\n    };\r\n    TypeScriptWorker.prototype.getCompilerOptionsDiagnostics = function (fileName) {\r\n        var diagnostics = this._languageService.getCompilerOptionsDiagnostics();\r\n        return Promise.resolve(TypeScriptWorker.clearFiles(diagnostics));\r\n    };\r\n    TypeScriptWorker.prototype.getCompletionsAtPosition = function (fileName, position) {\r\n        return Promise.resolve(this._languageService.getCompletionsAtPosition(fileName, position, undefined));\r\n    };\r\n    TypeScriptWorker.prototype.getCompletionEntryDetails = function (fileName, position, entry) {\r\n        return Promise.resolve(this._languageService.getCompletionEntryDetails(fileName, position, entry, undefined, undefined, undefined));\r\n    };\r\n    TypeScriptWorker.prototype.getSignatureHelpItems = function (fileName, position) {\r\n        return Promise.resolve(this._languageService.getSignatureHelpItems(fileName, position, undefined));\r\n    };\r\n    TypeScriptWorker.prototype.getQuickInfoAtPosition = function (fileName, position) {\r\n        return Promise.resolve(this._languageService.getQuickInfoAtPosition(fileName, position));\r\n    };\r\n    TypeScriptWorker.prototype.getOccurrencesAtPosition = function (fileName, position) {\r\n        return Promise.resolve(this._languageService.getOccurrencesAtPosition(fileName, position));\r\n    };\r\n    TypeScriptWorker.prototype.getDefinitionAtPosition = function (fileName, position) {\r\n        return Promise.resolve(this._languageService.getDefinitionAtPosition(fileName, position));\r\n    };\r\n    TypeScriptWorker.prototype.getReferencesAtPosition = function (fileName, position) {\r\n        return Promise.resolve(this._languageService.getReferencesAtPosition(fileName, position));\r\n    };\r\n    TypeScriptWorker.prototype.getNavigationBarItems = function (fileName) {\r\n        return Promise.resolve(this._languageService.getNavigationBarItems(fileName));\r\n    };\r\n    TypeScriptWorker.prototype.getFormattingEditsForDocument = function (fileName, options) {\r\n        return Promise.resolve(this._languageService.getFormattingEditsForDocument(fileName, options));\r\n    };\r\n    TypeScriptWorker.prototype.getFormattingEditsForRange = function (fileName, start, end, options) {\r\n        return Promise.resolve(this._languageService.getFormattingEditsForRange(fileName, start, end, options));\r\n    };\r\n    TypeScriptWorker.prototype.getFormattingEditsAfterKeystroke = function (fileName, postion, ch, options) {\r\n        return Promise.resolve(this._languageService.getFormattingEditsAfterKeystroke(fileName, postion, ch, options));\r\n    };\r\n    TypeScriptWorker.prototype.findRenameLocations = function (fileName, positon, findInStrings, findInComments, providePrefixAndSuffixTextForRename) {\r\n        return Promise.resolve(this._languageService.findRenameLocations(fileName, positon, findInStrings, findInComments, providePrefixAndSuffixTextForRename));\r\n    };\r\n    TypeScriptWorker.prototype.getRenameInfo = function (fileName, positon, options) {\r\n        return Promise.resolve(this._languageService.getRenameInfo(fileName, positon, options));\r\n    };\r\n    TypeScriptWorker.prototype.getEmitOutput = function (fileName) {\r\n        return Promise.resolve(this._languageService.getEmitOutput(fileName));\r\n    };\r\n    TypeScriptWorker.prototype.getCodeFixesAtPosition = function (fileName, start, end, errorCodes, formatOptions) {\r\n        var preferences = {};\r\n        return Promise.resolve(this._languageService.getCodeFixesAtPosition(fileName, start, end, errorCodes, formatOptions, preferences));\r\n    };\r\n    TypeScriptWorker.prototype.updateExtraLibs = function (extraLibs) {\r\n        this._extraLibs = extraLibs;\r\n    };\r\n    return TypeScriptWorker;\r\n}());\r\nexport { TypeScriptWorker };\r\nexport function create(ctx, createData) {\r\n    return new TypeScriptWorker(ctx, createData);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}