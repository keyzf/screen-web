{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport './contextMenuHandler.css';\nimport { ActionRunner } from '../../../base/common/actions.js';\nimport { combinedDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { Menu } from '../../../base/browser/ui/menu/menu.js';\nimport { EventType, $, removeNode } from '../../../base/browser/dom.js';\nimport { attachMenuStyler } from '../../theme/common/styler.js';\nimport { domEvent } from '../../../base/browser/event.js';\nimport { StandardMouseEvent } from '../../../base/browser/mouseEvent.js';\n\nvar ContextMenuHandler =\n/** @class */\nfunction () {\n  function ContextMenuHandler(contextViewService, telemetryService, notificationService, keybindingService, themeService) {\n    this.contextViewService = contextViewService;\n    this.telemetryService = telemetryService;\n    this.notificationService = notificationService;\n    this.keybindingService = keybindingService;\n    this.themeService = themeService;\n    this.focusToReturn = null;\n    this.block = null;\n    this.options = {\n      blockMouse: true\n    };\n  }\n\n  ContextMenuHandler.prototype.configure = function (options) {\n    this.options = options;\n  };\n\n  ContextMenuHandler.prototype.showContextMenu = function (delegate) {\n    var _this = this;\n\n    var actions = delegate.getActions();\n\n    if (!actions.length) {\n      return; // Don't render an empty context menu\n    }\n\n    this.focusToReturn = document.activeElement;\n    var menu;\n    this.contextViewService.showContextView({\n      getAnchor: function () {\n        return delegate.getAnchor();\n      },\n      canRelayout: false,\n      anchorAlignment: delegate.anchorAlignment,\n      render: function (container) {\n        var className = delegate.getMenuClassName ? delegate.getMenuClassName() : '';\n\n        if (className) {\n          container.className += ' ' + className;\n        } // Render invisible div to block mouse interaction in the rest of the UI\n\n\n        if (_this.options.blockMouse) {\n          _this.block = container.appendChild($('.context-view-block'));\n        }\n\n        var menuDisposables = new DisposableStore();\n        var actionRunner = delegate.actionRunner || new ActionRunner();\n        actionRunner.onDidBeforeRun(_this.onActionRun, _this, menuDisposables);\n        actionRunner.onDidRun(_this.onDidActionRun, _this, menuDisposables);\n        menu = new Menu(container, actions, {\n          actionViewItemProvider: delegate.getActionViewItem,\n          context: delegate.getActionsContext ? delegate.getActionsContext() : null,\n          actionRunner: actionRunner,\n          getKeyBinding: delegate.getKeyBinding ? delegate.getKeyBinding : function (action) {\n            return _this.keybindingService.lookupKeybinding(action.id);\n          }\n        });\n        menuDisposables.add(attachMenuStyler(menu, _this.themeService));\n        menu.onDidCancel(function () {\n          return _this.contextViewService.hideContextView(true);\n        }, null, menuDisposables);\n        menu.onDidBlur(function () {\n          return _this.contextViewService.hideContextView(true);\n        }, null, menuDisposables);\n        domEvent(window, EventType.BLUR)(function () {\n          _this.contextViewService.hideContextView(true);\n        }, null, menuDisposables);\n        domEvent(window, EventType.MOUSE_DOWN)(function (e) {\n          if (e.defaultPrevented) {\n            return;\n          }\n\n          var event = new StandardMouseEvent(e);\n          var element = event.target; // Don't do anything as we are likely creating a context menu\n\n          if (event.rightButton) {\n            return;\n          }\n\n          while (element) {\n            if (element === container) {\n              return;\n            }\n\n            element = element.parentElement;\n          }\n\n          _this.contextViewService.hideContextView(true);\n        }, null, menuDisposables);\n        return combinedDisposable(menuDisposables, menu);\n      },\n      focus: function () {\n        if (menu) {\n          menu.focus(!!delegate.autoSelectFirstItem);\n        }\n      },\n      onHide: function (didCancel) {\n        if (delegate.onHide) {\n          delegate.onHide(!!didCancel);\n        }\n\n        if (_this.block) {\n          removeNode(_this.block);\n          _this.block = null;\n        }\n\n        if (_this.focusToReturn) {\n          _this.focusToReturn.focus();\n        }\n      }\n    });\n  };\n\n  ContextMenuHandler.prototype.onActionRun = function (e) {\n    if (this.telemetryService) {\n      this.telemetryService.publicLog2('workbenchActionExecuted', {\n        id: e.action.id,\n        from: 'contextMenu'\n      });\n    }\n\n    this.contextViewService.hideContextView(false); // Restore focus here\n\n    if (this.focusToReturn) {\n      this.focusToReturn.focus();\n    }\n  };\n\n  ContextMenuHandler.prototype.onDidActionRun = function (e) {\n    if (e.error && this.notificationService) {\n      this.notificationService.error(e.error);\n    }\n  };\n\n  return ContextMenuHandler;\n}();\n\nexport { ContextMenuHandler };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/platform/contextview/browser/contextMenuHandler.js"],"names":["ActionRunner","combinedDisposable","DisposableStore","Menu","EventType","$","removeNode","attachMenuStyler","domEvent","StandardMouseEvent","ContextMenuHandler","contextViewService","telemetryService","notificationService","keybindingService","themeService","focusToReturn","block","options","blockMouse","prototype","configure","showContextMenu","delegate","_this","actions","getActions","length","document","activeElement","menu","showContextView","getAnchor","canRelayout","anchorAlignment","render","container","className","getMenuClassName","appendChild","menuDisposables","actionRunner","onDidBeforeRun","onActionRun","onDidRun","onDidActionRun","actionViewItemProvider","getActionViewItem","context","getActionsContext","getKeyBinding","action","lookupKeybinding","id","add","onDidCancel","hideContextView","onDidBlur","window","BLUR","MOUSE_DOWN","e","defaultPrevented","event","element","target","rightButton","parentElement","focus","autoSelectFirstItem","onHide","didCancel","publicLog2","from","error"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './contextMenuHandler.css';\r\nimport { ActionRunner } from '../../../base/common/actions.js';\r\nimport { combinedDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { Menu } from '../../../base/browser/ui/menu/menu.js';\r\nimport { EventType, $, removeNode } from '../../../base/browser/dom.js';\r\nimport { attachMenuStyler } from '../../theme/common/styler.js';\r\nimport { domEvent } from '../../../base/browser/event.js';\r\nimport { StandardMouseEvent } from '../../../base/browser/mouseEvent.js';\r\nvar ContextMenuHandler = /** @class */ (function () {\r\n    function ContextMenuHandler(contextViewService, telemetryService, notificationService, keybindingService, themeService) {\r\n        this.contextViewService = contextViewService;\r\n        this.telemetryService = telemetryService;\r\n        this.notificationService = notificationService;\r\n        this.keybindingService = keybindingService;\r\n        this.themeService = themeService;\r\n        this.focusToReturn = null;\r\n        this.block = null;\r\n        this.options = { blockMouse: true };\r\n    }\r\n    ContextMenuHandler.prototype.configure = function (options) {\r\n        this.options = options;\r\n    };\r\n    ContextMenuHandler.prototype.showContextMenu = function (delegate) {\r\n        var _this = this;\r\n        var actions = delegate.getActions();\r\n        if (!actions.length) {\r\n            return; // Don't render an empty context menu\r\n        }\r\n        this.focusToReturn = document.activeElement;\r\n        var menu;\r\n        this.contextViewService.showContextView({\r\n            getAnchor: function () { return delegate.getAnchor(); },\r\n            canRelayout: false,\r\n            anchorAlignment: delegate.anchorAlignment,\r\n            render: function (container) {\r\n                var className = delegate.getMenuClassName ? delegate.getMenuClassName() : '';\r\n                if (className) {\r\n                    container.className += ' ' + className;\r\n                }\r\n                // Render invisible div to block mouse interaction in the rest of the UI\r\n                if (_this.options.blockMouse) {\r\n                    _this.block = container.appendChild($('.context-view-block'));\r\n                }\r\n                var menuDisposables = new DisposableStore();\r\n                var actionRunner = delegate.actionRunner || new ActionRunner();\r\n                actionRunner.onDidBeforeRun(_this.onActionRun, _this, menuDisposables);\r\n                actionRunner.onDidRun(_this.onDidActionRun, _this, menuDisposables);\r\n                menu = new Menu(container, actions, {\r\n                    actionViewItemProvider: delegate.getActionViewItem,\r\n                    context: delegate.getActionsContext ? delegate.getActionsContext() : null,\r\n                    actionRunner: actionRunner,\r\n                    getKeyBinding: delegate.getKeyBinding ? delegate.getKeyBinding : function (action) { return _this.keybindingService.lookupKeybinding(action.id); }\r\n                });\r\n                menuDisposables.add(attachMenuStyler(menu, _this.themeService));\r\n                menu.onDidCancel(function () { return _this.contextViewService.hideContextView(true); }, null, menuDisposables);\r\n                menu.onDidBlur(function () { return _this.contextViewService.hideContextView(true); }, null, menuDisposables);\r\n                domEvent(window, EventType.BLUR)(function () { _this.contextViewService.hideContextView(true); }, null, menuDisposables);\r\n                domEvent(window, EventType.MOUSE_DOWN)(function (e) {\r\n                    if (e.defaultPrevented) {\r\n                        return;\r\n                    }\r\n                    var event = new StandardMouseEvent(e);\r\n                    var element = event.target;\r\n                    // Don't do anything as we are likely creating a context menu\r\n                    if (event.rightButton) {\r\n                        return;\r\n                    }\r\n                    while (element) {\r\n                        if (element === container) {\r\n                            return;\r\n                        }\r\n                        element = element.parentElement;\r\n                    }\r\n                    _this.contextViewService.hideContextView(true);\r\n                }, null, menuDisposables);\r\n                return combinedDisposable(menuDisposables, menu);\r\n            },\r\n            focus: function () {\r\n                if (menu) {\r\n                    menu.focus(!!delegate.autoSelectFirstItem);\r\n                }\r\n            },\r\n            onHide: function (didCancel) {\r\n                if (delegate.onHide) {\r\n                    delegate.onHide(!!didCancel);\r\n                }\r\n                if (_this.block) {\r\n                    removeNode(_this.block);\r\n                    _this.block = null;\r\n                }\r\n                if (_this.focusToReturn) {\r\n                    _this.focusToReturn.focus();\r\n                }\r\n            }\r\n        });\r\n    };\r\n    ContextMenuHandler.prototype.onActionRun = function (e) {\r\n        if (this.telemetryService) {\r\n            this.telemetryService.publicLog2('workbenchActionExecuted', { id: e.action.id, from: 'contextMenu' });\r\n        }\r\n        this.contextViewService.hideContextView(false);\r\n        // Restore focus here\r\n        if (this.focusToReturn) {\r\n            this.focusToReturn.focus();\r\n        }\r\n    };\r\n    ContextMenuHandler.prototype.onDidActionRun = function (e) {\r\n        if (e.error && this.notificationService) {\r\n            this.notificationService.error(e.error);\r\n        }\r\n    };\r\n    return ContextMenuHandler;\r\n}());\r\nexport { ContextMenuHandler };\r\n"]},"metadata":{},"sourceType":"module"}