{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { FIN } from './iterator.js';\n\nvar Node =\n/** @class */\nfunction () {\n  function Node(element) {\n    this.element = element;\n    this.next = Node.Undefined;\n    this.prev = Node.Undefined;\n  }\n\n  Node.Undefined = new Node(undefined);\n  return Node;\n}();\n\nvar LinkedList =\n/** @class */\nfunction () {\n  function LinkedList() {\n    this._first = Node.Undefined;\n    this._last = Node.Undefined;\n    this._size = 0;\n  }\n\n  Object.defineProperty(LinkedList.prototype, \"size\", {\n    get: function () {\n      return this._size;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  LinkedList.prototype.isEmpty = function () {\n    return this._first === Node.Undefined;\n  };\n\n  LinkedList.prototype.clear = function () {\n    this._first = Node.Undefined;\n    this._last = Node.Undefined;\n    this._size = 0;\n  };\n\n  LinkedList.prototype.unshift = function (element) {\n    return this._insert(element, false);\n  };\n\n  LinkedList.prototype.push = function (element) {\n    return this._insert(element, true);\n  };\n\n  LinkedList.prototype._insert = function (element, atTheEnd) {\n    var _this = this;\n\n    var newNode = new Node(element);\n\n    if (this._first === Node.Undefined) {\n      this._first = newNode;\n      this._last = newNode;\n    } else if (atTheEnd) {\n      // push\n      var oldLast = this._last;\n      this._last = newNode;\n      newNode.prev = oldLast;\n      oldLast.next = newNode;\n    } else {\n      // unshift\n      var oldFirst = this._first;\n      this._first = newNode;\n      newNode.next = oldFirst;\n      oldFirst.prev = newNode;\n    }\n\n    this._size += 1;\n    var didRemove = false;\n    return function () {\n      if (!didRemove) {\n        didRemove = true;\n\n        _this._remove(newNode);\n      }\n    };\n  };\n\n  LinkedList.prototype.shift = function () {\n    if (this._first === Node.Undefined) {\n      return undefined;\n    } else {\n      var res = this._first.element;\n\n      this._remove(this._first);\n\n      return res;\n    }\n  };\n\n  LinkedList.prototype.pop = function () {\n    if (this._last === Node.Undefined) {\n      return undefined;\n    } else {\n      var res = this._last.element;\n\n      this._remove(this._last);\n\n      return res;\n    }\n  };\n\n  LinkedList.prototype._remove = function (node) {\n    if (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n      // middle\n      var anchor = node.prev;\n      anchor.next = node.next;\n      node.next.prev = anchor;\n    } else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n      // only node\n      this._first = Node.Undefined;\n      this._last = Node.Undefined;\n    } else if (node.next === Node.Undefined) {\n      // last\n      this._last = this._last.prev;\n      this._last.next = Node.Undefined;\n    } else if (node.prev === Node.Undefined) {\n      // first\n      this._first = this._first.next;\n      this._first.prev = Node.Undefined;\n    } // done\n\n\n    this._size -= 1;\n  };\n\n  LinkedList.prototype.iterator = function () {\n    var element;\n    var node = this._first;\n    return {\n      next: function () {\n        if (node === Node.Undefined) {\n          return FIN;\n        }\n\n        if (!element) {\n          element = {\n            done: false,\n            value: node.element\n          };\n        } else {\n          element.value = node.element;\n        }\n\n        node = node.next;\n        return element;\n      }\n    };\n  };\n\n  LinkedList.prototype.toArray = function () {\n    var result = [];\n\n    for (var node = this._first; node !== Node.Undefined; node = node.next) {\n      result.push(node.element);\n    }\n\n    return result;\n  };\n\n  return LinkedList;\n}();\n\nexport { LinkedList };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/base/common/linkedList.js"],"names":["FIN","Node","element","next","Undefined","prev","undefined","LinkedList","_first","_last","_size","Object","defineProperty","prototype","get","enumerable","configurable","isEmpty","clear","unshift","_insert","push","atTheEnd","_this","newNode","oldLast","oldFirst","didRemove","_remove","shift","res","pop","node","anchor","iterator","done","value","toArray","result"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { FIN } from './iterator.js';\r\nvar Node = /** @class */ (function () {\r\n    function Node(element) {\r\n        this.element = element;\r\n        this.next = Node.Undefined;\r\n        this.prev = Node.Undefined;\r\n    }\r\n    Node.Undefined = new Node(undefined);\r\n    return Node;\r\n}());\r\nvar LinkedList = /** @class */ (function () {\r\n    function LinkedList() {\r\n        this._first = Node.Undefined;\r\n        this._last = Node.Undefined;\r\n        this._size = 0;\r\n    }\r\n    Object.defineProperty(LinkedList.prototype, \"size\", {\r\n        get: function () {\r\n            return this._size;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LinkedList.prototype.isEmpty = function () {\r\n        return this._first === Node.Undefined;\r\n    };\r\n    LinkedList.prototype.clear = function () {\r\n        this._first = Node.Undefined;\r\n        this._last = Node.Undefined;\r\n        this._size = 0;\r\n    };\r\n    LinkedList.prototype.unshift = function (element) {\r\n        return this._insert(element, false);\r\n    };\r\n    LinkedList.prototype.push = function (element) {\r\n        return this._insert(element, true);\r\n    };\r\n    LinkedList.prototype._insert = function (element, atTheEnd) {\r\n        var _this = this;\r\n        var newNode = new Node(element);\r\n        if (this._first === Node.Undefined) {\r\n            this._first = newNode;\r\n            this._last = newNode;\r\n        }\r\n        else if (atTheEnd) {\r\n            // push\r\n            var oldLast = this._last;\r\n            this._last = newNode;\r\n            newNode.prev = oldLast;\r\n            oldLast.next = newNode;\r\n        }\r\n        else {\r\n            // unshift\r\n            var oldFirst = this._first;\r\n            this._first = newNode;\r\n            newNode.next = oldFirst;\r\n            oldFirst.prev = newNode;\r\n        }\r\n        this._size += 1;\r\n        var didRemove = false;\r\n        return function () {\r\n            if (!didRemove) {\r\n                didRemove = true;\r\n                _this._remove(newNode);\r\n            }\r\n        };\r\n    };\r\n    LinkedList.prototype.shift = function () {\r\n        if (this._first === Node.Undefined) {\r\n            return undefined;\r\n        }\r\n        else {\r\n            var res = this._first.element;\r\n            this._remove(this._first);\r\n            return res;\r\n        }\r\n    };\r\n    LinkedList.prototype.pop = function () {\r\n        if (this._last === Node.Undefined) {\r\n            return undefined;\r\n        }\r\n        else {\r\n            var res = this._last.element;\r\n            this._remove(this._last);\r\n            return res;\r\n        }\r\n    };\r\n    LinkedList.prototype._remove = function (node) {\r\n        if (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\r\n            // middle\r\n            var anchor = node.prev;\r\n            anchor.next = node.next;\r\n            node.next.prev = anchor;\r\n        }\r\n        else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\r\n            // only node\r\n            this._first = Node.Undefined;\r\n            this._last = Node.Undefined;\r\n        }\r\n        else if (node.next === Node.Undefined) {\r\n            // last\r\n            this._last = this._last.prev;\r\n            this._last.next = Node.Undefined;\r\n        }\r\n        else if (node.prev === Node.Undefined) {\r\n            // first\r\n            this._first = this._first.next;\r\n            this._first.prev = Node.Undefined;\r\n        }\r\n        // done\r\n        this._size -= 1;\r\n    };\r\n    LinkedList.prototype.iterator = function () {\r\n        var element;\r\n        var node = this._first;\r\n        return {\r\n            next: function () {\r\n                if (node === Node.Undefined) {\r\n                    return FIN;\r\n                }\r\n                if (!element) {\r\n                    element = { done: false, value: node.element };\r\n                }\r\n                else {\r\n                    element.value = node.element;\r\n                }\r\n                node = node.next;\r\n                return element;\r\n            }\r\n        };\r\n    };\r\n    LinkedList.prototype.toArray = function () {\r\n        var result = [];\r\n        for (var node = this._first; node !== Node.Undefined; node = node.next) {\r\n            result.push(node.element);\r\n        }\r\n        return result;\r\n    };\r\n    return LinkedList;\r\n}());\r\nexport { LinkedList };\r\n"]},"metadata":{},"sourceType":"module"}