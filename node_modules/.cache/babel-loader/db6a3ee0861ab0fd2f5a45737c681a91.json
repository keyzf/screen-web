{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { $, removeClass } from '../../dom.js';\n\nfunction removeFromParent(element) {\n  try {\n    if (element.parentElement) {\n      element.parentElement.removeChild(element);\n    }\n  } catch (e) {// this will throw if this happens due to a blur event, nasty business\n  }\n}\n\nvar RowCache =\n/** @class */\nfunction () {\n  function RowCache(renderers) {\n    this.renderers = renderers;\n    this.cache = new Map();\n  }\n  /**\r\n   * Returns a row either by creating a new one or reusing\r\n   * a previously released row which shares the same templateId.\r\n   */\n\n\n  RowCache.prototype.alloc = function (templateId) {\n    var result = this.getTemplateCache(templateId).pop();\n\n    if (!result) {\n      var domNode = $('.monaco-list-row');\n      var renderer = this.getRenderer(templateId);\n      var templateData = renderer.renderTemplate(domNode);\n      result = {\n        domNode: domNode,\n        templateId: templateId,\n        templateData: templateData\n      };\n    }\n\n    return result;\n  };\n  /**\r\n   * Releases the row for eventual reuse.\r\n   */\n\n\n  RowCache.prototype.release = function (row) {\n    if (!row) {\n      return;\n    }\n\n    this.releaseRow(row);\n  };\n\n  RowCache.prototype.releaseRow = function (row) {\n    var domNode = row.domNode,\n        templateId = row.templateId;\n\n    if (domNode) {\n      removeClass(domNode, 'scrolling');\n      removeFromParent(domNode);\n    }\n\n    var cache = this.getTemplateCache(templateId);\n    cache.push(row);\n  };\n\n  RowCache.prototype.getTemplateCache = function (templateId) {\n    var result = this.cache.get(templateId);\n\n    if (!result) {\n      result = [];\n      this.cache.set(templateId, result);\n    }\n\n    return result;\n  };\n\n  RowCache.prototype.dispose = function () {\n    var _this = this;\n\n    this.cache.forEach(function (cachedRows, templateId) {\n      for (var _i = 0, cachedRows_1 = cachedRows; _i < cachedRows_1.length; _i++) {\n        var cachedRow = cachedRows_1[_i];\n\n        var renderer = _this.getRenderer(templateId);\n\n        renderer.disposeTemplate(cachedRow.templateData);\n        cachedRow.domNode = null;\n        cachedRow.templateData = null;\n      }\n    });\n    this.cache.clear();\n  };\n\n  RowCache.prototype.getRenderer = function (templateId) {\n    var renderer = this.renderers.get(templateId);\n\n    if (!renderer) {\n      throw new Error(\"No renderer found for \" + templateId);\n    }\n\n    return renderer;\n  };\n\n  return RowCache;\n}();\n\nexport { RowCache };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/base/browser/ui/list/rowCache.js"],"names":["$","removeClass","removeFromParent","element","parentElement","removeChild","e","RowCache","renderers","cache","Map","prototype","alloc","templateId","result","getTemplateCache","pop","domNode","renderer","getRenderer","templateData","renderTemplate","release","row","releaseRow","push","get","set","dispose","_this","forEach","cachedRows","_i","cachedRows_1","length","cachedRow","disposeTemplate","clear","Error"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { $, removeClass } from '../../dom.js';\r\nfunction removeFromParent(element) {\r\n    try {\r\n        if (element.parentElement) {\r\n            element.parentElement.removeChild(element);\r\n        }\r\n    }\r\n    catch (e) {\r\n        // this will throw if this happens due to a blur event, nasty business\r\n    }\r\n}\r\nvar RowCache = /** @class */ (function () {\r\n    function RowCache(renderers) {\r\n        this.renderers = renderers;\r\n        this.cache = new Map();\r\n    }\r\n    /**\r\n     * Returns a row either by creating a new one or reusing\r\n     * a previously released row which shares the same templateId.\r\n     */\r\n    RowCache.prototype.alloc = function (templateId) {\r\n        var result = this.getTemplateCache(templateId).pop();\r\n        if (!result) {\r\n            var domNode = $('.monaco-list-row');\r\n            var renderer = this.getRenderer(templateId);\r\n            var templateData = renderer.renderTemplate(domNode);\r\n            result = { domNode: domNode, templateId: templateId, templateData: templateData };\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Releases the row for eventual reuse.\r\n     */\r\n    RowCache.prototype.release = function (row) {\r\n        if (!row) {\r\n            return;\r\n        }\r\n        this.releaseRow(row);\r\n    };\r\n    RowCache.prototype.releaseRow = function (row) {\r\n        var domNode = row.domNode, templateId = row.templateId;\r\n        if (domNode) {\r\n            removeClass(domNode, 'scrolling');\r\n            removeFromParent(domNode);\r\n        }\r\n        var cache = this.getTemplateCache(templateId);\r\n        cache.push(row);\r\n    };\r\n    RowCache.prototype.getTemplateCache = function (templateId) {\r\n        var result = this.cache.get(templateId);\r\n        if (!result) {\r\n            result = [];\r\n            this.cache.set(templateId, result);\r\n        }\r\n        return result;\r\n    };\r\n    RowCache.prototype.dispose = function () {\r\n        var _this = this;\r\n        this.cache.forEach(function (cachedRows, templateId) {\r\n            for (var _i = 0, cachedRows_1 = cachedRows; _i < cachedRows_1.length; _i++) {\r\n                var cachedRow = cachedRows_1[_i];\r\n                var renderer = _this.getRenderer(templateId);\r\n                renderer.disposeTemplate(cachedRow.templateData);\r\n                cachedRow.domNode = null;\r\n                cachedRow.templateData = null;\r\n            }\r\n        });\r\n        this.cache.clear();\r\n    };\r\n    RowCache.prototype.getRenderer = function (templateId) {\r\n        var renderer = this.renderers.get(templateId);\r\n        if (!renderer) {\r\n            throw new Error(\"No renderer found for \" + templateId);\r\n        }\r\n        return renderer;\r\n    };\r\n    return RowCache;\r\n}());\r\nexport { RowCache };\r\n"]},"metadata":{},"sourceType":"module"}