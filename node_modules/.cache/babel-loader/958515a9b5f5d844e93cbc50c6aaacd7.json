{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nimport { ResourceMap } from '../../../base/common/map.js';\nimport * as arrays from '../../../base/common/arrays.js';\nimport * as types from '../../../base/common/types.js';\nimport * as objects from '../../../base/common/objects.js';\nimport { OVERRIDE_PROPERTY_PATTERN } from './configurationRegistry.js';\nimport { overrideIdentifierFromKey, addToValueTree, toValuesTree, getConfigurationValue, getDefaultValues, getConfigurationKeys, removeFromValueTree } from './configuration.js';\n\nvar ConfigurationModel =\n/** @class */\nfunction () {\n  function ConfigurationModel(_contents, _keys, _overrides) {\n    if (_contents === void 0) {\n      _contents = {};\n    }\n\n    if (_keys === void 0) {\n      _keys = [];\n    }\n\n    if (_overrides === void 0) {\n      _overrides = [];\n    }\n\n    this._contents = _contents;\n    this._keys = _keys;\n    this._overrides = _overrides;\n    this.isFrozen = false;\n  }\n\n  Object.defineProperty(ConfigurationModel.prototype, \"contents\", {\n    get: function () {\n      return this.checkAndFreeze(this._contents);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ConfigurationModel.prototype, \"overrides\", {\n    get: function () {\n      return this.checkAndFreeze(this._overrides);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ConfigurationModel.prototype, \"keys\", {\n    get: function () {\n      return this.checkAndFreeze(this._keys);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ConfigurationModel.prototype.isEmpty = function () {\n    return this._keys.length === 0 && Object.keys(this._contents).length === 0 && this._overrides.length === 0;\n  };\n\n  ConfigurationModel.prototype.getValue = function (section) {\n    return section ? getConfigurationValue(this.contents, section) : this.contents;\n  };\n\n  ConfigurationModel.prototype.getOverrideValue = function (section, overrideIdentifier) {\n    var overrideContents = this.getContentsForOverrideIdentifer(overrideIdentifier);\n    return overrideContents ? section ? getConfigurationValue(overrideContents, section) : overrideContents : undefined;\n  };\n\n  ConfigurationModel.prototype.override = function (identifier) {\n    var overrideContents = this.getContentsForOverrideIdentifer(identifier);\n\n    if (!overrideContents || typeof overrideContents !== 'object' || !Object.keys(overrideContents).length) {\n      // If there are no valid overrides, return self\n      return this;\n    }\n\n    var contents = {};\n\n    for (var _i = 0, _a = arrays.distinct(__spreadArrays(Object.keys(this.contents), Object.keys(overrideContents))); _i < _a.length; _i++) {\n      var key = _a[_i];\n      var contentsForKey = this.contents[key];\n      var overrideContentsForKey = overrideContents[key]; // If there are override contents for the key, clone and merge otherwise use base contents\n\n      if (overrideContentsForKey) {\n        // Clone and merge only if base contents and override contents are of type object otherwise just override\n        if (typeof contentsForKey === 'object' && typeof overrideContentsForKey === 'object') {\n          contentsForKey = objects.deepClone(contentsForKey);\n          this.mergeContents(contentsForKey, overrideContentsForKey);\n        } else {\n          contentsForKey = overrideContentsForKey;\n        }\n      }\n\n      contents[key] = contentsForKey;\n    }\n\n    return new ConfigurationModel(contents, this.keys, this.overrides);\n  };\n\n  ConfigurationModel.prototype.merge = function () {\n    var others = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      others[_i] = arguments[_i];\n    }\n\n    var contents = objects.deepClone(this.contents);\n    var overrides = objects.deepClone(this.overrides);\n\n    var keys = __spreadArrays(this.keys);\n\n    for (var _a = 0, others_1 = others; _a < others_1.length; _a++) {\n      var other = others_1[_a];\n      this.mergeContents(contents, other.contents);\n\n      var _loop_1 = function (otherOverride) {\n        var override = overrides.filter(function (o) {\n          return arrays.equals(o.identifiers, otherOverride.identifiers);\n        })[0];\n\n        if (override) {\n          this_1.mergeContents(override.contents, otherOverride.contents);\n        } else {\n          overrides.push(objects.deepClone(otherOverride));\n        }\n      };\n\n      var this_1 = this;\n\n      for (var _b = 0, _c = other.overrides; _b < _c.length; _b++) {\n        var otherOverride = _c[_b];\n\n        _loop_1(otherOverride);\n      }\n\n      for (var _d = 0, _e = other.keys; _d < _e.length; _d++) {\n        var key = _e[_d];\n\n        if (keys.indexOf(key) === -1) {\n          keys.push(key);\n        }\n      }\n    }\n\n    return new ConfigurationModel(contents, keys, overrides);\n  };\n\n  ConfigurationModel.prototype.freeze = function () {\n    this.isFrozen = true;\n    return this;\n  };\n\n  ConfigurationModel.prototype.mergeContents = function (source, target) {\n    for (var _i = 0, _a = Object.keys(target); _i < _a.length; _i++) {\n      var key = _a[_i];\n\n      if (key in source) {\n        if (types.isObject(source[key]) && types.isObject(target[key])) {\n          this.mergeContents(source[key], target[key]);\n          continue;\n        }\n      }\n\n      source[key] = objects.deepClone(target[key]);\n    }\n  };\n\n  ConfigurationModel.prototype.checkAndFreeze = function (data) {\n    if (this.isFrozen && !Object.isFrozen(data)) {\n      return objects.deepFreeze(data);\n    }\n\n    return data;\n  };\n\n  ConfigurationModel.prototype.getContentsForOverrideIdentifer = function (identifier) {\n    for (var _i = 0, _a = this.overrides; _i < _a.length; _i++) {\n      var override = _a[_i];\n\n      if (override.identifiers.indexOf(identifier) !== -1) {\n        return override.contents;\n      }\n    }\n\n    return null;\n  };\n\n  ConfigurationModel.prototype.toJSON = function () {\n    return {\n      contents: this.contents,\n      overrides: this.overrides,\n      keys: this.keys\n    };\n  }; // Update methods\n\n\n  ConfigurationModel.prototype.setValue = function (key, value) {\n    this.addKey(key);\n    addToValueTree(this.contents, key, value, function (e) {\n      throw new Error(e);\n    });\n  };\n\n  ConfigurationModel.prototype.removeValue = function (key) {\n    if (this.removeKey(key)) {\n      removeFromValueTree(this.contents, key);\n    }\n  };\n\n  ConfigurationModel.prototype.addKey = function (key) {\n    var index = this.keys.length;\n\n    for (var i = 0; i < index; i++) {\n      if (key.indexOf(this.keys[i]) === 0) {\n        index = i;\n      }\n    }\n\n    this.keys.splice(index, 1, key);\n  };\n\n  ConfigurationModel.prototype.removeKey = function (key) {\n    var index = this.keys.indexOf(key);\n\n    if (index !== -1) {\n      this.keys.splice(index, 1);\n      return true;\n    }\n\n    return false;\n  };\n\n  return ConfigurationModel;\n}();\n\nexport { ConfigurationModel };\n\nvar DefaultConfigurationModel =\n/** @class */\nfunction (_super) {\n  __extends(DefaultConfigurationModel, _super);\n\n  function DefaultConfigurationModel() {\n    var _this = this;\n\n    var contents = getDefaultValues();\n    var keys = getConfigurationKeys();\n    var overrides = [];\n\n    for (var _i = 0, _a = Object.keys(contents); _i < _a.length; _i++) {\n      var key = _a[_i];\n\n      if (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n        overrides.push({\n          identifiers: [overrideIdentifierFromKey(key).trim()],\n          keys: Object.keys(contents[key]),\n          contents: toValuesTree(contents[key], function (message) {\n            return console.error(\"Conflict in default settings file: \" + message);\n          })\n        });\n      }\n    }\n\n    _this = _super.call(this, contents, keys, overrides) || this;\n    return _this;\n  }\n\n  return DefaultConfigurationModel;\n}(ConfigurationModel);\n\nexport { DefaultConfigurationModel };\n\nvar Configuration =\n/** @class */\nfunction () {\n  function Configuration(_defaultConfiguration, _localUserConfiguration, _remoteUserConfiguration, _workspaceConfiguration, _folderConfigurations, _memoryConfiguration, _memoryConfigurationByResource, _freeze) {\n    if (_remoteUserConfiguration === void 0) {\n      _remoteUserConfiguration = new ConfigurationModel();\n    }\n\n    if (_workspaceConfiguration === void 0) {\n      _workspaceConfiguration = new ConfigurationModel();\n    }\n\n    if (_folderConfigurations === void 0) {\n      _folderConfigurations = new ResourceMap();\n    }\n\n    if (_memoryConfiguration === void 0) {\n      _memoryConfiguration = new ConfigurationModel();\n    }\n\n    if (_memoryConfigurationByResource === void 0) {\n      _memoryConfigurationByResource = new ResourceMap();\n    }\n\n    if (_freeze === void 0) {\n      _freeze = true;\n    }\n\n    this._defaultConfiguration = _defaultConfiguration;\n    this._localUserConfiguration = _localUserConfiguration;\n    this._remoteUserConfiguration = _remoteUserConfiguration;\n    this._workspaceConfiguration = _workspaceConfiguration;\n    this._folderConfigurations = _folderConfigurations;\n    this._memoryConfiguration = _memoryConfiguration;\n    this._memoryConfigurationByResource = _memoryConfigurationByResource;\n    this._freeze = _freeze;\n    this._workspaceConsolidatedConfiguration = null;\n    this._foldersConsolidatedConfigurations = new ResourceMap();\n    this._userConfiguration = null;\n  }\n\n  Configuration.prototype.getValue = function (section, overrides, workspace) {\n    var consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\n    return consolidateConfigurationModel.getValue(section);\n  };\n\n  Configuration.prototype.updateValue = function (key, value, overrides) {\n    if (overrides === void 0) {\n      overrides = {};\n    }\n\n    var memoryConfiguration;\n\n    if (overrides.resource) {\n      memoryConfiguration = this._memoryConfigurationByResource.get(overrides.resource);\n\n      if (!memoryConfiguration) {\n        memoryConfiguration = new ConfigurationModel();\n\n        this._memoryConfigurationByResource.set(overrides.resource, memoryConfiguration);\n      }\n    } else {\n      memoryConfiguration = this._memoryConfiguration;\n    }\n\n    if (value === undefined) {\n      memoryConfiguration.removeValue(key);\n    } else {\n      memoryConfiguration.setValue(key, value);\n    }\n\n    if (!overrides.resource) {\n      this._workspaceConsolidatedConfiguration = null;\n    }\n  };\n\n  Configuration.prototype.inspect = function (key, overrides, workspace) {\n    var consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\n    var folderConfigurationModel = this.getFolderConfigurationModelForResource(overrides.resource, workspace);\n    var memoryConfigurationModel = overrides.resource ? this._memoryConfigurationByResource.get(overrides.resource) || this._memoryConfiguration : this._memoryConfiguration;\n    var defaultValue = overrides.overrideIdentifier ? this._defaultConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this._defaultConfiguration.freeze().getValue(key);\n    var userValue = overrides.overrideIdentifier ? this.userConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this.userConfiguration.freeze().getValue(key);\n    var userLocalValue = overrides.overrideIdentifier ? this.localUserConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this.localUserConfiguration.freeze().getValue(key);\n    var userRemoteValue = overrides.overrideIdentifier ? this.remoteUserConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this.remoteUserConfiguration.freeze().getValue(key);\n    var workspaceValue = workspace ? overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this._workspaceConfiguration.freeze().getValue(key) : undefined; //Check on workspace exists or not because _workspaceConfiguration is never null\n\n    var workspaceFolderValue = folderConfigurationModel ? overrides.overrideIdentifier ? folderConfigurationModel.freeze().override(overrides.overrideIdentifier).getValue(key) : folderConfigurationModel.freeze().getValue(key) : undefined;\n    var memoryValue = overrides.overrideIdentifier ? memoryConfigurationModel.override(overrides.overrideIdentifier).getValue(key) : memoryConfigurationModel.getValue(key);\n    var value = consolidateConfigurationModel.getValue(key);\n    var overrideIdentifiers = arrays.distinct(arrays.flatten(consolidateConfigurationModel.overrides.map(function (override) {\n      return override.identifiers;\n    }))).filter(function (overrideIdentifier) {\n      return consolidateConfigurationModel.getOverrideValue(key, overrideIdentifier) !== undefined;\n    });\n    return {\n      defaultValue: defaultValue,\n      userValue: userValue,\n      userLocalValue: userLocalValue,\n      userRemoteValue: userRemoteValue,\n      workspaceValue: workspaceValue,\n      workspaceFolderValue: workspaceFolderValue,\n      memoryValue: memoryValue,\n      value: value,\n      default: defaultValue !== undefined ? {\n        value: this._defaultConfiguration.freeze().getValue(key),\n        override: overrides.overrideIdentifier ? this._defaultConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined\n      } : undefined,\n      user: userValue !== undefined ? {\n        value: this.userConfiguration.freeze().getValue(key),\n        override: overrides.overrideIdentifier ? this.userConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined\n      } : undefined,\n      userLocal: userLocalValue !== undefined ? {\n        value: this.localUserConfiguration.freeze().getValue(key),\n        override: overrides.overrideIdentifier ? this.localUserConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined\n      } : undefined,\n      userRemote: userRemoteValue !== undefined ? {\n        value: this.remoteUserConfiguration.freeze().getValue(key),\n        override: overrides.overrideIdentifier ? this.remoteUserConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined\n      } : undefined,\n      workspace: workspaceValue !== undefined ? {\n        value: this._workspaceConfiguration.freeze().getValue(key),\n        override: overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined\n      } : undefined,\n      workspaceFolder: workspaceFolderValue !== undefined ? {\n        value: folderConfigurationModel === null || folderConfigurationModel === void 0 ? void 0 : folderConfigurationModel.freeze().getValue(key),\n        override: overrides.overrideIdentifier ? folderConfigurationModel === null || folderConfigurationModel === void 0 ? void 0 : folderConfigurationModel.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined\n      } : undefined,\n      memory: memoryValue !== undefined ? {\n        value: memoryConfigurationModel.getValue(key),\n        override: overrides.overrideIdentifier ? memoryConfigurationModel.getOverrideValue(key, overrides.overrideIdentifier) : undefined\n      } : undefined,\n      overrideIdentifiers: overrideIdentifiers.length ? overrideIdentifiers : undefined\n    };\n  };\n\n  Object.defineProperty(Configuration.prototype, \"userConfiguration\", {\n    get: function () {\n      if (!this._userConfiguration) {\n        this._userConfiguration = this._remoteUserConfiguration.isEmpty() ? this._localUserConfiguration : this._localUserConfiguration.merge(this._remoteUserConfiguration);\n\n        if (this._freeze) {\n          this._userConfiguration.freeze();\n        }\n      }\n\n      return this._userConfiguration;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Configuration.prototype, \"localUserConfiguration\", {\n    get: function () {\n      return this._localUserConfiguration;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Configuration.prototype, \"remoteUserConfiguration\", {\n    get: function () {\n      return this._remoteUserConfiguration;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Configuration.prototype.getConsolidateConfigurationModel = function (overrides, workspace) {\n    var configurationModel = this.getConsolidatedConfigurationModelForResource(overrides, workspace);\n    return overrides.overrideIdentifier ? configurationModel.override(overrides.overrideIdentifier) : configurationModel;\n  };\n\n  Configuration.prototype.getConsolidatedConfigurationModelForResource = function (_a, workspace) {\n    var resource = _a.resource;\n    var consolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n\n    if (workspace && resource) {\n      var root = workspace.getFolder(resource);\n\n      if (root) {\n        consolidateConfiguration = this.getFolderConsolidatedConfiguration(root.uri) || consolidateConfiguration;\n      }\n\n      var memoryConfigurationForResource = this._memoryConfigurationByResource.get(resource);\n\n      if (memoryConfigurationForResource) {\n        consolidateConfiguration = consolidateConfiguration.merge(memoryConfigurationForResource);\n      }\n    }\n\n    return consolidateConfiguration;\n  };\n\n  Configuration.prototype.getWorkspaceConsolidatedConfiguration = function () {\n    if (!this._workspaceConsolidatedConfiguration) {\n      this._workspaceConsolidatedConfiguration = this._defaultConfiguration.merge(this.userConfiguration, this._workspaceConfiguration, this._memoryConfiguration);\n\n      if (this._freeze) {\n        this._workspaceConfiguration = this._workspaceConfiguration.freeze();\n      }\n    }\n\n    return this._workspaceConsolidatedConfiguration;\n  };\n\n  Configuration.prototype.getFolderConsolidatedConfiguration = function (folder) {\n    var folderConsolidatedConfiguration = this._foldersConsolidatedConfigurations.get(folder);\n\n    if (!folderConsolidatedConfiguration) {\n      var workspaceConsolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n\n      var folderConfiguration = this._folderConfigurations.get(folder);\n\n      if (folderConfiguration) {\n        folderConsolidatedConfiguration = workspaceConsolidateConfiguration.merge(folderConfiguration);\n\n        if (this._freeze) {\n          folderConsolidatedConfiguration = folderConsolidatedConfiguration.freeze();\n        }\n\n        this._foldersConsolidatedConfigurations.set(folder, folderConsolidatedConfiguration);\n      } else {\n        folderConsolidatedConfiguration = workspaceConsolidateConfiguration;\n      }\n    }\n\n    return folderConsolidatedConfiguration;\n  };\n\n  Configuration.prototype.getFolderConfigurationModelForResource = function (resource, workspace) {\n    if (workspace && resource) {\n      var root = workspace.getFolder(resource);\n\n      if (root) {\n        return this._folderConfigurations.get(root.uri);\n      }\n    }\n\n    return undefined;\n  };\n\n  return Configuration;\n}();\n\nexport { Configuration };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/platform/configuration/common/configurationModels.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__spreadArrays","s","i","il","arguments","length","r","k","a","j","jl","ResourceMap","arrays","types","objects","OVERRIDE_PROPERTY_PATTERN","overrideIdentifierFromKey","addToValueTree","toValuesTree","getConfigurationValue","getDefaultValues","getConfigurationKeys","removeFromValueTree","ConfigurationModel","_contents","_keys","_overrides","isFrozen","defineProperty","get","checkAndFreeze","enumerable","configurable","isEmpty","keys","getValue","section","contents","getOverrideValue","overrideIdentifier","overrideContents","getContentsForOverrideIdentifer","undefined","override","identifier","_i","_a","distinct","key","contentsForKey","overrideContentsForKey","deepClone","mergeContents","overrides","merge","others","others_1","other","_loop_1","otherOverride","filter","o","equals","identifiers","this_1","push","_b","_c","_d","_e","indexOf","freeze","source","target","isObject","data","deepFreeze","toJSON","setValue","value","addKey","e","Error","removeValue","removeKey","index","splice","DefaultConfigurationModel","_super","_this","test","trim","message","console","error","call","Configuration","_defaultConfiguration","_localUserConfiguration","_remoteUserConfiguration","_workspaceConfiguration","_folderConfigurations","_memoryConfiguration","_memoryConfigurationByResource","_freeze","_workspaceConsolidatedConfiguration","_foldersConsolidatedConfigurations","_userConfiguration","workspace","consolidateConfigurationModel","getConsolidateConfigurationModel","updateValue","memoryConfiguration","resource","set","inspect","folderConfigurationModel","getFolderConfigurationModelForResource","memoryConfigurationModel","defaultValue","userValue","userConfiguration","userLocalValue","localUserConfiguration","userRemoteValue","remoteUserConfiguration","workspaceValue","workspaceFolderValue","memoryValue","overrideIdentifiers","flatten","map","default","user","userLocal","userRemote","workspaceFolder","memory","configurationModel","getConsolidatedConfigurationModelForResource","consolidateConfiguration","getWorkspaceConsolidatedConfiguration","root","getFolder","getFolderConsolidatedConfiguration","uri","memoryConfigurationForResource","folder","folderConsolidatedConfiguration","workspaceConsolidateConfiguration","folderConfiguration"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\nimport { ResourceMap } from '../../../base/common/map.js';\r\nimport * as arrays from '../../../base/common/arrays.js';\r\nimport * as types from '../../../base/common/types.js';\r\nimport * as objects from '../../../base/common/objects.js';\r\nimport { OVERRIDE_PROPERTY_PATTERN } from './configurationRegistry.js';\r\nimport { overrideIdentifierFromKey, addToValueTree, toValuesTree, getConfigurationValue, getDefaultValues, getConfigurationKeys, removeFromValueTree } from './configuration.js';\r\nvar ConfigurationModel = /** @class */ (function () {\r\n    function ConfigurationModel(_contents, _keys, _overrides) {\r\n        if (_contents === void 0) { _contents = {}; }\r\n        if (_keys === void 0) { _keys = []; }\r\n        if (_overrides === void 0) { _overrides = []; }\r\n        this._contents = _contents;\r\n        this._keys = _keys;\r\n        this._overrides = _overrides;\r\n        this.isFrozen = false;\r\n    }\r\n    Object.defineProperty(ConfigurationModel.prototype, \"contents\", {\r\n        get: function () {\r\n            return this.checkAndFreeze(this._contents);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ConfigurationModel.prototype, \"overrides\", {\r\n        get: function () {\r\n            return this.checkAndFreeze(this._overrides);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ConfigurationModel.prototype, \"keys\", {\r\n        get: function () {\r\n            return this.checkAndFreeze(this._keys);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ConfigurationModel.prototype.isEmpty = function () {\r\n        return this._keys.length === 0 && Object.keys(this._contents).length === 0 && this._overrides.length === 0;\r\n    };\r\n    ConfigurationModel.prototype.getValue = function (section) {\r\n        return section ? getConfigurationValue(this.contents, section) : this.contents;\r\n    };\r\n    ConfigurationModel.prototype.getOverrideValue = function (section, overrideIdentifier) {\r\n        var overrideContents = this.getContentsForOverrideIdentifer(overrideIdentifier);\r\n        return overrideContents\r\n            ? section ? getConfigurationValue(overrideContents, section) : overrideContents\r\n            : undefined;\r\n    };\r\n    ConfigurationModel.prototype.override = function (identifier) {\r\n        var overrideContents = this.getContentsForOverrideIdentifer(identifier);\r\n        if (!overrideContents || typeof overrideContents !== 'object' || !Object.keys(overrideContents).length) {\r\n            // If there are no valid overrides, return self\r\n            return this;\r\n        }\r\n        var contents = {};\r\n        for (var _i = 0, _a = arrays.distinct(__spreadArrays(Object.keys(this.contents), Object.keys(overrideContents))); _i < _a.length; _i++) {\r\n            var key = _a[_i];\r\n            var contentsForKey = this.contents[key];\r\n            var overrideContentsForKey = overrideContents[key];\r\n            // If there are override contents for the key, clone and merge otherwise use base contents\r\n            if (overrideContentsForKey) {\r\n                // Clone and merge only if base contents and override contents are of type object otherwise just override\r\n                if (typeof contentsForKey === 'object' && typeof overrideContentsForKey === 'object') {\r\n                    contentsForKey = objects.deepClone(contentsForKey);\r\n                    this.mergeContents(contentsForKey, overrideContentsForKey);\r\n                }\r\n                else {\r\n                    contentsForKey = overrideContentsForKey;\r\n                }\r\n            }\r\n            contents[key] = contentsForKey;\r\n        }\r\n        return new ConfigurationModel(contents, this.keys, this.overrides);\r\n    };\r\n    ConfigurationModel.prototype.merge = function () {\r\n        var others = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            others[_i] = arguments[_i];\r\n        }\r\n        var contents = objects.deepClone(this.contents);\r\n        var overrides = objects.deepClone(this.overrides);\r\n        var keys = __spreadArrays(this.keys);\r\n        for (var _a = 0, others_1 = others; _a < others_1.length; _a++) {\r\n            var other = others_1[_a];\r\n            this.mergeContents(contents, other.contents);\r\n            var _loop_1 = function (otherOverride) {\r\n                var override = overrides.filter(function (o) { return arrays.equals(o.identifiers, otherOverride.identifiers); })[0];\r\n                if (override) {\r\n                    this_1.mergeContents(override.contents, otherOverride.contents);\r\n                }\r\n                else {\r\n                    overrides.push(objects.deepClone(otherOverride));\r\n                }\r\n            };\r\n            var this_1 = this;\r\n            for (var _b = 0, _c = other.overrides; _b < _c.length; _b++) {\r\n                var otherOverride = _c[_b];\r\n                _loop_1(otherOverride);\r\n            }\r\n            for (var _d = 0, _e = other.keys; _d < _e.length; _d++) {\r\n                var key = _e[_d];\r\n                if (keys.indexOf(key) === -1) {\r\n                    keys.push(key);\r\n                }\r\n            }\r\n        }\r\n        return new ConfigurationModel(contents, keys, overrides);\r\n    };\r\n    ConfigurationModel.prototype.freeze = function () {\r\n        this.isFrozen = true;\r\n        return this;\r\n    };\r\n    ConfigurationModel.prototype.mergeContents = function (source, target) {\r\n        for (var _i = 0, _a = Object.keys(target); _i < _a.length; _i++) {\r\n            var key = _a[_i];\r\n            if (key in source) {\r\n                if (types.isObject(source[key]) && types.isObject(target[key])) {\r\n                    this.mergeContents(source[key], target[key]);\r\n                    continue;\r\n                }\r\n            }\r\n            source[key] = objects.deepClone(target[key]);\r\n        }\r\n    };\r\n    ConfigurationModel.prototype.checkAndFreeze = function (data) {\r\n        if (this.isFrozen && !Object.isFrozen(data)) {\r\n            return objects.deepFreeze(data);\r\n        }\r\n        return data;\r\n    };\r\n    ConfigurationModel.prototype.getContentsForOverrideIdentifer = function (identifier) {\r\n        for (var _i = 0, _a = this.overrides; _i < _a.length; _i++) {\r\n            var override = _a[_i];\r\n            if (override.identifiers.indexOf(identifier) !== -1) {\r\n                return override.contents;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    ConfigurationModel.prototype.toJSON = function () {\r\n        return {\r\n            contents: this.contents,\r\n            overrides: this.overrides,\r\n            keys: this.keys\r\n        };\r\n    };\r\n    // Update methods\r\n    ConfigurationModel.prototype.setValue = function (key, value) {\r\n        this.addKey(key);\r\n        addToValueTree(this.contents, key, value, function (e) { throw new Error(e); });\r\n    };\r\n    ConfigurationModel.prototype.removeValue = function (key) {\r\n        if (this.removeKey(key)) {\r\n            removeFromValueTree(this.contents, key);\r\n        }\r\n    };\r\n    ConfigurationModel.prototype.addKey = function (key) {\r\n        var index = this.keys.length;\r\n        for (var i = 0; i < index; i++) {\r\n            if (key.indexOf(this.keys[i]) === 0) {\r\n                index = i;\r\n            }\r\n        }\r\n        this.keys.splice(index, 1, key);\r\n    };\r\n    ConfigurationModel.prototype.removeKey = function (key) {\r\n        var index = this.keys.indexOf(key);\r\n        if (index !== -1) {\r\n            this.keys.splice(index, 1);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    return ConfigurationModel;\r\n}());\r\nexport { ConfigurationModel };\r\nvar DefaultConfigurationModel = /** @class */ (function (_super) {\r\n    __extends(DefaultConfigurationModel, _super);\r\n    function DefaultConfigurationModel() {\r\n        var _this = this;\r\n        var contents = getDefaultValues();\r\n        var keys = getConfigurationKeys();\r\n        var overrides = [];\r\n        for (var _i = 0, _a = Object.keys(contents); _i < _a.length; _i++) {\r\n            var key = _a[_i];\r\n            if (OVERRIDE_PROPERTY_PATTERN.test(key)) {\r\n                overrides.push({\r\n                    identifiers: [overrideIdentifierFromKey(key).trim()],\r\n                    keys: Object.keys(contents[key]),\r\n                    contents: toValuesTree(contents[key], function (message) { return console.error(\"Conflict in default settings file: \" + message); }),\r\n                });\r\n            }\r\n        }\r\n        _this = _super.call(this, contents, keys, overrides) || this;\r\n        return _this;\r\n    }\r\n    return DefaultConfigurationModel;\r\n}(ConfigurationModel));\r\nexport { DefaultConfigurationModel };\r\nvar Configuration = /** @class */ (function () {\r\n    function Configuration(_defaultConfiguration, _localUserConfiguration, _remoteUserConfiguration, _workspaceConfiguration, _folderConfigurations, _memoryConfiguration, _memoryConfigurationByResource, _freeze) {\r\n        if (_remoteUserConfiguration === void 0) { _remoteUserConfiguration = new ConfigurationModel(); }\r\n        if (_workspaceConfiguration === void 0) { _workspaceConfiguration = new ConfigurationModel(); }\r\n        if (_folderConfigurations === void 0) { _folderConfigurations = new ResourceMap(); }\r\n        if (_memoryConfiguration === void 0) { _memoryConfiguration = new ConfigurationModel(); }\r\n        if (_memoryConfigurationByResource === void 0) { _memoryConfigurationByResource = new ResourceMap(); }\r\n        if (_freeze === void 0) { _freeze = true; }\r\n        this._defaultConfiguration = _defaultConfiguration;\r\n        this._localUserConfiguration = _localUserConfiguration;\r\n        this._remoteUserConfiguration = _remoteUserConfiguration;\r\n        this._workspaceConfiguration = _workspaceConfiguration;\r\n        this._folderConfigurations = _folderConfigurations;\r\n        this._memoryConfiguration = _memoryConfiguration;\r\n        this._memoryConfigurationByResource = _memoryConfigurationByResource;\r\n        this._freeze = _freeze;\r\n        this._workspaceConsolidatedConfiguration = null;\r\n        this._foldersConsolidatedConfigurations = new ResourceMap();\r\n        this._userConfiguration = null;\r\n    }\r\n    Configuration.prototype.getValue = function (section, overrides, workspace) {\r\n        var consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\r\n        return consolidateConfigurationModel.getValue(section);\r\n    };\r\n    Configuration.prototype.updateValue = function (key, value, overrides) {\r\n        if (overrides === void 0) { overrides = {}; }\r\n        var memoryConfiguration;\r\n        if (overrides.resource) {\r\n            memoryConfiguration = this._memoryConfigurationByResource.get(overrides.resource);\r\n            if (!memoryConfiguration) {\r\n                memoryConfiguration = new ConfigurationModel();\r\n                this._memoryConfigurationByResource.set(overrides.resource, memoryConfiguration);\r\n            }\r\n        }\r\n        else {\r\n            memoryConfiguration = this._memoryConfiguration;\r\n        }\r\n        if (value === undefined) {\r\n            memoryConfiguration.removeValue(key);\r\n        }\r\n        else {\r\n            memoryConfiguration.setValue(key, value);\r\n        }\r\n        if (!overrides.resource) {\r\n            this._workspaceConsolidatedConfiguration = null;\r\n        }\r\n    };\r\n    Configuration.prototype.inspect = function (key, overrides, workspace) {\r\n        var consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\r\n        var folderConfigurationModel = this.getFolderConfigurationModelForResource(overrides.resource, workspace);\r\n        var memoryConfigurationModel = overrides.resource ? this._memoryConfigurationByResource.get(overrides.resource) || this._memoryConfiguration : this._memoryConfiguration;\r\n        var defaultValue = overrides.overrideIdentifier ? this._defaultConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this._defaultConfiguration.freeze().getValue(key);\r\n        var userValue = overrides.overrideIdentifier ? this.userConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this.userConfiguration.freeze().getValue(key);\r\n        var userLocalValue = overrides.overrideIdentifier ? this.localUserConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this.localUserConfiguration.freeze().getValue(key);\r\n        var userRemoteValue = overrides.overrideIdentifier ? this.remoteUserConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this.remoteUserConfiguration.freeze().getValue(key);\r\n        var workspaceValue = workspace ? overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this._workspaceConfiguration.freeze().getValue(key) : undefined; //Check on workspace exists or not because _workspaceConfiguration is never null\r\n        var workspaceFolderValue = folderConfigurationModel ? overrides.overrideIdentifier ? folderConfigurationModel.freeze().override(overrides.overrideIdentifier).getValue(key) : folderConfigurationModel.freeze().getValue(key) : undefined;\r\n        var memoryValue = overrides.overrideIdentifier ? memoryConfigurationModel.override(overrides.overrideIdentifier).getValue(key) : memoryConfigurationModel.getValue(key);\r\n        var value = consolidateConfigurationModel.getValue(key);\r\n        var overrideIdentifiers = arrays.distinct(arrays.flatten(consolidateConfigurationModel.overrides.map(function (override) { return override.identifiers; }))).filter(function (overrideIdentifier) { return consolidateConfigurationModel.getOverrideValue(key, overrideIdentifier) !== undefined; });\r\n        return {\r\n            defaultValue: defaultValue,\r\n            userValue: userValue,\r\n            userLocalValue: userLocalValue,\r\n            userRemoteValue: userRemoteValue,\r\n            workspaceValue: workspaceValue,\r\n            workspaceFolderValue: workspaceFolderValue,\r\n            memoryValue: memoryValue,\r\n            value: value,\r\n            default: defaultValue !== undefined ? { value: this._defaultConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this._defaultConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\r\n            user: userValue !== undefined ? { value: this.userConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.userConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\r\n            userLocal: userLocalValue !== undefined ? { value: this.localUserConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.localUserConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\r\n            userRemote: userRemoteValue !== undefined ? { value: this.remoteUserConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.remoteUserConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\r\n            workspace: workspaceValue !== undefined ? { value: this._workspaceConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\r\n            workspaceFolder: workspaceFolderValue !== undefined ? { value: folderConfigurationModel === null || folderConfigurationModel === void 0 ? void 0 : folderConfigurationModel.freeze().getValue(key), override: overrides.overrideIdentifier ? folderConfigurationModel === null || folderConfigurationModel === void 0 ? void 0 : folderConfigurationModel.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\r\n            memory: memoryValue !== undefined ? { value: memoryConfigurationModel.getValue(key), override: overrides.overrideIdentifier ? memoryConfigurationModel.getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\r\n            overrideIdentifiers: overrideIdentifiers.length ? overrideIdentifiers : undefined\r\n        };\r\n    };\r\n    Object.defineProperty(Configuration.prototype, \"userConfiguration\", {\r\n        get: function () {\r\n            if (!this._userConfiguration) {\r\n                this._userConfiguration = this._remoteUserConfiguration.isEmpty() ? this._localUserConfiguration : this._localUserConfiguration.merge(this._remoteUserConfiguration);\r\n                if (this._freeze) {\r\n                    this._userConfiguration.freeze();\r\n                }\r\n            }\r\n            return this._userConfiguration;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Configuration.prototype, \"localUserConfiguration\", {\r\n        get: function () {\r\n            return this._localUserConfiguration;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Configuration.prototype, \"remoteUserConfiguration\", {\r\n        get: function () {\r\n            return this._remoteUserConfiguration;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Configuration.prototype.getConsolidateConfigurationModel = function (overrides, workspace) {\r\n        var configurationModel = this.getConsolidatedConfigurationModelForResource(overrides, workspace);\r\n        return overrides.overrideIdentifier ? configurationModel.override(overrides.overrideIdentifier) : configurationModel;\r\n    };\r\n    Configuration.prototype.getConsolidatedConfigurationModelForResource = function (_a, workspace) {\r\n        var resource = _a.resource;\r\n        var consolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\r\n        if (workspace && resource) {\r\n            var root = workspace.getFolder(resource);\r\n            if (root) {\r\n                consolidateConfiguration = this.getFolderConsolidatedConfiguration(root.uri) || consolidateConfiguration;\r\n            }\r\n            var memoryConfigurationForResource = this._memoryConfigurationByResource.get(resource);\r\n            if (memoryConfigurationForResource) {\r\n                consolidateConfiguration = consolidateConfiguration.merge(memoryConfigurationForResource);\r\n            }\r\n        }\r\n        return consolidateConfiguration;\r\n    };\r\n    Configuration.prototype.getWorkspaceConsolidatedConfiguration = function () {\r\n        if (!this._workspaceConsolidatedConfiguration) {\r\n            this._workspaceConsolidatedConfiguration = this._defaultConfiguration.merge(this.userConfiguration, this._workspaceConfiguration, this._memoryConfiguration);\r\n            if (this._freeze) {\r\n                this._workspaceConfiguration = this._workspaceConfiguration.freeze();\r\n            }\r\n        }\r\n        return this._workspaceConsolidatedConfiguration;\r\n    };\r\n    Configuration.prototype.getFolderConsolidatedConfiguration = function (folder) {\r\n        var folderConsolidatedConfiguration = this._foldersConsolidatedConfigurations.get(folder);\r\n        if (!folderConsolidatedConfiguration) {\r\n            var workspaceConsolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\r\n            var folderConfiguration = this._folderConfigurations.get(folder);\r\n            if (folderConfiguration) {\r\n                folderConsolidatedConfiguration = workspaceConsolidateConfiguration.merge(folderConfiguration);\r\n                if (this._freeze) {\r\n                    folderConsolidatedConfiguration = folderConsolidatedConfiguration.freeze();\r\n                }\r\n                this._foldersConsolidatedConfigurations.set(folder, folderConsolidatedConfiguration);\r\n            }\r\n            else {\r\n                folderConsolidatedConfiguration = workspaceConsolidateConfiguration;\r\n            }\r\n        }\r\n        return folderConsolidatedConfiguration;\r\n    };\r\n    Configuration.prototype.getFolderConfigurationModelForResource = function (resource, workspace) {\r\n        if (workspace && resource) {\r\n            var root = workspace.getFolder(resource);\r\n            if (root) {\r\n                return this._folderConfigurations.get(root.uri);\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n    return Configuration;\r\n}());\r\nexport { Configuration };\r\n"]},"metadata":{},"sourceType":"module"}