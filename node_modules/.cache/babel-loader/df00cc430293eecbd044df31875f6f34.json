{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { Selection } from '../../common/core/selection.js';\n\nvar InPlaceReplaceCommand =\n/** @class */\nfunction () {\n  function InPlaceReplaceCommand(editRange, originalSelection, text) {\n    this._editRange = editRange;\n    this._originalSelection = originalSelection;\n    this._text = text;\n  }\n\n  InPlaceReplaceCommand.prototype.getEditOperations = function (model, builder) {\n    builder.addTrackedEditOperation(this._editRange, this._text);\n  };\n\n  InPlaceReplaceCommand.prototype.computeCursorState = function (model, helper) {\n    var inverseEditOperations = helper.getInverseEditOperations();\n    var srcRange = inverseEditOperations[0].range;\n\n    if (!this._originalSelection.isEmpty()) {\n      // Preserve selection and extends to typed text\n      return new Selection(srcRange.endLineNumber, srcRange.endColumn - this._text.length, srcRange.endLineNumber, srcRange.endColumn);\n    }\n\n    return new Selection(srcRange.endLineNumber, Math.min(this._originalSelection.positionColumn, srcRange.endColumn), srcRange.endLineNumber, Math.min(this._originalSelection.positionColumn, srcRange.endColumn));\n  };\n\n  return InPlaceReplaceCommand;\n}();\n\nexport { InPlaceReplaceCommand };","map":{"version":3,"sources":["/Users/ifudata/eclipse-workspace/screen-web/node_modules/monaco-editor/esm/vs/editor/contrib/inPlaceReplace/inPlaceReplaceCommand.js"],"names":["Selection","InPlaceReplaceCommand","editRange","originalSelection","text","_editRange","_originalSelection","_text","prototype","getEditOperations","model","builder","addTrackedEditOperation","computeCursorState","helper","inverseEditOperations","getInverseEditOperations","srcRange","range","isEmpty","endLineNumber","endColumn","length","Math","min","positionColumn"],"mappings":"AAAA;;;;AAIA,SAASA,SAAT,QAA0B,gCAA1B;;AACA,IAAIC,qBAAqB;AAAG;AAAe,YAAY;AACnD,WAASA,qBAAT,CAA+BC,SAA/B,EAA0CC,iBAA1C,EAA6DC,IAA7D,EAAmE;AAC/D,SAAKC,UAAL,GAAkBH,SAAlB;AACA,SAAKI,kBAAL,GAA0BH,iBAA1B;AACA,SAAKI,KAAL,GAAaH,IAAb;AACH;;AACDH,EAAAA,qBAAqB,CAACO,SAAtB,CAAgCC,iBAAhC,GAAoD,UAAUC,KAAV,EAAiBC,OAAjB,EAA0B;AAC1EA,IAAAA,OAAO,CAACC,uBAAR,CAAgC,KAAKP,UAArC,EAAiD,KAAKE,KAAtD;AACH,GAFD;;AAGAN,EAAAA,qBAAqB,CAACO,SAAtB,CAAgCK,kBAAhC,GAAqD,UAAUH,KAAV,EAAiBI,MAAjB,EAAyB;AAC1E,QAAIC,qBAAqB,GAAGD,MAAM,CAACE,wBAAP,EAA5B;AACA,QAAIC,QAAQ,GAAGF,qBAAqB,CAAC,CAAD,CAArB,CAAyBG,KAAxC;;AACA,QAAI,CAAC,KAAKZ,kBAAL,CAAwBa,OAAxB,EAAL,EAAwC;AACpC;AACA,aAAO,IAAInB,SAAJ,CAAciB,QAAQ,CAACG,aAAvB,EAAsCH,QAAQ,CAACI,SAAT,GAAqB,KAAKd,KAAL,CAAWe,MAAtE,EAA8EL,QAAQ,CAACG,aAAvF,EAAsGH,QAAQ,CAACI,SAA/G,CAAP;AACH;;AACD,WAAO,IAAIrB,SAAJ,CAAciB,QAAQ,CAACG,aAAvB,EAAsCG,IAAI,CAACC,GAAL,CAAS,KAAKlB,kBAAL,CAAwBmB,cAAjC,EAAiDR,QAAQ,CAACI,SAA1D,CAAtC,EAA4GJ,QAAQ,CAACG,aAArH,EAAoIG,IAAI,CAACC,GAAL,CAAS,KAAKlB,kBAAL,CAAwBmB,cAAjC,EAAiDR,QAAQ,CAACI,SAA1D,CAApI,CAAP;AACH,GARD;;AASA,SAAOpB,qBAAP;AACH,CAnB0C,EAA3C;;AAoBA,SAASA,qBAAT","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Selection } from '../../common/core/selection.js';\r\nvar InPlaceReplaceCommand = /** @class */ (function () {\r\n    function InPlaceReplaceCommand(editRange, originalSelection, text) {\r\n        this._editRange = editRange;\r\n        this._originalSelection = originalSelection;\r\n        this._text = text;\r\n    }\r\n    InPlaceReplaceCommand.prototype.getEditOperations = function (model, builder) {\r\n        builder.addTrackedEditOperation(this._editRange, this._text);\r\n    };\r\n    InPlaceReplaceCommand.prototype.computeCursorState = function (model, helper) {\r\n        var inverseEditOperations = helper.getInverseEditOperations();\r\n        var srcRange = inverseEditOperations[0].range;\r\n        if (!this._originalSelection.isEmpty()) {\r\n            // Preserve selection and extends to typed text\r\n            return new Selection(srcRange.endLineNumber, srcRange.endColumn - this._text.length, srcRange.endLineNumber, srcRange.endColumn);\r\n        }\r\n        return new Selection(srcRange.endLineNumber, Math.min(this._originalSelection.positionColumn, srcRange.endColumn), srcRange.endLineNumber, Math.min(this._originalSelection.positionColumn, srcRange.endColumn));\r\n    };\r\n    return InPlaceReplaceCommand;\r\n}());\r\nexport { InPlaceReplaceCommand };\r\n"]},"metadata":{},"sourceType":"module"}